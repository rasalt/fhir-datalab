// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/stu3/datatypes.proto

#include "proto/stu3/datatypes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_proto_2fstu3_2fdatatypes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fdatatypes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Address;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fdatatypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Dosage_AsNeeded;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fdatatypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Dosage_Dose;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fdatatypes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Dosage_Rate;
}  // namespace protobuf_proto_2fstu3_2fdatatypes_2eproto
namespace google {
namespace fhir {
namespace stu3 {
namespace proto {
class Base64BinaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Base64Binary>
      _instance;
} _Base64Binary_default_instance_;
class BooleanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Boolean>
      _instance;
} _Boolean_default_instance_;
class CodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Code>
      _instance;
} _Code_default_instance_;
class DateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Date>
      _instance;
} _Date_default_instance_;
class DateTimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DateTime>
      _instance;
} _DateTime_default_instance_;
class DecimalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Decimal>
      _instance;
} _Decimal_default_instance_;
class IdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Id>
      _instance;
} _Id_default_instance_;
class InstantDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Instant>
      _instance;
} _Instant_default_instance_;
class IntegerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Integer>
      _instance;
} _Integer_default_instance_;
class MarkdownDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Markdown>
      _instance;
} _Markdown_default_instance_;
class OidDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Oid>
      _instance;
} _Oid_default_instance_;
class PositiveIntDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PositiveInt>
      _instance;
} _PositiveInt_default_instance_;
class StringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<String>
      _instance;
} _String_default_instance_;
class TimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Time>
      _instance;
} _Time_default_instance_;
class UnsignedIntDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnsignedInt>
      _instance;
} _UnsignedInt_default_instance_;
class UriDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Uri>
      _instance;
} _Uri_default_instance_;
class UuidDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Uuid>
      _instance;
} _Uuid_default_instance_;
class XhtmlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Xhtml>
      _instance;
} _Xhtml_default_instance_;
class AddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Address>
      _instance;
} _Address_default_instance_;
class AgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Age>
      _instance;
} _Age_default_instance_;
class Annotation_AuthorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Annotation_Author>
      _instance;
  const ::google::fhir::stu3::proto::Reference* reference_;
  const ::google::fhir::stu3::proto::String* string_value_;
} _Annotation_Author_default_instance_;
class AnnotationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Annotation>
      _instance;
} _Annotation_default_instance_;
class AttachmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Attachment>
      _instance;
} _Attachment_default_instance_;
class CodeableConceptDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CodeableConcept>
      _instance;
} _CodeableConcept_default_instance_;
class CodingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Coding>
      _instance;
} _Coding_default_instance_;
class ContactPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContactPoint>
      _instance;
} _ContactPoint_default_instance_;
class CountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Count>
      _instance;
} _Count_default_instance_;
class DistanceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Distance>
      _instance;
} _Distance_default_instance_;
class Dosage_AsNeededDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Dosage_AsNeeded>
      _instance;
  const ::google::fhir::stu3::proto::Boolean* boolean_;
  const ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
} _Dosage_AsNeeded_default_instance_;
class Dosage_DoseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Dosage_Dose>
      _instance;
  const ::google::fhir::stu3::proto::Range* range_;
  const ::google::fhir::stu3::proto::SimpleQuantity* quantity_;
} _Dosage_Dose_default_instance_;
class Dosage_RateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Dosage_Rate>
      _instance;
  const ::google::fhir::stu3::proto::Ratio* ratio_;
  const ::google::fhir::stu3::proto::Range* range_;
  const ::google::fhir::stu3::proto::SimpleQuantity* quantity_;
} _Dosage_Rate_default_instance_;
class DosageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Dosage>
      _instance;
} _Dosage_default_instance_;
class DurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Duration>
      _instance;
} _Duration_default_instance_;
class HumanNameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HumanName>
      _instance;
} _HumanName_default_instance_;
class IdentifierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Identifier>
      _instance;
} _Identifier_default_instance_;
class MetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Meta>
      _instance;
} _Meta_default_instance_;
class MoneyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Money>
      _instance;
} _Money_default_instance_;
class PeriodDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Period>
      _instance;
} _Period_default_instance_;
class QuantityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Quantity>
      _instance;
} _Quantity_default_instance_;
class RangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Range>
      _instance;
} _Range_default_instance_;
class RatioDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ratio>
      _instance;
} _Ratio_default_instance_;
class SampledDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SampledData>
      _instance;
} _SampledData_default_instance_;
class Signature_WhoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Signature_Who>
      _instance;
  const ::google::fhir::stu3::proto::Uri* uri_;
  const ::google::fhir::stu3::proto::Reference* reference_;
} _Signature_Who_default_instance_;
class Signature_OnBehalfOfDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Signature_OnBehalfOf>
      _instance;
  const ::google::fhir::stu3::proto::Uri* uri_;
  const ::google::fhir::stu3::proto::Reference* reference_;
} _Signature_OnBehalfOf_default_instance_;
class SignatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Signature>
      _instance;
} _Signature_default_instance_;
class SimpleQuantityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SimpleQuantity>
      _instance;
} _SimpleQuantity_default_instance_;
class Timing_Repeat_BoundsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Timing_Repeat_Bounds>
      _instance;
  const ::google::fhir::stu3::proto::Duration* duration_;
  const ::google::fhir::stu3::proto::Range* range_;
  const ::google::fhir::stu3::proto::Period* period_;
} _Timing_Repeat_Bounds_default_instance_;
class Timing_RepeatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Timing_Repeat>
      _instance;
} _Timing_Repeat_default_instance_;
class TimingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Timing>
      _instance;
} _Timing_default_instance_;
class Extension_ValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Extension_Value>
      _instance;
  const ::google::fhir::stu3::proto::Base64Binary* base64_binary_;
  const ::google::fhir::stu3::proto::Boolean* boolean_;
  const ::google::fhir::stu3::proto::Code* code_;
  const ::google::fhir::stu3::proto::Date* date_;
  const ::google::fhir::stu3::proto::DateTime* date_time_;
  const ::google::fhir::stu3::proto::Decimal* decimal_;
  const ::google::fhir::stu3::proto::Id* id_;
  const ::google::fhir::stu3::proto::Instant* instant_;
  const ::google::fhir::stu3::proto::Integer* integer_;
  const ::google::fhir::stu3::proto::Markdown* markdown_;
  const ::google::fhir::stu3::proto::Oid* oid_;
  const ::google::fhir::stu3::proto::PositiveInt* positive_int_;
  const ::google::fhir::stu3::proto::String* string_value_;
  const ::google::fhir::stu3::proto::Time* time_;
  const ::google::fhir::stu3::proto::UnsignedInt* unsigned_int_;
  const ::google::fhir::stu3::proto::Uri* uri_;
  const ::google::fhir::stu3::proto::Address* address_;
  const ::google::fhir::stu3::proto::Age* age_;
  const ::google::fhir::stu3::proto::Annotation* annotation_;
  const ::google::fhir::stu3::proto::Attachment* attachment_;
  const ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
  const ::google::fhir::stu3::proto::Coding* coding_;
  const ::google::fhir::stu3::proto::ContactPoint* contact_point_;
  const ::google::fhir::stu3::proto::Count* count_;
  const ::google::fhir::stu3::proto::Distance* distance_;
  const ::google::fhir::stu3::proto::Duration* duration_;
  const ::google::fhir::stu3::proto::HumanName* human_name_;
  const ::google::fhir::stu3::proto::Identifier* identifier_;
  const ::google::fhir::stu3::proto::Money* money_;
  const ::google::fhir::stu3::proto::Period* period_;
  const ::google::fhir::stu3::proto::Quantity* quantity_;
  const ::google::fhir::stu3::proto::Range* range_;
  const ::google::fhir::stu3::proto::Ratio* ratio_;
  const ::google::fhir::stu3::proto::Reference* reference_;
  const ::google::fhir::stu3::proto::SampledData* sampled_data_;
  const ::google::fhir::stu3::proto::Signature* signature_;
  const ::google::fhir::stu3::proto::Timing* timing_;
  const ::google::fhir::stu3::proto::Meta* meta_;
} _Extension_Value_default_instance_;
class ExtensionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Extension>
      _instance;
} _Extension_default_instance_;
class CodingWithFixedSystemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CodingWithFixedSystem>
      _instance;
} _CodingWithFixedSystem_default_instance_;
class CodingWithFixedCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CodingWithFixedCode>
      _instance;
} _CodingWithFixedCode_default_instance_;
class ReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Reference>
      _instance;
  const ::google::fhir::stu3::proto::String* uri_;
  const ::google::fhir::stu3::proto::String* fragment_;
  const ::google::fhir::stu3::proto::ReferenceId* account_id_;
  const ::google::fhir::stu3::proto::ReferenceId* activity_definition_id_;
  const ::google::fhir::stu3::proto::ReferenceId* adverse_event_id_;
  const ::google::fhir::stu3::proto::ReferenceId* allergy_intolerance_id_;
  const ::google::fhir::stu3::proto::ReferenceId* appointment_id_;
  const ::google::fhir::stu3::proto::ReferenceId* appointment_response_id_;
  const ::google::fhir::stu3::proto::ReferenceId* audit_event_id_;
  const ::google::fhir::stu3::proto::ReferenceId* basic_id_;
  const ::google::fhir::stu3::proto::ReferenceId* binary_id_;
  const ::google::fhir::stu3::proto::ReferenceId* body_site_id_;
  const ::google::fhir::stu3::proto::ReferenceId* bundle_id_;
  const ::google::fhir::stu3::proto::ReferenceId* capability_statement_id_;
  const ::google::fhir::stu3::proto::ReferenceId* care_plan_id_;
  const ::google::fhir::stu3::proto::ReferenceId* care_team_id_;
  const ::google::fhir::stu3::proto::ReferenceId* charge_item_id_;
  const ::google::fhir::stu3::proto::ReferenceId* claim_id_;
  const ::google::fhir::stu3::proto::ReferenceId* claim_response_id_;
  const ::google::fhir::stu3::proto::ReferenceId* clinical_impression_id_;
  const ::google::fhir::stu3::proto::ReferenceId* code_system_id_;
  const ::google::fhir::stu3::proto::ReferenceId* communication_id_;
  const ::google::fhir::stu3::proto::ReferenceId* communication_request_id_;
  const ::google::fhir::stu3::proto::ReferenceId* compartment_definition_id_;
  const ::google::fhir::stu3::proto::ReferenceId* composition_id_;
  const ::google::fhir::stu3::proto::ReferenceId* concept_map_id_;
  const ::google::fhir::stu3::proto::ReferenceId* condition_id_;
  const ::google::fhir::stu3::proto::ReferenceId* consent_id_;
  const ::google::fhir::stu3::proto::ReferenceId* contract_id_;
  const ::google::fhir::stu3::proto::ReferenceId* coverage_id_;
  const ::google::fhir::stu3::proto::ReferenceId* data_element_id_;
  const ::google::fhir::stu3::proto::ReferenceId* detected_issue_id_;
  const ::google::fhir::stu3::proto::ReferenceId* device_id_;
  const ::google::fhir::stu3::proto::ReferenceId* device_component_id_;
  const ::google::fhir::stu3::proto::ReferenceId* device_metric_id_;
  const ::google::fhir::stu3::proto::ReferenceId* device_request_id_;
  const ::google::fhir::stu3::proto::ReferenceId* device_use_statement_id_;
  const ::google::fhir::stu3::proto::ReferenceId* diagnostic_report_id_;
  const ::google::fhir::stu3::proto::ReferenceId* document_manifest_id_;
  const ::google::fhir::stu3::proto::ReferenceId* document_reference_id_;
  const ::google::fhir::stu3::proto::ReferenceId* eligibility_request_id_;
  const ::google::fhir::stu3::proto::ReferenceId* eligibility_response_id_;
  const ::google::fhir::stu3::proto::ReferenceId* encounter_id_;
  const ::google::fhir::stu3::proto::ReferenceId* endpoint_id_;
  const ::google::fhir::stu3::proto::ReferenceId* enrollment_request_id_;
  const ::google::fhir::stu3::proto::ReferenceId* enrollment_response_id_;
  const ::google::fhir::stu3::proto::ReferenceId* episode_of_care_id_;
  const ::google::fhir::stu3::proto::ReferenceId* expansion_profile_id_;
  const ::google::fhir::stu3::proto::ReferenceId* explanation_of_benefit_id_;
  const ::google::fhir::stu3::proto::ReferenceId* family_member_history_id_;
  const ::google::fhir::stu3::proto::ReferenceId* flag_id_;
  const ::google::fhir::stu3::proto::ReferenceId* goal_id_;
  const ::google::fhir::stu3::proto::ReferenceId* graph_definition_id_;
  const ::google::fhir::stu3::proto::ReferenceId* group_id_;
  const ::google::fhir::stu3::proto::ReferenceId* guidance_response_id_;
  const ::google::fhir::stu3::proto::ReferenceId* healthcare_service_id_;
  const ::google::fhir::stu3::proto::ReferenceId* imaging_manifest_id_;
  const ::google::fhir::stu3::proto::ReferenceId* imaging_study_id_;
  const ::google::fhir::stu3::proto::ReferenceId* immunization_id_;
  const ::google::fhir::stu3::proto::ReferenceId* immunization_recommendation_id_;
  const ::google::fhir::stu3::proto::ReferenceId* implementation_guide_id_;
  const ::google::fhir::stu3::proto::ReferenceId* library_id_;
  const ::google::fhir::stu3::proto::ReferenceId* linkage_id_;
  const ::google::fhir::stu3::proto::ReferenceId* list_id_;
  const ::google::fhir::stu3::proto::ReferenceId* location_id_;
  const ::google::fhir::stu3::proto::ReferenceId* measure_id_;
  const ::google::fhir::stu3::proto::ReferenceId* measure_report_id_;
  const ::google::fhir::stu3::proto::ReferenceId* media_id_;
  const ::google::fhir::stu3::proto::ReferenceId* medication_id_;
  const ::google::fhir::stu3::proto::ReferenceId* medication_administration_id_;
  const ::google::fhir::stu3::proto::ReferenceId* medication_dispense_id_;
  const ::google::fhir::stu3::proto::ReferenceId* medication_request_id_;
  const ::google::fhir::stu3::proto::ReferenceId* medication_statement_id_;
  const ::google::fhir::stu3::proto::ReferenceId* message_definition_id_;
  const ::google::fhir::stu3::proto::ReferenceId* message_header_id_;
  const ::google::fhir::stu3::proto::ReferenceId* naming_system_id_;
  const ::google::fhir::stu3::proto::ReferenceId* nutrition_order_id_;
  const ::google::fhir::stu3::proto::ReferenceId* observation_id_;
  const ::google::fhir::stu3::proto::ReferenceId* operation_definition_id_;
  const ::google::fhir::stu3::proto::ReferenceId* operation_outcome_id_;
  const ::google::fhir::stu3::proto::ReferenceId* organization_id_;
  const ::google::fhir::stu3::proto::ReferenceId* parameters_id_;
  const ::google::fhir::stu3::proto::ReferenceId* patient_id_;
  const ::google::fhir::stu3::proto::ReferenceId* payment_notice_id_;
  const ::google::fhir::stu3::proto::ReferenceId* payment_reconciliation_id_;
  const ::google::fhir::stu3::proto::ReferenceId* person_id_;
  const ::google::fhir::stu3::proto::ReferenceId* plan_definition_id_;
  const ::google::fhir::stu3::proto::ReferenceId* practitioner_id_;
  const ::google::fhir::stu3::proto::ReferenceId* practitioner_role_id_;
  const ::google::fhir::stu3::proto::ReferenceId* procedure_id_;
  const ::google::fhir::stu3::proto::ReferenceId* procedure_request_id_;
  const ::google::fhir::stu3::proto::ReferenceId* process_request_id_;
  const ::google::fhir::stu3::proto::ReferenceId* process_response_id_;
  const ::google::fhir::stu3::proto::ReferenceId* provenance_id_;
  const ::google::fhir::stu3::proto::ReferenceId* questionnaire_id_;
  const ::google::fhir::stu3::proto::ReferenceId* questionnaire_response_id_;
  const ::google::fhir::stu3::proto::ReferenceId* referral_request_id_;
  const ::google::fhir::stu3::proto::ReferenceId* related_person_id_;
  const ::google::fhir::stu3::proto::ReferenceId* request_group_id_;
  const ::google::fhir::stu3::proto::ReferenceId* research_study_id_;
  const ::google::fhir::stu3::proto::ReferenceId* research_subject_id_;
  const ::google::fhir::stu3::proto::ReferenceId* risk_assessment_id_;
  const ::google::fhir::stu3::proto::ReferenceId* schedule_id_;
  const ::google::fhir::stu3::proto::ReferenceId* search_parameter_id_;
  const ::google::fhir::stu3::proto::ReferenceId* sequence_id_;
  const ::google::fhir::stu3::proto::ReferenceId* service_definition_id_;
  const ::google::fhir::stu3::proto::ReferenceId* slot_id_;
  const ::google::fhir::stu3::proto::ReferenceId* specimen_id_;
  const ::google::fhir::stu3::proto::ReferenceId* structure_definition_id_;
  const ::google::fhir::stu3::proto::ReferenceId* structure_map_id_;
  const ::google::fhir::stu3::proto::ReferenceId* subscription_id_;
  const ::google::fhir::stu3::proto::ReferenceId* substance_id_;
  const ::google::fhir::stu3::proto::ReferenceId* supply_delivery_id_;
  const ::google::fhir::stu3::proto::ReferenceId* supply_request_id_;
  const ::google::fhir::stu3::proto::ReferenceId* task_id_;
  const ::google::fhir::stu3::proto::ReferenceId* test_report_id_;
  const ::google::fhir::stu3::proto::ReferenceId* test_script_id_;
  const ::google::fhir::stu3::proto::ReferenceId* value_set_id_;
  const ::google::fhir::stu3::proto::ReferenceId* vision_prescription_id_;
} _Reference_default_instance_;
class ReferenceIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReferenceId>
      _instance;
} _ReferenceId_default_instance_;
class AddressTypeCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddressTypeCode>
      _instance;
} _AddressTypeCode_default_instance_;
class AddressUseCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddressUseCode>
      _instance;
} _AddressUseCode_default_instance_;
class ContactPointSystemCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContactPointSystemCode>
      _instance;
} _ContactPointSystemCode_default_instance_;
class ContactPointUseCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContactPointUseCode>
      _instance;
} _ContactPointUseCode_default_instance_;
class DaysOfWeekCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DaysOfWeekCode>
      _instance;
} _DaysOfWeekCode_default_instance_;
class EventTimingCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventTimingCode>
      _instance;
} _EventTimingCode_default_instance_;
class IdentifierUseCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IdentifierUseCode>
      _instance;
} _IdentifierUseCode_default_instance_;
class AllLanguageCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllLanguageCode>
      _instance;
} _AllLanguageCode_default_instance_;
class LanguageCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LanguageCode>
      _instance;
} _LanguageCode_default_instance_;
class MimeTypeCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MimeTypeCode>
      _instance;
} _MimeTypeCode_default_instance_;
class NameUseCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NameUseCode>
      _instance;
} _NameUseCode_default_instance_;
class QuantityComparatorCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuantityComparatorCode>
      _instance;
} _QuantityComparatorCode_default_instance_;
class UnitsOfTimeCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnitsOfTimeCode>
      _instance;
} _UnitsOfTimeCode_default_instance_;
}  // namespace proto
}  // namespace stu3
}  // namespace fhir
}  // namespace google
namespace protobuf_proto_2fstu3_2fdatatypes_2eproto {
static void InitDefaultsUuid() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_Uuid_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Uuid();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::Uuid::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Uuid =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUuid}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsXhtml() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_Xhtml_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Xhtml();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::Xhtml::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Xhtml =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsXhtml}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsAddress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_Base64Binary_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Base64Binary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Boolean_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Boolean();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Code_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Code();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Date_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Date();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_DateTime_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::DateTime();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Decimal_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Decimal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Id_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Id();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Instant_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Instant();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Integer_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Integer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Markdown_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Markdown();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Oid_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Oid();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_PositiveInt_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::PositiveInt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_String_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::String();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Time_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Time();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_UnsignedInt_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::UnsignedInt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Uri_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Uri();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Address_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Address();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Age_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Age();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Annotation_Author_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Annotation_Author();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Annotation_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Annotation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Attachment_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Attachment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_CodeableConcept_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::CodeableConcept();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Coding_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Coding();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_ContactPoint_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ContactPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Count_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Count();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Distance_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Distance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Duration_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Duration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_HumanName_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::HumanName();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Identifier_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Identifier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Meta_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Meta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Money_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Money();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Period_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Period();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Quantity_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Quantity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Range_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Range();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Ratio_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Ratio();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_SampledData_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::SampledData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Signature_Who_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Signature_Who();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Signature_OnBehalfOf_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Signature_OnBehalfOf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Signature_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Signature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_SimpleQuantity_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::SimpleQuantity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Timing_Repeat_Bounds_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Timing_Repeat_Bounds();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Timing_Repeat_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Timing_Repeat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Timing_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Timing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Extension_Value_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Extension_Value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Extension_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Extension();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_Reference_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Reference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_ReferenceId_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ReferenceId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_AddressTypeCode_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::AddressTypeCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_AddressUseCode_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::AddressUseCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_ContactPointSystemCode_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ContactPointSystemCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_ContactPointUseCode_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::ContactPointUseCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_DaysOfWeekCode_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::DaysOfWeekCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_EventTimingCode_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::EventTimingCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_IdentifierUseCode_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::IdentifierUseCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_LanguageCode_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::LanguageCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_MimeTypeCode_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::MimeTypeCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_NameUseCode_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::NameUseCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_QuantityComparatorCode_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::QuantityComparatorCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::fhir::stu3::proto::_UnitsOfTimeCode_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::UnitsOfTimeCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::Base64Binary::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Boolean::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Code::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Date::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::DateTime::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Decimal::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Id::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Instant::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Integer::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Markdown::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Oid::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::PositiveInt::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::String::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Time::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::UnsignedInt::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Uri::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Address::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Age::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Annotation_Author::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Annotation::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Attachment::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::CodeableConcept::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Coding::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::ContactPoint::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Count::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Distance::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Duration::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::HumanName::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Identifier::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Meta::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Money::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Period::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Quantity::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Range::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Ratio::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::SampledData::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Signature_Who::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Signature_OnBehalfOf::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Signature::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::SimpleQuantity::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Timing_Repeat_Bounds::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Timing_Repeat::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Timing::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Extension_Value::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Extension::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::Reference::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::ReferenceId::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::AddressTypeCode::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::AddressUseCode::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::ContactPointSystemCode::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::ContactPointUseCode::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::DaysOfWeekCode::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::EventTimingCode::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::IdentifierUseCode::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::LanguageCode::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::MimeTypeCode::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::NameUseCode::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::QuantityComparatorCode::InitAsDefaultInstance();
  ::google::fhir::stu3::proto::UnitsOfTimeCode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Address =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddress}, {}};

static void InitDefaultsDosage_AsNeeded() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_Dosage_AsNeeded_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Dosage_AsNeeded();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::Dosage_AsNeeded::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Dosage_AsNeeded =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDosage_AsNeeded}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsDosage_Dose() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_Dosage_Dose_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Dosage_Dose();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::Dosage_Dose::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Dosage_Dose =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDosage_Dose}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsDosage_Rate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_Dosage_Rate_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Dosage_Rate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::Dosage_Rate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Dosage_Rate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDosage_Rate}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsDosage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_Dosage_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::Dosage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::Dosage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Dosage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsDosage}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Dosage_AsNeeded.base,
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Dosage_Dose.base,
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Dosage_Rate.base,}};

static void InitDefaultsCodingWithFixedSystem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_CodingWithFixedSystem_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::CodingWithFixedSystem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::CodingWithFixedSystem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CodingWithFixedSystem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCodingWithFixedSystem}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsCodingWithFixedCode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_CodingWithFixedCode_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::CodingWithFixedCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::CodingWithFixedCode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CodingWithFixedCode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCodingWithFixedCode}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

static void InitDefaultsAllLanguageCode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::fhir::stu3::proto::_AllLanguageCode_default_instance_;
    new (ptr) ::google::fhir::stu3::proto::AllLanguageCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::fhir::stu3::proto::AllLanguageCode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AllLanguageCode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAllLanguageCode}, {
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Uuid.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Xhtml.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Address.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Dosage_AsNeeded.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Dosage_Dose.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Dosage_Rate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Dosage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CodingWithFixedSystem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CodingWithFixedCode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AllLanguageCode.base);
}

::google::protobuf::Metadata file_level_metadata[68];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[14];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Base64Binary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Base64Binary, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Base64Binary, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Base64Binary, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Boolean, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Boolean, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Boolean, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Boolean, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Code, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Code, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Code, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Code, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Date, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Date, value_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Date, timezone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Date, precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Date, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Date, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DateTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DateTime, value_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DateTime, timezone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DateTime, precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DateTime, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DateTime, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Decimal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Decimal, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Decimal, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Decimal, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Id, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Id, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Id, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Id, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Instant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Instant, value_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Instant, timezone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Instant, precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Instant, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Instant, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Integer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Integer, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Integer, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Integer, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Markdown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Markdown, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Markdown, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Markdown, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Oid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Oid, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Oid, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Oid, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::PositiveInt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::PositiveInt, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::PositiveInt, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::PositiveInt, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::String, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::String, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::String, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::String, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Time, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Time, value_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Time, precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Time, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Time, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::UnsignedInt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::UnsignedInt, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::UnsignedInt, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::UnsignedInt, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Uri, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Uri, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Uri, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Uri, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Uuid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Uuid, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Uuid, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Uuid, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Xhtml, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Xhtml, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Xhtml, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Address, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Address, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Address, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Address, use_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Address, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Address, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Address, line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Address, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Address, district_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Address, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Address, postal_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Address, country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Address, period_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Age, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Age, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Age, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Age, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Age, comparator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Age, unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Age, system_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Age, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Annotation_Author, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Annotation_Author, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::Annotation_AuthorDefaultTypeInternal, reference_),
  offsetof(::google::fhir::stu3::proto::Annotation_AuthorDefaultTypeInternal, string_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Annotation_Author, author_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Annotation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Annotation, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Annotation, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Annotation, author_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Annotation, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Annotation, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Attachment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Attachment, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Attachment, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Attachment, content_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Attachment, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Attachment, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Attachment, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Attachment, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Attachment, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Attachment, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Attachment, creation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::CodeableConcept, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::CodeableConcept, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::CodeableConcept, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::CodeableConcept, coding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::CodeableConcept, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Coding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Coding, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Coding, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Coding, system_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Coding, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Coding, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Coding, display_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Coding, user_selected_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactPoint, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactPoint, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactPoint, system_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactPoint, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactPoint, use_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactPoint, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactPoint, period_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Count, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Count, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Count, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Count, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Count, comparator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Count, unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Count, system_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Count, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Distance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Distance, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Distance, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Distance, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Distance, comparator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Distance, unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Distance, system_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Distance, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage_AsNeeded, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage_AsNeeded, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::Dosage_AsNeededDefaultTypeInternal, boolean_),
  offsetof(::google::fhir::stu3::proto::Dosage_AsNeededDefaultTypeInternal, codeable_concept_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage_AsNeeded, as_needed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage_Dose, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage_Dose, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::Dosage_DoseDefaultTypeInternal, range_),
  offsetof(::google::fhir::stu3::proto::Dosage_DoseDefaultTypeInternal, quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage_Dose, dose_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage_Rate, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage_Rate, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::Dosage_RateDefaultTypeInternal, ratio_),
  offsetof(::google::fhir::stu3::proto::Dosage_RateDefaultTypeInternal, range_),
  offsetof(::google::fhir::stu3::proto::Dosage_RateDefaultTypeInternal, quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage_Rate, rate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage, additional_instruction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage, patient_instruction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage, timing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage, as_needed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage, site_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage, route_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage, dose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage, max_dose_per_period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage, max_dose_per_administration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage, max_dose_per_lifetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Dosage, rate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Duration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Duration, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Duration, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Duration, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Duration, comparator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Duration, unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Duration, system_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Duration, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::HumanName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::HumanName, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::HumanName, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::HumanName, use_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::HumanName, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::HumanName, family_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::HumanName, given_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::HumanName, prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::HumanName, suffix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::HumanName, period_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Identifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Identifier, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Identifier, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Identifier, use_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Identifier, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Identifier, system_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Identifier, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Identifier, period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Identifier, assigner_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Meta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Meta, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Meta, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Meta, version_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Meta, last_updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Meta, profile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Meta, security_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Meta, tag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Money, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Money, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Money, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Money, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Money, comparator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Money, unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Money, system_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Money, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Period, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Period, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Period, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Period, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Period, end_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Quantity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Quantity, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Quantity, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Quantity, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Quantity, comparator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Quantity, unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Quantity, system_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Quantity, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Range, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Range, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Range, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Range, low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Range, high_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Ratio, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Ratio, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Ratio, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Ratio, numerator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Ratio, denominator_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::SampledData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::SampledData, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::SampledData, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::SampledData, origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::SampledData, period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::SampledData, factor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::SampledData, lower_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::SampledData, upper_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::SampledData, dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::SampledData, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Signature_Who, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Signature_Who, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::Signature_WhoDefaultTypeInternal, uri_),
  offsetof(::google::fhir::stu3::proto::Signature_WhoDefaultTypeInternal, reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Signature_Who, who_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Signature_OnBehalfOf, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Signature_OnBehalfOf, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::Signature_OnBehalfOfDefaultTypeInternal, uri_),
  offsetof(::google::fhir::stu3::proto::Signature_OnBehalfOfDefaultTypeInternal, reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Signature_OnBehalfOf, on_behalf_of_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Signature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Signature, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Signature, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Signature, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Signature, when_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Signature, who_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Signature, on_behalf_of_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Signature, content_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Signature, blob_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::SimpleQuantity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::SimpleQuantity, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::SimpleQuantity, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::SimpleQuantity, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::SimpleQuantity, unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::SimpleQuantity, system_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::SimpleQuantity, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat_Bounds, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat_Bounds, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::Timing_Repeat_BoundsDefaultTypeInternal, duration_),
  offsetof(::google::fhir::stu3::proto::Timing_Repeat_BoundsDefaultTypeInternal, range_),
  offsetof(::google::fhir::stu3::proto::Timing_Repeat_BoundsDefaultTypeInternal, period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat_Bounds, bounds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat, bounds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat, count_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat, duration_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat, duration_unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat, frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat, frequency_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat, period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat, period_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat, period_unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat, day_of_week_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat, time_of_day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat, when_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing_Repeat, offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing, repeat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Timing, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Extension_Value, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Extension_Value, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, base64_binary_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, boolean_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, code_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, date_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, date_time_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, decimal_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, id_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, instant_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, integer_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, markdown_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, oid_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, positive_int_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, string_value_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, time_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, unsigned_int_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, uri_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, address_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, age_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, annotation_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, attachment_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, codeable_concept_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, coding_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, contact_point_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, count_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, distance_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, duration_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, human_name_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, identifier_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, money_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, period_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, quantity_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, range_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, ratio_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, reference_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, sampled_data_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, signature_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, timing_),
  offsetof(::google::fhir::stu3::proto::Extension_ValueDefaultTypeInternal, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Extension_Value, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Extension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Extension, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Extension, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Extension, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Extension, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::CodingWithFixedSystem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::CodingWithFixedSystem, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::CodingWithFixedSystem, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::CodingWithFixedSystem, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::CodingWithFixedSystem, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::CodingWithFixedSystem, display_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::CodingWithFixedSystem, user_selected_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::CodingWithFixedCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::CodingWithFixedCode, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::CodingWithFixedCode, extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::CodingWithFixedCode, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::CodingWithFixedCode, display_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::CodingWithFixedCode, user_selected_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Reference, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Reference, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Reference, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Reference, extension_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, uri_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, fragment_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, account_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, activity_definition_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, adverse_event_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, allergy_intolerance_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, appointment_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, appointment_response_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, audit_event_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, basic_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, binary_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, body_site_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, bundle_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, capability_statement_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, care_plan_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, care_team_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, charge_item_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, claim_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, claim_response_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, clinical_impression_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, code_system_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, communication_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, communication_request_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, compartment_definition_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, composition_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, concept_map_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, condition_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, consent_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, contract_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, coverage_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, data_element_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, detected_issue_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, device_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, device_component_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, device_metric_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, device_request_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, device_use_statement_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, diagnostic_report_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, document_manifest_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, document_reference_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, eligibility_request_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, eligibility_response_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, encounter_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, endpoint_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, enrollment_request_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, enrollment_response_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, episode_of_care_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, expansion_profile_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, explanation_of_benefit_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, family_member_history_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, flag_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, goal_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, graph_definition_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, group_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, guidance_response_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, healthcare_service_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, imaging_manifest_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, imaging_study_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, immunization_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, immunization_recommendation_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, implementation_guide_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, library_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, linkage_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, list_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, location_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, measure_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, measure_report_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, media_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, medication_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, medication_administration_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, medication_dispense_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, medication_request_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, medication_statement_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, message_definition_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, message_header_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, naming_system_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, nutrition_order_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, observation_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, operation_definition_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, operation_outcome_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, organization_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, parameters_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, patient_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, payment_notice_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, payment_reconciliation_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, person_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, plan_definition_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, practitioner_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, practitioner_role_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, procedure_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, procedure_request_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, process_request_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, process_response_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, provenance_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, questionnaire_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, questionnaire_response_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, referral_request_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, related_person_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, request_group_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, research_study_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, research_subject_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, risk_assessment_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, schedule_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, search_parameter_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, sequence_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, service_definition_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, slot_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, specimen_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, structure_definition_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, structure_map_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, subscription_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, substance_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, supply_delivery_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, supply_request_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, task_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, test_report_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, test_script_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, value_set_id_),
  offsetof(::google::fhir::stu3::proto::ReferenceDefaultTypeInternal, vision_prescription_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Reference, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Reference, display_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::Reference, reference_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ReferenceId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ReferenceId, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ReferenceId, history_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ReferenceId, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ReferenceId, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::AddressTypeCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::AddressTypeCode, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::AddressTypeCode, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::AddressTypeCode, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::AddressUseCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::AddressUseCode, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::AddressUseCode, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::AddressUseCode, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactPointSystemCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactPointSystemCode, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactPointSystemCode, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactPointSystemCode, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactPointUseCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactPointUseCode, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactPointUseCode, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::ContactPointUseCode, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DaysOfWeekCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DaysOfWeekCode, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DaysOfWeekCode, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::DaysOfWeekCode, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::EventTimingCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::EventTimingCode, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::EventTimingCode, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::EventTimingCode, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::IdentifierUseCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::IdentifierUseCode, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::IdentifierUseCode, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::IdentifierUseCode, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::AllLanguageCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::AllLanguageCode, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::AllLanguageCode, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::AllLanguageCode, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::LanguageCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::LanguageCode, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::LanguageCode, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::LanguageCode, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::MimeTypeCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::MimeTypeCode, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::MimeTypeCode, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::MimeTypeCode, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::NameUseCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::NameUseCode, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::NameUseCode, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::NameUseCode, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::QuantityComparatorCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::QuantityComparatorCode, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::QuantityComparatorCode, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::QuantityComparatorCode, extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::UnitsOfTimeCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::UnitsOfTimeCode, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::UnitsOfTimeCode, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::fhir::stu3::proto::UnitsOfTimeCode, extension_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::fhir::stu3::proto::Base64Binary)},
  { 8, -1, sizeof(::google::fhir::stu3::proto::Boolean)},
  { 16, -1, sizeof(::google::fhir::stu3::proto::Code)},
  { 24, -1, sizeof(::google::fhir::stu3::proto::Date)},
  { 34, -1, sizeof(::google::fhir::stu3::proto::DateTime)},
  { 44, -1, sizeof(::google::fhir::stu3::proto::Decimal)},
  { 52, -1, sizeof(::google::fhir::stu3::proto::Id)},
  { 60, -1, sizeof(::google::fhir::stu3::proto::Instant)},
  { 70, -1, sizeof(::google::fhir::stu3::proto::Integer)},
  { 78, -1, sizeof(::google::fhir::stu3::proto::Markdown)},
  { 86, -1, sizeof(::google::fhir::stu3::proto::Oid)},
  { 94, -1, sizeof(::google::fhir::stu3::proto::PositiveInt)},
  { 102, -1, sizeof(::google::fhir::stu3::proto::String)},
  { 110, -1, sizeof(::google::fhir::stu3::proto::Time)},
  { 119, -1, sizeof(::google::fhir::stu3::proto::UnsignedInt)},
  { 127, -1, sizeof(::google::fhir::stu3::proto::Uri)},
  { 135, -1, sizeof(::google::fhir::stu3::proto::Uuid)},
  { 143, -1, sizeof(::google::fhir::stu3::proto::Xhtml)},
  { 150, -1, sizeof(::google::fhir::stu3::proto::Address)},
  { 167, -1, sizeof(::google::fhir::stu3::proto::Age)},
  { 179, -1, sizeof(::google::fhir::stu3::proto::Annotation_Author)},
  { 187, -1, sizeof(::google::fhir::stu3::proto::Annotation)},
  { 197, -1, sizeof(::google::fhir::stu3::proto::Attachment)},
  { 212, -1, sizeof(::google::fhir::stu3::proto::CodeableConcept)},
  { 221, -1, sizeof(::google::fhir::stu3::proto::Coding)},
  { 233, -1, sizeof(::google::fhir::stu3::proto::ContactPoint)},
  { 245, -1, sizeof(::google::fhir::stu3::proto::Count)},
  { 257, -1, sizeof(::google::fhir::stu3::proto::Distance)},
  { 269, -1, sizeof(::google::fhir::stu3::proto::Dosage_AsNeeded)},
  { 277, -1, sizeof(::google::fhir::stu3::proto::Dosage_Dose)},
  { 285, -1, sizeof(::google::fhir::stu3::proto::Dosage_Rate)},
  { 294, -1, sizeof(::google::fhir::stu3::proto::Dosage)},
  { 315, -1, sizeof(::google::fhir::stu3::proto::Duration)},
  { 327, -1, sizeof(::google::fhir::stu3::proto::HumanName)},
  { 341, -1, sizeof(::google::fhir::stu3::proto::Identifier)},
  { 354, -1, sizeof(::google::fhir::stu3::proto::Meta)},
  { 366, -1, sizeof(::google::fhir::stu3::proto::Money)},
  { 378, -1, sizeof(::google::fhir::stu3::proto::Period)},
  { 387, -1, sizeof(::google::fhir::stu3::proto::Quantity)},
  { 399, -1, sizeof(::google::fhir::stu3::proto::Range)},
  { 408, -1, sizeof(::google::fhir::stu3::proto::Ratio)},
  { 417, -1, sizeof(::google::fhir::stu3::proto::SampledData)},
  { 431, -1, sizeof(::google::fhir::stu3::proto::Signature_Who)},
  { 439, -1, sizeof(::google::fhir::stu3::proto::Signature_OnBehalfOf)},
  { 447, -1, sizeof(::google::fhir::stu3::proto::Signature)},
  { 460, -1, sizeof(::google::fhir::stu3::proto::SimpleQuantity)},
  { 471, -1, sizeof(::google::fhir::stu3::proto::Timing_Repeat_Bounds)},
  { 480, -1, sizeof(::google::fhir::stu3::proto::Timing_Repeat)},
  { 502, -1, sizeof(::google::fhir::stu3::proto::Timing)},
  { 512, -1, sizeof(::google::fhir::stu3::proto::Extension_Value)},
  { 556, -1, sizeof(::google::fhir::stu3::proto::Extension)},
  { 565, -1, sizeof(::google::fhir::stu3::proto::CodingWithFixedSystem)},
  { 576, -1, sizeof(::google::fhir::stu3::proto::CodingWithFixedCode)},
  { 586, -1, sizeof(::google::fhir::stu3::proto::Reference)},
  { 715, -1, sizeof(::google::fhir::stu3::proto::ReferenceId)},
  { 724, -1, sizeof(::google::fhir::stu3::proto::AddressTypeCode)},
  { 732, -1, sizeof(::google::fhir::stu3::proto::AddressUseCode)},
  { 740, -1, sizeof(::google::fhir::stu3::proto::ContactPointSystemCode)},
  { 748, -1, sizeof(::google::fhir::stu3::proto::ContactPointUseCode)},
  { 756, -1, sizeof(::google::fhir::stu3::proto::DaysOfWeekCode)},
  { 764, -1, sizeof(::google::fhir::stu3::proto::EventTimingCode)},
  { 772, -1, sizeof(::google::fhir::stu3::proto::IdentifierUseCode)},
  { 780, -1, sizeof(::google::fhir::stu3::proto::AllLanguageCode)},
  { 788, -1, sizeof(::google::fhir::stu3::proto::LanguageCode)},
  { 796, -1, sizeof(::google::fhir::stu3::proto::MimeTypeCode)},
  { 804, -1, sizeof(::google::fhir::stu3::proto::NameUseCode)},
  { 812, -1, sizeof(::google::fhir::stu3::proto::QuantityComparatorCode)},
  { 820, -1, sizeof(::google::fhir::stu3::proto::UnitsOfTimeCode)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Base64Binary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Boolean_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Code_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Date_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_DateTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Decimal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Id_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Instant_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Integer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Markdown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Oid_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_PositiveInt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_String_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Time_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_UnsignedInt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Uri_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Uuid_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Xhtml_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Address_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Age_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Annotation_Author_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Annotation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Attachment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_CodeableConcept_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Coding_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ContactPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Count_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Distance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Dosage_AsNeeded_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Dosage_Dose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Dosage_Rate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Dosage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Duration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_HumanName_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Identifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Meta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Money_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Period_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Quantity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Range_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Ratio_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_SampledData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Signature_Who_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Signature_OnBehalfOf_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Signature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_SimpleQuantity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Timing_Repeat_Bounds_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Timing_Repeat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Timing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Extension_Value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Extension_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_CodingWithFixedSystem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_CodingWithFixedCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_Reference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ReferenceId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_AddressTypeCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_AddressUseCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ContactPointSystemCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_ContactPointUseCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_DaysOfWeekCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_EventTimingCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_IdentifierUseCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_AllLanguageCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_LanguageCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_MimeTypeCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_NameUseCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_QuantityComparatorCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::fhir::stu3::proto::_UnitsOfTimeCode_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "proto/stu3/datatypes.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 68);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032proto/stu3/datatypes.proto\022\026google.fhi"
      "r.stu3.proto\032\034proto/stu3/annotations.pro"
      "to\"\301\001\n\014Base64Binary\022\r\n\005value\030\001 \001(\014\022*\n\002id"
      "\030\002 \001(\0132\036.google.fhir.stu3.proto.String\0224"
      "\n\textension\030\003 \003(\0132!.google.fhir.stu3.pro"
      "to.Extension:@\300\237\343\266\005\001\262\376\344\227\0064http://hl7.org"
      "/fhir/StructureDefinition/base64Binary\"\267"
      "\001\n\007Boolean\022\r\n\005value\030\001 \001(\010\022*\n\002id\030\002 \001(\0132\036."
      "google.fhir.stu3.proto.String\0224\n\textensi"
      "on\030\003 \003(\0132!.google.fhir.stu3.proto.Extens"
      "ion:;\300\237\343\266\005\001\262\376\344\227\006/http://hl7.org/fhir/Str"
      "uctureDefinition/boolean\"\313\001\n\004Code\022\r\n\005val"
      "ue\030\001 \001(\t\022*\n\002id\030\002 \001(\0132\036.google.fhir.stu3."
      "proto.String\0224\n\textension\030\003 \003(\0132!.google"
      ".fhir.stu3.proto.Extension:R\300\237\343\266\005\001\222\372\242\214\006\024"
      "[^\\s]+([\\s]\?[^\\s]+)*\262\376\344\227\006,http://hl7.org"
      "/fhir/StructureDefinition/code\"\210\003\n\004Date\022"
      "\020\n\010value_us\030\001 \001(\003\022\020\n\010timezone\030\002 \001(\t\0229\n\tp"
      "recision\030\003 \001(\0162&.google.fhir.stu3.proto."
      "Date.Precision\022*\n\002id\030\004 \001(\0132\036.google.fhir"
      ".stu3.proto.String\0224\n\textension\030\005 \003(\0132!."
      "google.fhir.stu3.proto.Extension\"D\n\tPrec"
      "ision\022\031\n\025PRECISION_UNSPECIFIED\020\000\022\010\n\004YEAR"
      "\020\001\022\t\n\005MONTH\020\002\022\007\n\003DAY\020\003:y\300\237\343\266\005\001\222\372\242\214\006;-\?[0"
      "-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0"
      "-9]|3[0-1]))\?)\?\262\376\344\227\006,http://hl7.org/fhir"
      "/StructureDefinition/date\"\247\004\n\010DateTime\022\020"
      "\n\010value_us\030\001 \001(\003\022\020\n\010timezone\030\002 \001(\t\022=\n\tpr"
      "ecision\030\003 \001(\0162*.google.fhir.stu3.proto.D"
      "ateTime.Precision\022*\n\002id\030\004 \001(\0132\036.google.f"
      "hir.stu3.proto.String\0224\n\textension\030\005 \003(\013"
      "2!.google.fhir.stu3.proto.Extension\"r\n\tP"
      "recision\022\031\n\025PRECISION_UNSPECIFIED\020\000\022\010\n\004Y"
      "EAR\020\001\022\t\n\005MONTH\020\002\022\007\n\003DAY\020\003\022\n\n\006SECOND\020\004\022\017\n"
      "\013MILLISECOND\020\005\022\017\n\013MICROSECOND\020\006:\341\001\300\237\343\266\005\001"
      "\222\372\242\214\006\236\001-\?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0"
      "-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3"
      "]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)\?(Z|(\\"
      "+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))"
      "\?)\?)\?\262\376\344\227\0060http://hl7.org/fhir/Structure"
      "Definition/dateTime\"\335\001\n\007Decimal\022\r\n\005value"
      "\030\001 \001(\t\022*\n\002id\030\002 \001(\0132\036.google.fhir.stu3.pr"
      "oto.String\0224\n\textension\030\003 \003(\0132!.google.f"
      "hir.stu3.proto.Extension:a\300\237\343\266\005\001\222\372\242\214\006 -\?"
      "([0]|([1-9][0-9]*))(\\.[0-9]+)\?\262\376\344\227\006/http"
      "://hl7.org/fhir/StructureDefinition/deci"
      "mal\"\310\001\n\002Id\022\r\n\005value\030\001 \001(\t\022*\n\002id\030\002 \001(\0132\036."
      "google.fhir.stu3.proto.String\0224\n\textensi"
      "on\030\003 \003(\0132!.google.fhir.stu3.proto.Extens"
      "ion:Q\300\237\343\266\005\001\222\372\242\214\006\025[A-Za-z0-9\\-\\.]{1,64}\262\376"
      "\344\227\006*http://hl7.org/fhir/StructureDefinit"
      "ion/id\"\340\002\n\007Instant\022\020\n\010value_us\030\001 \001(\003\022\020\n\010"
      "timezone\030\002 \001(\t\022<\n\tprecision\030\003 \001(\0162).goog"
      "le.fhir.stu3.proto.Instant.Precision\022*\n\002"
      "id\030\004 \001(\0132\036.google.fhir.stu3.proto.String"
      "\0224\n\textension\030\005 \003(\0132!.google.fhir.stu3.p"
      "roto.Extension\"T\n\tPrecision\022\031\n\025PRECISION"
      "_UNSPECIFIED\020\000\022\n\n\006SECOND\020\001\022\017\n\013MILLISECON"
      "D\020\002\022\017\n\013MICROSECOND\020\003:;\300\237\343\266\005\001\262\376\344\227\006/http:/"
      "/hl7.org/fhir/StructureDefinition/instan"
      "t\"\322\001\n\007Integer\022\r\n\005value\030\001 \001(\021\022*\n\002id\030\002 \001(\013"
      "2\036.google.fhir.stu3.proto.String\0224\n\texte"
      "nsion\030\003 \003(\0132!.google.fhir.stu3.proto.Ext"
      "ension:V\300\237\343\266\005\001\222\372\242\214\006\025-\?([0]|([1-9][0-9]*)"
      ")\262\376\344\227\006/http://hl7.org/fhir/StructureDefi"
      "nition/integer\"\271\001\n\010Markdown\022\r\n\005value\030\001 \001"
      "(\t\022*\n\002id\030\002 \001(\0132\036.google.fhir.stu3.proto."
      "String\0224\n\textension\030\003 \003(\0132!.google.fhir."
      "stu3.proto.Extension:<\300\237\343\266\005\001\262\376\344\227\0060http:/"
      "/hl7.org/fhir/StructureDefinition/markdo"
      "wn\"\340\001\n\003Oid\022\r\n\005value\030\001 \001(\t\022*\n\002id\030\002 \001(\0132\036."
      "google.fhir.stu3.proto.String\0224\n\textensi"
      "on\030\003 \003(\0132!.google.fhir.stu3.proto.Extens"
      "ion:h\300\237\343\266\005\001\222\372\242\214\006+urn:oid:(0|[1-9][0-9]*)"
      "(\\.(0|[1-9][0-9]*))*\262\376\344\227\006+http://hl7.org"
      "/fhir/StructureDefinition/oid\"\320\001\n\013Positi"
      "veInt\022\r\n\005value\030\001 \001(\r\022*\n\002id\030\002 \001(\0132\036.googl"
      "e.fhir.stu3.proto.String\0224\n\textension\030\003 "
      "\003(\0132!.google.fhir.stu3.proto.Extension:P"
      "\300\237\343\266\005\001\222\372\242\214\006\013[1-9][0-9]*\262\376\344\227\0063http://hl7."
      "org/fhir/StructureDefinition/positiveInt"
      "\"\265\001\n\006String\022\r\n\005value\030\001 \001(\t\022*\n\002id\030\002 \001(\0132\036"
      ".google.fhir.stu3.proto.String\0224\n\textens"
      "ion\030\003 \003(\0132!.google.fhir.stu3.proto.Exten"
      "sion::\300\237\343\266\005\001\262\376\344\227\006.http://hl7.org/fhir/St"
      "ructureDefinition/string\"\376\002\n\004Time\022\020\n\010val"
      "ue_us\030\001 \001(\003\0229\n\tprecision\030\002 \001(\0162&.google."
      "fhir.stu3.proto.Time.Precision\022*\n\002id\030\003 \001"
      "(\0132\036.google.fhir.stu3.proto.String\0224\n\tex"
      "tension\030\004 \003(\0132!.google.fhir.stu3.proto.E"
      "xtension\"T\n\tPrecision\022\031\n\025PRECISION_UNSPE"
      "CIFIED\020\000\022\n\n\006SECOND\020\001\022\017\n\013MILLISECOND\020\002\022\017\n"
      "\013MICROSECOND\020\003:q\300\237\343\266\005\001\222\372\242\214\0063([01][0-9]|2"
      "[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)\?\262"
      "\376\344\227\006,http://hl7.org/fhir/StructureDefini"
      "tion/time\"\326\001\n\013UnsignedInt\022\r\n\005value\030\001 \001(\r"
      "\022*\n\002id\030\002 \001(\0132\036.google.fhir.stu3.proto.St"
      "ring\0224\n\textension\030\003 \003(\0132!.google.fhir.st"
      "u3.proto.Extension:V\300\237\343\266\005\001\222\372\242\214\006\021[0]|([1-"
      "9][0-9]*)\262\376\344\227\0063http://hl7.org/fhir/Struc"
      "tureDefinition/unsignedInt\"\257\001\n\003Uri\022\r\n\005va"
      "lue\030\001 \001(\t\022*\n\002id\030\002 \001(\0132\036.google.fhir.stu3"
      ".proto.String\0224\n\textension\030\003 \003(\0132!.googl"
      "e.fhir.stu3.proto.Extension:7\300\237\343\266\005\001\262\376\344\227\006"
      "+http://hl7.org/fhir/StructureDefinition"
      "/uri\"\375\001\n\004Uuid\022\r\n\005value\030\001 \001(\t\022*\n\002id\030\002 \001(\013"
      "2\036.google.fhir.stu3.proto.String\0224\n\texte"
      "nsion\030\003 \003(\0132!.google.fhir.stu3.proto.Ext"
      "ension:\203\001\300\237\343\266\005\001\222\372\242\214\006Eurn:uuid:[0-9a-f]{8"
      "}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0"
      "-9a-f]{12}\262\376\344\227\006,http://hl7.org/fhir/Stru"
      "ctureDefinition/uuid\"\205\001\n\005Xhtml\022\025\n\005value\030"
      "\001 \001(\tB\006\360\320\207\353\004\001\022*\n\002id\030\002 \001(\0132\036.google.fhir."
      "stu3.proto.String:9\300\237\343\266\005\001\262\376\344\227\006-http://hl"
      "7.org/fhir/StructureDefinition/xhtml\"\225\005\n"
      "\007Address\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3."
      "proto.String\0224\n\textension\030\002 \003(\0132!.google"
      ".fhir.stu3.proto.Extension\0223\n\003use\030\003 \001(\0132"
      "&.google.fhir.stu3.proto.AddressUseCode\022"
      "5\n\004type\030\004 \001(\0132\'.google.fhir.stu3.proto.A"
      "ddressTypeCode\022,\n\004text\030\005 \001(\0132\036.google.fh"
      "ir.stu3.proto.String\022,\n\004line\030\006 \003(\0132\036.goo"
      "gle.fhir.stu3.proto.String\022,\n\004city\030\007 \001(\013"
      "2\036.google.fhir.stu3.proto.String\0220\n\010dist"
      "rict\030\010 \001(\0132\036.google.fhir.stu3.proto.Stri"
      "ng\022-\n\005state\030\t \001(\0132\036.google.fhir.stu3.pro"
      "to.String\0223\n\013postal_code\030\n \001(\0132\036.google."
      "fhir.stu3.proto.String\022/\n\007country\030\013 \001(\0132"
      "\036.google.fhir.stu3.proto.String\022.\n\006perio"
      "d\030\014 \001(\0132\036.google.fhir.stu3.proto.Period:"
      ";\300\237\343\266\005\002\262\376\344\227\006/http://hl7.org/fhir/Structu"
      "reDefinition/Address\"\233\003\n\003Age\022*\n\002id\030\001 \001(\013"
      "2\036.google.fhir.stu3.proto.String\0224\n\texte"
      "nsion\030\002 \003(\0132!.google.fhir.stu3.proto.Ext"
      "ension\022.\n\005value\030\003 \001(\0132\037.google.fhir.stu3"
      ".proto.Decimal\022B\n\ncomparator\030\004 \001(\0132..goo"
      "gle.fhir.stu3.proto.QuantityComparatorCo"
      "de\022,\n\004unit\030\005 \001(\0132\036.google.fhir.stu3.prot"
      "o.String\022+\n\006system\030\006 \001(\0132\033.google.fhir.s"
      "tu3.proto.Uri\022*\n\004code\030\007 \001(\0132\034.google.fhi"
      "r.stu3.proto.Code:7\300\237\343\266\005\002\262\376\344\227\006+http://hl"
      "7.org/fhir/StructureDefinition/Age\"\222\005\n\nA"
      "nnotation\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3"
      ".proto.String\0224\n\textension\030\002 \003(\0132!.googl"
      "e.fhir.stu3.proto.Extension\022A\n\006author\030\003 "
      "\001(\0132).google.fhir.stu3.proto.Annotation."
      "AuthorB\006\370\341\343\311\005\001\022.\n\004time\030\004 \001(\0132 .google.fh"
      "ir.stu3.proto.DateTime\0224\n\004text\030\005 \001(\0132\036.g"
      "oogle.fhir.stu3.proto.StringB\006\360\320\207\353\004\001\032\270\002\n"
      "\006Author\022\343\001\n\treference\030\001 \001(\0132!.google.fhi"
      "r.stu3.proto.ReferenceB\252\001\362\377\374\302\0064http://hl"
      "7.org/fhir/StructureDefinition/Practitio"
      "ner\362\377\374\302\006/http://hl7.org/fhir/StructureDe"
      "finition/Patient\362\377\374\302\0065http://hl7.org/fhi"
      "r/StructureDefinition/RelatedPersonH\000\022>\n"
      "\014string_value\030\002 \001(\0132\036.google.fhir.stu3.p"
      "roto.StringH\000R\006stringB\010\n\006author:>\300\237\343\266\005\002\262"
      "\376\344\227\0062http://hl7.org/fhir/StructureDefini"
      "tion/Annotation\"\312\004\n\nAttachment\022*\n\002id\030\001 \001"
      "(\0132\036.google.fhir.stu3.proto.String\0224\n\tex"
      "tension\030\002 \003(\0132!.google.fhir.stu3.proto.E"
      "xtension\022:\n\014content_type\030\003 \001(\0132$.google."
      "fhir.stu3.proto.MimeTypeCode\0226\n\010language"
      "\030\004 \001(\0132$.google.fhir.stu3.proto.Language"
      "Code\0222\n\004data\030\005 \001(\0132$.google.fhir.stu3.pr"
      "oto.Base64Binary\022(\n\003url\030\006 \001(\0132\033.google.f"
      "hir.stu3.proto.Uri\0221\n\004size\030\007 \001(\0132#.googl"
      "e.fhir.stu3.proto.UnsignedInt\0222\n\004hash\030\010 "
      "\001(\0132$.google.fhir.stu3.proto.Base64Binar"
      "y\022-\n\005title\030\t \001(\0132\036.google.fhir.stu3.prot"
      "o.String\0222\n\010creation\030\n \001(\0132 .google.fhir"
      ".stu3.proto.DateTime:>\300\237\343\266\005\002\262\376\344\227\0062http:/"
      "/hl7.org/fhir/StructureDefinition/Attach"
      "ment\"\226\002\n\017CodeableConcept\022*\n\002id\030\001 \001(\0132\036.g"
      "oogle.fhir.stu3.proto.String\0224\n\textensio"
      "n\030\002 \003(\0132!.google.fhir.stu3.proto.Extensi"
      "on\022.\n\006coding\030\003 \003(\0132\036.google.fhir.stu3.pr"
      "oto.Coding\022,\n\004text\030\004 \001(\0132\036.google.fhir.s"
      "tu3.proto.String:C\300\237\343\266\005\002\262\376\344\227\0067http://hl7"
      ".org/fhir/StructureDefinition/CodeableCo"
      "ncept\"\231\003\n\006Coding\022*\n\002id\030\001 \001(\0132\036.google.fh"
      "ir.stu3.proto.String\0224\n\textension\030\002 \003(\0132"
      "!.google.fhir.stu3.proto.Extension\022+\n\006sy"
      "stem\030\003 \001(\0132\033.google.fhir.stu3.proto.Uri\022"
      "/\n\007version\030\004 \001(\0132\036.google.fhir.stu3.prot"
      "o.String\022*\n\004code\030\005 \001(\0132\034.google.fhir.stu"
      "3.proto.Code\022/\n\007display\030\006 \001(\0132\036.google.f"
      "hir.stu3.proto.String\0226\n\ruser_selected\030\007"
      " \001(\0132\037.google.fhir.stu3.proto.Boolean::\300"
      "\237\343\266\005\002\262\376\344\227\006.http://hl7.org/fhir/Structure"
      "Definition/Coding\"\276\003\n\014ContactPoint\022*\n\002id"
      "\030\001 \001(\0132\036.google.fhir.stu3.proto.String\0224"
      "\n\textension\030\002 \003(\0132!.google.fhir.stu3.pro"
      "to.Extension\022>\n\006system\030\003 \001(\0132..google.fh"
      "ir.stu3.proto.ContactPointSystemCode\022-\n\005"
      "value\030\004 \001(\0132\036.google.fhir.stu3.proto.Str"
      "ing\0228\n\003use\030\005 \001(\0132+.google.fhir.stu3.prot"
      "o.ContactPointUseCode\0221\n\004rank\030\006 \001(\0132#.go"
      "ogle.fhir.stu3.proto.PositiveInt\022.\n\006peri"
      "od\030\007 \001(\0132\036.google.fhir.stu3.proto.Period"
      ":@\300\237\343\266\005\002\262\376\344\227\0064http://hl7.org/fhir/Struct"
      "ureDefinition/ContactPoint\"\237\003\n\005Count\022*\n\002"
      "id\030\001 \001(\0132\036.google.fhir.stu3.proto.String"
      "\0224\n\textension\030\002 \003(\0132!.google.fhir.stu3.p"
      "roto.Extension\022.\n\005value\030\003 \001(\0132\037.google.f"
      "hir.stu3.proto.Decimal\022B\n\ncomparator\030\004 \001"
      "(\0132..google.fhir.stu3.proto.QuantityComp"
      "aratorCode\022,\n\004unit\030\005 \001(\0132\036.google.fhir.s"
      "tu3.proto.String\022+\n\006system\030\006 \001(\0132\033.googl"
      "e.fhir.stu3.proto.Uri\022*\n\004code\030\007 \001(\0132\034.go"
      "ogle.fhir.stu3.proto.Code:9\300\237\343\266\005\002\262\376\344\227\006-h"
      "ttp://hl7.org/fhir/StructureDefinition/C"
      "ount\"\245\003\n\010Distance\022*\n\002id\030\001 \001(\0132\036.google.f"
      "hir.stu3.proto.String\0224\n\textension\030\002 \003(\013"
      "2!.google.fhir.stu3.proto.Extension\022.\n\005v"
      "alue\030\003 \001(\0132\037.google.fhir.stu3.proto.Deci"
      "mal\022B\n\ncomparator\030\004 \001(\0132..google.fhir.st"
      "u3.proto.QuantityComparatorCode\022,\n\004unit\030"
      "\005 \001(\0132\036.google.fhir.stu3.proto.String\022+\n"
      "\006system\030\006 \001(\0132\033.google.fhir.stu3.proto.U"
      "ri\022*\n\004code\030\007 \001(\0132\034.google.fhir.stu3.prot"
      "o.Code:<\300\237\343\266\005\002\262\376\344\227\0060http://hl7.org/fhir/"
      "StructureDefinition/Distance\"\253\013\n\006Dosage\022"
      "*\n\002id\030\001 \001(\0132\036.google.fhir.stu3.proto.Str"
      "ing\0224\n\textension\030\002 \003(\0132!.google.fhir.stu"
      "3.proto.Extension\0221\n\010sequence\030\003 \001(\0132\037.go"
      "ogle.fhir.stu3.proto.Integer\022,\n\004text\030\004 \001"
      "(\0132\036.google.fhir.stu3.proto.String\022G\n\026ad"
      "ditional_instruction\030\005 \003(\0132\'.google.fhir"
      ".stu3.proto.CodeableConcept\022;\n\023patient_i"
      "nstruction\030\006 \001(\0132\036.google.fhir.stu3.prot"
      "o.String\022.\n\006timing\030\007 \001(\0132\036.google.fhir.s"
      "tu3.proto.Timing\022B\n\tas_needed\030\010 \001(\0132\'.go"
      "ogle.fhir.stu3.proto.Dosage.AsNeededB\006\370\341"
      "\343\311\005\001\0225\n\004site\030\t \001(\0132\'.google.fhir.stu3.pr"
      "oto.CodeableConcept\0226\n\005route\030\n \001(\0132\'.goo"
      "gle.fhir.stu3.proto.CodeableConcept\0227\n\006m"
      "ethod\030\013 \001(\0132\'.google.fhir.stu3.proto.Cod"
      "eableConcept\0229\n\004dose\030\014 \001(\0132#.google.fhir"
      ".stu3.proto.Dosage.DoseB\006\370\341\343\311\005\001\022:\n\023max_d"
      "ose_per_period\030\r \001(\0132\035.google.fhir.stu3."
      "proto.Ratio\022K\n\033max_dose_per_administrati"
      "on\030\016 \001(\0132&.google.fhir.stu3.proto.Simple"
      "Quantity\022E\n\025max_dose_per_lifetime\030\017 \001(\0132"
      "&.google.fhir.stu3.proto.SimpleQuantity\022"
      "9\n\004rate\030\020 \001(\0132#.google.fhir.stu3.proto.D"
      "osage.RateB\006\370\341\343\311\005\001\032\220\001\n\010AsNeeded\0222\n\007boole"
      "an\030\001 \001(\0132\037.google.fhir.stu3.proto.Boolea"
      "nH\000\022C\n\020codeable_concept\030\002 \001(\0132\'.google.f"
      "hir.stu3.proto.CodeableConceptH\000B\013\n\tas_n"
      "eeded\032z\n\004Dose\022.\n\005range\030\001 \001(\0132\035.google.fh"
      "ir.stu3.proto.RangeH\000\022:\n\010quantity\030\002 \001(\0132"
      "&.google.fhir.stu3.proto.SimpleQuantityH"
      "\000B\006\n\004dose\032\252\001\n\004Rate\022.\n\005ratio\030\001 \001(\0132\035.goog"
      "le.fhir.stu3.proto.RatioH\000\022.\n\005range\030\002 \001("
      "\0132\035.google.fhir.stu3.proto.RangeH\000\022:\n\010qu"
      "antity\030\003 \001(\0132&.google.fhir.stu3.proto.Si"
      "mpleQuantityH\000B\006\n\004rate::\300\237\343\266\005\002\262\376\344\227\006.http"
      "://hl7.org/fhir/StructureDefinition/Dosa"
      "ge\"\245\003\n\010Duration\022*\n\002id\030\001 \001(\0132\036.google.fhi"
      "r.stu3.proto.String\0224\n\textension\030\002 \003(\0132!"
      ".google.fhir.stu3.proto.Extension\022.\n\005val"
      "ue\030\003 \001(\0132\037.google.fhir.stu3.proto.Decima"
      "l\022B\n\ncomparator\030\004 \001(\0132..google.fhir.stu3"
      ".proto.QuantityComparatorCode\022,\n\004unit\030\005 "
      "\001(\0132\036.google.fhir.stu3.proto.String\022+\n\006s"
      "ystem\030\006 \001(\0132\033.google.fhir.stu3.proto.Uri"
      "\022*\n\004code\030\007 \001(\0132\034.google.fhir.stu3.proto."
      "Code:<\300\237\343\266\005\002\262\376\344\227\0060http://hl7.org/fhir/St"
      "ructureDefinition/Duration\"\373\003\n\tHumanName"
      "\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3.proto.St"
      "ring\0224\n\textension\030\002 \003(\0132!.google.fhir.st"
      "u3.proto.Extension\0220\n\003use\030\003 \001(\0132#.google"
      ".fhir.stu3.proto.NameUseCode\022,\n\004text\030\004 \001"
      "(\0132\036.google.fhir.stu3.proto.String\022.\n\006fa"
      "mily\030\005 \001(\0132\036.google.fhir.stu3.proto.Stri"
      "ng\022-\n\005given\030\006 \003(\0132\036.google.fhir.stu3.pro"
      "to.String\022.\n\006prefix\030\007 \003(\0132\036.google.fhir."
      "stu3.proto.String\022.\n\006suffix\030\010 \003(\0132\036.goog"
      "le.fhir.stu3.proto.String\022.\n\006period\030\t \001("
      "\0132\036.google.fhir.stu3.proto.Period:=\300\237\343\266\005"
      "\002\262\376\344\227\0061http://hl7.org/fhir/StructureDefi"
      "nition/HumanName\"\232\004\n\nIdentifier\022*\n\002id\030\001 "
      "\001(\0132\036.google.fhir.stu3.proto.String\0224\n\te"
      "xtension\030\002 \003(\0132!.google.fhir.stu3.proto."
      "Extension\0226\n\003use\030\003 \001(\0132).google.fhir.stu"
      "3.proto.IdentifierUseCode\0225\n\004type\030\004 \001(\0132"
      "\'.google.fhir.stu3.proto.CodeableConcept"
      "\022+\n\006system\030\005 \001(\0132\033.google.fhir.stu3.prot"
      "o.Uri\022-\n\005value\030\006 \001(\0132\036.google.fhir.stu3."
      "proto.String\022.\n\006period\030\007 \001(\0132\036.google.fh"
      "ir.stu3.proto.Period\022o\n\010assigner\030\010 \001(\0132!"
      ".google.fhir.stu3.proto.ReferenceB:\362\377\374\302\006"
      "4http://hl7.org/fhir/StructureDefinition"
      "/Organization:>\300\237\343\266\005\002\262\376\344\227\0062http://hl7.or"
      "g/fhir/StructureDefinition/Identifier\"\226\003"
      "\n\004Meta\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3.pr"
      "oto.String\0224\n\textension\030\002 \003(\0132!.google.f"
      "hir.stu3.proto.Extension\022.\n\nversion_id\030\003"
      " \001(\0132\032.google.fhir.stu3.proto.Id\0225\n\014last"
      "_updated\030\004 \001(\0132\037.google.fhir.stu3.proto."
      "Instant\022,\n\007profile\030\005 \003(\0132\033.google.fhir.s"
      "tu3.proto.Uri\0220\n\010security\030\006 \003(\0132\036.google"
      ".fhir.stu3.proto.Coding\022+\n\003tag\030\007 \003(\0132\036.g"
      "oogle.fhir.stu3.proto.Coding:8\300\237\343\266\005\002\262\376\344\227"
      "\006,http://hl7.org/fhir/StructureDefinitio"
      "n/Meta\"\237\003\n\005Money\022*\n\002id\030\001 \001(\0132\036.google.fh"
      "ir.stu3.proto.String\0224\n\textension\030\002 \003(\0132"
      "!.google.fhir.stu3.proto.Extension\022.\n\005va"
      "lue\030\003 \001(\0132\037.google.fhir.stu3.proto.Decim"
      "al\022B\n\ncomparator\030\004 \001(\0132..google.fhir.stu"
      "3.proto.QuantityComparatorCode\022,\n\004unit\030\005"
      " \001(\0132\036.google.fhir.stu3.proto.String\022+\n\006"
      "system\030\006 \001(\0132\033.google.fhir.stu3.proto.Ur"
      "i\022*\n\004code\030\007 \001(\0132\034.google.fhir.stu3.proto"
      ".Code:9\300\237\343\266\005\002\262\376\344\227\006-http://hl7.org/fhir/S"
      "tructureDefinition/Money\"\206\002\n\006Period\022*\n\002i"
      "d\030\001 \001(\0132\036.google.fhir.stu3.proto.String\022"
      "4\n\textension\030\002 \003(\0132!.google.fhir.stu3.pr"
      "oto.Extension\022/\n\005start\030\003 \001(\0132 .google.fh"
      "ir.stu3.proto.DateTime\022-\n\003end\030\004 \001(\0132 .go"
      "ogle.fhir.stu3.proto.DateTime::\300\237\343\266\005\002\262\376\344"
      "\227\006.http://hl7.org/fhir/StructureDefiniti"
      "on/Period\"\245\003\n\010Quantity\022*\n\002id\030\001 \001(\0132\036.goo"
      "gle.fhir.stu3.proto.String\0224\n\textension\030"
      "\002 \003(\0132!.google.fhir.stu3.proto.Extension"
      "\022.\n\005value\030\003 \001(\0132\037.google.fhir.stu3.proto"
      ".Decimal\022B\n\ncomparator\030\004 \001(\0132..google.fh"
      "ir.stu3.proto.QuantityComparatorCode\022,\n\004"
      "unit\030\005 \001(\0132\036.google.fhir.stu3.proto.Stri"
      "ng\022+\n\006system\030\006 \001(\0132\033.google.fhir.stu3.pr"
      "oto.Uri\022*\n\004code\030\007 \001(\0132\034.google.fhir.stu3"
      ".proto.Code:<\300\237\343\266\005\002\262\376\344\227\0060http://hl7.org/"
      "fhir/StructureDefinition/Quantity\"\217\002\n\005Ra"
      "nge\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3.proto"
      ".String\0224\n\textension\030\002 \003(\0132!.google.fhir"
      ".stu3.proto.Extension\0223\n\003low\030\003 \001(\0132&.goo"
      "gle.fhir.stu3.proto.SimpleQuantity\0224\n\004hi"
      "gh\030\004 \001(\0132&.google.fhir.stu3.proto.Simple"
      "Quantity:9\300\237\343\266\005\002\262\376\344\227\006-http://hl7.org/fhi"
      "r/StructureDefinition/Range\"\220\002\n\005Ratio\022*\n"
      "\002id\030\001 \001(\0132\036.google.fhir.stu3.proto.Strin"
      "g\0224\n\textension\030\002 \003(\0132!.google.fhir.stu3."
      "proto.Extension\0223\n\tnumerator\030\003 \001(\0132 .goo"
      "gle.fhir.stu3.proto.Quantity\0225\n\013denomina"
      "tor\030\004 \001(\0132 .google.fhir.stu3.proto.Quant"
      "ity:9\300\237\343\266\005\002\262\376\344\227\006-http://hl7.org/fhir/Str"
      "uctureDefinition/Ratio\"\275\004\n\013SampledData\022*"
      "\n\002id\030\001 \001(\0132\036.google.fhir.stu3.proto.Stri"
      "ng\0224\n\textension\030\002 \003(\0132!.google.fhir.stu3"
      ".proto.Extension\022>\n\006origin\030\003 \001(\0132&.googl"
      "e.fhir.stu3.proto.SimpleQuantityB\006\360\320\207\353\004\001"
      "\0227\n\006period\030\004 \001(\0132\037.google.fhir.stu3.prot"
      "o.DecimalB\006\360\320\207\353\004\001\022/\n\006factor\030\005 \001(\0132\037.goog"
      "le.fhir.stu3.proto.Decimal\0224\n\013lower_limi"
      "t\030\006 \001(\0132\037.google.fhir.stu3.proto.Decimal"
      "\0224\n\013upper_limit\030\007 \001(\0132\037.google.fhir.stu3"
      ".proto.Decimal\022\?\n\ndimensions\030\010 \001(\0132#.goo"
      "gle.fhir.stu3.proto.PositiveIntB\006\360\320\207\353\004\001\022"
      "4\n\004data\030\t \001(\0132\036.google.fhir.stu3.proto.S"
      "tringB\006\360\320\207\353\004\001:\?\300\237\343\266\005\002\262\376\344\227\0063http://hl7.or"
      "g/fhir/StructureDefinition/SampledData\"\305"
      "\n\n\tSignature\022*\n\002id\030\001 \001(\0132\036.google.fhir.s"
      "tu3.proto.String\0224\n\textension\030\002 \003(\0132!.go"
      "ogle.fhir.stu3.proto.Extension\0224\n\004type\030\003"
      " \003(\0132\036.google.fhir.stu3.proto.CodingB\006\360\320"
      "\207\353\004\001\0225\n\004when\030\004 \001(\0132\037.google.fhir.stu3.pr"
      "oto.InstantB\006\360\320\207\353\004\001\022@\n\003who\030\005 \001(\0132%.googl"
      "e.fhir.stu3.proto.Signature.WhoB\014\370\341\343\311\005\001\360"
      "\320\207\353\004\001\022J\n\014on_behalf_of\030\006 \001(\0132,.google.fhi"
      "r.stu3.proto.Signature.OnBehalfOfB\006\370\341\343\311\005"
      "\001\022:\n\014content_type\030\007 \001(\0132$.google.fhir.st"
      "u3.proto.MimeTypeCode\0222\n\004blob\030\010 \001(\0132$.go"
      "ogle.fhir.stu3.proto.Base64Binary\032\214\003\n\003Wh"
      "o\022*\n\003uri\030\001 \001(\0132\033.google.fhir.stu3.proto."
      "UriH\000\022\321\002\n\treference\030\002 \001(\0132!.google.fhir."
      "stu3.proto.ReferenceB\230\002\362\377\374\302\0064http://hl7."
      "org/fhir/StructureDefinition/Practitione"
      "r\362\377\374\302\0065http://hl7.org/fhir/StructureDefi"
      "nition/RelatedPerson\362\377\374\302\006/http://hl7.org"
      "/fhir/StructureDefinition/Patient\362\377\374\302\006.h"
      "ttp://hl7.org/fhir/StructureDefinition/D"
      "evice\362\377\374\302\0064http://hl7.org/fhir/Structure"
      "Definition/OrganizationH\000B\005\n\003who\032\234\003\n\nOnB"
      "ehalfOf\022*\n\003uri\030\001 \001(\0132\033.google.fhir.stu3."
      "proto.UriH\000\022\321\002\n\treference\030\002 \001(\0132!.google"
      ".fhir.stu3.proto.ReferenceB\230\002\362\377\374\302\0064http:"
      "//hl7.org/fhir/StructureDefinition/Pract"
      "itioner\362\377\374\302\0065http://hl7.org/fhir/Structu"
      "reDefinition/RelatedPerson\362\377\374\302\006/http://h"
      "l7.org/fhir/StructureDefinition/Patient\362"
      "\377\374\302\006.http://hl7.org/fhir/StructureDefini"
      "tion/Device\362\377\374\302\0064http://hl7.org/fhir/Str"
      "uctureDefinition/OrganizationH\000B\016\n\014on_be"
      "half_of:=\300\237\343\266\005\002\262\376\344\227\0061http://hl7.org/fhir"
      "/StructureDefinition/Signature\"\243\003\n\016Simpl"
      "eQuantity\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3"
      ".proto.String\0224\n\textension\030\002 \003(\0132!.googl"
      "e.fhir.stu3.proto.Extension\022.\n\005value\030\003 \001"
      "(\0132\037.google.fhir.stu3.proto.Decimal\022,\n\004u"
      "nit\030\005 \001(\0132\036.google.fhir.stu3.proto.Strin"
      "g\022+\n\006system\030\006 \001(\0132\033.google.fhir.stu3.pro"
      "to.Uri\022*\n\004code\030\007 \001(\0132\034.google.fhir.stu3."
      "proto.Code:x\300\237\343\266\005\002\232\265\216\223\0060http://hl7.org/f"
      "hir/StructureDefinition/Quantity\262\376\344\227\0066ht"
      "tp://hl7.org/fhir/StructureDefinition/Si"
      "mpleQuantity\"\237\013\n\006Timing\022*\n\002id\030\001 \001(\0132\036.go"
      "ogle.fhir.stu3.proto.String\0224\n\textension"
      "\030\002 \003(\0132!.google.fhir.stu3.proto.Extensio"
      "n\022/\n\005event\030\003 \003(\0132 .google.fhir.stu3.prot"
      "o.DateTime\0225\n\006repeat\030\004 \001(\0132%.google.fhir"
      ".stu3.proto.Timing.Repeat\0225\n\004code\030\005 \001(\0132"
      "\'.google.fhir.stu3.proto.CodeableConcept"
      "\032\327\010\n\006Repeat\022*\n\002id\030\001 \001(\0132\036.google.fhir.st"
      "u3.proto.String\0224\n\textension\030\002 \003(\0132!.goo"
      "gle.fhir.stu3.proto.Extension\022D\n\006bounds\030"
      "\003 \001(\0132,.google.fhir.stu3.proto.Timing.Re"
      "peat.BoundsB\006\370\341\343\311\005\001\022.\n\005count\030\004 \001(\0132\037.goo"
      "gle.fhir.stu3.proto.Integer\0222\n\tcount_max"
      "\030\005 \001(\0132\037.google.fhir.stu3.proto.Integer\022"
      "1\n\010duration\030\006 \001(\0132\037.google.fhir.stu3.pro"
      "to.Decimal\0225\n\014duration_max\030\007 \001(\0132\037.googl"
      "e.fhir.stu3.proto.Decimal\022>\n\rduration_un"
      "it\030\010 \001(\0132\'.google.fhir.stu3.proto.UnitsO"
      "fTimeCode\0222\n\tfrequency\030\t \001(\0132\037.google.fh"
      "ir.stu3.proto.Integer\0226\n\rfrequency_max\030\n"
      " \001(\0132\037.google.fhir.stu3.proto.Integer\022/\n"
      "\006period\030\013 \001(\0132\037.google.fhir.stu3.proto.D"
      "ecimal\0223\n\nperiod_max\030\014 \001(\0132\037.google.fhir"
      ".stu3.proto.Decimal\022<\n\013period_unit\030\r \001(\013"
      "2\'.google.fhir.stu3.proto.UnitsOfTimeCod"
      "e\022;\n\013day_of_week\030\016 \003(\0132&.google.fhir.stu"
      "3.proto.DaysOfWeekCode\0221\n\013time_of_day\030\017 "
      "\003(\0132\034.google.fhir.stu3.proto.Time\0225\n\004whe"
      "n\030\020 \003(\0132\'.google.fhir.stu3.proto.EventTi"
      "mingCode\0223\n\006offset\030\021 \001(\0132#.google.fhir.s"
      "tu3.proto.UnsignedInt\032\252\001\n\006Bounds\0224\n\010dura"
      "tion\030\001 \001(\0132 .google.fhir.stu3.proto.Dura"
      "tionH\000\022.\n\005range\030\002 \001(\0132\035.google.fhir.stu3"
      ".proto.RangeH\000\0220\n\006period\030\003 \001(\0132\036.google."
      "fhir.stu3.proto.PeriodH\000B\010\n\006bounds::\300\237\343\266"
      "\005\002\262\376\344\227\006.http://hl7.org/fhir/StructureDef"
      "inition/Timing\"\221\022\n\tExtension\022*\n\002id\030\001 \001(\013"
      "2\036.google.fhir.stu3.proto.String\0220\n\003url\030"
      "\002 \001(\0132\033.google.fhir.stu3.proto.UriB\006\360\320\207\353"
      "\004\001\022>\n\005value\030\003 \001(\0132\'.google.fhir.stu3.pro"
      "to.Extension.ValueB\006\370\341\343\311\005\001\0224\n\textension\030"
      "\004 \003(\0132!.google.fhir.stu3.proto.Extension"
      "\032\360\017\n\005Value\022=\n\rbase64_binary\030\001 \001(\0132$.goog"
      "le.fhir.stu3.proto.Base64BinaryH\000\0222\n\007boo"
      "lean\030\002 \001(\0132\037.google.fhir.stu3.proto.Bool"
      "eanH\000\022,\n\004code\030\003 \001(\0132\034.google.fhir.stu3.p"
      "roto.CodeH\000\022,\n\004date\030\004 \001(\0132\034.google.fhir."
      "stu3.proto.DateH\000\0225\n\tdate_time\030\005 \001(\0132 .g"
      "oogle.fhir.stu3.proto.DateTimeH\000\0222\n\007deci"
      "mal\030\006 \001(\0132\037.google.fhir.stu3.proto.Decim"
      "alH\000\022(\n\002id\030\007 \001(\0132\032.google.fhir.stu3.prot"
      "o.IdH\000\0222\n\007instant\030\010 \001(\0132\037.google.fhir.st"
      "u3.proto.InstantH\000\0222\n\007integer\030\t \001(\0132\037.go"
      "ogle.fhir.stu3.proto.IntegerH\000\0224\n\010markdo"
      "wn\030\n \001(\0132 .google.fhir.stu3.proto.Markdo"
      "wnH\000\022*\n\003oid\030\013 \001(\0132\033.google.fhir.stu3.pro"
      "to.OidH\000\022;\n\014positive_int\030\014 \001(\0132#.google."
      "fhir.stu3.proto.PositiveIntH\000\022>\n\014string_"
      "value\030\r \001(\0132\036.google.fhir.stu3.proto.Str"
      "ingH\000R\006string\022,\n\004time\030\016 \001(\0132\034.google.fhi"
      "r.stu3.proto.TimeH\000\022;\n\014unsigned_int\030\017 \001("
      "\0132#.google.fhir.stu3.proto.UnsignedIntH\000"
      "\022*\n\003uri\030\020 \001(\0132\033.google.fhir.stu3.proto.U"
      "riH\000\0222\n\007address\030\021 \001(\0132\037.google.fhir.stu3"
      ".proto.AddressH\000\022*\n\003age\030\022 \001(\0132\033.google.f"
      "hir.stu3.proto.AgeH\000\0228\n\nannotation\030\023 \001(\013"
      "2\".google.fhir.stu3.proto.AnnotationH\000\0228"
      "\n\nattachment\030\024 \001(\0132\".google.fhir.stu3.pr"
      "oto.AttachmentH\000\022C\n\020codeable_concept\030\025 \001"
      "(\0132\'.google.fhir.stu3.proto.CodeableConc"
      "eptH\000\0220\n\006coding\030\026 \001(\0132\036.google.fhir.stu3"
      ".proto.CodingH\000\022=\n\rcontact_point\030\027 \001(\0132$"
      ".google.fhir.stu3.proto.ContactPointH\000\022."
      "\n\005count\030\030 \001(\0132\035.google.fhir.stu3.proto.C"
      "ountH\000\0224\n\010distance\030\031 \001(\0132 .google.fhir.s"
      "tu3.proto.DistanceH\000\0224\n\010duration\030\032 \001(\0132 "
      ".google.fhir.stu3.proto.DurationH\000\0227\n\nhu"
      "man_name\030\033 \001(\0132!.google.fhir.stu3.proto."
      "HumanNameH\000\0228\n\nidentifier\030\034 \001(\0132\".google"
      ".fhir.stu3.proto.IdentifierH\000\022.\n\005money\030\035"
      " \001(\0132\035.google.fhir.stu3.proto.MoneyH\000\0220\n"
      "\006period\030\036 \001(\0132\036.google.fhir.stu3.proto.P"
      "eriodH\000\0224\n\010quantity\030\037 \001(\0132 .google.fhir."
      "stu3.proto.QuantityH\000\022.\n\005range\030  \001(\0132\035.g"
      "oogle.fhir.stu3.proto.RangeH\000\022.\n\005ratio\030!"
      " \001(\0132\035.google.fhir.stu3.proto.RatioH\000\0226\n"
      "\treference\030\" \001(\0132!.google.fhir.stu3.prot"
      "o.ReferenceH\000\022;\n\014sampled_data\030# \001(\0132#.go"
      "ogle.fhir.stu3.proto.SampledDataH\000\0226\n\tsi"
      "gnature\030$ \001(\0132!.google.fhir.stu3.proto.S"
      "ignatureH\000\0220\n\006timing\030% \001(\0132\036.google.fhir"
      ".stu3.proto.TimingH\000\022,\n\004meta\030& \001(\0132\034.goo"
      "gle.fhir.stu3.proto.MetaH\000B\007\n\005value:=\300\237\343"
      "\266\005\002\262\376\344\227\0061http://hl7.org/fhir/StructureDe"
      "finition/Extension\"\302\003\n\025CodingWithFixedSy"
      "stem\022*\n\002id\030\001 \001(\0132\036.google.fhir.stu3.prot"
      "o.String\0224\n\textension\030\002 \003(\0132!.google.fhi"
      "r.stu3.proto.Extension\022/\n\007version\030\004 \001(\0132"
      "\036.google.fhir.stu3.proto.String\022*\n\004code\030"
      "\005 \001(\0132\034.google.fhir.stu3.proto.Code\022/\n\007d"
      "isplay\030\006 \001(\0132\036.google.fhir.stu3.proto.St"
      "ring\0226\n\ruser_selected\030\007 \001(\0132\037.google.fhi"
      "r.stu3.proto.Boolean:{\300\237\343\266\005\002\262\376\344\227\006;https:"
      "//g.co/fhir/StructureDefinition/CodingWi"
      "thFixedSystem\232\265\216\223\006.http://hl7.org/fhir/S"
      "tructureDefinition/CodingJ\004\010\003\020\004\"\230\003\n\023Codi"
      "ngWithFixedCode\022*\n\002id\030\001 \001(\0132\036.google.fhi"
      "r.stu3.proto.String\0224\n\textension\030\002 \003(\0132!"
      ".google.fhir.stu3.proto.Extension\022/\n\007ver"
      "sion\030\004 \001(\0132\036.google.fhir.stu3.proto.Stri"
      "ng\022/\n\007display\030\006 \001(\0132\036.google.fhir.stu3.p"
      "roto.String\0226\n\ruser_selected\030\007 \001(\0132\037.goo"
      "gle.fhir.stu3.proto.Boolean:y\300\237\343\266\005\002\262\376\344\227\006"
      "9https://g.co/fhir/StructureDefinition/C"
      "odingWithFixedCode\232\265\216\223\006.http://hl7.org/f"
      "hir/StructureDefinition/CodingJ\004\010\003\020\004J\004\010\005"
      "\020\006\"\310>\n\tReference\022*\n\002id\030\001 \001(\0132\036.google.fh"
      "ir.stu3.proto.String\0224\n\textension\030\002 \003(\0132"
      "!.google.fhir.stu3.proto.Extension\0228\n\003ur"
      "i\030\003 \001(\0132\036.google.fhir.stu3.proto.StringH"
      "\000R\treference\0222\n\010fragment\030\004 \001(\0132\036.google."
      "fhir.stu3.proto.StringH\000\0229\n\naccount_id\030\005"
      " \001(\0132#.google.fhir.stu3.proto.ReferenceI"
      "dH\000\022E\n\026activity_definition_id\030\006 \001(\0132#.go"
      "ogle.fhir.stu3.proto.ReferenceIdH\000\022\?\n\020ad"
      "verse_event_id\030\007 \001(\0132#.google.fhir.stu3."
      "proto.ReferenceIdH\000\022E\n\026allergy_intoleran"
      "ce_id\030\010 \001(\0132#.google.fhir.stu3.proto.Ref"
      "erenceIdH\000\022=\n\016appointment_id\030\t \001(\0132#.goo"
      "gle.fhir.stu3.proto.ReferenceIdH\000\022F\n\027app"
      "ointment_response_id\030\n \001(\0132#.google.fhir"
      ".stu3.proto.ReferenceIdH\000\022=\n\016audit_event"
      "_id\030\013 \001(\0132#.google.fhir.stu3.proto.Refer"
      "enceIdH\000\0227\n\010basic_id\030\014 \001(\0132#.google.fhir"
      ".stu3.proto.ReferenceIdH\000\0228\n\tbinary_id\030\r"
      " \001(\0132#.google.fhir.stu3.proto.ReferenceI"
      "dH\000\022;\n\014body_site_id\030\016 \001(\0132#.google.fhir."
      "stu3.proto.ReferenceIdH\000\0228\n\tbundle_id\030\017 "
      "\001(\0132#.google.fhir.stu3.proto.ReferenceId"
      "H\000\022F\n\027capability_statement_id\030\020 \001(\0132#.go"
      "ogle.fhir.stu3.proto.ReferenceIdH\000\022;\n\014ca"
      "re_plan_id\030\021 \001(\0132#.google.fhir.stu3.prot"
      "o.ReferenceIdH\000\022;\n\014care_team_id\030\022 \001(\0132#."
      "google.fhir.stu3.proto.ReferenceIdH\000\022=\n\016"
      "charge_item_id\030\023 \001(\0132#.google.fhir.stu3."
      "proto.ReferenceIdH\000\0227\n\010claim_id\030\024 \001(\0132#."
      "google.fhir.stu3.proto.ReferenceIdH\000\022@\n\021"
      "claim_response_id\030\025 \001(\0132#.google.fhir.st"
      "u3.proto.ReferenceIdH\000\022E\n\026clinical_impre"
      "ssion_id\030\026 \001(\0132#.google.fhir.stu3.proto."
      "ReferenceIdH\000\022=\n\016code_system_id\030\027 \001(\0132#."
      "google.fhir.stu3.proto.ReferenceIdH\000\022\?\n\020"
      "communication_id\030\030 \001(\0132#.google.fhir.stu"
      "3.proto.ReferenceIdH\000\022G\n\030communication_r"
      "equest_id\030\031 \001(\0132#.google.fhir.stu3.proto"
      ".ReferenceIdH\000\022H\n\031compartment_definition"
      "_id\030\032 \001(\0132#.google.fhir.stu3.proto.Refer"
      "enceIdH\000\022=\n\016composition_id\030\033 \001(\0132#.googl"
      "e.fhir.stu3.proto.ReferenceIdH\000\022=\n\016conce"
      "pt_map_id\030\034 \001(\0132#.google.fhir.stu3.proto"
      ".ReferenceIdH\000\022;\n\014condition_id\030\035 \001(\0132#.g"
      "oogle.fhir.stu3.proto.ReferenceIdH\000\0229\n\nc"
      "onsent_id\030\036 \001(\0132#.google.fhir.stu3.proto"
      ".ReferenceIdH\000\022:\n\013contract_id\030\037 \001(\0132#.go"
      "ogle.fhir.stu3.proto.ReferenceIdH\000\022:\n\013co"
      "verage_id\030  \001(\0132#.google.fhir.stu3.proto"
      ".ReferenceIdH\000\022>\n\017data_element_id\030! \001(\0132"
      "#.google.fhir.stu3.proto.ReferenceIdH\000\022@"
      "\n\021detected_issue_id\030\" \001(\0132#.google.fhir."
      "stu3.proto.ReferenceIdH\000\0228\n\tdevice_id\030# "
      "\001(\0132#.google.fhir.stu3.proto.ReferenceId"
      "H\000\022B\n\023device_component_id\030$ \001(\0132#.google"
      ".fhir.stu3.proto.ReferenceIdH\000\022\?\n\020device"
      "_metric_id\030% \001(\0132#.google.fhir.stu3.prot"
      "o.ReferenceIdH\000\022@\n\021device_request_id\030& \001"
      "(\0132#.google.fhir.stu3.proto.ReferenceIdH"
      "\000\022F\n\027device_use_statement_id\030\' \001(\0132#.goo"
      "gle.fhir.stu3.proto.ReferenceIdH\000\022C\n\024dia"
      "gnostic_report_id\030( \001(\0132#.google.fhir.st"
      "u3.proto.ReferenceIdH\000\022C\n\024document_manif"
      "est_id\030) \001(\0132#.google.fhir.stu3.proto.Re"
      "ferenceIdH\000\022D\n\025document_reference_id\030* \001"
      "(\0132#.google.fhir.stu3.proto.ReferenceIdH"
      "\000\022E\n\026eligibility_request_id\030+ \001(\0132#.goog"
      "le.fhir.stu3.proto.ReferenceIdH\000\022F\n\027elig"
      "ibility_response_id\030, \001(\0132#.google.fhir."
      "stu3.proto.ReferenceIdH\000\022;\n\014encounter_id"
      "\030- \001(\0132#.google.fhir.stu3.proto.Referenc"
      "eIdH\000\022:\n\013endpoint_id\030. \001(\0132#.google.fhir"
      ".stu3.proto.ReferenceIdH\000\022D\n\025enrollment_"
      "request_id\030/ \001(\0132#.google.fhir.stu3.prot"
      "o.ReferenceIdH\000\022E\n\026enrollment_response_i"
      "d\0300 \001(\0132#.google.fhir.stu3.proto.Referen"
      "ceIdH\000\022A\n\022episode_of_care_id\0301 \001(\0132#.goo"
      "gle.fhir.stu3.proto.ReferenceIdH\000\022C\n\024exp"
      "ansion_profile_id\0302 \001(\0132#.google.fhir.st"
      "u3.proto.ReferenceIdH\000\022H\n\031explanation_of"
      "_benefit_id\0303 \001(\0132#.google.fhir.stu3.pro"
      "to.ReferenceIdH\000\022G\n\030family_member_histor"
      "y_id\0304 \001(\0132#.google.fhir.stu3.proto.Refe"
      "renceIdH\000\0226\n\007flag_id\0305 \001(\0132#.google.fhir"
      ".stu3.proto.ReferenceIdH\000\0226\n\007goal_id\0306 \001"
      "(\0132#.google.fhir.stu3.proto.ReferenceIdH"
      "\000\022B\n\023graph_definition_id\0307 \001(\0132#.google."
      "fhir.stu3.proto.ReferenceIdH\000\0227\n\010group_i"
      "d\0308 \001(\0132#.google.fhir.stu3.proto.Referen"
      "ceIdH\000\022C\n\024guidance_response_id\0309 \001(\0132#.g"
      "oogle.fhir.stu3.proto.ReferenceIdH\000\022D\n\025h"
      "ealthcare_service_id\030: \001(\0132#.google.fhir"
      ".stu3.proto.ReferenceIdH\000\022B\n\023imaging_man"
      "ifest_id\030; \001(\0132#.google.fhir.stu3.proto."
      "ReferenceIdH\000\022\?\n\020imaging_study_id\030< \001(\0132"
      "#.google.fhir.stu3.proto.ReferenceIdH\000\022>"
      "\n\017immunization_id\030= \001(\0132#.google.fhir.st"
      "u3.proto.ReferenceIdH\000\022M\n\036immunization_r"
      "ecommendation_id\030> \001(\0132#.google.fhir.stu"
      "3.proto.ReferenceIdH\000\022F\n\027implementation_"
      "guide_id\030\? \001(\0132#.google.fhir.stu3.proto."
      "ReferenceIdH\000\0229\n\nlibrary_id\030@ \001(\0132#.goog"
      "le.fhir.stu3.proto.ReferenceIdH\000\0229\n\nlink"
      "age_id\030A \001(\0132#.google.fhir.stu3.proto.Re"
      "ferenceIdH\000\0226\n\007list_id\030B \001(\0132#.google.fh"
      "ir.stu3.proto.ReferenceIdH\000\022:\n\013location_"
      "id\030C \001(\0132#.google.fhir.stu3.proto.Refere"
      "nceIdH\000\0229\n\nmeasure_id\030D \001(\0132#.google.fhi"
      "r.stu3.proto.ReferenceIdH\000\022@\n\021measure_re"
      "port_id\030E \001(\0132#.google.fhir.stu3.proto.R"
      "eferenceIdH\000\0227\n\010media_id\030F \001(\0132#.google."
      "fhir.stu3.proto.ReferenceIdH\000\022<\n\rmedicat"
      "ion_id\030G \001(\0132#.google.fhir.stu3.proto.Re"
      "ferenceIdH\000\022K\n\034medication_administration"
      "_id\030H \001(\0132#.google.fhir.stu3.proto.Refer"
      "enceIdH\000\022E\n\026medication_dispense_id\030I \001(\013"
      "2#.google.fhir.stu3.proto.ReferenceIdH\000\022"
      "D\n\025medication_request_id\030J \001(\0132#.google."
      "fhir.stu3.proto.ReferenceIdH\000\022F\n\027medicat"
      "ion_statement_id\030K \001(\0132#.google.fhir.stu"
      "3.proto.ReferenceIdH\000\022D\n\025message_definit"
      "ion_id\030L \001(\0132#.google.fhir.stu3.proto.Re"
      "ferenceIdH\000\022@\n\021message_header_id\030M \001(\0132#"
      ".google.fhir.stu3.proto.ReferenceIdH\000\022\?\n"
      "\020naming_system_id\030N \001(\0132#.google.fhir.st"
      "u3.proto.ReferenceIdH\000\022A\n\022nutrition_orde"
      "r_id\030O \001(\0132#.google.fhir.stu3.proto.Refe"
      "renceIdH\000\022=\n\016observation_id\030P \001(\0132#.goog"
      "le.fhir.stu3.proto.ReferenceIdH\000\022F\n\027oper"
      "ation_definition_id\030Q \001(\0132#.google.fhir."
      "stu3.proto.ReferenceIdH\000\022C\n\024operation_ou"
      "tcome_id\030R \001(\0132#.google.fhir.stu3.proto."
      "ReferenceIdH\000\022>\n\017organization_id\030S \001(\0132#"
      ".google.fhir.stu3.proto.ReferenceIdH\000\022<\n"
      "\rparameters_id\030T \001(\0132#.google.fhir.stu3."
      "proto.ReferenceIdH\000\0229\n\npatient_id\030U \001(\0132"
      "#.google.fhir.stu3.proto.ReferenceIdH\000\022@"
      "\n\021payment_notice_id\030V \001(\0132#.google.fhir."
      "stu3.proto.ReferenceIdH\000\022H\n\031payment_reco"
      "nciliation_id\030W \001(\0132#.google.fhir.stu3.p"
      "roto.ReferenceIdH\000\0228\n\tperson_id\030X \001(\0132#."
      "google.fhir.stu3.proto.ReferenceIdH\000\022A\n\022"
      "plan_definition_id\030Y \001(\0132#.google.fhir.s"
      "tu3.proto.ReferenceIdH\000\022>\n\017practitioner_"
      "id\030Z \001(\0132#.google.fhir.stu3.proto.Refere"
      "nceIdH\000\022C\n\024practitioner_role_id\030[ \001(\0132#."
      "google.fhir.stu3.proto.ReferenceIdH\000\022;\n\014"
      "procedure_id\030\\ \001(\0132#.google.fhir.stu3.pr"
      "oto.ReferenceIdH\000\022C\n\024procedure_request_i"
      "d\030] \001(\0132#.google.fhir.stu3.proto.Referen"
      "ceIdH\000\022A\n\022process_request_id\030^ \001(\0132#.goo"
      "gle.fhir.stu3.proto.ReferenceIdH\000\022B\n\023pro"
      "cess_response_id\030_ \001(\0132#.google.fhir.stu"
      "3.proto.ReferenceIdH\000\022<\n\rprovenance_id\030`"
      " \001(\0132#.google.fhir.stu3.proto.ReferenceI"
      "dH\000\022\?\n\020questionnaire_id\030a \001(\0132#.google.f"
      "hir.stu3.proto.ReferenceIdH\000\022H\n\031question"
      "naire_response_id\030b \001(\0132#.google.fhir.st"
      "u3.proto.ReferenceIdH\000\022B\n\023referral_reque"
      "st_id\030c \001(\0132#.google.fhir.stu3.proto.Ref"
      "erenceIdH\000\022@\n\021related_person_id\030d \001(\0132#."
      "google.fhir.stu3.proto.ReferenceIdH\000\022\?\n\020"
      "request_group_id\030e \001(\0132#.google.fhir.stu"
      "3.proto.ReferenceIdH\000\022@\n\021research_study_"
      "id\030f \001(\0132#.google.fhir.stu3.proto.Refere"
      "nceIdH\000\022B\n\023research_subject_id\030g \001(\0132#.g"
      "oogle.fhir.stu3.proto.ReferenceIdH\000\022A\n\022r"
      "isk_assessment_id\030h \001(\0132#.google.fhir.st"
      "u3.proto.ReferenceIdH\000\022:\n\013schedule_id\030i "
      "\001(\0132#.google.fhir.stu3.proto.ReferenceId"
      "H\000\022B\n\023search_parameter_id\030j \001(\0132#.google"
      ".fhir.stu3.proto.ReferenceIdH\000\022:\n\013sequen"
      "ce_id\030k \001(\0132#.google.fhir.stu3.proto.Ref"
      "erenceIdH\000\022D\n\025service_definition_id\030l \001("
      "\0132#.google.fhir.stu3.proto.ReferenceIdH\000"
      "\0226\n\007slot_id\030m \001(\0132#.google.fhir.stu3.pro"
      "to.ReferenceIdH\000\022:\n\013specimen_id\030n \001(\0132#."
      "google.fhir.stu3.proto.ReferenceIdH\000\022F\n\027"
      "structure_definition_id\030o \001(\0132#.google.f"
      "hir.stu3.proto.ReferenceIdH\000\022\?\n\020structur"
      "e_map_id\030p \001(\0132#.google.fhir.stu3.proto."
      "ReferenceIdH\000\022>\n\017subscription_id\030q \001(\0132#"
      ".google.fhir.stu3.proto.ReferenceIdH\000\022;\n"
      "\014substance_id\030r \001(\0132#.google.fhir.stu3.p"
      "roto.ReferenceIdH\000\022A\n\022supply_delivery_id"
      "\030s \001(\0132#.google.fhir.stu3.proto.Referenc"
      "eIdH\000\022@\n\021supply_request_id\030t \001(\0132#.googl"
      "e.fhir.stu3.proto.ReferenceIdH\000\0226\n\007task_"
      "id\030u \001(\0132#.google.fhir.stu3.proto.Refere"
      "nceIdH\000\022=\n\016test_report_id\030v \001(\0132#.google"
      ".fhir.stu3.proto.ReferenceIdH\000\022=\n\016test_s"
      "cript_id\030w \001(\0132#.google.fhir.stu3.proto."
      "ReferenceIdH\000\022;\n\014value_set_id\030x \001(\0132#.go"
      "ogle.fhir.stu3.proto.ReferenceIdH\000\022E\n\026vi"
      "sion_prescription_id\030y \001(\0132#.google.fhir"
      ".stu3.proto.ReferenceIdH\000\0226\n\nidentifier\030"
      "z \001(\0132\".google.fhir.stu3.proto.Identifie"
      "r\022/\n\007display\030{ \001(\0132\036.google.fhir.stu3.pr"
      "oto.String:\024\300\237\343\266\005\002\212\241\226\274\005\010ResourceB\023\n\trefe"
      "rence\022\006\260\356\222\262\006\001\"\263\001\n\013ReferenceId\022\r\n\005value\030\001"
      " \001(\t\022+\n\007history\030\002 \001(\0132\032.google.fhir.stu3"
      ".proto.Id\022*\n\002id\030\003 \001(\0132\036.google.fhir.stu3"
      ".proto.String\0224\n\textension\030\004 \003(\0132!.googl"
      "e.fhir.stu3.proto.Extension:\006\300\237\343\266\005\001\"\260\002\n\017"
      "AddressTypeCode\022<\n\005value\030\001 \001(\0162-.google."
      "fhir.stu3.proto.AddressTypeCode.Value\022*\n"
      "\002id\030\002 \001(\0132\036.google.fhir.stu3.proto.Strin"
      "g\0224\n\textension\030\003 \003(\0132!.google.fhir.stu3."
      "proto.Extension\"F\n\005Value\022\031\n\025INVALID_UNIN"
      "ITIALIZED\020\000\022\n\n\006POSTAL\020\001\022\014\n\010PHYSICAL\020\002\022\010\n"
      "\004BOTH\020\003:5\300\237\343\266\005\001\212\371\203\262\005)http://hl7.org/fhir"
      "/ValueSet/address-type\"\260\002\n\016AddressUseCod"
      "e\022;\n\005value\030\001 \001(\0162,.google.fhir.stu3.prot"
      "o.AddressUseCode.Value\022*\n\002id\030\002 \001(\0132\036.goo"
      "gle.fhir.stu3.proto.String\0224\n\textension\030"
      "\003 \003(\0132!.google.fhir.stu3.proto.Extension"
      "\"I\n\005Value\022\031\n\025INVALID_UNINITIALIZED\020\000\022\010\n\004"
      "HOME\020\001\022\010\n\004WORK\020\002\022\010\n\004TEMP\020\003\022\007\n\003OLD\020\004:4\300\237\343"
      "\266\005\001\212\371\203\262\005(http://hl7.org/fhir/ValueSet/ad"
      "dress-use\"\351\002\n\026ContactPointSystemCode\022C\n\005"
      "value\030\001 \001(\01624.google.fhir.stu3.proto.Con"
      "tactPointSystemCode.Value\022*\n\002id\030\002 \001(\0132\036."
      "google.fhir.stu3.proto.String\0224\n\textensi"
      "on\030\003 \003(\0132!.google.fhir.stu3.proto.Extens"
      "ion\"i\n\005Value\022\031\n\025INVALID_UNINITIALIZED\020\000\022"
      "\t\n\005PHONE\020\001\022\007\n\003FAX\020\002\022\t\n\005EMAIL\020\003\022\t\n\005PAGER\020"
      "\004\022\007\n\003URL\020\005\022\007\n\003SMS\020\006\022\t\n\005OTHER\020\007:=\300\237\343\266\005\001\212\371"
      "\203\262\0051http://hl7.org/fhir/ValueSet/contact"
      "-point-system\"\314\002\n\023ContactPointUseCode\022@\n"
      "\005value\030\001 \001(\01621.google.fhir.stu3.proto.Co"
      "ntactPointUseCode.Value\022*\n\002id\030\002 \001(\0132\036.go"
      "ogle.fhir.stu3.proto.String\0224\n\textension"
      "\030\003 \003(\0132!.google.fhir.stu3.proto.Extensio"
      "n\"U\n\005Value\022\031\n\025INVALID_UNINITIALIZED\020\000\022\010\n"
      "\004HOME\020\001\022\010\n\004WORK\020\002\022\010\n\004TEMP\020\003\022\007\n\003OLD\020\004\022\n\n\006"
      "MOBILE\020\005::\300\237\343\266\005\001\212\371\203\262\005.http://hl7.org/fhi"
      "r/ValueSet/contact-point-use\"\311\002\n\016DaysOfW"
      "eekCode\022;\n\005value\030\001 \001(\0162,.google.fhir.stu"
      "3.proto.DaysOfWeekCode.Value\022*\n\002id\030\002 \001(\013"
      "2\036.google.fhir.stu3.proto.String\0224\n\texte"
      "nsion\030\003 \003(\0132!.google.fhir.stu3.proto.Ext"
      "ension\"a\n\005Value\022\031\n\025INVALID_UNINITIALIZED"
      "\020\000\022\007\n\003MON\020\001\022\007\n\003TUE\020\002\022\007\n\003WED\020\003\022\007\n\003THU\020\004\022\007"
      "\n\003FRI\020\005\022\007\n\003SAT\020\006\022\007\n\003SUN\020\007:5\300\237\343\266\005\001\212\371\203\262\005)h"
      "ttp://hl7.org/fhir/ValueSet/days-of-week"
      "\"\201\005\n\017EventTimingCode\022<\n\005value\030\001 \001(\0162-.go"
      "ogle.fhir.stu3.proto.EventTimingCode.Val"
      "ue\022*\n\002id\030\002 \001(\0132\036.google.fhir.stu3.proto."
      "String\0224\n\textension\030\003 \003(\0132!.google.fhir."
      "stu3.proto.Extension\"\226\003\n\005Value\022\031\n\025INVALI"
      "D_UNINITIALIZED\020\000\022\024\n\004MORN\020\001\032\n\272\226\273\262\005\004MORN\022"
      "\022\n\003AFT\020\002\032\t\272\226\273\262\005\003AFT\022\022\n\003EVE\020\003\032\t\272\226\273\262\005\003EVE\022"
      "\026\n\005NIGHT\020\004\032\013\272\226\273\262\005\005NIGHT\022\022\n\003PHS\020\005\032\t\272\226\273\262\005\003"
      "PHS\022\020\n\002HS\020\006\032\010\272\226\273\262\005\002HS\022\024\n\004WAKE\020\007\032\n\272\226\273\262\005\004W"
      "AKE\022\016\n\001C\020\010\032\007\272\226\273\262\005\001C\022\020\n\002CM\020\t\032\010\272\226\273\262\005\002CM\022\020\n"
      "\002CD\020\n\032\010\272\226\273\262\005\002CD\022\020\n\002CV\020\013\032\010\272\226\273\262\005\002CV\022\020\n\002AC\020"
      "\014\032\010\272\226\273\262\005\002AC\022\022\n\003ACM\020\r\032\t\272\226\273\262\005\003ACM\022\022\n\003ACD\020\016"
      "\032\t\272\226\273\262\005\003ACD\022\022\n\003ACV\020\017\032\t\272\226\273\262\005\003ACV\022\020\n\002PC\020\020\032"
      "\010\272\226\273\262\005\002PC\022\022\n\003PCM\020\021\032\t\272\226\273\262\005\003PCM\022\022\n\003PCD\020\022\032\t"
      "\272\226\273\262\005\003PCD\022\022\n\003PCV\020\023\032\t\272\226\273\262\005\003PCV:5\300\237\343\266\005\001\212\371\203"
      "\262\005)http://hl7.org/fhir/ValueSet/event-ti"
      "ming\"\304\002\n\021IdentifierUseCode\022>\n\005value\030\001 \001("
      "\0162/.google.fhir.stu3.proto.IdentifierUse"
      "Code.Value\022*\n\002id\030\002 \001(\0132\036.google.fhir.stu"
      "3.proto.String\0224\n\textension\030\003 \003(\0132!.goog"
      "le.fhir.stu3.proto.Extension\"T\n\005Value\022\031\n"
      "\025INVALID_UNINITIALIZED\020\000\022\t\n\005USUAL\020\001\022\014\n\010O"
      "FFICIAL\020\002\022\010\n\004TEMP\020\003\022\r\n\tSECONDARY\020\004:7\300\237\343\266"
      "\005\001\212\371\203\262\005+http://hl7.org/fhir/ValueSet/ide"
      "ntifier-use\"\272\001\n\017AllLanguageCode\022\r\n\005value"
      "\030\001 \001(\t\022*\n\002id\030\002 \001(\0132\036.google.fhir.stu3.pr"
      "oto.String\0224\n\textension\030\003 \003(\0132!.google.f"
      "hir.stu3.proto.Extension:6\300\237\343\266\005\001\212\371\203\262\005*ht"
      "tp://hl7.org/fhir/ValueSet/all-languages"
      "\"\263\001\n\014LanguageCode\022\r\n\005value\030\001 \001(\t\022*\n\002id\030\002"
      " \001(\0132\036.google.fhir.stu3.proto.String\0224\n\t"
      "extension\030\003 \003(\0132!.google.fhir.stu3.proto"
      ".Extension:2\300\237\343\266\005\001\212\371\203\262\005&http://hl7.org/f"
      "hir/ValueSet/languages\"\264\001\n\014MimeTypeCode\022"
      "\r\n\005value\030\001 \001(\t\022*\n\002id\030\002 \001(\0132\036.google.fhir"
      ".stu3.proto.String\0224\n\textension\030\003 \003(\0132!."
      "google.fhir.stu3.proto.Extension:3\300\237\343\266\005\001"
      "\212\371\203\262\005\'http://www.rfc-editor.org/bcp/bcp1"
      "3.txt\"\325\002\n\013NameUseCode\0228\n\005value\030\001 \001(\0162).g"
      "oogle.fhir.stu3.proto.NameUseCode.Value\022"
      "*\n\002id\030\002 \001(\0132\036.google.fhir.stu3.proto.Str"
      "ing\0224\n\textension\030\003 \003(\0132!.google.fhir.stu"
      "3.proto.Extension\"w\n\005Value\022\031\n\025INVALID_UN"
      "INITIALIZED\020\000\022\t\n\005USUAL\020\001\022\014\n\010OFFICIAL\020\002\022\010"
      "\n\004TEMP\020\003\022\014\n\010NICKNAME\020\004\022\r\n\tANONYMOUS\020\005\022\007\n"
      "\003OLD\020\006\022\n\n\006MAIDEN\020\007:1\300\237\343\266\005\001\212\371\203\262\005%http://h"
      "l7.org/fhir/ValueSet/name-use\"\347\002\n\026Quanti"
      "tyComparatorCode\022C\n\005value\030\001 \001(\01624.google"
      ".fhir.stu3.proto.QuantityComparatorCode."
      "Value\022*\n\002id\030\002 \001(\0132\036.google.fhir.stu3.pro"
      "to.String\0224\n\textension\030\003 \003(\0132!.google.fh"
      "ir.stu3.proto.Extension\"h\n\005Value\022\031\n\025INVA"
      "LID_UNINITIALIZED\020\000\022\017\n\002LT\020\001\032\007\272\226\273\262\005\001<\022\020\n\002"
      "LE\020\002\032\010\272\226\273\262\005\002<=\022\020\n\002GE\020\003\032\010\272\226\273\262\005\002>=\022\017\n\002GT\020\004"
      "\032\007\272\226\273\262\005\001>:<\300\237\343\266\005\001\212\371\203\262\0050http://hl7.org/fh"
      "ir/ValueSet/quantity-comparator\"\302\002\n\017Unit"
      "sOfTimeCode\022<\n\005value\030\001 \001(\0162-.google.fhir"
      ".stu3.proto.UnitsOfTimeCode.Value\022*\n\002id\030"
      "\002 \001(\0132\036.google.fhir.stu3.proto.String\0224\n"
      "\textension\030\003 \003(\0132!.google.fhir.stu3.prot"
      "o.Extension\"W\n\005Value\022\031\n\025INVALID_UNINITIA"
      "LIZED\020\000\022\005\n\001S\020\001\022\007\n\003MIN\020\002\022\005\n\001H\020\003\022\005\n\001D\020\004\022\006\n"
      "\002WK\020\005\022\006\n\002MO\020\006\022\005\n\001A\020\007:6\300\237\343\266\005\001\212\371\203\262\005*http:/"
      "/hl7.org/fhir/ValueSet/units-of-timeB\036\n\032"
      "com.google.fhir.stu3.protoP\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 33316);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/stu3/datatypes.proto", &protobuf_RegisterTypes);
  ::protobuf_proto_2fstu3_2fannotations_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proto_2fstu3_2fdatatypes_2eproto
namespace google {
namespace fhir {
namespace stu3 {
namespace proto {
const ::google::protobuf::EnumDescriptor* Date_Precision_descriptor() {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_enum_descriptors[0];
}
bool Date_Precision_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Date_Precision Date::PRECISION_UNSPECIFIED;
const Date_Precision Date::YEAR;
const Date_Precision Date::MONTH;
const Date_Precision Date::DAY;
const Date_Precision Date::Precision_MIN;
const Date_Precision Date::Precision_MAX;
const int Date::Precision_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DateTime_Precision_descriptor() {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_enum_descriptors[1];
}
bool DateTime_Precision_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DateTime_Precision DateTime::PRECISION_UNSPECIFIED;
const DateTime_Precision DateTime::YEAR;
const DateTime_Precision DateTime::MONTH;
const DateTime_Precision DateTime::DAY;
const DateTime_Precision DateTime::SECOND;
const DateTime_Precision DateTime::MILLISECOND;
const DateTime_Precision DateTime::MICROSECOND;
const DateTime_Precision DateTime::Precision_MIN;
const DateTime_Precision DateTime::Precision_MAX;
const int DateTime::Precision_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Instant_Precision_descriptor() {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_enum_descriptors[2];
}
bool Instant_Precision_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Instant_Precision Instant::PRECISION_UNSPECIFIED;
const Instant_Precision Instant::SECOND;
const Instant_Precision Instant::MILLISECOND;
const Instant_Precision Instant::MICROSECOND;
const Instant_Precision Instant::Precision_MIN;
const Instant_Precision Instant::Precision_MAX;
const int Instant::Precision_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Time_Precision_descriptor() {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_enum_descriptors[3];
}
bool Time_Precision_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Time_Precision Time::PRECISION_UNSPECIFIED;
const Time_Precision Time::SECOND;
const Time_Precision Time::MILLISECOND;
const Time_Precision Time::MICROSECOND;
const Time_Precision Time::Precision_MIN;
const Time_Precision Time::Precision_MAX;
const int Time::Precision_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AddressTypeCode_Value_descriptor() {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_enum_descriptors[4];
}
bool AddressTypeCode_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AddressTypeCode_Value AddressTypeCode::INVALID_UNINITIALIZED;
const AddressTypeCode_Value AddressTypeCode::POSTAL;
const AddressTypeCode_Value AddressTypeCode::PHYSICAL;
const AddressTypeCode_Value AddressTypeCode::BOTH;
const AddressTypeCode_Value AddressTypeCode::Value_MIN;
const AddressTypeCode_Value AddressTypeCode::Value_MAX;
const int AddressTypeCode::Value_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AddressUseCode_Value_descriptor() {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_enum_descriptors[5];
}
bool AddressUseCode_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AddressUseCode_Value AddressUseCode::INVALID_UNINITIALIZED;
const AddressUseCode_Value AddressUseCode::HOME;
const AddressUseCode_Value AddressUseCode::WORK;
const AddressUseCode_Value AddressUseCode::TEMP;
const AddressUseCode_Value AddressUseCode::OLD;
const AddressUseCode_Value AddressUseCode::Value_MIN;
const AddressUseCode_Value AddressUseCode::Value_MAX;
const int AddressUseCode::Value_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ContactPointSystemCode_Value_descriptor() {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_enum_descriptors[6];
}
bool ContactPointSystemCode_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ContactPointSystemCode_Value ContactPointSystemCode::INVALID_UNINITIALIZED;
const ContactPointSystemCode_Value ContactPointSystemCode::PHONE;
const ContactPointSystemCode_Value ContactPointSystemCode::FAX;
const ContactPointSystemCode_Value ContactPointSystemCode::EMAIL;
const ContactPointSystemCode_Value ContactPointSystemCode::PAGER;
const ContactPointSystemCode_Value ContactPointSystemCode::URL;
const ContactPointSystemCode_Value ContactPointSystemCode::SMS;
const ContactPointSystemCode_Value ContactPointSystemCode::OTHER;
const ContactPointSystemCode_Value ContactPointSystemCode::Value_MIN;
const ContactPointSystemCode_Value ContactPointSystemCode::Value_MAX;
const int ContactPointSystemCode::Value_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ContactPointUseCode_Value_descriptor() {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_enum_descriptors[7];
}
bool ContactPointUseCode_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ContactPointUseCode_Value ContactPointUseCode::INVALID_UNINITIALIZED;
const ContactPointUseCode_Value ContactPointUseCode::HOME;
const ContactPointUseCode_Value ContactPointUseCode::WORK;
const ContactPointUseCode_Value ContactPointUseCode::TEMP;
const ContactPointUseCode_Value ContactPointUseCode::OLD;
const ContactPointUseCode_Value ContactPointUseCode::MOBILE;
const ContactPointUseCode_Value ContactPointUseCode::Value_MIN;
const ContactPointUseCode_Value ContactPointUseCode::Value_MAX;
const int ContactPointUseCode::Value_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DaysOfWeekCode_Value_descriptor() {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_enum_descriptors[8];
}
bool DaysOfWeekCode_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DaysOfWeekCode_Value DaysOfWeekCode::INVALID_UNINITIALIZED;
const DaysOfWeekCode_Value DaysOfWeekCode::MON;
const DaysOfWeekCode_Value DaysOfWeekCode::TUE;
const DaysOfWeekCode_Value DaysOfWeekCode::WED;
const DaysOfWeekCode_Value DaysOfWeekCode::THU;
const DaysOfWeekCode_Value DaysOfWeekCode::FRI;
const DaysOfWeekCode_Value DaysOfWeekCode::SAT;
const DaysOfWeekCode_Value DaysOfWeekCode::SUN;
const DaysOfWeekCode_Value DaysOfWeekCode::Value_MIN;
const DaysOfWeekCode_Value DaysOfWeekCode::Value_MAX;
const int DaysOfWeekCode::Value_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EventTimingCode_Value_descriptor() {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_enum_descriptors[9];
}
bool EventTimingCode_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EventTimingCode_Value EventTimingCode::INVALID_UNINITIALIZED;
const EventTimingCode_Value EventTimingCode::MORN;
const EventTimingCode_Value EventTimingCode::AFT;
const EventTimingCode_Value EventTimingCode::EVE;
const EventTimingCode_Value EventTimingCode::NIGHT;
const EventTimingCode_Value EventTimingCode::PHS;
const EventTimingCode_Value EventTimingCode::HS;
const EventTimingCode_Value EventTimingCode::WAKE;
const EventTimingCode_Value EventTimingCode::C;
const EventTimingCode_Value EventTimingCode::CM;
const EventTimingCode_Value EventTimingCode::CD;
const EventTimingCode_Value EventTimingCode::CV;
const EventTimingCode_Value EventTimingCode::AC;
const EventTimingCode_Value EventTimingCode::ACM;
const EventTimingCode_Value EventTimingCode::ACD;
const EventTimingCode_Value EventTimingCode::ACV;
const EventTimingCode_Value EventTimingCode::PC;
const EventTimingCode_Value EventTimingCode::PCM;
const EventTimingCode_Value EventTimingCode::PCD;
const EventTimingCode_Value EventTimingCode::PCV;
const EventTimingCode_Value EventTimingCode::Value_MIN;
const EventTimingCode_Value EventTimingCode::Value_MAX;
const int EventTimingCode::Value_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* IdentifierUseCode_Value_descriptor() {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_enum_descriptors[10];
}
bool IdentifierUseCode_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const IdentifierUseCode_Value IdentifierUseCode::INVALID_UNINITIALIZED;
const IdentifierUseCode_Value IdentifierUseCode::USUAL;
const IdentifierUseCode_Value IdentifierUseCode::OFFICIAL;
const IdentifierUseCode_Value IdentifierUseCode::TEMP;
const IdentifierUseCode_Value IdentifierUseCode::SECONDARY;
const IdentifierUseCode_Value IdentifierUseCode::Value_MIN;
const IdentifierUseCode_Value IdentifierUseCode::Value_MAX;
const int IdentifierUseCode::Value_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* NameUseCode_Value_descriptor() {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_enum_descriptors[11];
}
bool NameUseCode_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NameUseCode_Value NameUseCode::INVALID_UNINITIALIZED;
const NameUseCode_Value NameUseCode::USUAL;
const NameUseCode_Value NameUseCode::OFFICIAL;
const NameUseCode_Value NameUseCode::TEMP;
const NameUseCode_Value NameUseCode::NICKNAME;
const NameUseCode_Value NameUseCode::ANONYMOUS;
const NameUseCode_Value NameUseCode::OLD;
const NameUseCode_Value NameUseCode::MAIDEN;
const NameUseCode_Value NameUseCode::Value_MIN;
const NameUseCode_Value NameUseCode::Value_MAX;
const int NameUseCode::Value_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuantityComparatorCode_Value_descriptor() {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_enum_descriptors[12];
}
bool QuantityComparatorCode_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuantityComparatorCode_Value QuantityComparatorCode::INVALID_UNINITIALIZED;
const QuantityComparatorCode_Value QuantityComparatorCode::LT;
const QuantityComparatorCode_Value QuantityComparatorCode::LE;
const QuantityComparatorCode_Value QuantityComparatorCode::GE;
const QuantityComparatorCode_Value QuantityComparatorCode::GT;
const QuantityComparatorCode_Value QuantityComparatorCode::Value_MIN;
const QuantityComparatorCode_Value QuantityComparatorCode::Value_MAX;
const int QuantityComparatorCode::Value_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UnitsOfTimeCode_Value_descriptor() {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_enum_descriptors[13];
}
bool UnitsOfTimeCode_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UnitsOfTimeCode_Value UnitsOfTimeCode::INVALID_UNINITIALIZED;
const UnitsOfTimeCode_Value UnitsOfTimeCode::S;
const UnitsOfTimeCode_Value UnitsOfTimeCode::MIN;
const UnitsOfTimeCode_Value UnitsOfTimeCode::H;
const UnitsOfTimeCode_Value UnitsOfTimeCode::D;
const UnitsOfTimeCode_Value UnitsOfTimeCode::WK;
const UnitsOfTimeCode_Value UnitsOfTimeCode::MO;
const UnitsOfTimeCode_Value UnitsOfTimeCode::A;
const UnitsOfTimeCode_Value UnitsOfTimeCode::Value_MIN;
const UnitsOfTimeCode_Value UnitsOfTimeCode::Value_MAX;
const int UnitsOfTimeCode::Value_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Base64Binary::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Base64Binary_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Base64Binary::kValueFieldNumber;
const int Base64Binary::kIdFieldNumber;
const int Base64Binary::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Base64Binary::Base64Binary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Base64Binary)
}
Base64Binary::Base64Binary(const Base64Binary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Base64Binary)
}

void Base64Binary::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = NULL;
}

Base64Binary::~Base64Binary() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Base64Binary)
  SharedDtor();
}

void Base64Binary::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void Base64Binary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Base64Binary::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Base64Binary& Base64Binary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Base64Binary::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Base64Binary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool Base64Binary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Base64Binary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Base64Binary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Base64Binary)
  return false;
#undef DO_
}

void Base64Binary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Base64Binary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Base64Binary)
}

::google::protobuf::uint8* Base64Binary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Base64Binary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Base64Binary)
  return target;
}

size_t Base64Binary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Base64Binary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Base64Binary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Base64Binary)
  GOOGLE_DCHECK_NE(&from, this);
  const Base64Binary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Base64Binary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Base64Binary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Base64Binary)
    MergeFrom(*source);
  }
}

void Base64Binary::MergeFrom(const Base64Binary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Base64Binary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
}

void Base64Binary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Base64Binary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Base64Binary::CopyFrom(const Base64Binary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Base64Binary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Base64Binary::IsInitialized() const {
  return true;
}

void Base64Binary::Swap(Base64Binary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Base64Binary::InternalSwap(Base64Binary* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Base64Binary::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Boolean::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Boolean_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Boolean::kValueFieldNumber;
const int Boolean::kIdFieldNumber;
const int Boolean::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Boolean::Boolean()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Boolean)
}
Boolean::Boolean(const Boolean& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Boolean)
}

void Boolean::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

Boolean::~Boolean() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Boolean)
  SharedDtor();
}

void Boolean::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void Boolean::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Boolean::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Boolean& Boolean::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Boolean::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Boolean)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  value_ = false;
  _internal_metadata_.Clear();
}

bool Boolean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Boolean)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Boolean)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Boolean)
  return false;
#undef DO_
}

void Boolean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Boolean)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Boolean)
}

::google::protobuf::uint8* Boolean::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Boolean)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Boolean)
  return target;
}

size_t Boolean::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Boolean)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // bool value = 1;
  if (this->value() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Boolean::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Boolean)
  GOOGLE_DCHECK_NE(&from, this);
  const Boolean* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Boolean>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Boolean)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Boolean)
    MergeFrom(*source);
  }
}

void Boolean::MergeFrom(const Boolean& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Boolean)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Boolean::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Boolean)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Boolean::CopyFrom(const Boolean& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Boolean)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Boolean::IsInitialized() const {
  return true;
}

void Boolean::Swap(Boolean* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Boolean::InternalSwap(Boolean* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Boolean::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Code::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Code_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Code::kValueFieldNumber;
const int Code::kIdFieldNumber;
const int Code::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Code::Code()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Code)
}
Code::Code(const Code& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Code)
}

void Code::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = NULL;
}

Code::~Code() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Code)
  SharedDtor();
}

void Code::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void Code::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Code::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Code& Code::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Code::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Code)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool Code::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Code)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.stu3.proto.Code.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Code)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Code)
  return false;
#undef DO_
}

void Code::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Code)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Code.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Code)
}

::google::protobuf::uint8* Code::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Code)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Code.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Code)
  return target;
}

size_t Code::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Code)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Code::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Code)
  GOOGLE_DCHECK_NE(&from, this);
  const Code* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Code>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Code)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Code)
    MergeFrom(*source);
  }
}

void Code::MergeFrom(const Code& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Code)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
}

void Code::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Code::CopyFrom(const Code& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Code::IsInitialized() const {
  return true;
}

void Code::Swap(Code* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Code::InternalSwap(Code* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Code::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Date::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Date_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Date::kValueUsFieldNumber;
const int Date::kTimezoneFieldNumber;
const int Date::kPrecisionFieldNumber;
const int Date::kIdFieldNumber;
const int Date::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Date::Date()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Date)
}
Date::Date(const Date& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timezone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.timezone().size() > 0) {
    timezone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timezone_);
  }
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  ::memcpy(&value_us_, &from.value_us_,
    static_cast<size_t>(reinterpret_cast<char*>(&precision_) -
    reinterpret_cast<char*>(&value_us_)) + sizeof(precision_));
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Date)
}

void Date::SharedCtor() {
  timezone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&id_)) + sizeof(precision_));
}

Date::~Date() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Date)
  SharedDtor();
}

void Date::SharedDtor() {
  timezone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void Date::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Date::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Date& Date::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Date::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Date)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  timezone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  ::memset(&value_us_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&value_us_)) + sizeof(precision_));
  _internal_metadata_.Clear();
}

bool Date::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Date)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 value_us = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string timezone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timezone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->timezone().data(), static_cast<int>(this->timezone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.stu3.proto.Date.timezone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Date.Precision precision = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_precision(static_cast< ::google::fhir::stu3::proto::Date_Precision >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Date)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Date)
  return false;
#undef DO_
}

void Date::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Date)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value_us = 1;
  if (this->value_us() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->value_us(), output);
  }

  // string timezone = 2;
  if (this->timezone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timezone().data(), static_cast<int>(this->timezone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Date.timezone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->timezone(), output);
  }

  // .google.fhir.stu3.proto.Date.Precision precision = 3;
  if (this->precision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->precision(), output);
  }

  // .google.fhir.stu3.proto.String id = 4;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Date)
}

::google::protobuf::uint8* Date::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Date)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value_us = 1;
  if (this->value_us() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->value_us(), target);
  }

  // string timezone = 2;
  if (this->timezone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timezone().data(), static_cast<int>(this->timezone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Date.timezone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->timezone(), target);
  }

  // .google.fhir.stu3.proto.Date.Precision precision = 3;
  if (this->precision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->precision(), target);
  }

  // .google.fhir.stu3.proto.String id = 4;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Date)
  return target;
}

size_t Date::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Date)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string timezone = 2;
  if (this->timezone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timezone());
  }

  // .google.fhir.stu3.proto.String id = 4;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // int64 value_us = 1;
  if (this->value_us() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value_us());
  }

  // .google.fhir.stu3.proto.Date.Precision precision = 3;
  if (this->precision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->precision());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Date::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Date)
  GOOGLE_DCHECK_NE(&from, this);
  const Date* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Date>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Date)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Date)
    MergeFrom(*source);
  }
}

void Date::MergeFrom(const Date& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Date)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.timezone().size() > 0) {

    timezone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timezone_);
  }
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.value_us() != 0) {
    set_value_us(from.value_us());
  }
  if (from.precision() != 0) {
    set_precision(from.precision());
  }
}

void Date::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Date)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Date::CopyFrom(const Date& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Date)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Date::IsInitialized() const {
  return true;
}

void Date::Swap(Date* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Date::InternalSwap(Date* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  timezone_.Swap(&other->timezone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(value_us_, other->value_us_);
  swap(precision_, other->precision_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Date::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DateTime::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_DateTime_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DateTime::kValueUsFieldNumber;
const int DateTime::kTimezoneFieldNumber;
const int DateTime::kPrecisionFieldNumber;
const int DateTime::kIdFieldNumber;
const int DateTime::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DateTime::DateTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.DateTime)
}
DateTime::DateTime(const DateTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timezone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.timezone().size() > 0) {
    timezone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timezone_);
  }
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  ::memcpy(&value_us_, &from.value_us_,
    static_cast<size_t>(reinterpret_cast<char*>(&precision_) -
    reinterpret_cast<char*>(&value_us_)) + sizeof(precision_));
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.DateTime)
}

void DateTime::SharedCtor() {
  timezone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&id_)) + sizeof(precision_));
}

DateTime::~DateTime() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.DateTime)
  SharedDtor();
}

void DateTime::SharedDtor() {
  timezone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void DateTime::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DateTime::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DateTime& DateTime::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void DateTime::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.DateTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  timezone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  ::memset(&value_us_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&value_us_)) + sizeof(precision_));
  _internal_metadata_.Clear();
}

bool DateTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.DateTime)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 value_us = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string timezone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timezone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->timezone().data(), static_cast<int>(this->timezone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.stu3.proto.DateTime.timezone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime.Precision precision = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_precision(static_cast< ::google::fhir::stu3::proto::DateTime_Precision >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.DateTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.DateTime)
  return false;
#undef DO_
}

void DateTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.DateTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value_us = 1;
  if (this->value_us() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->value_us(), output);
  }

  // string timezone = 2;
  if (this->timezone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timezone().data(), static_cast<int>(this->timezone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.DateTime.timezone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->timezone(), output);
  }

  // .google.fhir.stu3.proto.DateTime.Precision precision = 3;
  if (this->precision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->precision(), output);
  }

  // .google.fhir.stu3.proto.String id = 4;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.DateTime)
}

::google::protobuf::uint8* DateTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.DateTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value_us = 1;
  if (this->value_us() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->value_us(), target);
  }

  // string timezone = 2;
  if (this->timezone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timezone().data(), static_cast<int>(this->timezone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.DateTime.timezone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->timezone(), target);
  }

  // .google.fhir.stu3.proto.DateTime.Precision precision = 3;
  if (this->precision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->precision(), target);
  }

  // .google.fhir.stu3.proto.String id = 4;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.DateTime)
  return target;
}

size_t DateTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.DateTime)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string timezone = 2;
  if (this->timezone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timezone());
  }

  // .google.fhir.stu3.proto.String id = 4;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // int64 value_us = 1;
  if (this->value_us() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value_us());
  }

  // .google.fhir.stu3.proto.DateTime.Precision precision = 3;
  if (this->precision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->precision());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DateTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.DateTime)
  GOOGLE_DCHECK_NE(&from, this);
  const DateTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DateTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.DateTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.DateTime)
    MergeFrom(*source);
  }
}

void DateTime::MergeFrom(const DateTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.DateTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.timezone().size() > 0) {

    timezone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timezone_);
  }
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.value_us() != 0) {
    set_value_us(from.value_us());
  }
  if (from.precision() != 0) {
    set_precision(from.precision());
  }
}

void DateTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.DateTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DateTime::CopyFrom(const DateTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.DateTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DateTime::IsInitialized() const {
  return true;
}

void DateTime::Swap(DateTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DateTime::InternalSwap(DateTime* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  timezone_.Swap(&other->timezone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(value_us_, other->value_us_);
  swap(precision_, other->precision_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DateTime::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Decimal::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Decimal_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Decimal::kValueFieldNumber;
const int Decimal::kIdFieldNumber;
const int Decimal::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Decimal::Decimal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Decimal)
}
Decimal::Decimal(const Decimal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Decimal)
}

void Decimal::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = NULL;
}

Decimal::~Decimal() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Decimal)
  SharedDtor();
}

void Decimal::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void Decimal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Decimal::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Decimal& Decimal::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Decimal::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Decimal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool Decimal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Decimal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.stu3.proto.Decimal.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Decimal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Decimal)
  return false;
#undef DO_
}

void Decimal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Decimal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Decimal.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Decimal)
}

::google::protobuf::uint8* Decimal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Decimal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Decimal.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Decimal)
  return target;
}

size_t Decimal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Decimal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Decimal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Decimal)
  GOOGLE_DCHECK_NE(&from, this);
  const Decimal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Decimal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Decimal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Decimal)
    MergeFrom(*source);
  }
}

void Decimal::MergeFrom(const Decimal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Decimal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
}

void Decimal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Decimal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Decimal::CopyFrom(const Decimal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Decimal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Decimal::IsInitialized() const {
  return true;
}

void Decimal::Swap(Decimal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Decimal::InternalSwap(Decimal* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Decimal::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Id::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Id_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Id::kValueFieldNumber;
const int Id::kIdFieldNumber;
const int Id::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Id::Id()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Id)
}
Id::Id(const Id& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Id)
}

void Id::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = NULL;
}

Id::~Id() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Id)
  SharedDtor();
}

void Id::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void Id::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Id::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Id& Id::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Id::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Id)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool Id::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Id)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.stu3.proto.Id.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Id)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Id)
  return false;
#undef DO_
}

void Id::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Id)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Id.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Id)
}

::google::protobuf::uint8* Id::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Id)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Id.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Id)
  return target;
}

size_t Id::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Id)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Id::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Id)
  GOOGLE_DCHECK_NE(&from, this);
  const Id* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Id>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Id)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Id)
    MergeFrom(*source);
  }
}

void Id::MergeFrom(const Id& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Id)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
}

void Id::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Id)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Id::CopyFrom(const Id& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Id)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Id::IsInitialized() const {
  return true;
}

void Id::Swap(Id* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Id::InternalSwap(Id* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Id::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Instant::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Instant_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Instant::kValueUsFieldNumber;
const int Instant::kTimezoneFieldNumber;
const int Instant::kPrecisionFieldNumber;
const int Instant::kIdFieldNumber;
const int Instant::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Instant::Instant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Instant)
}
Instant::Instant(const Instant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timezone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.timezone().size() > 0) {
    timezone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timezone_);
  }
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  ::memcpy(&value_us_, &from.value_us_,
    static_cast<size_t>(reinterpret_cast<char*>(&precision_) -
    reinterpret_cast<char*>(&value_us_)) + sizeof(precision_));
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Instant)
}

void Instant::SharedCtor() {
  timezone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&id_)) + sizeof(precision_));
}

Instant::~Instant() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Instant)
  SharedDtor();
}

void Instant::SharedDtor() {
  timezone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void Instant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Instant::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Instant& Instant::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Instant::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Instant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  timezone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  ::memset(&value_us_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&value_us_)) + sizeof(precision_));
  _internal_metadata_.Clear();
}

bool Instant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Instant)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 value_us = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string timezone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timezone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->timezone().data(), static_cast<int>(this->timezone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.stu3.proto.Instant.timezone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Instant.Precision precision = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_precision(static_cast< ::google::fhir::stu3::proto::Instant_Precision >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Instant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Instant)
  return false;
#undef DO_
}

void Instant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Instant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value_us = 1;
  if (this->value_us() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->value_us(), output);
  }

  // string timezone = 2;
  if (this->timezone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timezone().data(), static_cast<int>(this->timezone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Instant.timezone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->timezone(), output);
  }

  // .google.fhir.stu3.proto.Instant.Precision precision = 3;
  if (this->precision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->precision(), output);
  }

  // .google.fhir.stu3.proto.String id = 4;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Instant)
}

::google::protobuf::uint8* Instant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Instant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value_us = 1;
  if (this->value_us() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->value_us(), target);
  }

  // string timezone = 2;
  if (this->timezone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timezone().data(), static_cast<int>(this->timezone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Instant.timezone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->timezone(), target);
  }

  // .google.fhir.stu3.proto.Instant.Precision precision = 3;
  if (this->precision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->precision(), target);
  }

  // .google.fhir.stu3.proto.String id = 4;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Instant)
  return target;
}

size_t Instant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Instant)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string timezone = 2;
  if (this->timezone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timezone());
  }

  // .google.fhir.stu3.proto.String id = 4;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // int64 value_us = 1;
  if (this->value_us() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value_us());
  }

  // .google.fhir.stu3.proto.Instant.Precision precision = 3;
  if (this->precision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->precision());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Instant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Instant)
  GOOGLE_DCHECK_NE(&from, this);
  const Instant* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Instant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Instant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Instant)
    MergeFrom(*source);
  }
}

void Instant::MergeFrom(const Instant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Instant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.timezone().size() > 0) {

    timezone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timezone_);
  }
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.value_us() != 0) {
    set_value_us(from.value_us());
  }
  if (from.precision() != 0) {
    set_precision(from.precision());
  }
}

void Instant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Instant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Instant::CopyFrom(const Instant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Instant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Instant::IsInitialized() const {
  return true;
}

void Instant::Swap(Instant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Instant::InternalSwap(Instant* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  timezone_.Swap(&other->timezone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(value_us_, other->value_us_);
  swap(precision_, other->precision_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Instant::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Integer::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Integer_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Integer::kValueFieldNumber;
const int Integer::kIdFieldNumber;
const int Integer::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Integer::Integer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Integer)
}
Integer::Integer(const Integer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Integer)
}

void Integer::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

Integer::~Integer() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Integer)
  SharedDtor();
}

void Integer::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void Integer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Integer::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Integer& Integer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Integer::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Integer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  value_ = 0;
  _internal_metadata_.Clear();
}

bool Integer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Integer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Integer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Integer)
  return false;
#undef DO_
}

void Integer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Integer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Integer)
}

::google::protobuf::uint8* Integer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Integer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Integer)
  return target;
}

size_t Integer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Integer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // sint32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Integer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Integer)
  GOOGLE_DCHECK_NE(&from, this);
  const Integer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Integer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Integer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Integer)
    MergeFrom(*source);
  }
}

void Integer::MergeFrom(const Integer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Integer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Integer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Integer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Integer::CopyFrom(const Integer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Integer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Integer::IsInitialized() const {
  return true;
}

void Integer::Swap(Integer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Integer::InternalSwap(Integer* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Integer::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Markdown::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Markdown_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Markdown::kValueFieldNumber;
const int Markdown::kIdFieldNumber;
const int Markdown::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Markdown::Markdown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Markdown)
}
Markdown::Markdown(const Markdown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Markdown)
}

void Markdown::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = NULL;
}

Markdown::~Markdown() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Markdown)
  SharedDtor();
}

void Markdown::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void Markdown::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Markdown::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Markdown& Markdown::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Markdown::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Markdown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool Markdown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Markdown)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.stu3.proto.Markdown.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Markdown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Markdown)
  return false;
#undef DO_
}

void Markdown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Markdown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Markdown.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Markdown)
}

::google::protobuf::uint8* Markdown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Markdown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Markdown.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Markdown)
  return target;
}

size_t Markdown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Markdown)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Markdown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Markdown)
  GOOGLE_DCHECK_NE(&from, this);
  const Markdown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Markdown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Markdown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Markdown)
    MergeFrom(*source);
  }
}

void Markdown::MergeFrom(const Markdown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Markdown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
}

void Markdown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Markdown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Markdown::CopyFrom(const Markdown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Markdown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Markdown::IsInitialized() const {
  return true;
}

void Markdown::Swap(Markdown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Markdown::InternalSwap(Markdown* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Markdown::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Oid::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Oid_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Oid::kValueFieldNumber;
const int Oid::kIdFieldNumber;
const int Oid::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Oid::Oid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Oid)
}
Oid::Oid(const Oid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Oid)
}

void Oid::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = NULL;
}

Oid::~Oid() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Oid)
  SharedDtor();
}

void Oid::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void Oid::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Oid::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Oid& Oid::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Oid::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Oid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool Oid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Oid)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.stu3.proto.Oid.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Oid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Oid)
  return false;
#undef DO_
}

void Oid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Oid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Oid.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Oid)
}

::google::protobuf::uint8* Oid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Oid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Oid.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Oid)
  return target;
}

size_t Oid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Oid)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Oid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Oid)
  GOOGLE_DCHECK_NE(&from, this);
  const Oid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Oid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Oid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Oid)
    MergeFrom(*source);
  }
}

void Oid::MergeFrom(const Oid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Oid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
}

void Oid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Oid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Oid::CopyFrom(const Oid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Oid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Oid::IsInitialized() const {
  return true;
}

void Oid::Swap(Oid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Oid::InternalSwap(Oid* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Oid::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PositiveInt::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_PositiveInt_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PositiveInt::kValueFieldNumber;
const int PositiveInt::kIdFieldNumber;
const int PositiveInt::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PositiveInt::PositiveInt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.PositiveInt)
}
PositiveInt::PositiveInt(const PositiveInt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.PositiveInt)
}

void PositiveInt::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

PositiveInt::~PositiveInt() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.PositiveInt)
  SharedDtor();
}

void PositiveInt::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void PositiveInt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PositiveInt::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PositiveInt& PositiveInt::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void PositiveInt::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.PositiveInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  value_ = 0u;
  _internal_metadata_.Clear();
}

bool PositiveInt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.PositiveInt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.PositiveInt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.PositiveInt)
  return false;
#undef DO_
}

void PositiveInt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.PositiveInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.PositiveInt)
}

::google::protobuf::uint8* PositiveInt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.PositiveInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.PositiveInt)
  return target;
}

size_t PositiveInt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.PositiveInt)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // uint32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PositiveInt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.PositiveInt)
  GOOGLE_DCHECK_NE(&from, this);
  const PositiveInt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PositiveInt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.PositiveInt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.PositiveInt)
    MergeFrom(*source);
  }
}

void PositiveInt::MergeFrom(const PositiveInt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.PositiveInt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void PositiveInt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.PositiveInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PositiveInt::CopyFrom(const PositiveInt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.PositiveInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositiveInt::IsInitialized() const {
  return true;
}

void PositiveInt::Swap(PositiveInt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PositiveInt::InternalSwap(PositiveInt* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PositiveInt::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void String::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_String_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int String::kValueFieldNumber;
const int String::kIdFieldNumber;
const int String::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

String::String()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.String)
}
String::String(const String& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.String)
}

void String::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = NULL;
}

String::~String() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.String)
  SharedDtor();
}

void String::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void String::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* String::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const String& String::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void String::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.String)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.stu3.proto.String.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.String)
  return false;
#undef DO_
}

void String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.String.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.String)
}

::google::protobuf::uint8* String::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.String.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.String)
  return target;
}

size_t String::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.String)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void String::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.String)
  GOOGLE_DCHECK_NE(&from, this);
  const String* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const String>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.String)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.String)
    MergeFrom(*source);
  }
}

void String::MergeFrom(const String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.String)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
}

void String::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void String::CopyFrom(const String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool String::IsInitialized() const {
  return true;
}

void String::Swap(String* other) {
  if (other == this) return;
  InternalSwap(other);
}
void String::InternalSwap(String* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata String::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Time::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Time_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Time::kValueUsFieldNumber;
const int Time::kPrecisionFieldNumber;
const int Time::kIdFieldNumber;
const int Time::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Time::Time()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Time)
}
Time::Time(const Time& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  ::memcpy(&value_us_, &from.value_us_,
    static_cast<size_t>(reinterpret_cast<char*>(&precision_) -
    reinterpret_cast<char*>(&value_us_)) + sizeof(precision_));
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Time)
}

void Time::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&id_)) + sizeof(precision_));
}

Time::~Time() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Time)
  SharedDtor();
}

void Time::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void Time::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Time::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Time& Time::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Time::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  ::memset(&value_us_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&value_us_)) + sizeof(precision_));
  _internal_metadata_.Clear();
}

bool Time::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Time)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 value_us = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Time.Precision precision = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_precision(static_cast< ::google::fhir::stu3::proto::Time_Precision >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Time)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Time)
  return false;
#undef DO_
}

void Time::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value_us = 1;
  if (this->value_us() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->value_us(), output);
  }

  // .google.fhir.stu3.proto.Time.Precision precision = 2;
  if (this->precision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->precision(), output);
  }

  // .google.fhir.stu3.proto.String id = 3;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Time)
}

::google::protobuf::uint8* Time::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value_us = 1;
  if (this->value_us() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->value_us(), target);
  }

  // .google.fhir.stu3.proto.Time.Precision precision = 2;
  if (this->precision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->precision(), target);
  }

  // .google.fhir.stu3.proto.String id = 3;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Time)
  return target;
}

size_t Time::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Time)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 3;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // int64 value_us = 1;
  if (this->value_us() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value_us());
  }

  // .google.fhir.stu3.proto.Time.Precision precision = 2;
  if (this->precision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->precision());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Time::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Time)
  GOOGLE_DCHECK_NE(&from, this);
  const Time* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Time>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Time)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Time)
    MergeFrom(*source);
  }
}

void Time::MergeFrom(const Time& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Time)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.value_us() != 0) {
    set_value_us(from.value_us());
  }
  if (from.precision() != 0) {
    set_precision(from.precision());
  }
}

void Time::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Time)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Time::CopyFrom(const Time& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Time)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Time::IsInitialized() const {
  return true;
}

void Time::Swap(Time* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Time::InternalSwap(Time* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_us_, other->value_us_);
  swap(precision_, other->precision_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Time::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnsignedInt::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_UnsignedInt_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsignedInt::kValueFieldNumber;
const int UnsignedInt::kIdFieldNumber;
const int UnsignedInt::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsignedInt::UnsignedInt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.UnsignedInt)
}
UnsignedInt::UnsignedInt(const UnsignedInt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.UnsignedInt)
}

void UnsignedInt::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

UnsignedInt::~UnsignedInt() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.UnsignedInt)
  SharedDtor();
}

void UnsignedInt::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void UnsignedInt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnsignedInt::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnsignedInt& UnsignedInt::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void UnsignedInt::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.UnsignedInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  value_ = 0u;
  _internal_metadata_.Clear();
}

bool UnsignedInt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.UnsignedInt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.UnsignedInt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.UnsignedInt)
  return false;
#undef DO_
}

void UnsignedInt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.UnsignedInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.UnsignedInt)
}

::google::protobuf::uint8* UnsignedInt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.UnsignedInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.UnsignedInt)
  return target;
}

size_t UnsignedInt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.UnsignedInt)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // uint32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnsignedInt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.UnsignedInt)
  GOOGLE_DCHECK_NE(&from, this);
  const UnsignedInt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsignedInt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.UnsignedInt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.UnsignedInt)
    MergeFrom(*source);
  }
}

void UnsignedInt::MergeFrom(const UnsignedInt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.UnsignedInt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void UnsignedInt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.UnsignedInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsignedInt::CopyFrom(const UnsignedInt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.UnsignedInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsignedInt::IsInitialized() const {
  return true;
}

void UnsignedInt::Swap(UnsignedInt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsignedInt::InternalSwap(UnsignedInt* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnsignedInt::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Uri::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Uri_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uri::kValueFieldNumber;
const int Uri::kIdFieldNumber;
const int Uri::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uri::Uri()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Uri)
}
Uri::Uri(const Uri& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Uri)
}

void Uri::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = NULL;
}

Uri::~Uri() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Uri)
  SharedDtor();
}

void Uri::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void Uri::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Uri::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Uri& Uri::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Uri::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Uri)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool Uri::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Uri)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.stu3.proto.Uri.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Uri)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Uri)
  return false;
#undef DO_
}

void Uri::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Uri)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Uri.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Uri)
}

::google::protobuf::uint8* Uri::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Uri)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Uri.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Uri)
  return target;
}

size_t Uri::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Uri)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Uri::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Uri)
  GOOGLE_DCHECK_NE(&from, this);
  const Uri* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Uri>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Uri)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Uri)
    MergeFrom(*source);
  }
}

void Uri::MergeFrom(const Uri& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Uri)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
}

void Uri::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Uri)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uri::CopyFrom(const Uri& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Uri)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uri::IsInitialized() const {
  return true;
}

void Uri::Swap(Uri* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Uri::InternalSwap(Uri* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Uri::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Uuid::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Uuid_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uuid::kValueFieldNumber;
const int Uuid::kIdFieldNumber;
const int Uuid::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uuid::Uuid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Uuid.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Uuid)
}
Uuid::Uuid(const Uuid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Uuid)
}

void Uuid::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = NULL;
}

Uuid::~Uuid() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Uuid)
  SharedDtor();
}

void Uuid::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void Uuid::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Uuid::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Uuid& Uuid::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Uuid.base);
  return *internal_default_instance();
}


void Uuid::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Uuid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool Uuid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Uuid)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.stu3.proto.Uuid.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Uuid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Uuid)
  return false;
#undef DO_
}

void Uuid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Uuid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Uuid.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Uuid)
}

::google::protobuf::uint8* Uuid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Uuid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Uuid.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Uuid)
  return target;
}

size_t Uuid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Uuid)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Uuid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Uuid)
  GOOGLE_DCHECK_NE(&from, this);
  const Uuid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Uuid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Uuid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Uuid)
    MergeFrom(*source);
  }
}

void Uuid::MergeFrom(const Uuid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Uuid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
}

void Uuid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Uuid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uuid::CopyFrom(const Uuid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Uuid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uuid::IsInitialized() const {
  return true;
}

void Uuid::Swap(Uuid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Uuid::InternalSwap(Uuid* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Uuid::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Xhtml::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Xhtml_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Xhtml::kValueFieldNumber;
const int Xhtml::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Xhtml::Xhtml()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Xhtml.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Xhtml)
}
Xhtml::Xhtml(const Xhtml& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Xhtml)
}

void Xhtml::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = NULL;
}

Xhtml::~Xhtml() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Xhtml)
  SharedDtor();
}

void Xhtml::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void Xhtml::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Xhtml::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Xhtml& Xhtml::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Xhtml.base);
  return *internal_default_instance();
}


void Xhtml::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Xhtml)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool Xhtml::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Xhtml)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.stu3.proto.Xhtml.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Xhtml)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Xhtml)
  return false;
#undef DO_
}

void Xhtml::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Xhtml)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Xhtml.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Xhtml)
}

::google::protobuf::uint8* Xhtml::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Xhtml)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.Xhtml.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Xhtml)
  return target;
}

size_t Xhtml::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Xhtml)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string value = 1 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Xhtml::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Xhtml)
  GOOGLE_DCHECK_NE(&from, this);
  const Xhtml* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Xhtml>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Xhtml)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Xhtml)
    MergeFrom(*source);
  }
}

void Xhtml::MergeFrom(const Xhtml& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Xhtml)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
}

void Xhtml::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Xhtml)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Xhtml::CopyFrom(const Xhtml& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Xhtml)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Xhtml::IsInitialized() const {
  return true;
}

void Xhtml::Swap(Xhtml* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Xhtml::InternalSwap(Xhtml* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Xhtml::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Address::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Address_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Address_default_instance_._instance.get_mutable()->use_ = const_cast< ::google::fhir::stu3::proto::AddressUseCode*>(
      ::google::fhir::stu3::proto::AddressUseCode::internal_default_instance());
  ::google::fhir::stu3::proto::_Address_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::fhir::stu3::proto::AddressTypeCode*>(
      ::google::fhir::stu3::proto::AddressTypeCode::internal_default_instance());
  ::google::fhir::stu3::proto::_Address_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Address_default_instance_._instance.get_mutable()->city_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Address_default_instance_._instance.get_mutable()->district_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Address_default_instance_._instance.get_mutable()->state_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Address_default_instance_._instance.get_mutable()->postal_code_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Address_default_instance_._instance.get_mutable()->country_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Address_default_instance_._instance.get_mutable()->period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Address::kIdFieldNumber;
const int Address::kExtensionFieldNumber;
const int Address::kUseFieldNumber;
const int Address::kTypeFieldNumber;
const int Address::kTextFieldNumber;
const int Address::kLineFieldNumber;
const int Address::kCityFieldNumber;
const int Address::kDistrictFieldNumber;
const int Address::kStateFieldNumber;
const int Address::kPostalCodeFieldNumber;
const int Address::kCountryFieldNumber;
const int Address::kPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Address::Address()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Address)
}
Address::Address(const Address& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      line_(from.line_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_use()) {
    use_ = new ::google::fhir::stu3::proto::AddressUseCode(*from.use_);
  } else {
    use_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::fhir::stu3::proto::AddressTypeCode(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::String(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_city()) {
    city_ = new ::google::fhir::stu3::proto::String(*from.city_);
  } else {
    city_ = NULL;
  }
  if (from.has_district()) {
    district_ = new ::google::fhir::stu3::proto::String(*from.district_);
  } else {
    district_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::google::fhir::stu3::proto::String(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_postal_code()) {
    postal_code_ = new ::google::fhir::stu3::proto::String(*from.postal_code_);
  } else {
    postal_code_ = NULL;
  }
  if (from.has_country()) {
    country_ = new ::google::fhir::stu3::proto::String(*from.country_);
  } else {
    country_ = NULL;
  }
  if (from.has_period()) {
    period_ = new ::google::fhir::stu3::proto::Period(*from.period_);
  } else {
    period_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Address)
}

void Address::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&period_) -
      reinterpret_cast<char*>(&id_)) + sizeof(period_));
}

Address::~Address() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Address)
  SharedDtor();
}

void Address::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete use_;
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete city_;
  if (this != internal_default_instance()) delete district_;
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete postal_code_;
  if (this != internal_default_instance()) delete country_;
  if (this != internal_default_instance()) delete period_;
}

void Address::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Address::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Address& Address::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Address::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  line_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && use_ != NULL) {
    delete use_;
  }
  use_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && city_ != NULL) {
    delete city_;
  }
  city_ = NULL;
  if (GetArenaNoVirtual() == NULL && district_ != NULL) {
    delete district_;
  }
  district_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && postal_code_ != NULL) {
    delete postal_code_;
  }
  postal_code_ = NULL;
  if (GetArenaNoVirtual() == NULL && country_ != NULL) {
    delete country_;
  }
  country_ = NULL;
  if (GetArenaNoVirtual() == NULL && period_ != NULL) {
    delete period_;
  }
  period_ = NULL;
  _internal_metadata_.Clear();
}

bool Address::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Address)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.AddressUseCode use = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_use()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.AddressTypeCode type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String text = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.String line = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String city = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_city()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String district = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_district()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String state = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String postal_code = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_postal_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String country = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_country()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Address)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Address)
  return false;
#undef DO_
}

void Address::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.AddressUseCode use = 3;
  if (this->has_use()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_use(), output);
  }

  // .google.fhir.stu3.proto.AddressTypeCode type = 4;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_type(), output);
  }

  // .google.fhir.stu3.proto.String text = 5;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.String line = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->line_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->line(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String city = 7;
  if (this->has_city()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_city(), output);
  }

  // .google.fhir.stu3.proto.String district = 8;
  if (this->has_district()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_district(), output);
  }

  // .google.fhir.stu3.proto.String state = 9;
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_state(), output);
  }

  // .google.fhir.stu3.proto.String postal_code = 10;
  if (this->has_postal_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_postal_code(), output);
  }

  // .google.fhir.stu3.proto.String country = 11;
  if (this->has_country()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_country(), output);
  }

  // .google.fhir.stu3.proto.Period period = 12;
  if (this->has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_period(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Address)
}

::google::protobuf::uint8* Address::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.AddressUseCode use = 3;
  if (this->has_use()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_use(), deterministic, target);
  }

  // .google.fhir.stu3.proto.AddressTypeCode type = 4;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_type(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String text = 5;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.String line = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->line_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->line(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String city = 7;
  if (this->has_city()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_city(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String district = 8;
  if (this->has_district()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_district(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String state = 9;
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_state(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String postal_code = 10;
  if (this->has_postal_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_postal_code(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String country = 11;
  if (this->has_country()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_country(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 12;
  if (this->has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_period(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Address)
  return target;
}

size_t Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Address)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.String line = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->line_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->line(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.AddressUseCode use = 3;
  if (this->has_use()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *use_);
  }

  // .google.fhir.stu3.proto.AddressTypeCode type = 4;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .google.fhir.stu3.proto.String text = 5;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.String city = 7;
  if (this->has_city()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *city_);
  }

  // .google.fhir.stu3.proto.String district = 8;
  if (this->has_district()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *district_);
  }

  // .google.fhir.stu3.proto.String state = 9;
  if (this->has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *state_);
  }

  // .google.fhir.stu3.proto.String postal_code = 10;
  if (this->has_postal_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *postal_code_);
  }

  // .google.fhir.stu3.proto.String country = 11;
  if (this->has_country()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *country_);
  }

  // .google.fhir.stu3.proto.Period period = 12;
  if (this->has_period()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *period_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Address::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Address)
  GOOGLE_DCHECK_NE(&from, this);
  const Address* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Address>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Address)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Address)
    MergeFrom(*source);
  }
}

void Address::MergeFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Address)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  line_.MergeFrom(from.line_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_use()) {
    mutable_use()->::google::fhir::stu3::proto::AddressUseCode::MergeFrom(from.use());
  }
  if (from.has_type()) {
    mutable_type()->::google::fhir::stu3::proto::AddressTypeCode::MergeFrom(from.type());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::String::MergeFrom(from.text());
  }
  if (from.has_city()) {
    mutable_city()->::google::fhir::stu3::proto::String::MergeFrom(from.city());
  }
  if (from.has_district()) {
    mutable_district()->::google::fhir::stu3::proto::String::MergeFrom(from.district());
  }
  if (from.has_state()) {
    mutable_state()->::google::fhir::stu3::proto::String::MergeFrom(from.state());
  }
  if (from.has_postal_code()) {
    mutable_postal_code()->::google::fhir::stu3::proto::String::MergeFrom(from.postal_code());
  }
  if (from.has_country()) {
    mutable_country()->::google::fhir::stu3::proto::String::MergeFrom(from.country());
  }
  if (from.has_period()) {
    mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
  }
}

void Address::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Address::CopyFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Address::IsInitialized() const {
  return true;
}

void Address::Swap(Address* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Address::InternalSwap(Address* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&line_)->InternalSwap(CastToBase(&other->line_));
  swap(id_, other->id_);
  swap(use_, other->use_);
  swap(type_, other->type_);
  swap(text_, other->text_);
  swap(city_, other->city_);
  swap(district_, other->district_);
  swap(state_, other->state_);
  swap(postal_code_, other->postal_code_);
  swap(country_, other->country_);
  swap(period_, other->period_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Address::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Age::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Age_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Age_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_Age_default_instance_._instance.get_mutable()->comparator_ = const_cast< ::google::fhir::stu3::proto::QuantityComparatorCode*>(
      ::google::fhir::stu3::proto::QuantityComparatorCode::internal_default_instance());
  ::google::fhir::stu3::proto::_Age_default_instance_._instance.get_mutable()->unit_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Age_default_instance_._instance.get_mutable()->system_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_Age_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::Code*>(
      ::google::fhir::stu3::proto::Code::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Age::kIdFieldNumber;
const int Age::kExtensionFieldNumber;
const int Age::kValueFieldNumber;
const int Age::kComparatorFieldNumber;
const int Age::kUnitFieldNumber;
const int Age::kSystemFieldNumber;
const int Age::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Age::Age()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Age)
}
Age::Age(const Age& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::fhir::stu3::proto::Decimal(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_comparator()) {
    comparator_ = new ::google::fhir::stu3::proto::QuantityComparatorCode(*from.comparator_);
  } else {
    comparator_ = NULL;
  }
  if (from.has_unit()) {
    unit_ = new ::google::fhir::stu3::proto::String(*from.unit_);
  } else {
    unit_ = NULL;
  }
  if (from.has_system()) {
    system_ = new ::google::fhir::stu3::proto::Uri(*from.system_);
  } else {
    system_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::Code(*from.code_);
  } else {
    code_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Age)
}

void Age::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&id_)) + sizeof(code_));
}

Age::~Age() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Age)
  SharedDtor();
}

void Age::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete comparator_;
  if (this != internal_default_instance()) delete unit_;
  if (this != internal_default_instance()) delete system_;
  if (this != internal_default_instance()) delete code_;
}

void Age::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Age::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Age& Age::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Age::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Age)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && comparator_ != NULL) {
    delete comparator_;
  }
  comparator_ = NULL;
  if (GetArenaNoVirtual() == NULL && unit_ != NULL) {
    delete unit_;
  }
  unit_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_ != NULL) {
    delete system_;
  }
  system_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  _internal_metadata_.Clear();
}

bool Age::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Age)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_comparator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String unit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri system = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Code code = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Age)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Age)
  return false;
#undef DO_
}

void Age::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Age)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_value(), output);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
  if (this->has_comparator()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_comparator(), output);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_unit(), output);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_system(), output);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Age)
}

::google::protobuf::uint8* Age::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Age)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
  if (this->has_comparator()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_comparator(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_unit(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_system(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_code(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Age)
  return target;
}

size_t Age::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Age)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
  if (this->has_comparator()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *comparator_);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *unit_);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *system_);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Age::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Age)
  GOOGLE_DCHECK_NE(&from, this);
  const Age* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Age>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Age)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Age)
    MergeFrom(*source);
  }
}

void Age::MergeFrom(const Age& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Age)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_value()) {
    mutable_value()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.value());
  }
  if (from.has_comparator()) {
    mutable_comparator()->::google::fhir::stu3::proto::QuantityComparatorCode::MergeFrom(from.comparator());
  }
  if (from.has_unit()) {
    mutable_unit()->::google::fhir::stu3::proto::String::MergeFrom(from.unit());
  }
  if (from.has_system()) {
    mutable_system()->::google::fhir::stu3::proto::Uri::MergeFrom(from.system());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
  }
}

void Age::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Age)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Age::CopyFrom(const Age& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Age)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Age::IsInitialized() const {
  return true;
}

void Age::Swap(Age* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Age::InternalSwap(Age* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  swap(comparator_, other->comparator_);
  swap(unit_, other->unit_);
  swap(system_, other->system_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Age::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Annotation_Author::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Annotation_Author_default_instance_.reference_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::proto::_Annotation_Author_default_instance_.string_value_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void Annotation_Author::set_allocated_reference(::google::fhir::stu3::proto::Reference* reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_author();
  if (reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference, submessage_arena);
    }
    set_has_reference();
    author_.reference_ = reference;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Annotation.Author.reference)
}
void Annotation_Author::set_allocated_string_value(::google::fhir::stu3::proto::String* string_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_author();
  if (string_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string_value, submessage_arena);
    }
    set_has_string_value();
    author_.string_value_ = string_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Annotation.Author.string_value)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Annotation_Author::kReferenceFieldNumber;
const int Annotation_Author::kStringValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Annotation_Author::Annotation_Author()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Annotation.Author)
}
Annotation_Author::Annotation_Author(const Annotation_Author& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_author();
  switch (from.author_case()) {
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case AUTHOR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Annotation.Author)
}

void Annotation_Author::SharedCtor() {
  clear_has_author();
}

Annotation_Author::~Annotation_Author() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Annotation.Author)
  SharedDtor();
}

void Annotation_Author::SharedDtor() {
  if (has_author()) {
    clear_author();
  }
}

void Annotation_Author::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Annotation_Author::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Annotation_Author& Annotation_Author::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Annotation_Author::clear_author() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.Annotation.Author)
  switch (author_case()) {
    case kReference: {
      delete author_.reference_;
      break;
    }
    case kStringValue: {
      delete author_.string_value_;
      break;
    }
    case AUTHOR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = AUTHOR_NOT_SET;
}


void Annotation_Author::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Annotation.Author)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_author();
  _internal_metadata_.Clear();
}

bool Annotation_Author::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Annotation.Author)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Reference reference = 1 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String string_value = 2[json_name = "string"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Annotation.Author)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Annotation.Author)
  return false;
#undef DO_
}

void Annotation_Author::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Annotation.Author)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Reference reference = 1 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  if (has_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_reference(), output);
  }

  // .google.fhir.stu3.proto.String string_value = 2[json_name = "string"];
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_string_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Annotation.Author)
}

::google::protobuf::uint8* Annotation_Author::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Annotation.Author)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Reference reference = 1 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  if (has_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_reference(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String string_value = 2[json_name = "string"];
  if (has_string_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_string_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Annotation.Author)
  return target;
}

size_t Annotation_Author::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Annotation.Author)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (author_case()) {
    // .google.fhir.stu3.proto.Reference reference = 1 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
    case kReference: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *author_.reference_);
      break;
    }
    // .google.fhir.stu3.proto.String string_value = 2[json_name = "string"];
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *author_.string_value_);
      break;
    }
    case AUTHOR_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Annotation_Author::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Annotation.Author)
  GOOGLE_DCHECK_NE(&from, this);
  const Annotation_Author* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Annotation_Author>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Annotation.Author)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Annotation.Author)
    MergeFrom(*source);
  }
}

void Annotation_Author::MergeFrom(const Annotation_Author& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Annotation.Author)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.author_case()) {
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case AUTHOR_NOT_SET: {
      break;
    }
  }
}

void Annotation_Author::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Annotation.Author)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Annotation_Author::CopyFrom(const Annotation_Author& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Annotation.Author)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Annotation_Author::IsInitialized() const {
  return true;
}

void Annotation_Author::Swap(Annotation_Author* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Annotation_Author::InternalSwap(Annotation_Author* other) {
  using std::swap;
  swap(author_, other->author_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Annotation_Author::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Annotation::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Annotation_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Annotation_default_instance_._instance.get_mutable()->author_ = const_cast< ::google::fhir::stu3::proto::Annotation_Author*>(
      ::google::fhir::stu3::proto::Annotation_Author::internal_default_instance());
  ::google::fhir::stu3::proto::_Annotation_default_instance_._instance.get_mutable()->time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::proto::_Annotation_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Annotation::kIdFieldNumber;
const int Annotation::kExtensionFieldNumber;
const int Annotation::kAuthorFieldNumber;
const int Annotation::kTimeFieldNumber;
const int Annotation::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Annotation::Annotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Annotation)
}
Annotation::Annotation(const Annotation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_author()) {
    author_ = new ::google::fhir::stu3::proto::Annotation_Author(*from.author_);
  } else {
    author_ = NULL;
  }
  if (from.has_time()) {
    time_ = new ::google::fhir::stu3::proto::DateTime(*from.time_);
  } else {
    time_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::String(*from.text_);
  } else {
    text_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Annotation)
}

void Annotation::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&text_) -
      reinterpret_cast<char*>(&id_)) + sizeof(text_));
}

Annotation::~Annotation() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Annotation)
  SharedDtor();
}

void Annotation::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete author_;
  if (this != internal_default_instance()) delete time_;
  if (this != internal_default_instance()) delete text_;
}

void Annotation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Annotation::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Annotation& Annotation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Annotation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Annotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && author_ != NULL) {
    delete author_;
  }
  author_ = NULL;
  if (GetArenaNoVirtual() == NULL && time_ != NULL) {
    delete time_;
  }
  time_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  _internal_metadata_.Clear();
}

bool Annotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Annotation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Annotation.Author author = 3 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_author()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String text = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Annotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Annotation)
  return false;
#undef DO_
}

void Annotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Annotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Annotation.Author author = 3 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_author()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_author(), output);
  }

  // .google.fhir.stu3.proto.DateTime time = 4;
  if (this->has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_time(), output);
  }

  // .google.fhir.stu3.proto.String text = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Annotation)
}

::google::protobuf::uint8* Annotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Annotation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Annotation.Author author = 3 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_author()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_author(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime time = 4;
  if (this->has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String text = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_text(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Annotation)
  return target;
}

size_t Annotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Annotation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Annotation.Author author = 3 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_author()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *author_);
  }

  // .google.fhir.stu3.proto.DateTime time = 4;
  if (this->has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *time_);
  }

  // .google.fhir.stu3.proto.String text = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Annotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Annotation)
  GOOGLE_DCHECK_NE(&from, this);
  const Annotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Annotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Annotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Annotation)
    MergeFrom(*source);
  }
}

void Annotation::MergeFrom(const Annotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Annotation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_author()) {
    mutable_author()->::google::fhir::stu3::proto::Annotation_Author::MergeFrom(from.author());
  }
  if (from.has_time()) {
    mutable_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.time());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::String::MergeFrom(from.text());
  }
}

void Annotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Annotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Annotation::CopyFrom(const Annotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Annotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Annotation::IsInitialized() const {
  return true;
}

void Annotation::Swap(Annotation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Annotation::InternalSwap(Annotation* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(author_, other->author_);
  swap(time_, other->time_);
  swap(text_, other->text_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Annotation::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Attachment::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Attachment_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Attachment_default_instance_._instance.get_mutable()->content_type_ = const_cast< ::google::fhir::stu3::proto::MimeTypeCode*>(
      ::google::fhir::stu3::proto::MimeTypeCode::internal_default_instance());
  ::google::fhir::stu3::proto::_Attachment_default_instance_._instance.get_mutable()->language_ = const_cast< ::google::fhir::stu3::proto::LanguageCode*>(
      ::google::fhir::stu3::proto::LanguageCode::internal_default_instance());
  ::google::fhir::stu3::proto::_Attachment_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::fhir::stu3::proto::Base64Binary*>(
      ::google::fhir::stu3::proto::Base64Binary::internal_default_instance());
  ::google::fhir::stu3::proto::_Attachment_default_instance_._instance.get_mutable()->url_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_Attachment_default_instance_._instance.get_mutable()->size_ = const_cast< ::google::fhir::stu3::proto::UnsignedInt*>(
      ::google::fhir::stu3::proto::UnsignedInt::internal_default_instance());
  ::google::fhir::stu3::proto::_Attachment_default_instance_._instance.get_mutable()->hash_ = const_cast< ::google::fhir::stu3::proto::Base64Binary*>(
      ::google::fhir::stu3::proto::Base64Binary::internal_default_instance());
  ::google::fhir::stu3::proto::_Attachment_default_instance_._instance.get_mutable()->title_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Attachment_default_instance_._instance.get_mutable()->creation_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Attachment::kIdFieldNumber;
const int Attachment::kExtensionFieldNumber;
const int Attachment::kContentTypeFieldNumber;
const int Attachment::kLanguageFieldNumber;
const int Attachment::kDataFieldNumber;
const int Attachment::kUrlFieldNumber;
const int Attachment::kSizeFieldNumber;
const int Attachment::kHashFieldNumber;
const int Attachment::kTitleFieldNumber;
const int Attachment::kCreationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Attachment::Attachment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Attachment)
}
Attachment::Attachment(const Attachment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_content_type()) {
    content_type_ = new ::google::fhir::stu3::proto::MimeTypeCode(*from.content_type_);
  } else {
    content_type_ = NULL;
  }
  if (from.has_language()) {
    language_ = new ::google::fhir::stu3::proto::LanguageCode(*from.language_);
  } else {
    language_ = NULL;
  }
  if (from.has_data()) {
    data_ = new ::google::fhir::stu3::proto::Base64Binary(*from.data_);
  } else {
    data_ = NULL;
  }
  if (from.has_url()) {
    url_ = new ::google::fhir::stu3::proto::Uri(*from.url_);
  } else {
    url_ = NULL;
  }
  if (from.has_size()) {
    size_ = new ::google::fhir::stu3::proto::UnsignedInt(*from.size_);
  } else {
    size_ = NULL;
  }
  if (from.has_hash()) {
    hash_ = new ::google::fhir::stu3::proto::Base64Binary(*from.hash_);
  } else {
    hash_ = NULL;
  }
  if (from.has_title()) {
    title_ = new ::google::fhir::stu3::proto::String(*from.title_);
  } else {
    title_ = NULL;
  }
  if (from.has_creation()) {
    creation_ = new ::google::fhir::stu3::proto::DateTime(*from.creation_);
  } else {
    creation_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Attachment)
}

void Attachment::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&creation_) -
      reinterpret_cast<char*>(&id_)) + sizeof(creation_));
}

Attachment::~Attachment() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Attachment)
  SharedDtor();
}

void Attachment::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete content_type_;
  if (this != internal_default_instance()) delete language_;
  if (this != internal_default_instance()) delete data_;
  if (this != internal_default_instance()) delete url_;
  if (this != internal_default_instance()) delete size_;
  if (this != internal_default_instance()) delete hash_;
  if (this != internal_default_instance()) delete title_;
  if (this != internal_default_instance()) delete creation_;
}

void Attachment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Attachment::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Attachment& Attachment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Attachment::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Attachment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && content_type_ != NULL) {
    delete content_type_;
  }
  content_type_ = NULL;
  if (GetArenaNoVirtual() == NULL && language_ != NULL) {
    delete language_;
  }
  language_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  if (GetArenaNoVirtual() == NULL && url_ != NULL) {
    delete url_;
  }
  url_ = NULL;
  if (GetArenaNoVirtual() == NULL && size_ != NULL) {
    delete size_;
  }
  size_ = NULL;
  if (GetArenaNoVirtual() == NULL && hash_ != NULL) {
    delete hash_;
  }
  hash_ = NULL;
  if (GetArenaNoVirtual() == NULL && title_ != NULL) {
    delete title_;
  }
  title_ = NULL;
  if (GetArenaNoVirtual() == NULL && creation_ != NULL) {
    delete creation_;
  }
  creation_ = NULL;
  _internal_metadata_.Clear();
}

bool Attachment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Attachment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.MimeTypeCode content_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_content_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.LanguageCode language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Base64Binary data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri url = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.UnsignedInt size = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_size()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Base64Binary hash = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String title = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_title()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime creation = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_creation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Attachment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Attachment)
  return false;
#undef DO_
}

void Attachment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Attachment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.MimeTypeCode content_type = 3;
  if (this->has_content_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_content_type(), output);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_language(), output);
  }

  // .google.fhir.stu3.proto.Base64Binary data = 5;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_data(), output);
  }

  // .google.fhir.stu3.proto.Uri url = 6;
  if (this->has_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_url(), output);
  }

  // .google.fhir.stu3.proto.UnsignedInt size = 7;
  if (this->has_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_size(), output);
  }

  // .google.fhir.stu3.proto.Base64Binary hash = 8;
  if (this->has_hash()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_hash(), output);
  }

  // .google.fhir.stu3.proto.String title = 9;
  if (this->has_title()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_title(), output);
  }

  // .google.fhir.stu3.proto.DateTime creation = 10;
  if (this->has_creation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_creation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Attachment)
}

::google::protobuf::uint8* Attachment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Attachment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.MimeTypeCode content_type = 3;
  if (this->has_content_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_content_type(), deterministic, target);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_language(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Base64Binary data = 5;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_data(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri url = 6;
  if (this->has_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_url(), deterministic, target);
  }

  // .google.fhir.stu3.proto.UnsignedInt size = 7;
  if (this->has_size()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_size(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Base64Binary hash = 8;
  if (this->has_hash()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_hash(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String title = 9;
  if (this->has_title()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_title(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime creation = 10;
  if (this->has_creation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_creation(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Attachment)
  return target;
}

size_t Attachment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Attachment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.MimeTypeCode content_type = 3;
  if (this->has_content_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *content_type_);
  }

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  if (this->has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_);
  }

  // .google.fhir.stu3.proto.Base64Binary data = 5;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // .google.fhir.stu3.proto.Uri url = 6;
  if (this->has_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *url_);
  }

  // .google.fhir.stu3.proto.UnsignedInt size = 7;
  if (this->has_size()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *size_);
  }

  // .google.fhir.stu3.proto.Base64Binary hash = 8;
  if (this->has_hash()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hash_);
  }

  // .google.fhir.stu3.proto.String title = 9;
  if (this->has_title()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *title_);
  }

  // .google.fhir.stu3.proto.DateTime creation = 10;
  if (this->has_creation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *creation_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Attachment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Attachment)
  GOOGLE_DCHECK_NE(&from, this);
  const Attachment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Attachment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Attachment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Attachment)
    MergeFrom(*source);
  }
}

void Attachment::MergeFrom(const Attachment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Attachment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_content_type()) {
    mutable_content_type()->::google::fhir::stu3::proto::MimeTypeCode::MergeFrom(from.content_type());
  }
  if (from.has_language()) {
    mutable_language()->::google::fhir::stu3::proto::LanguageCode::MergeFrom(from.language());
  }
  if (from.has_data()) {
    mutable_data()->::google::fhir::stu3::proto::Base64Binary::MergeFrom(from.data());
  }
  if (from.has_url()) {
    mutable_url()->::google::fhir::stu3::proto::Uri::MergeFrom(from.url());
  }
  if (from.has_size()) {
    mutable_size()->::google::fhir::stu3::proto::UnsignedInt::MergeFrom(from.size());
  }
  if (from.has_hash()) {
    mutable_hash()->::google::fhir::stu3::proto::Base64Binary::MergeFrom(from.hash());
  }
  if (from.has_title()) {
    mutable_title()->::google::fhir::stu3::proto::String::MergeFrom(from.title());
  }
  if (from.has_creation()) {
    mutable_creation()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.creation());
  }
}

void Attachment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Attachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Attachment::CopyFrom(const Attachment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Attachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Attachment::IsInitialized() const {
  return true;
}

void Attachment::Swap(Attachment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Attachment::InternalSwap(Attachment* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(content_type_, other->content_type_);
  swap(language_, other->language_);
  swap(data_, other->data_);
  swap(url_, other->url_);
  swap(size_, other->size_);
  swap(hash_, other->hash_);
  swap(title_, other->title_);
  swap(creation_, other->creation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Attachment::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CodeableConcept::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_CodeableConcept_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_CodeableConcept_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CodeableConcept::kIdFieldNumber;
const int CodeableConcept::kExtensionFieldNumber;
const int CodeableConcept::kCodingFieldNumber;
const int CodeableConcept::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CodeableConcept::CodeableConcept()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.CodeableConcept)
}
CodeableConcept::CodeableConcept(const CodeableConcept& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      coding_(from.coding_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::String(*from.text_);
  } else {
    text_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.CodeableConcept)
}

void CodeableConcept::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&text_) -
      reinterpret_cast<char*>(&id_)) + sizeof(text_));
}

CodeableConcept::~CodeableConcept() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.CodeableConcept)
  SharedDtor();
}

void CodeableConcept::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete text_;
}

void CodeableConcept::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CodeableConcept::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CodeableConcept& CodeableConcept::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void CodeableConcept::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.CodeableConcept)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  coding_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  _internal_metadata_.Clear();
}

bool CodeableConcept::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.CodeableConcept)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Coding coding = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_coding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String text = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.CodeableConcept)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.CodeableConcept)
  return false;
#undef DO_
}

void CodeableConcept::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.CodeableConcept)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Coding coding = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->coding_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->coding(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String text = 4;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.CodeableConcept)
}

::google::protobuf::uint8* CodeableConcept::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.CodeableConcept)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Coding coding = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->coding_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->coding(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String text = 4;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_text(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.CodeableConcept)
  return target;
}

size_t CodeableConcept::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.CodeableConcept)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Coding coding = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->coding_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->coding(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.String text = 4;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CodeableConcept::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.CodeableConcept)
  GOOGLE_DCHECK_NE(&from, this);
  const CodeableConcept* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CodeableConcept>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.CodeableConcept)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.CodeableConcept)
    MergeFrom(*source);
  }
}

void CodeableConcept::MergeFrom(const CodeableConcept& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.CodeableConcept)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  coding_.MergeFrom(from.coding_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::String::MergeFrom(from.text());
  }
}

void CodeableConcept::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.CodeableConcept)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CodeableConcept::CopyFrom(const CodeableConcept& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.CodeableConcept)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CodeableConcept::IsInitialized() const {
  return true;
}

void CodeableConcept::Swap(CodeableConcept* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CodeableConcept::InternalSwap(CodeableConcept* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&coding_)->InternalSwap(CastToBase(&other->coding_));
  swap(id_, other->id_);
  swap(text_, other->text_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CodeableConcept::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Coding::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Coding_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Coding_default_instance_._instance.get_mutable()->system_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_Coding_default_instance_._instance.get_mutable()->version_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Coding_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::Code*>(
      ::google::fhir::stu3::proto::Code::internal_default_instance());
  ::google::fhir::stu3::proto::_Coding_default_instance_._instance.get_mutable()->display_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Coding_default_instance_._instance.get_mutable()->user_selected_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Coding::kIdFieldNumber;
const int Coding::kExtensionFieldNumber;
const int Coding::kSystemFieldNumber;
const int Coding::kVersionFieldNumber;
const int Coding::kCodeFieldNumber;
const int Coding::kDisplayFieldNumber;
const int Coding::kUserSelectedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Coding::Coding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Coding)
}
Coding::Coding(const Coding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_system()) {
    system_ = new ::google::fhir::stu3::proto::Uri(*from.system_);
  } else {
    system_ = NULL;
  }
  if (from.has_version()) {
    version_ = new ::google::fhir::stu3::proto::String(*from.version_);
  } else {
    version_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::Code(*from.code_);
  } else {
    code_ = NULL;
  }
  if (from.has_display()) {
    display_ = new ::google::fhir::stu3::proto::String(*from.display_);
  } else {
    display_ = NULL;
  }
  if (from.has_user_selected()) {
    user_selected_ = new ::google::fhir::stu3::proto::Boolean(*from.user_selected_);
  } else {
    user_selected_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Coding)
}

void Coding::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_selected_) -
      reinterpret_cast<char*>(&id_)) + sizeof(user_selected_));
}

Coding::~Coding() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Coding)
  SharedDtor();
}

void Coding::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete system_;
  if (this != internal_default_instance()) delete version_;
  if (this != internal_default_instance()) delete code_;
  if (this != internal_default_instance()) delete display_;
  if (this != internal_default_instance()) delete user_selected_;
}

void Coding::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Coding::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Coding& Coding::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Coding::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Coding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_ != NULL) {
    delete system_;
  }
  system_ = NULL;
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  if (GetArenaNoVirtual() == NULL && display_ != NULL) {
    delete display_;
  }
  display_ = NULL;
  if (GetArenaNoVirtual() == NULL && user_selected_ != NULL) {
    delete user_selected_;
  }
  user_selected_ = NULL;
  _internal_metadata_.Clear();
}

bool Coding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Coding)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri system = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Code code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String display = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_display()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean user_selected = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_selected()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Coding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Coding)
  return false;
#undef DO_
}

void Coding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Coding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Uri system = 3;
  if (this->has_system()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_system(), output);
  }

  // .google.fhir.stu3.proto.String version = 4;
  if (this->has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_version(), output);
  }

  // .google.fhir.stu3.proto.Code code = 5;
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_code(), output);
  }

  // .google.fhir.stu3.proto.String display = 6;
  if (this->has_display()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_display(), output);
  }

  // .google.fhir.stu3.proto.Boolean user_selected = 7;
  if (this->has_user_selected()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_user_selected(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Coding)
}

::google::protobuf::uint8* Coding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Coding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri system = 3;
  if (this->has_system()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_system(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String version = 4;
  if (this->has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_version(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Code code = 5;
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_code(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String display = 6;
  if (this->has_display()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_display(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean user_selected = 7;
  if (this->has_user_selected()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_user_selected(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Coding)
  return target;
}

size_t Coding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Coding)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Uri system = 3;
  if (this->has_system()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *system_);
  }

  // .google.fhir.stu3.proto.String version = 4;
  if (this->has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *version_);
  }

  // .google.fhir.stu3.proto.Code code = 5;
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  // .google.fhir.stu3.proto.String display = 6;
  if (this->has_display()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *display_);
  }

  // .google.fhir.stu3.proto.Boolean user_selected = 7;
  if (this->has_user_selected()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_selected_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Coding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Coding)
  GOOGLE_DCHECK_NE(&from, this);
  const Coding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Coding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Coding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Coding)
    MergeFrom(*source);
  }
}

void Coding::MergeFrom(const Coding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Coding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_system()) {
    mutable_system()->::google::fhir::stu3::proto::Uri::MergeFrom(from.system());
  }
  if (from.has_version()) {
    mutable_version()->::google::fhir::stu3::proto::String::MergeFrom(from.version());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
  }
  if (from.has_display()) {
    mutable_display()->::google::fhir::stu3::proto::String::MergeFrom(from.display());
  }
  if (from.has_user_selected()) {
    mutable_user_selected()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.user_selected());
  }
}

void Coding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Coding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Coding::CopyFrom(const Coding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Coding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Coding::IsInitialized() const {
  return true;
}

void Coding::Swap(Coding* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Coding::InternalSwap(Coding* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(system_, other->system_);
  swap(version_, other->version_);
  swap(code_, other->code_);
  swap(display_, other->display_);
  swap(user_selected_, other->user_selected_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Coding::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContactPoint::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ContactPoint_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ContactPoint_default_instance_._instance.get_mutable()->system_ = const_cast< ::google::fhir::stu3::proto::ContactPointSystemCode*>(
      ::google::fhir::stu3::proto::ContactPointSystemCode::internal_default_instance());
  ::google::fhir::stu3::proto::_ContactPoint_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_ContactPoint_default_instance_._instance.get_mutable()->use_ = const_cast< ::google::fhir::stu3::proto::ContactPointUseCode*>(
      ::google::fhir::stu3::proto::ContactPointUseCode::internal_default_instance());
  ::google::fhir::stu3::proto::_ContactPoint_default_instance_._instance.get_mutable()->rank_ = const_cast< ::google::fhir::stu3::proto::PositiveInt*>(
      ::google::fhir::stu3::proto::PositiveInt::internal_default_instance());
  ::google::fhir::stu3::proto::_ContactPoint_default_instance_._instance.get_mutable()->period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContactPoint::kIdFieldNumber;
const int ContactPoint::kExtensionFieldNumber;
const int ContactPoint::kSystemFieldNumber;
const int ContactPoint::kValueFieldNumber;
const int ContactPoint::kUseFieldNumber;
const int ContactPoint::kRankFieldNumber;
const int ContactPoint::kPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContactPoint::ContactPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ContactPoint)
}
ContactPoint::ContactPoint(const ContactPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_system()) {
    system_ = new ::google::fhir::stu3::proto::ContactPointSystemCode(*from.system_);
  } else {
    system_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::fhir::stu3::proto::String(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_use()) {
    use_ = new ::google::fhir::stu3::proto::ContactPointUseCode(*from.use_);
  } else {
    use_ = NULL;
  }
  if (from.has_rank()) {
    rank_ = new ::google::fhir::stu3::proto::PositiveInt(*from.rank_);
  } else {
    rank_ = NULL;
  }
  if (from.has_period()) {
    period_ = new ::google::fhir::stu3::proto::Period(*from.period_);
  } else {
    period_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ContactPoint)
}

void ContactPoint::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&period_) -
      reinterpret_cast<char*>(&id_)) + sizeof(period_));
}

ContactPoint::~ContactPoint() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ContactPoint)
  SharedDtor();
}

void ContactPoint::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete system_;
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete use_;
  if (this != internal_default_instance()) delete rank_;
  if (this != internal_default_instance()) delete period_;
}

void ContactPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ContactPoint::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContactPoint& ContactPoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void ContactPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ContactPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_ != NULL) {
    delete system_;
  }
  system_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && use_ != NULL) {
    delete use_;
  }
  use_ = NULL;
  if (GetArenaNoVirtual() == NULL && rank_ != NULL) {
    delete rank_;
  }
  rank_ = NULL;
  if (GetArenaNoVirtual() == NULL && period_ != NULL) {
    delete period_;
  }
  period_ = NULL;
  _internal_metadata_.Clear();
}

bool ContactPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ContactPoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ContactPointSystemCode system = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ContactPointUseCode use = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_use()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.PositiveInt rank = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rank()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ContactPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ContactPoint)
  return false;
#undef DO_
}

void ContactPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ContactPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.ContactPointSystemCode system = 3;
  if (this->has_system()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_system(), output);
  }

  // .google.fhir.stu3.proto.String value = 4;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_value(), output);
  }

  // .google.fhir.stu3.proto.ContactPointUseCode use = 5;
  if (this->has_use()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_use(), output);
  }

  // .google.fhir.stu3.proto.PositiveInt rank = 6;
  if (this->has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_rank(), output);
  }

  // .google.fhir.stu3.proto.Period period = 7;
  if (this->has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_period(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ContactPoint)
}

::google::protobuf::uint8* ContactPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ContactPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.ContactPointSystemCode system = 3;
  if (this->has_system()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_system(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String value = 4;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ContactPointUseCode use = 5;
  if (this->has_use()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_use(), deterministic, target);
  }

  // .google.fhir.stu3.proto.PositiveInt rank = 6;
  if (this->has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_rank(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 7;
  if (this->has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_period(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ContactPoint)
  return target;
}

size_t ContactPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ContactPoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.ContactPointSystemCode system = 3;
  if (this->has_system()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *system_);
  }

  // .google.fhir.stu3.proto.String value = 4;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .google.fhir.stu3.proto.ContactPointUseCode use = 5;
  if (this->has_use()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *use_);
  }

  // .google.fhir.stu3.proto.PositiveInt rank = 6;
  if (this->has_rank()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rank_);
  }

  // .google.fhir.stu3.proto.Period period = 7;
  if (this->has_period()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *period_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContactPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ContactPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const ContactPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContactPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ContactPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ContactPoint)
    MergeFrom(*source);
  }
}

void ContactPoint::MergeFrom(const ContactPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ContactPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_system()) {
    mutable_system()->::google::fhir::stu3::proto::ContactPointSystemCode::MergeFrom(from.system());
  }
  if (from.has_value()) {
    mutable_value()->::google::fhir::stu3::proto::String::MergeFrom(from.value());
  }
  if (from.has_use()) {
    mutable_use()->::google::fhir::stu3::proto::ContactPointUseCode::MergeFrom(from.use());
  }
  if (from.has_rank()) {
    mutable_rank()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.rank());
  }
  if (from.has_period()) {
    mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
  }
}

void ContactPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ContactPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContactPoint::CopyFrom(const ContactPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ContactPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContactPoint::IsInitialized() const {
  return true;
}

void ContactPoint::Swap(ContactPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContactPoint::InternalSwap(ContactPoint* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(system_, other->system_);
  swap(value_, other->value_);
  swap(use_, other->use_);
  swap(rank_, other->rank_);
  swap(period_, other->period_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ContactPoint::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Count::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Count_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Count_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_Count_default_instance_._instance.get_mutable()->comparator_ = const_cast< ::google::fhir::stu3::proto::QuantityComparatorCode*>(
      ::google::fhir::stu3::proto::QuantityComparatorCode::internal_default_instance());
  ::google::fhir::stu3::proto::_Count_default_instance_._instance.get_mutable()->unit_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Count_default_instance_._instance.get_mutable()->system_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_Count_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::Code*>(
      ::google::fhir::stu3::proto::Code::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Count::kIdFieldNumber;
const int Count::kExtensionFieldNumber;
const int Count::kValueFieldNumber;
const int Count::kComparatorFieldNumber;
const int Count::kUnitFieldNumber;
const int Count::kSystemFieldNumber;
const int Count::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Count::Count()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Count)
}
Count::Count(const Count& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::fhir::stu3::proto::Decimal(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_comparator()) {
    comparator_ = new ::google::fhir::stu3::proto::QuantityComparatorCode(*from.comparator_);
  } else {
    comparator_ = NULL;
  }
  if (from.has_unit()) {
    unit_ = new ::google::fhir::stu3::proto::String(*from.unit_);
  } else {
    unit_ = NULL;
  }
  if (from.has_system()) {
    system_ = new ::google::fhir::stu3::proto::Uri(*from.system_);
  } else {
    system_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::Code(*from.code_);
  } else {
    code_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Count)
}

void Count::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&id_)) + sizeof(code_));
}

Count::~Count() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Count)
  SharedDtor();
}

void Count::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete comparator_;
  if (this != internal_default_instance()) delete unit_;
  if (this != internal_default_instance()) delete system_;
  if (this != internal_default_instance()) delete code_;
}

void Count::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Count::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Count& Count::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Count::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && comparator_ != NULL) {
    delete comparator_;
  }
  comparator_ = NULL;
  if (GetArenaNoVirtual() == NULL && unit_ != NULL) {
    delete unit_;
  }
  unit_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_ != NULL) {
    delete system_;
  }
  system_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  _internal_metadata_.Clear();
}

bool Count::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Count)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_comparator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String unit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri system = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Code code = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Count)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Count)
  return false;
#undef DO_
}

void Count::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_value(), output);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
  if (this->has_comparator()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_comparator(), output);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_unit(), output);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_system(), output);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Count)
}

::google::protobuf::uint8* Count::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
  if (this->has_comparator()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_comparator(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_unit(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_system(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_code(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Count)
  return target;
}

size_t Count::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Count)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
  if (this->has_comparator()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *comparator_);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *unit_);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *system_);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Count::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Count)
  GOOGLE_DCHECK_NE(&from, this);
  const Count* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Count>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Count)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Count)
    MergeFrom(*source);
  }
}

void Count::MergeFrom(const Count& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Count)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_value()) {
    mutable_value()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.value());
  }
  if (from.has_comparator()) {
    mutable_comparator()->::google::fhir::stu3::proto::QuantityComparatorCode::MergeFrom(from.comparator());
  }
  if (from.has_unit()) {
    mutable_unit()->::google::fhir::stu3::proto::String::MergeFrom(from.unit());
  }
  if (from.has_system()) {
    mutable_system()->::google::fhir::stu3::proto::Uri::MergeFrom(from.system());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
  }
}

void Count::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Count)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Count::CopyFrom(const Count& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Count)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Count::IsInitialized() const {
  return true;
}

void Count::Swap(Count* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Count::InternalSwap(Count* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  swap(comparator_, other->comparator_);
  swap(unit_, other->unit_);
  swap(system_, other->system_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Count::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Distance::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Distance_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Distance_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_Distance_default_instance_._instance.get_mutable()->comparator_ = const_cast< ::google::fhir::stu3::proto::QuantityComparatorCode*>(
      ::google::fhir::stu3::proto::QuantityComparatorCode::internal_default_instance());
  ::google::fhir::stu3::proto::_Distance_default_instance_._instance.get_mutable()->unit_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Distance_default_instance_._instance.get_mutable()->system_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_Distance_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::Code*>(
      ::google::fhir::stu3::proto::Code::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distance::kIdFieldNumber;
const int Distance::kExtensionFieldNumber;
const int Distance::kValueFieldNumber;
const int Distance::kComparatorFieldNumber;
const int Distance::kUnitFieldNumber;
const int Distance::kSystemFieldNumber;
const int Distance::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distance::Distance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Distance)
}
Distance::Distance(const Distance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::fhir::stu3::proto::Decimal(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_comparator()) {
    comparator_ = new ::google::fhir::stu3::proto::QuantityComparatorCode(*from.comparator_);
  } else {
    comparator_ = NULL;
  }
  if (from.has_unit()) {
    unit_ = new ::google::fhir::stu3::proto::String(*from.unit_);
  } else {
    unit_ = NULL;
  }
  if (from.has_system()) {
    system_ = new ::google::fhir::stu3::proto::Uri(*from.system_);
  } else {
    system_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::Code(*from.code_);
  } else {
    code_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Distance)
}

void Distance::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&id_)) + sizeof(code_));
}

Distance::~Distance() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Distance)
  SharedDtor();
}

void Distance::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete comparator_;
  if (this != internal_default_instance()) delete unit_;
  if (this != internal_default_instance()) delete system_;
  if (this != internal_default_instance()) delete code_;
}

void Distance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Distance::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Distance& Distance::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Distance::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Distance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && comparator_ != NULL) {
    delete comparator_;
  }
  comparator_ = NULL;
  if (GetArenaNoVirtual() == NULL && unit_ != NULL) {
    delete unit_;
  }
  unit_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_ != NULL) {
    delete system_;
  }
  system_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  _internal_metadata_.Clear();
}

bool Distance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Distance)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_comparator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String unit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri system = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Code code = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Distance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Distance)
  return false;
#undef DO_
}

void Distance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Distance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_value(), output);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
  if (this->has_comparator()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_comparator(), output);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_unit(), output);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_system(), output);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Distance)
}

::google::protobuf::uint8* Distance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Distance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
  if (this->has_comparator()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_comparator(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_unit(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_system(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_code(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Distance)
  return target;
}

size_t Distance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Distance)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
  if (this->has_comparator()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *comparator_);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *unit_);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *system_);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Distance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Distance)
  GOOGLE_DCHECK_NE(&from, this);
  const Distance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Distance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Distance)
    MergeFrom(*source);
  }
}

void Distance::MergeFrom(const Distance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Distance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_value()) {
    mutable_value()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.value());
  }
  if (from.has_comparator()) {
    mutable_comparator()->::google::fhir::stu3::proto::QuantityComparatorCode::MergeFrom(from.comparator());
  }
  if (from.has_unit()) {
    mutable_unit()->::google::fhir::stu3::proto::String::MergeFrom(from.unit());
  }
  if (from.has_system()) {
    mutable_system()->::google::fhir::stu3::proto::Uri::MergeFrom(from.system());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
  }
}

void Distance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Distance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distance::CopyFrom(const Distance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Distance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Distance::IsInitialized() const {
  return true;
}

void Distance::Swap(Distance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Distance::InternalSwap(Distance* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  swap(comparator_, other->comparator_);
  swap(unit_, other->unit_);
  swap(system_, other->system_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Distance::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Dosage_AsNeeded::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Dosage_AsNeeded_default_instance_.boolean_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::proto::_Dosage_AsNeeded_default_instance_.codeable_concept_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
}
void Dosage_AsNeeded::set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_as_needed();
  if (boolean) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      boolean = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boolean, submessage_arena);
    }
    set_has_boolean();
    as_needed_.boolean_ = boolean;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Dosage.AsNeeded.boolean)
}
void Dosage_AsNeeded::set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_as_needed();
  if (codeable_concept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      codeable_concept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, codeable_concept, submessage_arena);
    }
    set_has_codeable_concept();
    as_needed_.codeable_concept_ = codeable_concept;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Dosage.AsNeeded.codeable_concept)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dosage_AsNeeded::kBooleanFieldNumber;
const int Dosage_AsNeeded::kCodeableConceptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dosage_AsNeeded::Dosage_AsNeeded()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Dosage_AsNeeded.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Dosage.AsNeeded)
}
Dosage_AsNeeded::Dosage_AsNeeded(const Dosage_AsNeeded& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_as_needed();
  switch (from.as_needed_case()) {
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case AS_NEEDED_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Dosage.AsNeeded)
}

void Dosage_AsNeeded::SharedCtor() {
  clear_has_as_needed();
}

Dosage_AsNeeded::~Dosage_AsNeeded() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Dosage.AsNeeded)
  SharedDtor();
}

void Dosage_AsNeeded::SharedDtor() {
  if (has_as_needed()) {
    clear_as_needed();
  }
}

void Dosage_AsNeeded::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Dosage_AsNeeded::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Dosage_AsNeeded& Dosage_AsNeeded::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Dosage_AsNeeded.base);
  return *internal_default_instance();
}


void Dosage_AsNeeded::clear_as_needed() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.Dosage.AsNeeded)
  switch (as_needed_case()) {
    case kBoolean: {
      delete as_needed_.boolean_;
      break;
    }
    case kCodeableConcept: {
      delete as_needed_.codeable_concept_;
      break;
    }
    case AS_NEEDED_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = AS_NEEDED_NOT_SET;
}


void Dosage_AsNeeded::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Dosage.AsNeeded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_as_needed();
  _internal_metadata_.Clear();
}

bool Dosage_AsNeeded::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Dosage.AsNeeded)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Boolean boolean = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_boolean()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Dosage.AsNeeded)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Dosage.AsNeeded)
  return false;
#undef DO_
}

void Dosage_AsNeeded::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Dosage.AsNeeded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Boolean boolean = 1;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_boolean(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
  if (has_codeable_concept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_codeable_concept(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Dosage.AsNeeded)
}

::google::protobuf::uint8* Dosage_AsNeeded::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Dosage.AsNeeded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Boolean boolean = 1;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_boolean(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
  if (has_codeable_concept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_codeable_concept(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Dosage.AsNeeded)
  return target;
}

size_t Dosage_AsNeeded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Dosage.AsNeeded)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (as_needed_case()) {
    // .google.fhir.stu3.proto.Boolean boolean = 1;
    case kBoolean: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *as_needed_.boolean_);
      break;
    }
    // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
    case kCodeableConcept: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *as_needed_.codeable_concept_);
      break;
    }
    case AS_NEEDED_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Dosage_AsNeeded::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Dosage.AsNeeded)
  GOOGLE_DCHECK_NE(&from, this);
  const Dosage_AsNeeded* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Dosage_AsNeeded>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Dosage.AsNeeded)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Dosage.AsNeeded)
    MergeFrom(*source);
  }
}

void Dosage_AsNeeded::MergeFrom(const Dosage_AsNeeded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Dosage.AsNeeded)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.as_needed_case()) {
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case AS_NEEDED_NOT_SET: {
      break;
    }
  }
}

void Dosage_AsNeeded::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Dosage.AsNeeded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dosage_AsNeeded::CopyFrom(const Dosage_AsNeeded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Dosage.AsNeeded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dosage_AsNeeded::IsInitialized() const {
  return true;
}

void Dosage_AsNeeded::Swap(Dosage_AsNeeded* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dosage_AsNeeded::InternalSwap(Dosage_AsNeeded* other) {
  using std::swap;
  swap(as_needed_, other->as_needed_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Dosage_AsNeeded::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Dosage_Dose::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Dosage_Dose_default_instance_.range_ = const_cast< ::google::fhir::stu3::proto::Range*>(
      ::google::fhir::stu3::proto::Range::internal_default_instance());
  ::google::fhir::stu3::proto::_Dosage_Dose_default_instance_.quantity_ = const_cast< ::google::fhir::stu3::proto::SimpleQuantity*>(
      ::google::fhir::stu3::proto::SimpleQuantity::internal_default_instance());
}
void Dosage_Dose::set_allocated_range(::google::fhir::stu3::proto::Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_dose();
  if (range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    set_has_range();
    dose_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Dosage.Dose.range)
}
void Dosage_Dose::set_allocated_quantity(::google::fhir::stu3::proto::SimpleQuantity* quantity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_dose();
  if (quantity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quantity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quantity, submessage_arena);
    }
    set_has_quantity();
    dose_.quantity_ = quantity;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Dosage.Dose.quantity)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dosage_Dose::kRangeFieldNumber;
const int Dosage_Dose::kQuantityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dosage_Dose::Dosage_Dose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Dosage_Dose.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Dosage.Dose)
}
Dosage_Dose::Dosage_Dose(const Dosage_Dose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_dose();
  switch (from.dose_case()) {
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::SimpleQuantity::MergeFrom(from.quantity());
      break;
    }
    case DOSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Dosage.Dose)
}

void Dosage_Dose::SharedCtor() {
  clear_has_dose();
}

Dosage_Dose::~Dosage_Dose() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Dosage.Dose)
  SharedDtor();
}

void Dosage_Dose::SharedDtor() {
  if (has_dose()) {
    clear_dose();
  }
}

void Dosage_Dose::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Dosage_Dose::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Dosage_Dose& Dosage_Dose::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Dosage_Dose.base);
  return *internal_default_instance();
}


void Dosage_Dose::clear_dose() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.Dosage.Dose)
  switch (dose_case()) {
    case kRange: {
      delete dose_.range_;
      break;
    }
    case kQuantity: {
      delete dose_.quantity_;
      break;
    }
    case DOSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DOSE_NOT_SET;
}


void Dosage_Dose::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Dosage.Dose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_dose();
  _internal_metadata_.Clear();
}

bool Dosage_Dose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Dosage.Dose)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Range range = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SimpleQuantity quantity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quantity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Dosage.Dose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Dosage.Dose)
  return false;
#undef DO_
}

void Dosage_Dose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Dosage.Dose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Range range = 1;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_range(), output);
  }

  // .google.fhir.stu3.proto.SimpleQuantity quantity = 2;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_quantity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Dosage.Dose)
}

::google::protobuf::uint8* Dosage_Dose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Dosage.Dose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Range range = 1;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_range(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SimpleQuantity quantity = 2;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_quantity(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Dosage.Dose)
  return target;
}

size_t Dosage_Dose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Dosage.Dose)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (dose_case()) {
    // .google.fhir.stu3.proto.Range range = 1;
    case kRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *dose_.range_);
      break;
    }
    // .google.fhir.stu3.proto.SimpleQuantity quantity = 2;
    case kQuantity: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *dose_.quantity_);
      break;
    }
    case DOSE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Dosage_Dose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Dosage.Dose)
  GOOGLE_DCHECK_NE(&from, this);
  const Dosage_Dose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Dosage_Dose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Dosage.Dose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Dosage.Dose)
    MergeFrom(*source);
  }
}

void Dosage_Dose::MergeFrom(const Dosage_Dose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Dosage.Dose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.dose_case()) {
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::SimpleQuantity::MergeFrom(from.quantity());
      break;
    }
    case DOSE_NOT_SET: {
      break;
    }
  }
}

void Dosage_Dose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Dosage.Dose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dosage_Dose::CopyFrom(const Dosage_Dose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Dosage.Dose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dosage_Dose::IsInitialized() const {
  return true;
}

void Dosage_Dose::Swap(Dosage_Dose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dosage_Dose::InternalSwap(Dosage_Dose* other) {
  using std::swap;
  swap(dose_, other->dose_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Dosage_Dose::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Dosage_Rate::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Dosage_Rate_default_instance_.ratio_ = const_cast< ::google::fhir::stu3::proto::Ratio*>(
      ::google::fhir::stu3::proto::Ratio::internal_default_instance());
  ::google::fhir::stu3::proto::_Dosage_Rate_default_instance_.range_ = const_cast< ::google::fhir::stu3::proto::Range*>(
      ::google::fhir::stu3::proto::Range::internal_default_instance());
  ::google::fhir::stu3::proto::_Dosage_Rate_default_instance_.quantity_ = const_cast< ::google::fhir::stu3::proto::SimpleQuantity*>(
      ::google::fhir::stu3::proto::SimpleQuantity::internal_default_instance());
}
void Dosage_Rate::set_allocated_ratio(::google::fhir::stu3::proto::Ratio* ratio) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rate();
  if (ratio) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ratio = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ratio, submessage_arena);
    }
    set_has_ratio();
    rate_.ratio_ = ratio;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Dosage.Rate.ratio)
}
void Dosage_Rate::set_allocated_range(::google::fhir::stu3::proto::Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rate();
  if (range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    set_has_range();
    rate_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Dosage.Rate.range)
}
void Dosage_Rate::set_allocated_quantity(::google::fhir::stu3::proto::SimpleQuantity* quantity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rate();
  if (quantity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quantity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quantity, submessage_arena);
    }
    set_has_quantity();
    rate_.quantity_ = quantity;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Dosage.Rate.quantity)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dosage_Rate::kRatioFieldNumber;
const int Dosage_Rate::kRangeFieldNumber;
const int Dosage_Rate::kQuantityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dosage_Rate::Dosage_Rate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Dosage_Rate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Dosage.Rate)
}
Dosage_Rate::Dosage_Rate(const Dosage_Rate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_rate();
  switch (from.rate_case()) {
    case kRatio: {
      mutable_ratio()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.ratio());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::SimpleQuantity::MergeFrom(from.quantity());
      break;
    }
    case RATE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Dosage.Rate)
}

void Dosage_Rate::SharedCtor() {
  clear_has_rate();
}

Dosage_Rate::~Dosage_Rate() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Dosage.Rate)
  SharedDtor();
}

void Dosage_Rate::SharedDtor() {
  if (has_rate()) {
    clear_rate();
  }
}

void Dosage_Rate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Dosage_Rate::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Dosage_Rate& Dosage_Rate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Dosage_Rate.base);
  return *internal_default_instance();
}


void Dosage_Rate::clear_rate() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.Dosage.Rate)
  switch (rate_case()) {
    case kRatio: {
      delete rate_.ratio_;
      break;
    }
    case kRange: {
      delete rate_.range_;
      break;
    }
    case kQuantity: {
      delete rate_.quantity_;
      break;
    }
    case RATE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RATE_NOT_SET;
}


void Dosage_Rate::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Dosage.Rate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_rate();
  _internal_metadata_.Clear();
}

bool Dosage_Rate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Dosage.Rate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Ratio ratio = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ratio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Range range = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SimpleQuantity quantity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quantity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Dosage.Rate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Dosage.Rate)
  return false;
#undef DO_
}

void Dosage_Rate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Dosage.Rate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Ratio ratio = 1;
  if (has_ratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_ratio(), output);
  }

  // .google.fhir.stu3.proto.Range range = 2;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_range(), output);
  }

  // .google.fhir.stu3.proto.SimpleQuantity quantity = 3;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_quantity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Dosage.Rate)
}

::google::protobuf::uint8* Dosage_Rate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Dosage.Rate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Ratio ratio = 1;
  if (has_ratio()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_ratio(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Range range = 2;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_range(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SimpleQuantity quantity = 3;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_quantity(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Dosage.Rate)
  return target;
}

size_t Dosage_Rate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Dosage.Rate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (rate_case()) {
    // .google.fhir.stu3.proto.Ratio ratio = 1;
    case kRatio: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rate_.ratio_);
      break;
    }
    // .google.fhir.stu3.proto.Range range = 2;
    case kRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rate_.range_);
      break;
    }
    // .google.fhir.stu3.proto.SimpleQuantity quantity = 3;
    case kQuantity: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rate_.quantity_);
      break;
    }
    case RATE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Dosage_Rate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Dosage.Rate)
  GOOGLE_DCHECK_NE(&from, this);
  const Dosage_Rate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Dosage_Rate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Dosage.Rate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Dosage.Rate)
    MergeFrom(*source);
  }
}

void Dosage_Rate::MergeFrom(const Dosage_Rate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Dosage.Rate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.rate_case()) {
    case kRatio: {
      mutable_ratio()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.ratio());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::SimpleQuantity::MergeFrom(from.quantity());
      break;
    }
    case RATE_NOT_SET: {
      break;
    }
  }
}

void Dosage_Rate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Dosage.Rate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dosage_Rate::CopyFrom(const Dosage_Rate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Dosage.Rate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dosage_Rate::IsInitialized() const {
  return true;
}

void Dosage_Rate::Swap(Dosage_Rate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dosage_Rate::InternalSwap(Dosage_Rate* other) {
  using std::swap;
  swap(rate_, other->rate_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Dosage_Rate::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Dosage::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Dosage_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Dosage_default_instance_._instance.get_mutable()->sequence_ = const_cast< ::google::fhir::stu3::proto::Integer*>(
      ::google::fhir::stu3::proto::Integer::internal_default_instance());
  ::google::fhir::stu3::proto::_Dosage_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Dosage_default_instance_._instance.get_mutable()->patient_instruction_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Dosage_default_instance_._instance.get_mutable()->timing_ = const_cast< ::google::fhir::stu3::proto::Timing*>(
      ::google::fhir::stu3::proto::Timing::internal_default_instance());
  ::google::fhir::stu3::proto::_Dosage_default_instance_._instance.get_mutable()->as_needed_ = const_cast< ::google::fhir::stu3::proto::Dosage_AsNeeded*>(
      ::google::fhir::stu3::proto::Dosage_AsNeeded::internal_default_instance());
  ::google::fhir::stu3::proto::_Dosage_default_instance_._instance.get_mutable()->site_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::proto::_Dosage_default_instance_._instance.get_mutable()->route_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::proto::_Dosage_default_instance_._instance.get_mutable()->method_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::proto::_Dosage_default_instance_._instance.get_mutable()->dose_ = const_cast< ::google::fhir::stu3::proto::Dosage_Dose*>(
      ::google::fhir::stu3::proto::Dosage_Dose::internal_default_instance());
  ::google::fhir::stu3::proto::_Dosage_default_instance_._instance.get_mutable()->max_dose_per_period_ = const_cast< ::google::fhir::stu3::proto::Ratio*>(
      ::google::fhir::stu3::proto::Ratio::internal_default_instance());
  ::google::fhir::stu3::proto::_Dosage_default_instance_._instance.get_mutable()->max_dose_per_administration_ = const_cast< ::google::fhir::stu3::proto::SimpleQuantity*>(
      ::google::fhir::stu3::proto::SimpleQuantity::internal_default_instance());
  ::google::fhir::stu3::proto::_Dosage_default_instance_._instance.get_mutable()->max_dose_per_lifetime_ = const_cast< ::google::fhir::stu3::proto::SimpleQuantity*>(
      ::google::fhir::stu3::proto::SimpleQuantity::internal_default_instance());
  ::google::fhir::stu3::proto::_Dosage_default_instance_._instance.get_mutable()->rate_ = const_cast< ::google::fhir::stu3::proto::Dosage_Rate*>(
      ::google::fhir::stu3::proto::Dosage_Rate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dosage::kIdFieldNumber;
const int Dosage::kExtensionFieldNumber;
const int Dosage::kSequenceFieldNumber;
const int Dosage::kTextFieldNumber;
const int Dosage::kAdditionalInstructionFieldNumber;
const int Dosage::kPatientInstructionFieldNumber;
const int Dosage::kTimingFieldNumber;
const int Dosage::kAsNeededFieldNumber;
const int Dosage::kSiteFieldNumber;
const int Dosage::kRouteFieldNumber;
const int Dosage::kMethodFieldNumber;
const int Dosage::kDoseFieldNumber;
const int Dosage::kMaxDosePerPeriodFieldNumber;
const int Dosage::kMaxDosePerAdministrationFieldNumber;
const int Dosage::kMaxDosePerLifetimeFieldNumber;
const int Dosage::kRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dosage::Dosage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Dosage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Dosage)
}
Dosage::Dosage(const Dosage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      additional_instruction_(from.additional_instruction_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_sequence()) {
    sequence_ = new ::google::fhir::stu3::proto::Integer(*from.sequence_);
  } else {
    sequence_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::String(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_patient_instruction()) {
    patient_instruction_ = new ::google::fhir::stu3::proto::String(*from.patient_instruction_);
  } else {
    patient_instruction_ = NULL;
  }
  if (from.has_timing()) {
    timing_ = new ::google::fhir::stu3::proto::Timing(*from.timing_);
  } else {
    timing_ = NULL;
  }
  if (from.has_as_needed()) {
    as_needed_ = new ::google::fhir::stu3::proto::Dosage_AsNeeded(*from.as_needed_);
  } else {
    as_needed_ = NULL;
  }
  if (from.has_site()) {
    site_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.site_);
  } else {
    site_ = NULL;
  }
  if (from.has_route()) {
    route_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.route_);
  } else {
    route_ = NULL;
  }
  if (from.has_method()) {
    method_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.method_);
  } else {
    method_ = NULL;
  }
  if (from.has_dose()) {
    dose_ = new ::google::fhir::stu3::proto::Dosage_Dose(*from.dose_);
  } else {
    dose_ = NULL;
  }
  if (from.has_max_dose_per_period()) {
    max_dose_per_period_ = new ::google::fhir::stu3::proto::Ratio(*from.max_dose_per_period_);
  } else {
    max_dose_per_period_ = NULL;
  }
  if (from.has_max_dose_per_administration()) {
    max_dose_per_administration_ = new ::google::fhir::stu3::proto::SimpleQuantity(*from.max_dose_per_administration_);
  } else {
    max_dose_per_administration_ = NULL;
  }
  if (from.has_max_dose_per_lifetime()) {
    max_dose_per_lifetime_ = new ::google::fhir::stu3::proto::SimpleQuantity(*from.max_dose_per_lifetime_);
  } else {
    max_dose_per_lifetime_ = NULL;
  }
  if (from.has_rate()) {
    rate_ = new ::google::fhir::stu3::proto::Dosage_Rate(*from.rate_);
  } else {
    rate_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Dosage)
}

void Dosage::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rate_) -
      reinterpret_cast<char*>(&id_)) + sizeof(rate_));
}

Dosage::~Dosage() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Dosage)
  SharedDtor();
}

void Dosage::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete sequence_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete patient_instruction_;
  if (this != internal_default_instance()) delete timing_;
  if (this != internal_default_instance()) delete as_needed_;
  if (this != internal_default_instance()) delete site_;
  if (this != internal_default_instance()) delete route_;
  if (this != internal_default_instance()) delete method_;
  if (this != internal_default_instance()) delete dose_;
  if (this != internal_default_instance()) delete max_dose_per_period_;
  if (this != internal_default_instance()) delete max_dose_per_administration_;
  if (this != internal_default_instance()) delete max_dose_per_lifetime_;
  if (this != internal_default_instance()) delete rate_;
}

void Dosage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Dosage::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Dosage& Dosage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Dosage.base);
  return *internal_default_instance();
}


void Dosage::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Dosage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  additional_instruction_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && sequence_ != NULL) {
    delete sequence_;
  }
  sequence_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && patient_instruction_ != NULL) {
    delete patient_instruction_;
  }
  patient_instruction_ = NULL;
  if (GetArenaNoVirtual() == NULL && timing_ != NULL) {
    delete timing_;
  }
  timing_ = NULL;
  if (GetArenaNoVirtual() == NULL && as_needed_ != NULL) {
    delete as_needed_;
  }
  as_needed_ = NULL;
  if (GetArenaNoVirtual() == NULL && site_ != NULL) {
    delete site_;
  }
  site_ = NULL;
  if (GetArenaNoVirtual() == NULL && route_ != NULL) {
    delete route_;
  }
  route_ = NULL;
  if (GetArenaNoVirtual() == NULL && method_ != NULL) {
    delete method_;
  }
  method_ = NULL;
  if (GetArenaNoVirtual() == NULL && dose_ != NULL) {
    delete dose_;
  }
  dose_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_dose_per_period_ != NULL) {
    delete max_dose_per_period_;
  }
  max_dose_per_period_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_dose_per_administration_ != NULL) {
    delete max_dose_per_administration_;
  }
  max_dose_per_administration_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_dose_per_lifetime_ != NULL) {
    delete max_dose_per_lifetime_;
  }
  max_dose_per_lifetime_ = NULL;
  if (GetArenaNoVirtual() == NULL && rate_ != NULL) {
    delete rate_;
  }
  rate_ = NULL;
  _internal_metadata_.Clear();
}

bool Dosage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Dosage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Integer sequence = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sequence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String text = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.CodeableConcept additional_instruction = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_additional_instruction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String patient_instruction = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_patient_instruction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Timing timing = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Dosage.AsNeeded as_needed = 8 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_as_needed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept site = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_site()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept route = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept method = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_method()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Dosage.Dose dose = 12 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Ratio max_dose_per_period = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_dose_per_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SimpleQuantity max_dose_per_administration = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_dose_per_administration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SimpleQuantity max_dose_per_lifetime = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_dose_per_lifetime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Dosage.Rate rate = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Dosage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Dosage)
  return false;
#undef DO_
}

void Dosage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Dosage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Integer sequence = 3;
  if (this->has_sequence()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_sequence(), output);
  }

  // .google.fhir.stu3.proto.String text = 4;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_text(), output);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept additional_instruction = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->additional_instruction_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->additional_instruction(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String patient_instruction = 6;
  if (this->has_patient_instruction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_patient_instruction(), output);
  }

  // .google.fhir.stu3.proto.Timing timing = 7;
  if (this->has_timing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_timing(), output);
  }

  // .google.fhir.stu3.proto.Dosage.AsNeeded as_needed = 8 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_as_needed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_as_needed(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept site = 9;
  if (this->has_site()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_site(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept route = 10;
  if (this->has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_route(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept method = 11;
  if (this->has_method()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_method(), output);
  }

  // .google.fhir.stu3.proto.Dosage.Dose dose = 12 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_dose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_dose(), output);
  }

  // .google.fhir.stu3.proto.Ratio max_dose_per_period = 13;
  if (this->has_max_dose_per_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_max_dose_per_period(), output);
  }

  // .google.fhir.stu3.proto.SimpleQuantity max_dose_per_administration = 14;
  if (this->has_max_dose_per_administration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_max_dose_per_administration(), output);
  }

  // .google.fhir.stu3.proto.SimpleQuantity max_dose_per_lifetime = 15;
  if (this->has_max_dose_per_lifetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_max_dose_per_lifetime(), output);
  }

  // .google.fhir.stu3.proto.Dosage.Rate rate = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_rate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Dosage)
}

::google::protobuf::uint8* Dosage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Dosage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Integer sequence = 3;
  if (this->has_sequence()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_sequence(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String text = 4;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_text(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept additional_instruction = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->additional_instruction_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->additional_instruction(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String patient_instruction = 6;
  if (this->has_patient_instruction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_patient_instruction(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Timing timing = 7;
  if (this->has_timing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_timing(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Dosage.AsNeeded as_needed = 8 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_as_needed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_as_needed(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept site = 9;
  if (this->has_site()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_site(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept route = 10;
  if (this->has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_route(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept method = 11;
  if (this->has_method()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_method(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Dosage.Dose dose = 12 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_dose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_dose(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Ratio max_dose_per_period = 13;
  if (this->has_max_dose_per_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_max_dose_per_period(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SimpleQuantity max_dose_per_administration = 14;
  if (this->has_max_dose_per_administration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_max_dose_per_administration(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SimpleQuantity max_dose_per_lifetime = 15;
  if (this->has_max_dose_per_lifetime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_max_dose_per_lifetime(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Dosage.Rate rate = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_rate(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Dosage)
  return target;
}

size_t Dosage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Dosage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.CodeableConcept additional_instruction = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->additional_instruction_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->additional_instruction(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Integer sequence = 3;
  if (this->has_sequence()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sequence_);
  }

  // .google.fhir.stu3.proto.String text = 4;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.String patient_instruction = 6;
  if (this->has_patient_instruction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *patient_instruction_);
  }

  // .google.fhir.stu3.proto.Timing timing = 7;
  if (this->has_timing()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timing_);
  }

  // .google.fhir.stu3.proto.Dosage.AsNeeded as_needed = 8 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_as_needed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *as_needed_);
  }

  // .google.fhir.stu3.proto.CodeableConcept site = 9;
  if (this->has_site()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *site_);
  }

  // .google.fhir.stu3.proto.CodeableConcept route = 10;
  if (this->has_route()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_);
  }

  // .google.fhir.stu3.proto.CodeableConcept method = 11;
  if (this->has_method()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *method_);
  }

  // .google.fhir.stu3.proto.Dosage.Dose dose = 12 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_dose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dose_);
  }

  // .google.fhir.stu3.proto.Ratio max_dose_per_period = 13;
  if (this->has_max_dose_per_period()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_dose_per_period_);
  }

  // .google.fhir.stu3.proto.SimpleQuantity max_dose_per_administration = 14;
  if (this->has_max_dose_per_administration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_dose_per_administration_);
  }

  // .google.fhir.stu3.proto.SimpleQuantity max_dose_per_lifetime = 15;
  if (this->has_max_dose_per_lifetime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_dose_per_lifetime_);
  }

  // .google.fhir.stu3.proto.Dosage.Rate rate = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_rate()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rate_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Dosage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Dosage)
  GOOGLE_DCHECK_NE(&from, this);
  const Dosage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Dosage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Dosage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Dosage)
    MergeFrom(*source);
  }
}

void Dosage::MergeFrom(const Dosage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Dosage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  additional_instruction_.MergeFrom(from.additional_instruction_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_sequence()) {
    mutable_sequence()->::google::fhir::stu3::proto::Integer::MergeFrom(from.sequence());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::String::MergeFrom(from.text());
  }
  if (from.has_patient_instruction()) {
    mutable_patient_instruction()->::google::fhir::stu3::proto::String::MergeFrom(from.patient_instruction());
  }
  if (from.has_timing()) {
    mutable_timing()->::google::fhir::stu3::proto::Timing::MergeFrom(from.timing());
  }
  if (from.has_as_needed()) {
    mutable_as_needed()->::google::fhir::stu3::proto::Dosage_AsNeeded::MergeFrom(from.as_needed());
  }
  if (from.has_site()) {
    mutable_site()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.site());
  }
  if (from.has_route()) {
    mutable_route()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.route());
  }
  if (from.has_method()) {
    mutable_method()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.method());
  }
  if (from.has_dose()) {
    mutable_dose()->::google::fhir::stu3::proto::Dosage_Dose::MergeFrom(from.dose());
  }
  if (from.has_max_dose_per_period()) {
    mutable_max_dose_per_period()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.max_dose_per_period());
  }
  if (from.has_max_dose_per_administration()) {
    mutable_max_dose_per_administration()->::google::fhir::stu3::proto::SimpleQuantity::MergeFrom(from.max_dose_per_administration());
  }
  if (from.has_max_dose_per_lifetime()) {
    mutable_max_dose_per_lifetime()->::google::fhir::stu3::proto::SimpleQuantity::MergeFrom(from.max_dose_per_lifetime());
  }
  if (from.has_rate()) {
    mutable_rate()->::google::fhir::stu3::proto::Dosage_Rate::MergeFrom(from.rate());
  }
}

void Dosage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Dosage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dosage::CopyFrom(const Dosage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Dosage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dosage::IsInitialized() const {
  return true;
}

void Dosage::Swap(Dosage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dosage::InternalSwap(Dosage* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&additional_instruction_)->InternalSwap(CastToBase(&other->additional_instruction_));
  swap(id_, other->id_);
  swap(sequence_, other->sequence_);
  swap(text_, other->text_);
  swap(patient_instruction_, other->patient_instruction_);
  swap(timing_, other->timing_);
  swap(as_needed_, other->as_needed_);
  swap(site_, other->site_);
  swap(route_, other->route_);
  swap(method_, other->method_);
  swap(dose_, other->dose_);
  swap(max_dose_per_period_, other->max_dose_per_period_);
  swap(max_dose_per_administration_, other->max_dose_per_administration_);
  swap(max_dose_per_lifetime_, other->max_dose_per_lifetime_);
  swap(rate_, other->rate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Dosage::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Duration::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Duration_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Duration_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_Duration_default_instance_._instance.get_mutable()->comparator_ = const_cast< ::google::fhir::stu3::proto::QuantityComparatorCode*>(
      ::google::fhir::stu3::proto::QuantityComparatorCode::internal_default_instance());
  ::google::fhir::stu3::proto::_Duration_default_instance_._instance.get_mutable()->unit_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Duration_default_instance_._instance.get_mutable()->system_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_Duration_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::Code*>(
      ::google::fhir::stu3::proto::Code::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Duration::kIdFieldNumber;
const int Duration::kExtensionFieldNumber;
const int Duration::kValueFieldNumber;
const int Duration::kComparatorFieldNumber;
const int Duration::kUnitFieldNumber;
const int Duration::kSystemFieldNumber;
const int Duration::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Duration::Duration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Duration)
}
Duration::Duration(const Duration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::fhir::stu3::proto::Decimal(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_comparator()) {
    comparator_ = new ::google::fhir::stu3::proto::QuantityComparatorCode(*from.comparator_);
  } else {
    comparator_ = NULL;
  }
  if (from.has_unit()) {
    unit_ = new ::google::fhir::stu3::proto::String(*from.unit_);
  } else {
    unit_ = NULL;
  }
  if (from.has_system()) {
    system_ = new ::google::fhir::stu3::proto::Uri(*from.system_);
  } else {
    system_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::Code(*from.code_);
  } else {
    code_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Duration)
}

void Duration::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&id_)) + sizeof(code_));
}

Duration::~Duration() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Duration)
  SharedDtor();
}

void Duration::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete comparator_;
  if (this != internal_default_instance()) delete unit_;
  if (this != internal_default_instance()) delete system_;
  if (this != internal_default_instance()) delete code_;
}

void Duration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Duration::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Duration& Duration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Duration::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Duration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && comparator_ != NULL) {
    delete comparator_;
  }
  comparator_ = NULL;
  if (GetArenaNoVirtual() == NULL && unit_ != NULL) {
    delete unit_;
  }
  unit_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_ != NULL) {
    delete system_;
  }
  system_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  _internal_metadata_.Clear();
}

bool Duration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Duration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_comparator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String unit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri system = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Code code = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Duration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Duration)
  return false;
#undef DO_
}

void Duration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Duration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_value(), output);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
  if (this->has_comparator()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_comparator(), output);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_unit(), output);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_system(), output);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Duration)
}

::google::protobuf::uint8* Duration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Duration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
  if (this->has_comparator()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_comparator(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_unit(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_system(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_code(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Duration)
  return target;
}

size_t Duration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Duration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
  if (this->has_comparator()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *comparator_);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *unit_);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *system_);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Duration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Duration)
  GOOGLE_DCHECK_NE(&from, this);
  const Duration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Duration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Duration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Duration)
    MergeFrom(*source);
  }
}

void Duration::MergeFrom(const Duration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Duration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_value()) {
    mutable_value()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.value());
  }
  if (from.has_comparator()) {
    mutable_comparator()->::google::fhir::stu3::proto::QuantityComparatorCode::MergeFrom(from.comparator());
  }
  if (from.has_unit()) {
    mutable_unit()->::google::fhir::stu3::proto::String::MergeFrom(from.unit());
  }
  if (from.has_system()) {
    mutable_system()->::google::fhir::stu3::proto::Uri::MergeFrom(from.system());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
  }
}

void Duration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Duration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Duration::CopyFrom(const Duration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Duration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Duration::IsInitialized() const {
  return true;
}

void Duration::Swap(Duration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Duration::InternalSwap(Duration* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  swap(comparator_, other->comparator_);
  swap(unit_, other->unit_);
  swap(system_, other->system_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Duration::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HumanName::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_HumanName_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_HumanName_default_instance_._instance.get_mutable()->use_ = const_cast< ::google::fhir::stu3::proto::NameUseCode*>(
      ::google::fhir::stu3::proto::NameUseCode::internal_default_instance());
  ::google::fhir::stu3::proto::_HumanName_default_instance_._instance.get_mutable()->text_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_HumanName_default_instance_._instance.get_mutable()->family_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_HumanName_default_instance_._instance.get_mutable()->period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HumanName::kIdFieldNumber;
const int HumanName::kExtensionFieldNumber;
const int HumanName::kUseFieldNumber;
const int HumanName::kTextFieldNumber;
const int HumanName::kFamilyFieldNumber;
const int HumanName::kGivenFieldNumber;
const int HumanName::kPrefixFieldNumber;
const int HumanName::kSuffixFieldNumber;
const int HumanName::kPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HumanName::HumanName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.HumanName)
}
HumanName::HumanName(const HumanName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      given_(from.given_),
      prefix_(from.prefix_),
      suffix_(from.suffix_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_use()) {
    use_ = new ::google::fhir::stu3::proto::NameUseCode(*from.use_);
  } else {
    use_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::google::fhir::stu3::proto::String(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_family()) {
    family_ = new ::google::fhir::stu3::proto::String(*from.family_);
  } else {
    family_ = NULL;
  }
  if (from.has_period()) {
    period_ = new ::google::fhir::stu3::proto::Period(*from.period_);
  } else {
    period_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.HumanName)
}

void HumanName::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&period_) -
      reinterpret_cast<char*>(&id_)) + sizeof(period_));
}

HumanName::~HumanName() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.HumanName)
  SharedDtor();
}

void HumanName::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete use_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete family_;
  if (this != internal_default_instance()) delete period_;
}

void HumanName::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HumanName::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HumanName& HumanName::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void HumanName::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.HumanName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  given_.Clear();
  prefix_.Clear();
  suffix_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && use_ != NULL) {
    delete use_;
  }
  use_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && family_ != NULL) {
    delete family_;
  }
  family_ = NULL;
  if (GetArenaNoVirtual() == NULL && period_ != NULL) {
    delete period_;
  }
  period_ = NULL;
  _internal_metadata_.Clear();
}

bool HumanName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.HumanName)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.NameUseCode use = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_use()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String text = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String family = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_family()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.String given = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_given()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.String prefix = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_prefix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.String suffix = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_suffix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.HumanName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.HumanName)
  return false;
#undef DO_
}

void HumanName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.HumanName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.NameUseCode use = 3;
  if (this->has_use()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_use(), output);
  }

  // .google.fhir.stu3.proto.String text = 4;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_text(), output);
  }

  // .google.fhir.stu3.proto.String family = 5;
  if (this->has_family()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_family(), output);
  }

  // repeated .google.fhir.stu3.proto.String given = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->given_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->given(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.String prefix = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prefix_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->prefix(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.String suffix = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->suffix_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->suffix(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Period period = 9;
  if (this->has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_period(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.HumanName)
}

::google::protobuf::uint8* HumanName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.HumanName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.NameUseCode use = 3;
  if (this->has_use()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_use(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String text = 4;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_text(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String family = 5;
  if (this->has_family()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_family(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.String given = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->given_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->given(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.String prefix = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prefix_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->prefix(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.String suffix = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->suffix_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->suffix(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 9;
  if (this->has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_period(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.HumanName)
  return target;
}

size_t HumanName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.HumanName)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.String given = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->given_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->given(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.String prefix = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->prefix_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->prefix(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.String suffix = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->suffix_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->suffix(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.NameUseCode use = 3;
  if (this->has_use()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *use_);
  }

  // .google.fhir.stu3.proto.String text = 4;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .google.fhir.stu3.proto.String family = 5;
  if (this->has_family()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *family_);
  }

  // .google.fhir.stu3.proto.Period period = 9;
  if (this->has_period()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *period_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HumanName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.HumanName)
  GOOGLE_DCHECK_NE(&from, this);
  const HumanName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HumanName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.HumanName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.HumanName)
    MergeFrom(*source);
  }
}

void HumanName::MergeFrom(const HumanName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.HumanName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  given_.MergeFrom(from.given_);
  prefix_.MergeFrom(from.prefix_);
  suffix_.MergeFrom(from.suffix_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_use()) {
    mutable_use()->::google::fhir::stu3::proto::NameUseCode::MergeFrom(from.use());
  }
  if (from.has_text()) {
    mutable_text()->::google::fhir::stu3::proto::String::MergeFrom(from.text());
  }
  if (from.has_family()) {
    mutable_family()->::google::fhir::stu3::proto::String::MergeFrom(from.family());
  }
  if (from.has_period()) {
    mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
  }
}

void HumanName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.HumanName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HumanName::CopyFrom(const HumanName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.HumanName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HumanName::IsInitialized() const {
  return true;
}

void HumanName::Swap(HumanName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HumanName::InternalSwap(HumanName* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&given_)->InternalSwap(CastToBase(&other->given_));
  CastToBase(&prefix_)->InternalSwap(CastToBase(&other->prefix_));
  CastToBase(&suffix_)->InternalSwap(CastToBase(&other->suffix_));
  swap(id_, other->id_);
  swap(use_, other->use_);
  swap(text_, other->text_);
  swap(family_, other->family_);
  swap(period_, other->period_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HumanName::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Identifier::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Identifier_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Identifier_default_instance_._instance.get_mutable()->use_ = const_cast< ::google::fhir::stu3::proto::IdentifierUseCode*>(
      ::google::fhir::stu3::proto::IdentifierUseCode::internal_default_instance());
  ::google::fhir::stu3::proto::_Identifier_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::proto::_Identifier_default_instance_._instance.get_mutable()->system_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_Identifier_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Identifier_default_instance_._instance.get_mutable()->period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
  ::google::fhir::stu3::proto::_Identifier_default_instance_._instance.get_mutable()->assigner_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Identifier::kIdFieldNumber;
const int Identifier::kExtensionFieldNumber;
const int Identifier::kUseFieldNumber;
const int Identifier::kTypeFieldNumber;
const int Identifier::kSystemFieldNumber;
const int Identifier::kValueFieldNumber;
const int Identifier::kPeriodFieldNumber;
const int Identifier::kAssignerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Identifier::Identifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Identifier)
}
Identifier::Identifier(const Identifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_use()) {
    use_ = new ::google::fhir::stu3::proto::IdentifierUseCode(*from.use_);
  } else {
    use_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_system()) {
    system_ = new ::google::fhir::stu3::proto::Uri(*from.system_);
  } else {
    system_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::fhir::stu3::proto::String(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_period()) {
    period_ = new ::google::fhir::stu3::proto::Period(*from.period_);
  } else {
    period_ = NULL;
  }
  if (from.has_assigner()) {
    assigner_ = new ::google::fhir::stu3::proto::Reference(*from.assigner_);
  } else {
    assigner_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Identifier)
}

void Identifier::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&assigner_) -
      reinterpret_cast<char*>(&id_)) + sizeof(assigner_));
}

Identifier::~Identifier() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Identifier)
  SharedDtor();
}

void Identifier::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete use_;
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete system_;
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete period_;
  if (this != internal_default_instance()) delete assigner_;
}

void Identifier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Identifier::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Identifier& Identifier::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Identifier::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Identifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && use_ != NULL) {
    delete use_;
  }
  use_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_ != NULL) {
    delete system_;
  }
  system_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && period_ != NULL) {
    delete period_;
  }
  period_ = NULL;
  if (GetArenaNoVirtual() == NULL && assigner_ != NULL) {
    delete assigner_;
  }
  assigner_ = NULL;
  _internal_metadata_.Clear();
}

bool Identifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Identifier)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.IdentifierUseCode use = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_use()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri system = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference assigner = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_assigner()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Identifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Identifier)
  return false;
#undef DO_
}

void Identifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Identifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.IdentifierUseCode use = 3;
  if (this->has_use()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_use(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept type = 4;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_type(), output);
  }

  // .google.fhir.stu3.proto.Uri system = 5;
  if (this->has_system()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_system(), output);
  }

  // .google.fhir.stu3.proto.String value = 6;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_value(), output);
  }

  // .google.fhir.stu3.proto.Period period = 7;
  if (this->has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_period(), output);
  }

  // .google.fhir.stu3.proto.Reference assigner = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_assigner()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_assigner(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Identifier)
}

::google::protobuf::uint8* Identifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Identifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.IdentifierUseCode use = 3;
  if (this->has_use()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_use(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept type = 4;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_type(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri system = 5;
  if (this->has_system()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_system(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String value = 6;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 7;
  if (this->has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_period(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference assigner = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_assigner()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_assigner(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Identifier)
  return target;
}

size_t Identifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Identifier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.IdentifierUseCode use = 3;
  if (this->has_use()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *use_);
  }

  // .google.fhir.stu3.proto.CodeableConcept type = 4;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .google.fhir.stu3.proto.Uri system = 5;
  if (this->has_system()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *system_);
  }

  // .google.fhir.stu3.proto.String value = 6;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .google.fhir.stu3.proto.Period period = 7;
  if (this->has_period()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *period_);
  }

  // .google.fhir.stu3.proto.Reference assigner = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (this->has_assigner()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *assigner_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Identifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Identifier)
  GOOGLE_DCHECK_NE(&from, this);
  const Identifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Identifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Identifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Identifier)
    MergeFrom(*source);
  }
}

void Identifier::MergeFrom(const Identifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Identifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_use()) {
    mutable_use()->::google::fhir::stu3::proto::IdentifierUseCode::MergeFrom(from.use());
  }
  if (from.has_type()) {
    mutable_type()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.type());
  }
  if (from.has_system()) {
    mutable_system()->::google::fhir::stu3::proto::Uri::MergeFrom(from.system());
  }
  if (from.has_value()) {
    mutable_value()->::google::fhir::stu3::proto::String::MergeFrom(from.value());
  }
  if (from.has_period()) {
    mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
  }
  if (from.has_assigner()) {
    mutable_assigner()->::google::fhir::stu3::proto::Reference::MergeFrom(from.assigner());
  }
}

void Identifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Identifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identifier::CopyFrom(const Identifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Identifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identifier::IsInitialized() const {
  return true;
}

void Identifier::Swap(Identifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Identifier::InternalSwap(Identifier* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(use_, other->use_);
  swap(type_, other->type_);
  swap(system_, other->system_);
  swap(value_, other->value_);
  swap(period_, other->period_);
  swap(assigner_, other->assigner_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Identifier::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Meta::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Meta_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Meta_default_instance_._instance.get_mutable()->version_id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::proto::_Meta_default_instance_._instance.get_mutable()->last_updated_ = const_cast< ::google::fhir::stu3::proto::Instant*>(
      ::google::fhir::stu3::proto::Instant::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Meta::kIdFieldNumber;
const int Meta::kExtensionFieldNumber;
const int Meta::kVersionIdFieldNumber;
const int Meta::kLastUpdatedFieldNumber;
const int Meta::kProfileFieldNumber;
const int Meta::kSecurityFieldNumber;
const int Meta::kTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Meta::Meta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Meta)
}
Meta::Meta(const Meta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      profile_(from.profile_),
      security_(from.security_),
      tag_(from.tag_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_version_id()) {
    version_id_ = new ::google::fhir::stu3::proto::Id(*from.version_id_);
  } else {
    version_id_ = NULL;
  }
  if (from.has_last_updated()) {
    last_updated_ = new ::google::fhir::stu3::proto::Instant(*from.last_updated_);
  } else {
    last_updated_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Meta)
}

void Meta::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_updated_) -
      reinterpret_cast<char*>(&id_)) + sizeof(last_updated_));
}

Meta::~Meta() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Meta)
  SharedDtor();
}

void Meta::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete version_id_;
  if (this != internal_default_instance()) delete last_updated_;
}

void Meta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Meta::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Meta& Meta::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Meta::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Meta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  profile_.Clear();
  security_.Clear();
  tag_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && version_id_ != NULL) {
    delete version_id_;
  }
  version_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_updated_ != NULL) {
    delete last_updated_;
  }
  last_updated_ = NULL;
  _internal_metadata_.Clear();
}

bool Meta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Meta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Id version_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Instant last_updated = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_updated()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Uri profile = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Coding security = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_security()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Coding tag = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tag()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Meta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Meta)
  return false;
#undef DO_
}

void Meta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Meta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Id version_id = 3;
  if (this->has_version_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_version_id(), output);
  }

  // .google.fhir.stu3.proto.Instant last_updated = 4;
  if (this->has_last_updated()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_last_updated(), output);
  }

  // repeated .google.fhir.stu3.proto.Uri profile = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->profile_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->profile(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Coding security = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->security_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->security(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Coding tag = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tag_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->tag(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Meta)
}

::google::protobuf::uint8* Meta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Meta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Id version_id = 3;
  if (this->has_version_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_version_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Instant last_updated = 4;
  if (this->has_last_updated()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_last_updated(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Uri profile = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->profile_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->profile(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Coding security = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->security_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->security(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Coding tag = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tag_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->tag(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Meta)
  return target;
}

size_t Meta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Meta)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Uri profile = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->profile_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->profile(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Coding security = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->security_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->security(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Coding tag = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->tag_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tag(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Id version_id = 3;
  if (this->has_version_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *version_id_);
  }

  // .google.fhir.stu3.proto.Instant last_updated = 4;
  if (this->has_last_updated()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_updated_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Meta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Meta)
  GOOGLE_DCHECK_NE(&from, this);
  const Meta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Meta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Meta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Meta)
    MergeFrom(*source);
  }
}

void Meta::MergeFrom(const Meta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Meta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  profile_.MergeFrom(from.profile_);
  security_.MergeFrom(from.security_);
  tag_.MergeFrom(from.tag_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_version_id()) {
    mutable_version_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.version_id());
  }
  if (from.has_last_updated()) {
    mutable_last_updated()->::google::fhir::stu3::proto::Instant::MergeFrom(from.last_updated());
  }
}

void Meta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Meta::CopyFrom(const Meta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Meta::IsInitialized() const {
  return true;
}

void Meta::Swap(Meta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Meta::InternalSwap(Meta* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&profile_)->InternalSwap(CastToBase(&other->profile_));
  CastToBase(&security_)->InternalSwap(CastToBase(&other->security_));
  CastToBase(&tag_)->InternalSwap(CastToBase(&other->tag_));
  swap(id_, other->id_);
  swap(version_id_, other->version_id_);
  swap(last_updated_, other->last_updated_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Meta::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Money::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Money_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Money_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_Money_default_instance_._instance.get_mutable()->comparator_ = const_cast< ::google::fhir::stu3::proto::QuantityComparatorCode*>(
      ::google::fhir::stu3::proto::QuantityComparatorCode::internal_default_instance());
  ::google::fhir::stu3::proto::_Money_default_instance_._instance.get_mutable()->unit_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Money_default_instance_._instance.get_mutable()->system_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_Money_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::Code*>(
      ::google::fhir::stu3::proto::Code::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Money::kIdFieldNumber;
const int Money::kExtensionFieldNumber;
const int Money::kValueFieldNumber;
const int Money::kComparatorFieldNumber;
const int Money::kUnitFieldNumber;
const int Money::kSystemFieldNumber;
const int Money::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Money::Money()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Money)
}
Money::Money(const Money& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::fhir::stu3::proto::Decimal(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_comparator()) {
    comparator_ = new ::google::fhir::stu3::proto::QuantityComparatorCode(*from.comparator_);
  } else {
    comparator_ = NULL;
  }
  if (from.has_unit()) {
    unit_ = new ::google::fhir::stu3::proto::String(*from.unit_);
  } else {
    unit_ = NULL;
  }
  if (from.has_system()) {
    system_ = new ::google::fhir::stu3::proto::Uri(*from.system_);
  } else {
    system_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::Code(*from.code_);
  } else {
    code_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Money)
}

void Money::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&id_)) + sizeof(code_));
}

Money::~Money() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Money)
  SharedDtor();
}

void Money::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete comparator_;
  if (this != internal_default_instance()) delete unit_;
  if (this != internal_default_instance()) delete system_;
  if (this != internal_default_instance()) delete code_;
}

void Money::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Money::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Money& Money::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Money::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Money)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && comparator_ != NULL) {
    delete comparator_;
  }
  comparator_ = NULL;
  if (GetArenaNoVirtual() == NULL && unit_ != NULL) {
    delete unit_;
  }
  unit_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_ != NULL) {
    delete system_;
  }
  system_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  _internal_metadata_.Clear();
}

bool Money::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Money)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_comparator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String unit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri system = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Code code = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Money)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Money)
  return false;
#undef DO_
}

void Money::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Money)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_value(), output);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
  if (this->has_comparator()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_comparator(), output);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_unit(), output);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_system(), output);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Money)
}

::google::protobuf::uint8* Money::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Money)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
  if (this->has_comparator()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_comparator(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_unit(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_system(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_code(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Money)
  return target;
}

size_t Money::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Money)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
  if (this->has_comparator()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *comparator_);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *unit_);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *system_);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Money::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Money)
  GOOGLE_DCHECK_NE(&from, this);
  const Money* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Money>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Money)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Money)
    MergeFrom(*source);
  }
}

void Money::MergeFrom(const Money& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Money)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_value()) {
    mutable_value()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.value());
  }
  if (from.has_comparator()) {
    mutable_comparator()->::google::fhir::stu3::proto::QuantityComparatorCode::MergeFrom(from.comparator());
  }
  if (from.has_unit()) {
    mutable_unit()->::google::fhir::stu3::proto::String::MergeFrom(from.unit());
  }
  if (from.has_system()) {
    mutable_system()->::google::fhir::stu3::proto::Uri::MergeFrom(from.system());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
  }
}

void Money::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Money)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Money::CopyFrom(const Money& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Money)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Money::IsInitialized() const {
  return true;
}

void Money::Swap(Money* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Money::InternalSwap(Money* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  swap(comparator_, other->comparator_);
  swap(unit_, other->unit_);
  swap(system_, other->system_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Money::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Period::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Period_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Period_default_instance_._instance.get_mutable()->start_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::proto::_Period_default_instance_._instance.get_mutable()->end_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Period::kIdFieldNumber;
const int Period::kExtensionFieldNumber;
const int Period::kStartFieldNumber;
const int Period::kEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Period::Period()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Period)
}
Period::Period(const Period& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_start()) {
    start_ = new ::google::fhir::stu3::proto::DateTime(*from.start_);
  } else {
    start_ = NULL;
  }
  if (from.has_end()) {
    end_ = new ::google::fhir::stu3::proto::DateTime(*from.end_);
  } else {
    end_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Period)
}

void Period::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&id_)) + sizeof(end_));
}

Period::~Period() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Period)
  SharedDtor();
}

void Period::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete start_;
  if (this != internal_default_instance()) delete end_;
}

void Period::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Period::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Period& Period::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Period::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Period)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_ != NULL) {
    delete start_;
  }
  start_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_ != NULL) {
    delete end_;
  }
  end_ = NULL;
  _internal_metadata_.Clear();
}

bool Period::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Period)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime start = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime end = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Period)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Period)
  return false;
#undef DO_
}

void Period::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Period)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.DateTime start = 3;
  if (this->has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_start(), output);
  }

  // .google.fhir.stu3.proto.DateTime end = 4;
  if (this->has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_end(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Period)
}

::google::protobuf::uint8* Period::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Period)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime start = 3;
  if (this->has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_start(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime end = 4;
  if (this->has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_end(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Period)
  return target;
}

size_t Period::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Period)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.DateTime start = 3;
  if (this->has_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_);
  }

  // .google.fhir.stu3.proto.DateTime end = 4;
  if (this->has_end()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *end_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Period::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Period)
  GOOGLE_DCHECK_NE(&from, this);
  const Period* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Period>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Period)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Period)
    MergeFrom(*source);
  }
}

void Period::MergeFrom(const Period& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Period)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_start()) {
    mutable_start()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.start());
  }
  if (from.has_end()) {
    mutable_end()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.end());
  }
}

void Period::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Period)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Period::CopyFrom(const Period& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Period)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Period::IsInitialized() const {
  return true;
}

void Period::Swap(Period* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Period::InternalSwap(Period* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(start_, other->start_);
  swap(end_, other->end_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Period::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Quantity::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Quantity_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Quantity_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_Quantity_default_instance_._instance.get_mutable()->comparator_ = const_cast< ::google::fhir::stu3::proto::QuantityComparatorCode*>(
      ::google::fhir::stu3::proto::QuantityComparatorCode::internal_default_instance());
  ::google::fhir::stu3::proto::_Quantity_default_instance_._instance.get_mutable()->unit_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Quantity_default_instance_._instance.get_mutable()->system_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_Quantity_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::Code*>(
      ::google::fhir::stu3::proto::Code::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Quantity::kIdFieldNumber;
const int Quantity::kExtensionFieldNumber;
const int Quantity::kValueFieldNumber;
const int Quantity::kComparatorFieldNumber;
const int Quantity::kUnitFieldNumber;
const int Quantity::kSystemFieldNumber;
const int Quantity::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Quantity::Quantity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Quantity)
}
Quantity::Quantity(const Quantity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::fhir::stu3::proto::Decimal(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_comparator()) {
    comparator_ = new ::google::fhir::stu3::proto::QuantityComparatorCode(*from.comparator_);
  } else {
    comparator_ = NULL;
  }
  if (from.has_unit()) {
    unit_ = new ::google::fhir::stu3::proto::String(*from.unit_);
  } else {
    unit_ = NULL;
  }
  if (from.has_system()) {
    system_ = new ::google::fhir::stu3::proto::Uri(*from.system_);
  } else {
    system_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::Code(*from.code_);
  } else {
    code_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Quantity)
}

void Quantity::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&id_)) + sizeof(code_));
}

Quantity::~Quantity() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Quantity)
  SharedDtor();
}

void Quantity::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete comparator_;
  if (this != internal_default_instance()) delete unit_;
  if (this != internal_default_instance()) delete system_;
  if (this != internal_default_instance()) delete code_;
}

void Quantity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Quantity::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Quantity& Quantity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Quantity::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Quantity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && comparator_ != NULL) {
    delete comparator_;
  }
  comparator_ = NULL;
  if (GetArenaNoVirtual() == NULL && unit_ != NULL) {
    delete unit_;
  }
  unit_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_ != NULL) {
    delete system_;
  }
  system_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  _internal_metadata_.Clear();
}

bool Quantity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Quantity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_comparator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String unit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri system = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Code code = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Quantity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Quantity)
  return false;
#undef DO_
}

void Quantity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Quantity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_value(), output);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
  if (this->has_comparator()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_comparator(), output);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_unit(), output);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_system(), output);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Quantity)
}

::google::protobuf::uint8* Quantity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Quantity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
  if (this->has_comparator()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_comparator(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_unit(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_system(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_code(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Quantity)
  return target;
}

size_t Quantity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Quantity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode comparator = 4;
  if (this->has_comparator()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *comparator_);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *unit_);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *system_);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Quantity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Quantity)
  GOOGLE_DCHECK_NE(&from, this);
  const Quantity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Quantity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Quantity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Quantity)
    MergeFrom(*source);
  }
}

void Quantity::MergeFrom(const Quantity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Quantity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_value()) {
    mutable_value()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.value());
  }
  if (from.has_comparator()) {
    mutable_comparator()->::google::fhir::stu3::proto::QuantityComparatorCode::MergeFrom(from.comparator());
  }
  if (from.has_unit()) {
    mutable_unit()->::google::fhir::stu3::proto::String::MergeFrom(from.unit());
  }
  if (from.has_system()) {
    mutable_system()->::google::fhir::stu3::proto::Uri::MergeFrom(from.system());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
  }
}

void Quantity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Quantity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Quantity::CopyFrom(const Quantity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Quantity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quantity::IsInitialized() const {
  return true;
}

void Quantity::Swap(Quantity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Quantity::InternalSwap(Quantity* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  swap(comparator_, other->comparator_);
  swap(unit_, other->unit_);
  swap(system_, other->system_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Quantity::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Range::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Range_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Range_default_instance_._instance.get_mutable()->low_ = const_cast< ::google::fhir::stu3::proto::SimpleQuantity*>(
      ::google::fhir::stu3::proto::SimpleQuantity::internal_default_instance());
  ::google::fhir::stu3::proto::_Range_default_instance_._instance.get_mutable()->high_ = const_cast< ::google::fhir::stu3::proto::SimpleQuantity*>(
      ::google::fhir::stu3::proto::SimpleQuantity::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Range::kIdFieldNumber;
const int Range::kExtensionFieldNumber;
const int Range::kLowFieldNumber;
const int Range::kHighFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Range::Range()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Range)
}
Range::Range(const Range& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_low()) {
    low_ = new ::google::fhir::stu3::proto::SimpleQuantity(*from.low_);
  } else {
    low_ = NULL;
  }
  if (from.has_high()) {
    high_ = new ::google::fhir::stu3::proto::SimpleQuantity(*from.high_);
  } else {
    high_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Range)
}

void Range::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&high_) -
      reinterpret_cast<char*>(&id_)) + sizeof(high_));
}

Range::~Range() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Range)
  SharedDtor();
}

void Range::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete low_;
  if (this != internal_default_instance()) delete high_;
}

void Range::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Range::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Range& Range::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Range::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && low_ != NULL) {
    delete low_;
  }
  low_ = NULL;
  if (GetArenaNoVirtual() == NULL && high_ != NULL) {
    delete high_;
  }
  high_ = NULL;
  _internal_metadata_.Clear();
}

bool Range::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Range)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SimpleQuantity low = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_low()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SimpleQuantity high = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_high()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Range)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Range)
  return false;
#undef DO_
}

void Range::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.SimpleQuantity low = 3;
  if (this->has_low()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_low(), output);
  }

  // .google.fhir.stu3.proto.SimpleQuantity high = 4;
  if (this->has_high()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_high(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Range)
}

::google::protobuf::uint8* Range::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.SimpleQuantity low = 3;
  if (this->has_low()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_low(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SimpleQuantity high = 4;
  if (this->has_high()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_high(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Range)
  return target;
}

size_t Range::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Range)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.SimpleQuantity low = 3;
  if (this->has_low()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *low_);
  }

  // .google.fhir.stu3.proto.SimpleQuantity high = 4;
  if (this->has_high()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *high_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Range::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Range)
  GOOGLE_DCHECK_NE(&from, this);
  const Range* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Range>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Range)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Range)
    MergeFrom(*source);
  }
}

void Range::MergeFrom(const Range& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Range)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_low()) {
    mutable_low()->::google::fhir::stu3::proto::SimpleQuantity::MergeFrom(from.low());
  }
  if (from.has_high()) {
    mutable_high()->::google::fhir::stu3::proto::SimpleQuantity::MergeFrom(from.high());
  }
}

void Range::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Range::CopyFrom(const Range& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Range::IsInitialized() const {
  return true;
}

void Range::Swap(Range* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Range::InternalSwap(Range* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(low_, other->low_);
  swap(high_, other->high_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Range::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ratio::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Ratio_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Ratio_default_instance_._instance.get_mutable()->numerator_ = const_cast< ::google::fhir::stu3::proto::Quantity*>(
      ::google::fhir::stu3::proto::Quantity::internal_default_instance());
  ::google::fhir::stu3::proto::_Ratio_default_instance_._instance.get_mutable()->denominator_ = const_cast< ::google::fhir::stu3::proto::Quantity*>(
      ::google::fhir::stu3::proto::Quantity::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ratio::kIdFieldNumber;
const int Ratio::kExtensionFieldNumber;
const int Ratio::kNumeratorFieldNumber;
const int Ratio::kDenominatorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ratio::Ratio()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Ratio)
}
Ratio::Ratio(const Ratio& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_numerator()) {
    numerator_ = new ::google::fhir::stu3::proto::Quantity(*from.numerator_);
  } else {
    numerator_ = NULL;
  }
  if (from.has_denominator()) {
    denominator_ = new ::google::fhir::stu3::proto::Quantity(*from.denominator_);
  } else {
    denominator_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Ratio)
}

void Ratio::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&denominator_) -
      reinterpret_cast<char*>(&id_)) + sizeof(denominator_));
}

Ratio::~Ratio() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Ratio)
  SharedDtor();
}

void Ratio::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete numerator_;
  if (this != internal_default_instance()) delete denominator_;
}

void Ratio::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ratio::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ratio& Ratio::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Ratio::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Ratio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && numerator_ != NULL) {
    delete numerator_;
  }
  numerator_ = NULL;
  if (GetArenaNoVirtual() == NULL && denominator_ != NULL) {
    delete denominator_;
  }
  denominator_ = NULL;
  _internal_metadata_.Clear();
}

bool Ratio::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Ratio)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Quantity numerator = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_numerator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Quantity denominator = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_denominator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Ratio)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Ratio)
  return false;
#undef DO_
}

void Ratio::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Ratio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Quantity numerator = 3;
  if (this->has_numerator()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_numerator(), output);
  }

  // .google.fhir.stu3.proto.Quantity denominator = 4;
  if (this->has_denominator()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_denominator(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Ratio)
}

::google::protobuf::uint8* Ratio::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Ratio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Quantity numerator = 3;
  if (this->has_numerator()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_numerator(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Quantity denominator = 4;
  if (this->has_denominator()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_denominator(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Ratio)
  return target;
}

size_t Ratio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Ratio)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Quantity numerator = 3;
  if (this->has_numerator()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *numerator_);
  }

  // .google.fhir.stu3.proto.Quantity denominator = 4;
  if (this->has_denominator()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *denominator_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ratio::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Ratio)
  GOOGLE_DCHECK_NE(&from, this);
  const Ratio* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ratio>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Ratio)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Ratio)
    MergeFrom(*source);
  }
}

void Ratio::MergeFrom(const Ratio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Ratio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_numerator()) {
    mutable_numerator()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.numerator());
  }
  if (from.has_denominator()) {
    mutable_denominator()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.denominator());
  }
}

void Ratio::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Ratio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ratio::CopyFrom(const Ratio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Ratio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ratio::IsInitialized() const {
  return true;
}

void Ratio::Swap(Ratio* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ratio::InternalSwap(Ratio* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(numerator_, other->numerator_);
  swap(denominator_, other->denominator_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ratio::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SampledData::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_SampledData_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_SampledData_default_instance_._instance.get_mutable()->origin_ = const_cast< ::google::fhir::stu3::proto::SimpleQuantity*>(
      ::google::fhir::stu3::proto::SimpleQuantity::internal_default_instance());
  ::google::fhir::stu3::proto::_SampledData_default_instance_._instance.get_mutable()->period_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_SampledData_default_instance_._instance.get_mutable()->factor_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_SampledData_default_instance_._instance.get_mutable()->lower_limit_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_SampledData_default_instance_._instance.get_mutable()->upper_limit_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_SampledData_default_instance_._instance.get_mutable()->dimensions_ = const_cast< ::google::fhir::stu3::proto::PositiveInt*>(
      ::google::fhir::stu3::proto::PositiveInt::internal_default_instance());
  ::google::fhir::stu3::proto::_SampledData_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SampledData::kIdFieldNumber;
const int SampledData::kExtensionFieldNumber;
const int SampledData::kOriginFieldNumber;
const int SampledData::kPeriodFieldNumber;
const int SampledData::kFactorFieldNumber;
const int SampledData::kLowerLimitFieldNumber;
const int SampledData::kUpperLimitFieldNumber;
const int SampledData::kDimensionsFieldNumber;
const int SampledData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SampledData::SampledData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.SampledData)
}
SampledData::SampledData(const SampledData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_origin()) {
    origin_ = new ::google::fhir::stu3::proto::SimpleQuantity(*from.origin_);
  } else {
    origin_ = NULL;
  }
  if (from.has_period()) {
    period_ = new ::google::fhir::stu3::proto::Decimal(*from.period_);
  } else {
    period_ = NULL;
  }
  if (from.has_factor()) {
    factor_ = new ::google::fhir::stu3::proto::Decimal(*from.factor_);
  } else {
    factor_ = NULL;
  }
  if (from.has_lower_limit()) {
    lower_limit_ = new ::google::fhir::stu3::proto::Decimal(*from.lower_limit_);
  } else {
    lower_limit_ = NULL;
  }
  if (from.has_upper_limit()) {
    upper_limit_ = new ::google::fhir::stu3::proto::Decimal(*from.upper_limit_);
  } else {
    upper_limit_ = NULL;
  }
  if (from.has_dimensions()) {
    dimensions_ = new ::google::fhir::stu3::proto::PositiveInt(*from.dimensions_);
  } else {
    dimensions_ = NULL;
  }
  if (from.has_data()) {
    data_ = new ::google::fhir::stu3::proto::String(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.SampledData)
}

void SampledData::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&id_)) + sizeof(data_));
}

SampledData::~SampledData() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.SampledData)
  SharedDtor();
}

void SampledData::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete origin_;
  if (this != internal_default_instance()) delete period_;
  if (this != internal_default_instance()) delete factor_;
  if (this != internal_default_instance()) delete lower_limit_;
  if (this != internal_default_instance()) delete upper_limit_;
  if (this != internal_default_instance()) delete dimensions_;
  if (this != internal_default_instance()) delete data_;
}

void SampledData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SampledData::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SampledData& SampledData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void SampledData::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.SampledData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && origin_ != NULL) {
    delete origin_;
  }
  origin_ = NULL;
  if (GetArenaNoVirtual() == NULL && period_ != NULL) {
    delete period_;
  }
  period_ = NULL;
  if (GetArenaNoVirtual() == NULL && factor_ != NULL) {
    delete factor_;
  }
  factor_ = NULL;
  if (GetArenaNoVirtual() == NULL && lower_limit_ != NULL) {
    delete lower_limit_;
  }
  lower_limit_ = NULL;
  if (GetArenaNoVirtual() == NULL && upper_limit_ != NULL) {
    delete upper_limit_;
  }
  upper_limit_ = NULL;
  if (GetArenaNoVirtual() == NULL && dimensions_ != NULL) {
    delete dimensions_;
  }
  dimensions_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool SampledData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.SampledData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SimpleQuantity origin = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal period = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal factor = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_factor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal lower_limit = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lower_limit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal upper_limit = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upper_limit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.PositiveInt dimensions = 8 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dimensions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String data = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.SampledData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.SampledData)
  return false;
#undef DO_
}

void SampledData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.SampledData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.SimpleQuantity origin = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_origin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_origin(), output);
  }

  // .google.fhir.stu3.proto.Decimal period = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_period(), output);
  }

  // .google.fhir.stu3.proto.Decimal factor = 5;
  if (this->has_factor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_factor(), output);
  }

  // .google.fhir.stu3.proto.Decimal lower_limit = 6;
  if (this->has_lower_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_lower_limit(), output);
  }

  // .google.fhir.stu3.proto.Decimal upper_limit = 7;
  if (this->has_upper_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_upper_limit(), output);
  }

  // .google.fhir.stu3.proto.PositiveInt dimensions = 8 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_dimensions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_dimensions(), output);
  }

  // .google.fhir.stu3.proto.String data = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.SampledData)
}

::google::protobuf::uint8* SampledData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.SampledData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.SimpleQuantity origin = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_origin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_origin(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal period = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_period(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal factor = 5;
  if (this->has_factor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_factor(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal lower_limit = 6;
  if (this->has_lower_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_lower_limit(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal upper_limit = 7;
  if (this->has_upper_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_upper_limit(), deterministic, target);
  }

  // .google.fhir.stu3.proto.PositiveInt dimensions = 8 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_dimensions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_dimensions(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String data = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.SampledData)
  return target;
}

size_t SampledData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.SampledData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.SimpleQuantity origin = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_origin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *origin_);
  }

  // .google.fhir.stu3.proto.Decimal period = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_period()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *period_);
  }

  // .google.fhir.stu3.proto.Decimal factor = 5;
  if (this->has_factor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *factor_);
  }

  // .google.fhir.stu3.proto.Decimal lower_limit = 6;
  if (this->has_lower_limit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lower_limit_);
  }

  // .google.fhir.stu3.proto.Decimal upper_limit = 7;
  if (this->has_upper_limit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *upper_limit_);
  }

  // .google.fhir.stu3.proto.PositiveInt dimensions = 8 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_dimensions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dimensions_);
  }

  // .google.fhir.stu3.proto.String data = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SampledData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.SampledData)
  GOOGLE_DCHECK_NE(&from, this);
  const SampledData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SampledData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.SampledData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.SampledData)
    MergeFrom(*source);
  }
}

void SampledData::MergeFrom(const SampledData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.SampledData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_origin()) {
    mutable_origin()->::google::fhir::stu3::proto::SimpleQuantity::MergeFrom(from.origin());
  }
  if (from.has_period()) {
    mutable_period()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.period());
  }
  if (from.has_factor()) {
    mutable_factor()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.factor());
  }
  if (from.has_lower_limit()) {
    mutable_lower_limit()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.lower_limit());
  }
  if (from.has_upper_limit()) {
    mutable_upper_limit()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.upper_limit());
  }
  if (from.has_dimensions()) {
    mutable_dimensions()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.dimensions());
  }
  if (from.has_data()) {
    mutable_data()->::google::fhir::stu3::proto::String::MergeFrom(from.data());
  }
}

void SampledData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.SampledData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SampledData::CopyFrom(const SampledData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.SampledData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SampledData::IsInitialized() const {
  return true;
}

void SampledData::Swap(SampledData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SampledData::InternalSwap(SampledData* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(origin_, other->origin_);
  swap(period_, other->period_);
  swap(factor_, other->factor_);
  swap(lower_limit_, other->lower_limit_);
  swap(upper_limit_, other->upper_limit_);
  swap(dimensions_, other->dimensions_);
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SampledData::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Signature_Who::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Signature_Who_default_instance_.uri_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_Signature_Who_default_instance_.reference_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void Signature_Who::set_allocated_uri(::google::fhir::stu3::proto::Uri* uri) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_who();
  if (uri) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uri = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uri, submessage_arena);
    }
    set_has_uri();
    who_.uri_ = uri;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Signature.Who.uri)
}
void Signature_Who::set_allocated_reference(::google::fhir::stu3::proto::Reference* reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_who();
  if (reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference, submessage_arena);
    }
    set_has_reference();
    who_.reference_ = reference;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Signature.Who.reference)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Signature_Who::kUriFieldNumber;
const int Signature_Who::kReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Signature_Who::Signature_Who()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Signature.Who)
}
Signature_Who::Signature_Who(const Signature_Who& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_who();
  switch (from.who_case()) {
    case kUri: {
      mutable_uri()->::google::fhir::stu3::proto::Uri::MergeFrom(from.uri());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case WHO_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Signature.Who)
}

void Signature_Who::SharedCtor() {
  clear_has_who();
}

Signature_Who::~Signature_Who() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Signature.Who)
  SharedDtor();
}

void Signature_Who::SharedDtor() {
  if (has_who()) {
    clear_who();
  }
}

void Signature_Who::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Signature_Who::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Signature_Who& Signature_Who::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Signature_Who::clear_who() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.Signature.Who)
  switch (who_case()) {
    case kUri: {
      delete who_.uri_;
      break;
    }
    case kReference: {
      delete who_.reference_;
      break;
    }
    case WHO_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = WHO_NOT_SET;
}


void Signature_Who::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Signature.Who)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_who();
  _internal_metadata_.Clear();
}

bool Signature_Who::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Signature.Who)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Uri uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uri()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Signature.Who)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Signature.Who)
  return false;
#undef DO_
}

void Signature_Who::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Signature.Who)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Uri uri = 1;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_uri(), output);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (has_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_reference(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Signature.Who)
}

::google::protobuf::uint8* Signature_Who::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Signature.Who)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Uri uri = 1;
  if (has_uri()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_uri(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (has_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_reference(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Signature.Who)
  return target;
}

size_t Signature_Who::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Signature.Who)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (who_case()) {
    // .google.fhir.stu3.proto.Uri uri = 1;
    case kUri: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *who_.uri_);
      break;
    }
    // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
    case kReference: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *who_.reference_);
      break;
    }
    case WHO_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Signature_Who::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Signature.Who)
  GOOGLE_DCHECK_NE(&from, this);
  const Signature_Who* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Signature_Who>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Signature.Who)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Signature.Who)
    MergeFrom(*source);
  }
}

void Signature_Who::MergeFrom(const Signature_Who& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Signature.Who)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.who_case()) {
    case kUri: {
      mutable_uri()->::google::fhir::stu3::proto::Uri::MergeFrom(from.uri());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case WHO_NOT_SET: {
      break;
    }
  }
}

void Signature_Who::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Signature.Who)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Signature_Who::CopyFrom(const Signature_Who& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Signature.Who)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Signature_Who::IsInitialized() const {
  return true;
}

void Signature_Who::Swap(Signature_Who* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Signature_Who::InternalSwap(Signature_Who* other) {
  using std::swap;
  swap(who_, other->who_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Signature_Who::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Signature_OnBehalfOf::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Signature_OnBehalfOf_default_instance_.uri_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_Signature_OnBehalfOf_default_instance_.reference_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
}
void Signature_OnBehalfOf::set_allocated_uri(::google::fhir::stu3::proto::Uri* uri) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_on_behalf_of();
  if (uri) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uri = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uri, submessage_arena);
    }
    set_has_uri();
    on_behalf_of_.uri_ = uri;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Signature.OnBehalfOf.uri)
}
void Signature_OnBehalfOf::set_allocated_reference(::google::fhir::stu3::proto::Reference* reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_on_behalf_of();
  if (reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference, submessage_arena);
    }
    set_has_reference();
    on_behalf_of_.reference_ = reference;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Signature.OnBehalfOf.reference)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Signature_OnBehalfOf::kUriFieldNumber;
const int Signature_OnBehalfOf::kReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Signature_OnBehalfOf::Signature_OnBehalfOf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Signature.OnBehalfOf)
}
Signature_OnBehalfOf::Signature_OnBehalfOf(const Signature_OnBehalfOf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_on_behalf_of();
  switch (from.on_behalf_of_case()) {
    case kUri: {
      mutable_uri()->::google::fhir::stu3::proto::Uri::MergeFrom(from.uri());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case ON_BEHALF_OF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Signature.OnBehalfOf)
}

void Signature_OnBehalfOf::SharedCtor() {
  clear_has_on_behalf_of();
}

Signature_OnBehalfOf::~Signature_OnBehalfOf() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Signature.OnBehalfOf)
  SharedDtor();
}

void Signature_OnBehalfOf::SharedDtor() {
  if (has_on_behalf_of()) {
    clear_on_behalf_of();
  }
}

void Signature_OnBehalfOf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Signature_OnBehalfOf::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Signature_OnBehalfOf& Signature_OnBehalfOf::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Signature_OnBehalfOf::clear_on_behalf_of() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.Signature.OnBehalfOf)
  switch (on_behalf_of_case()) {
    case kUri: {
      delete on_behalf_of_.uri_;
      break;
    }
    case kReference: {
      delete on_behalf_of_.reference_;
      break;
    }
    case ON_BEHALF_OF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ON_BEHALF_OF_NOT_SET;
}


void Signature_OnBehalfOf::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Signature.OnBehalfOf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_on_behalf_of();
  _internal_metadata_.Clear();
}

bool Signature_OnBehalfOf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Signature.OnBehalfOf)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Uri uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uri()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Signature.OnBehalfOf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Signature.OnBehalfOf)
  return false;
#undef DO_
}

void Signature_OnBehalfOf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Signature.OnBehalfOf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Uri uri = 1;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_uri(), output);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (has_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_reference(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Signature.OnBehalfOf)
}

::google::protobuf::uint8* Signature_OnBehalfOf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Signature.OnBehalfOf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Uri uri = 1;
  if (has_uri()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_uri(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  if (has_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_reference(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Signature.OnBehalfOf)
  return target;
}

size_t Signature_OnBehalfOf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Signature.OnBehalfOf)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (on_behalf_of_case()) {
    // .google.fhir.stu3.proto.Uri uri = 1;
    case kUri: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *on_behalf_of_.uri_);
      break;
    }
    // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
    case kReference: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *on_behalf_of_.reference_);
      break;
    }
    case ON_BEHALF_OF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Signature_OnBehalfOf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Signature.OnBehalfOf)
  GOOGLE_DCHECK_NE(&from, this);
  const Signature_OnBehalfOf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Signature_OnBehalfOf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Signature.OnBehalfOf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Signature.OnBehalfOf)
    MergeFrom(*source);
  }
}

void Signature_OnBehalfOf::MergeFrom(const Signature_OnBehalfOf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Signature.OnBehalfOf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.on_behalf_of_case()) {
    case kUri: {
      mutable_uri()->::google::fhir::stu3::proto::Uri::MergeFrom(from.uri());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case ON_BEHALF_OF_NOT_SET: {
      break;
    }
  }
}

void Signature_OnBehalfOf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Signature.OnBehalfOf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Signature_OnBehalfOf::CopyFrom(const Signature_OnBehalfOf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Signature.OnBehalfOf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Signature_OnBehalfOf::IsInitialized() const {
  return true;
}

void Signature_OnBehalfOf::Swap(Signature_OnBehalfOf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Signature_OnBehalfOf::InternalSwap(Signature_OnBehalfOf* other) {
  using std::swap;
  swap(on_behalf_of_, other->on_behalf_of_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Signature_OnBehalfOf::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Signature::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Signature_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Signature_default_instance_._instance.get_mutable()->when_ = const_cast< ::google::fhir::stu3::proto::Instant*>(
      ::google::fhir::stu3::proto::Instant::internal_default_instance());
  ::google::fhir::stu3::proto::_Signature_default_instance_._instance.get_mutable()->who_ = const_cast< ::google::fhir::stu3::proto::Signature_Who*>(
      ::google::fhir::stu3::proto::Signature_Who::internal_default_instance());
  ::google::fhir::stu3::proto::_Signature_default_instance_._instance.get_mutable()->on_behalf_of_ = const_cast< ::google::fhir::stu3::proto::Signature_OnBehalfOf*>(
      ::google::fhir::stu3::proto::Signature_OnBehalfOf::internal_default_instance());
  ::google::fhir::stu3::proto::_Signature_default_instance_._instance.get_mutable()->content_type_ = const_cast< ::google::fhir::stu3::proto::MimeTypeCode*>(
      ::google::fhir::stu3::proto::MimeTypeCode::internal_default_instance());
  ::google::fhir::stu3::proto::_Signature_default_instance_._instance.get_mutable()->blob_ = const_cast< ::google::fhir::stu3::proto::Base64Binary*>(
      ::google::fhir::stu3::proto::Base64Binary::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Signature::kIdFieldNumber;
const int Signature::kExtensionFieldNumber;
const int Signature::kTypeFieldNumber;
const int Signature::kWhenFieldNumber;
const int Signature::kWhoFieldNumber;
const int Signature::kOnBehalfOfFieldNumber;
const int Signature::kContentTypeFieldNumber;
const int Signature::kBlobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Signature::Signature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Signature)
}
Signature::Signature(const Signature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      type_(from.type_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_when()) {
    when_ = new ::google::fhir::stu3::proto::Instant(*from.when_);
  } else {
    when_ = NULL;
  }
  if (from.has_who()) {
    who_ = new ::google::fhir::stu3::proto::Signature_Who(*from.who_);
  } else {
    who_ = NULL;
  }
  if (from.has_on_behalf_of()) {
    on_behalf_of_ = new ::google::fhir::stu3::proto::Signature_OnBehalfOf(*from.on_behalf_of_);
  } else {
    on_behalf_of_ = NULL;
  }
  if (from.has_content_type()) {
    content_type_ = new ::google::fhir::stu3::proto::MimeTypeCode(*from.content_type_);
  } else {
    content_type_ = NULL;
  }
  if (from.has_blob()) {
    blob_ = new ::google::fhir::stu3::proto::Base64Binary(*from.blob_);
  } else {
    blob_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Signature)
}

void Signature::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blob_) -
      reinterpret_cast<char*>(&id_)) + sizeof(blob_));
}

Signature::~Signature() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Signature)
  SharedDtor();
}

void Signature::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete when_;
  if (this != internal_default_instance()) delete who_;
  if (this != internal_default_instance()) delete on_behalf_of_;
  if (this != internal_default_instance()) delete content_type_;
  if (this != internal_default_instance()) delete blob_;
}

void Signature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Signature::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Signature& Signature::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Signature::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Signature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  type_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && when_ != NULL) {
    delete when_;
  }
  when_ = NULL;
  if (GetArenaNoVirtual() == NULL && who_ != NULL) {
    delete who_;
  }
  who_ = NULL;
  if (GetArenaNoVirtual() == NULL && on_behalf_of_ != NULL) {
    delete on_behalf_of_;
  }
  on_behalf_of_ = NULL;
  if (GetArenaNoVirtual() == NULL && content_type_ != NULL) {
    delete content_type_;
  }
  content_type_ = NULL;
  if (GetArenaNoVirtual() == NULL && blob_ != NULL) {
    delete blob_;
  }
  blob_ = NULL;
  _internal_metadata_.Clear();
}

bool Signature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Signature)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Coding type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Instant when = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_when()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Signature.Who who = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_who()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Signature.OnBehalfOf on_behalf_of = 6 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_on_behalf_of()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.MimeTypeCode content_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_content_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Base64Binary blob = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_blob()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Signature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Signature)
  return false;
#undef DO_
}

void Signature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Signature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Coding type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->type(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Instant when = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_when()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_when(), output);
  }

  // .google.fhir.stu3.proto.Signature.Who who = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_who()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_who(), output);
  }

  // .google.fhir.stu3.proto.Signature.OnBehalfOf on_behalf_of = 6 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_on_behalf_of()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_on_behalf_of(), output);
  }

  // .google.fhir.stu3.proto.MimeTypeCode content_type = 7;
  if (this->has_content_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_content_type(), output);
  }

  // .google.fhir.stu3.proto.Base64Binary blob = 8;
  if (this->has_blob()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_blob(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Signature)
}

::google::protobuf::uint8* Signature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Signature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Coding type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->type(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Instant when = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_when()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_when(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Signature.Who who = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_who()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_who(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Signature.OnBehalfOf on_behalf_of = 6 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_on_behalf_of()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_on_behalf_of(), deterministic, target);
  }

  // .google.fhir.stu3.proto.MimeTypeCode content_type = 7;
  if (this->has_content_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_content_type(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Base64Binary blob = 8;
  if (this->has_blob()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_blob(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Signature)
  return target;
}

size_t Signature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Signature)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Coding type = 3 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  {
    unsigned int count = static_cast<unsigned int>(this->type_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->type(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Instant when = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_when()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *when_);
  }

  // .google.fhir.stu3.proto.Signature.Who who = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_who()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *who_);
  }

  // .google.fhir.stu3.proto.Signature.OnBehalfOf on_behalf_of = 6 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_on_behalf_of()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *on_behalf_of_);
  }

  // .google.fhir.stu3.proto.MimeTypeCode content_type = 7;
  if (this->has_content_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *content_type_);
  }

  // .google.fhir.stu3.proto.Base64Binary blob = 8;
  if (this->has_blob()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *blob_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Signature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Signature)
  GOOGLE_DCHECK_NE(&from, this);
  const Signature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Signature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Signature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Signature)
    MergeFrom(*source);
  }
}

void Signature::MergeFrom(const Signature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Signature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  type_.MergeFrom(from.type_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_when()) {
    mutable_when()->::google::fhir::stu3::proto::Instant::MergeFrom(from.when());
  }
  if (from.has_who()) {
    mutable_who()->::google::fhir::stu3::proto::Signature_Who::MergeFrom(from.who());
  }
  if (from.has_on_behalf_of()) {
    mutable_on_behalf_of()->::google::fhir::stu3::proto::Signature_OnBehalfOf::MergeFrom(from.on_behalf_of());
  }
  if (from.has_content_type()) {
    mutable_content_type()->::google::fhir::stu3::proto::MimeTypeCode::MergeFrom(from.content_type());
  }
  if (from.has_blob()) {
    mutable_blob()->::google::fhir::stu3::proto::Base64Binary::MergeFrom(from.blob());
  }
}

void Signature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Signature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Signature::CopyFrom(const Signature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Signature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Signature::IsInitialized() const {
  return true;
}

void Signature::Swap(Signature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Signature::InternalSwap(Signature* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&type_)->InternalSwap(CastToBase(&other->type_));
  swap(id_, other->id_);
  swap(when_, other->when_);
  swap(who_, other->who_);
  swap(on_behalf_of_, other->on_behalf_of_);
  swap(content_type_, other->content_type_);
  swap(blob_, other->blob_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Signature::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SimpleQuantity::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_SimpleQuantity_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_SimpleQuantity_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_SimpleQuantity_default_instance_._instance.get_mutable()->unit_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_SimpleQuantity_default_instance_._instance.get_mutable()->system_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_SimpleQuantity_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::Code*>(
      ::google::fhir::stu3::proto::Code::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SimpleQuantity::kIdFieldNumber;
const int SimpleQuantity::kExtensionFieldNumber;
const int SimpleQuantity::kValueFieldNumber;
const int SimpleQuantity::kUnitFieldNumber;
const int SimpleQuantity::kSystemFieldNumber;
const int SimpleQuantity::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SimpleQuantity::SimpleQuantity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.SimpleQuantity)
}
SimpleQuantity::SimpleQuantity(const SimpleQuantity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::fhir::stu3::proto::Decimal(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_unit()) {
    unit_ = new ::google::fhir::stu3::proto::String(*from.unit_);
  } else {
    unit_ = NULL;
  }
  if (from.has_system()) {
    system_ = new ::google::fhir::stu3::proto::Uri(*from.system_);
  } else {
    system_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::Code(*from.code_);
  } else {
    code_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.SimpleQuantity)
}

void SimpleQuantity::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&id_)) + sizeof(code_));
}

SimpleQuantity::~SimpleQuantity() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.SimpleQuantity)
  SharedDtor();
}

void SimpleQuantity::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete unit_;
  if (this != internal_default_instance()) delete system_;
  if (this != internal_default_instance()) delete code_;
}

void SimpleQuantity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SimpleQuantity::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SimpleQuantity& SimpleQuantity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void SimpleQuantity::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.SimpleQuantity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && unit_ != NULL) {
    delete unit_;
  }
  unit_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_ != NULL) {
    delete system_;
  }
  system_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  _internal_metadata_.Clear();
}

bool SimpleQuantity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.SimpleQuantity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String unit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri system = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Code code = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.SimpleQuantity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.SimpleQuantity)
  return false;
#undef DO_
}

void SimpleQuantity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.SimpleQuantity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_value(), output);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_unit(), output);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_system(), output);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.SimpleQuantity)
}

::google::protobuf::uint8* SimpleQuantity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.SimpleQuantity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_unit(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_system(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_code(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.SimpleQuantity)
  return target;
}

size_t SimpleQuantity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.SimpleQuantity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Decimal value = 3;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .google.fhir.stu3.proto.String unit = 5;
  if (this->has_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *unit_);
  }

  // .google.fhir.stu3.proto.Uri system = 6;
  if (this->has_system()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *system_);
  }

  // .google.fhir.stu3.proto.Code code = 7;
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SimpleQuantity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.SimpleQuantity)
  GOOGLE_DCHECK_NE(&from, this);
  const SimpleQuantity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SimpleQuantity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.SimpleQuantity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.SimpleQuantity)
    MergeFrom(*source);
  }
}

void SimpleQuantity::MergeFrom(const SimpleQuantity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.SimpleQuantity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_value()) {
    mutable_value()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.value());
  }
  if (from.has_unit()) {
    mutable_unit()->::google::fhir::stu3::proto::String::MergeFrom(from.unit());
  }
  if (from.has_system()) {
    mutable_system()->::google::fhir::stu3::proto::Uri::MergeFrom(from.system());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
  }
}

void SimpleQuantity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.SimpleQuantity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SimpleQuantity::CopyFrom(const SimpleQuantity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.SimpleQuantity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimpleQuantity::IsInitialized() const {
  return true;
}

void SimpleQuantity::Swap(SimpleQuantity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SimpleQuantity::InternalSwap(SimpleQuantity* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  swap(unit_, other->unit_);
  swap(system_, other->system_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SimpleQuantity::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Timing_Repeat_Bounds::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Timing_Repeat_Bounds_default_instance_.duration_ = const_cast< ::google::fhir::stu3::proto::Duration*>(
      ::google::fhir::stu3::proto::Duration::internal_default_instance());
  ::google::fhir::stu3::proto::_Timing_Repeat_Bounds_default_instance_.range_ = const_cast< ::google::fhir::stu3::proto::Range*>(
      ::google::fhir::stu3::proto::Range::internal_default_instance());
  ::google::fhir::stu3::proto::_Timing_Repeat_Bounds_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
}
void Timing_Repeat_Bounds::set_allocated_duration(::google::fhir::stu3::proto::Duration* duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_bounds();
  if (duration) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, duration, submessage_arena);
    }
    set_has_duration();
    bounds_.duration_ = duration;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Timing.Repeat.Bounds.duration)
}
void Timing_Repeat_Bounds::set_allocated_range(::google::fhir::stu3::proto::Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_bounds();
  if (range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    set_has_range();
    bounds_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Timing.Repeat.Bounds.range)
}
void Timing_Repeat_Bounds::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_bounds();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    bounds_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Timing.Repeat.Bounds.period)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Timing_Repeat_Bounds::kDurationFieldNumber;
const int Timing_Repeat_Bounds::kRangeFieldNumber;
const int Timing_Repeat_Bounds::kPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Timing_Repeat_Bounds::Timing_Repeat_Bounds()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Timing.Repeat.Bounds)
}
Timing_Repeat_Bounds::Timing_Repeat_Bounds(const Timing_Repeat_Bounds& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_bounds();
  switch (from.bounds_case()) {
    case kDuration: {
      mutable_duration()->::google::fhir::stu3::proto::Duration::MergeFrom(from.duration());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case BOUNDS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Timing.Repeat.Bounds)
}

void Timing_Repeat_Bounds::SharedCtor() {
  clear_has_bounds();
}

Timing_Repeat_Bounds::~Timing_Repeat_Bounds() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Timing.Repeat.Bounds)
  SharedDtor();
}

void Timing_Repeat_Bounds::SharedDtor() {
  if (has_bounds()) {
    clear_bounds();
  }
}

void Timing_Repeat_Bounds::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Timing_Repeat_Bounds::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Timing_Repeat_Bounds& Timing_Repeat_Bounds::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Timing_Repeat_Bounds::clear_bounds() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.Timing.Repeat.Bounds)
  switch (bounds_case()) {
    case kDuration: {
      delete bounds_.duration_;
      break;
    }
    case kRange: {
      delete bounds_.range_;
      break;
    }
    case kPeriod: {
      delete bounds_.period_;
      break;
    }
    case BOUNDS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BOUNDS_NOT_SET;
}


void Timing_Repeat_Bounds::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Timing.Repeat.Bounds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_bounds();
  _internal_metadata_.Clear();
}

bool Timing_Repeat_Bounds::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Timing.Repeat.Bounds)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Duration duration = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Range range = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Timing.Repeat.Bounds)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Timing.Repeat.Bounds)
  return false;
#undef DO_
}

void Timing_Repeat_Bounds::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Timing.Repeat.Bounds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Duration duration = 1;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_duration(), output);
  }

  // .google.fhir.stu3.proto.Range range = 2;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_range(), output);
  }

  // .google.fhir.stu3.proto.Period period = 3;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_period(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Timing.Repeat.Bounds)
}

::google::protobuf::uint8* Timing_Repeat_Bounds::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Timing.Repeat.Bounds)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Duration duration = 1;
  if (has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_duration(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Range range = 2;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_range(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 3;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_period(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Timing.Repeat.Bounds)
  return target;
}

size_t Timing_Repeat_Bounds::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Timing.Repeat.Bounds)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (bounds_case()) {
    // .google.fhir.stu3.proto.Duration duration = 1;
    case kDuration: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *bounds_.duration_);
      break;
    }
    // .google.fhir.stu3.proto.Range range = 2;
    case kRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *bounds_.range_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 3;
    case kPeriod: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *bounds_.period_);
      break;
    }
    case BOUNDS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Timing_Repeat_Bounds::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Timing.Repeat.Bounds)
  GOOGLE_DCHECK_NE(&from, this);
  const Timing_Repeat_Bounds* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Timing_Repeat_Bounds>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Timing.Repeat.Bounds)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Timing.Repeat.Bounds)
    MergeFrom(*source);
  }
}

void Timing_Repeat_Bounds::MergeFrom(const Timing_Repeat_Bounds& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Timing.Repeat.Bounds)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.bounds_case()) {
    case kDuration: {
      mutable_duration()->::google::fhir::stu3::proto::Duration::MergeFrom(from.duration());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case BOUNDS_NOT_SET: {
      break;
    }
  }
}

void Timing_Repeat_Bounds::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Timing.Repeat.Bounds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Timing_Repeat_Bounds::CopyFrom(const Timing_Repeat_Bounds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Timing.Repeat.Bounds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Timing_Repeat_Bounds::IsInitialized() const {
  return true;
}

void Timing_Repeat_Bounds::Swap(Timing_Repeat_Bounds* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Timing_Repeat_Bounds::InternalSwap(Timing_Repeat_Bounds* other) {
  using std::swap;
  swap(bounds_, other->bounds_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Timing_Repeat_Bounds::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Timing_Repeat::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Timing_Repeat_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Timing_Repeat_default_instance_._instance.get_mutable()->bounds_ = const_cast< ::google::fhir::stu3::proto::Timing_Repeat_Bounds*>(
      ::google::fhir::stu3::proto::Timing_Repeat_Bounds::internal_default_instance());
  ::google::fhir::stu3::proto::_Timing_Repeat_default_instance_._instance.get_mutable()->count_ = const_cast< ::google::fhir::stu3::proto::Integer*>(
      ::google::fhir::stu3::proto::Integer::internal_default_instance());
  ::google::fhir::stu3::proto::_Timing_Repeat_default_instance_._instance.get_mutable()->count_max_ = const_cast< ::google::fhir::stu3::proto::Integer*>(
      ::google::fhir::stu3::proto::Integer::internal_default_instance());
  ::google::fhir::stu3::proto::_Timing_Repeat_default_instance_._instance.get_mutable()->duration_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_Timing_Repeat_default_instance_._instance.get_mutable()->duration_max_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_Timing_Repeat_default_instance_._instance.get_mutable()->duration_unit_ = const_cast< ::google::fhir::stu3::proto::UnitsOfTimeCode*>(
      ::google::fhir::stu3::proto::UnitsOfTimeCode::internal_default_instance());
  ::google::fhir::stu3::proto::_Timing_Repeat_default_instance_._instance.get_mutable()->frequency_ = const_cast< ::google::fhir::stu3::proto::Integer*>(
      ::google::fhir::stu3::proto::Integer::internal_default_instance());
  ::google::fhir::stu3::proto::_Timing_Repeat_default_instance_._instance.get_mutable()->frequency_max_ = const_cast< ::google::fhir::stu3::proto::Integer*>(
      ::google::fhir::stu3::proto::Integer::internal_default_instance());
  ::google::fhir::stu3::proto::_Timing_Repeat_default_instance_._instance.get_mutable()->period_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_Timing_Repeat_default_instance_._instance.get_mutable()->period_max_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_Timing_Repeat_default_instance_._instance.get_mutable()->period_unit_ = const_cast< ::google::fhir::stu3::proto::UnitsOfTimeCode*>(
      ::google::fhir::stu3::proto::UnitsOfTimeCode::internal_default_instance());
  ::google::fhir::stu3::proto::_Timing_Repeat_default_instance_._instance.get_mutable()->offset_ = const_cast< ::google::fhir::stu3::proto::UnsignedInt*>(
      ::google::fhir::stu3::proto::UnsignedInt::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Timing_Repeat::kIdFieldNumber;
const int Timing_Repeat::kExtensionFieldNumber;
const int Timing_Repeat::kBoundsFieldNumber;
const int Timing_Repeat::kCountFieldNumber;
const int Timing_Repeat::kCountMaxFieldNumber;
const int Timing_Repeat::kDurationFieldNumber;
const int Timing_Repeat::kDurationMaxFieldNumber;
const int Timing_Repeat::kDurationUnitFieldNumber;
const int Timing_Repeat::kFrequencyFieldNumber;
const int Timing_Repeat::kFrequencyMaxFieldNumber;
const int Timing_Repeat::kPeriodFieldNumber;
const int Timing_Repeat::kPeriodMaxFieldNumber;
const int Timing_Repeat::kPeriodUnitFieldNumber;
const int Timing_Repeat::kDayOfWeekFieldNumber;
const int Timing_Repeat::kTimeOfDayFieldNumber;
const int Timing_Repeat::kWhenFieldNumber;
const int Timing_Repeat::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Timing_Repeat::Timing_Repeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Timing.Repeat)
}
Timing_Repeat::Timing_Repeat(const Timing_Repeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      day_of_week_(from.day_of_week_),
      time_of_day_(from.time_of_day_),
      when_(from.when_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_bounds()) {
    bounds_ = new ::google::fhir::stu3::proto::Timing_Repeat_Bounds(*from.bounds_);
  } else {
    bounds_ = NULL;
  }
  if (from.has_count()) {
    count_ = new ::google::fhir::stu3::proto::Integer(*from.count_);
  } else {
    count_ = NULL;
  }
  if (from.has_count_max()) {
    count_max_ = new ::google::fhir::stu3::proto::Integer(*from.count_max_);
  } else {
    count_max_ = NULL;
  }
  if (from.has_duration()) {
    duration_ = new ::google::fhir::stu3::proto::Decimal(*from.duration_);
  } else {
    duration_ = NULL;
  }
  if (from.has_duration_max()) {
    duration_max_ = new ::google::fhir::stu3::proto::Decimal(*from.duration_max_);
  } else {
    duration_max_ = NULL;
  }
  if (from.has_duration_unit()) {
    duration_unit_ = new ::google::fhir::stu3::proto::UnitsOfTimeCode(*from.duration_unit_);
  } else {
    duration_unit_ = NULL;
  }
  if (from.has_frequency()) {
    frequency_ = new ::google::fhir::stu3::proto::Integer(*from.frequency_);
  } else {
    frequency_ = NULL;
  }
  if (from.has_frequency_max()) {
    frequency_max_ = new ::google::fhir::stu3::proto::Integer(*from.frequency_max_);
  } else {
    frequency_max_ = NULL;
  }
  if (from.has_period()) {
    period_ = new ::google::fhir::stu3::proto::Decimal(*from.period_);
  } else {
    period_ = NULL;
  }
  if (from.has_period_max()) {
    period_max_ = new ::google::fhir::stu3::proto::Decimal(*from.period_max_);
  } else {
    period_max_ = NULL;
  }
  if (from.has_period_unit()) {
    period_unit_ = new ::google::fhir::stu3::proto::UnitsOfTimeCode(*from.period_unit_);
  } else {
    period_unit_ = NULL;
  }
  if (from.has_offset()) {
    offset_ = new ::google::fhir::stu3::proto::UnsignedInt(*from.offset_);
  } else {
    offset_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Timing.Repeat)
}

void Timing_Repeat::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&id_)) + sizeof(offset_));
}

Timing_Repeat::~Timing_Repeat() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Timing.Repeat)
  SharedDtor();
}

void Timing_Repeat::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete bounds_;
  if (this != internal_default_instance()) delete count_;
  if (this != internal_default_instance()) delete count_max_;
  if (this != internal_default_instance()) delete duration_;
  if (this != internal_default_instance()) delete duration_max_;
  if (this != internal_default_instance()) delete duration_unit_;
  if (this != internal_default_instance()) delete frequency_;
  if (this != internal_default_instance()) delete frequency_max_;
  if (this != internal_default_instance()) delete period_;
  if (this != internal_default_instance()) delete period_max_;
  if (this != internal_default_instance()) delete period_unit_;
  if (this != internal_default_instance()) delete offset_;
}

void Timing_Repeat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Timing_Repeat::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Timing_Repeat& Timing_Repeat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Timing_Repeat::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Timing.Repeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  day_of_week_.Clear();
  time_of_day_.Clear();
  when_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && bounds_ != NULL) {
    delete bounds_;
  }
  bounds_ = NULL;
  if (GetArenaNoVirtual() == NULL && count_ != NULL) {
    delete count_;
  }
  count_ = NULL;
  if (GetArenaNoVirtual() == NULL && count_max_ != NULL) {
    delete count_max_;
  }
  count_max_ = NULL;
  if (GetArenaNoVirtual() == NULL && duration_ != NULL) {
    delete duration_;
  }
  duration_ = NULL;
  if (GetArenaNoVirtual() == NULL && duration_max_ != NULL) {
    delete duration_max_;
  }
  duration_max_ = NULL;
  if (GetArenaNoVirtual() == NULL && duration_unit_ != NULL) {
    delete duration_unit_;
  }
  duration_unit_ = NULL;
  if (GetArenaNoVirtual() == NULL && frequency_ != NULL) {
    delete frequency_;
  }
  frequency_ = NULL;
  if (GetArenaNoVirtual() == NULL && frequency_max_ != NULL) {
    delete frequency_max_;
  }
  frequency_max_ = NULL;
  if (GetArenaNoVirtual() == NULL && period_ != NULL) {
    delete period_;
  }
  period_ = NULL;
  if (GetArenaNoVirtual() == NULL && period_max_ != NULL) {
    delete period_max_;
  }
  period_max_ = NULL;
  if (GetArenaNoVirtual() == NULL && period_unit_ != NULL) {
    delete period_unit_;
  }
  period_unit_ = NULL;
  if (GetArenaNoVirtual() == NULL && offset_ != NULL) {
    delete offset_;
  }
  offset_ = NULL;
  _internal_metadata_.Clear();
}

bool Timing_Repeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Timing.Repeat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Timing.Repeat.Bounds bounds = 3 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bounds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Integer count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Integer count_max = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_count_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal duration = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal duration_max = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.UnitsOfTimeCode duration_unit = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration_unit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Integer frequency = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_frequency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Integer frequency_max = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_frequency_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal period = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal period_max = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.UnitsOfTimeCode period_unit = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period_unit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.DaysOfWeekCode day_of_week = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_day_of_week()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Time time_of_day = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_time_of_day()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.EventTimingCode when = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_when()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.UnsignedInt offset = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_offset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Timing.Repeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Timing.Repeat)
  return false;
#undef DO_
}

void Timing_Repeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Timing.Repeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Timing.Repeat.Bounds bounds = 3 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_bounds()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_bounds(), output);
  }

  // .google.fhir.stu3.proto.Integer count = 4;
  if (this->has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_count(), output);
  }

  // .google.fhir.stu3.proto.Integer count_max = 5;
  if (this->has_count_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_count_max(), output);
  }

  // .google.fhir.stu3.proto.Decimal duration = 6;
  if (this->has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_duration(), output);
  }

  // .google.fhir.stu3.proto.Decimal duration_max = 7;
  if (this->has_duration_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_duration_max(), output);
  }

  // .google.fhir.stu3.proto.UnitsOfTimeCode duration_unit = 8;
  if (this->has_duration_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_duration_unit(), output);
  }

  // .google.fhir.stu3.proto.Integer frequency = 9;
  if (this->has_frequency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_frequency(), output);
  }

  // .google.fhir.stu3.proto.Integer frequency_max = 10;
  if (this->has_frequency_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_frequency_max(), output);
  }

  // .google.fhir.stu3.proto.Decimal period = 11;
  if (this->has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_period(), output);
  }

  // .google.fhir.stu3.proto.Decimal period_max = 12;
  if (this->has_period_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_period_max(), output);
  }

  // .google.fhir.stu3.proto.UnitsOfTimeCode period_unit = 13;
  if (this->has_period_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_period_unit(), output);
  }

  // repeated .google.fhir.stu3.proto.DaysOfWeekCode day_of_week = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->day_of_week_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->day_of_week(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.Time time_of_day = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->time_of_day_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->time_of_day(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.EventTimingCode when = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->when_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->when(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.UnsignedInt offset = 17;
  if (this->has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_offset(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Timing.Repeat)
}

::google::protobuf::uint8* Timing_Repeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Timing.Repeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Timing.Repeat.Bounds bounds = 3 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_bounds()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_bounds(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Integer count = 4;
  if (this->has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_count(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Integer count_max = 5;
  if (this->has_count_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_count_max(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal duration = 6;
  if (this->has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_duration(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal duration_max = 7;
  if (this->has_duration_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_duration_max(), deterministic, target);
  }

  // .google.fhir.stu3.proto.UnitsOfTimeCode duration_unit = 8;
  if (this->has_duration_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_duration_unit(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Integer frequency = 9;
  if (this->has_frequency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_frequency(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Integer frequency_max = 10;
  if (this->has_frequency_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_frequency_max(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal period = 11;
  if (this->has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_period(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal period_max = 12;
  if (this->has_period_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_period_max(), deterministic, target);
  }

  // .google.fhir.stu3.proto.UnitsOfTimeCode period_unit = 13;
  if (this->has_period_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_period_unit(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.DaysOfWeekCode day_of_week = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->day_of_week_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->day_of_week(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Time time_of_day = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->time_of_day_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->time_of_day(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.EventTimingCode when = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->when_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->when(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.UnsignedInt offset = 17;
  if (this->has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_offset(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Timing.Repeat)
  return target;
}

size_t Timing_Repeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Timing.Repeat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.DaysOfWeekCode day_of_week = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->day_of_week_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->day_of_week(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.Time time_of_day = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->time_of_day_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->time_of_day(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.EventTimingCode when = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->when_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->when(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Timing.Repeat.Bounds bounds = 3 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_bounds()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bounds_);
  }

  // .google.fhir.stu3.proto.Integer count = 4;
  if (this->has_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *count_);
  }

  // .google.fhir.stu3.proto.Integer count_max = 5;
  if (this->has_count_max()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *count_max_);
  }

  // .google.fhir.stu3.proto.Decimal duration = 6;
  if (this->has_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *duration_);
  }

  // .google.fhir.stu3.proto.Decimal duration_max = 7;
  if (this->has_duration_max()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *duration_max_);
  }

  // .google.fhir.stu3.proto.UnitsOfTimeCode duration_unit = 8;
  if (this->has_duration_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *duration_unit_);
  }

  // .google.fhir.stu3.proto.Integer frequency = 9;
  if (this->has_frequency()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *frequency_);
  }

  // .google.fhir.stu3.proto.Integer frequency_max = 10;
  if (this->has_frequency_max()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *frequency_max_);
  }

  // .google.fhir.stu3.proto.Decimal period = 11;
  if (this->has_period()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *period_);
  }

  // .google.fhir.stu3.proto.Decimal period_max = 12;
  if (this->has_period_max()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *period_max_);
  }

  // .google.fhir.stu3.proto.UnitsOfTimeCode period_unit = 13;
  if (this->has_period_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *period_unit_);
  }

  // .google.fhir.stu3.proto.UnsignedInt offset = 17;
  if (this->has_offset()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *offset_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Timing_Repeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Timing.Repeat)
  GOOGLE_DCHECK_NE(&from, this);
  const Timing_Repeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Timing_Repeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Timing.Repeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Timing.Repeat)
    MergeFrom(*source);
  }
}

void Timing_Repeat::MergeFrom(const Timing_Repeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Timing.Repeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  day_of_week_.MergeFrom(from.day_of_week_);
  time_of_day_.MergeFrom(from.time_of_day_);
  when_.MergeFrom(from.when_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_bounds()) {
    mutable_bounds()->::google::fhir::stu3::proto::Timing_Repeat_Bounds::MergeFrom(from.bounds());
  }
  if (from.has_count()) {
    mutable_count()->::google::fhir::stu3::proto::Integer::MergeFrom(from.count());
  }
  if (from.has_count_max()) {
    mutable_count_max()->::google::fhir::stu3::proto::Integer::MergeFrom(from.count_max());
  }
  if (from.has_duration()) {
    mutable_duration()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.duration());
  }
  if (from.has_duration_max()) {
    mutable_duration_max()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.duration_max());
  }
  if (from.has_duration_unit()) {
    mutable_duration_unit()->::google::fhir::stu3::proto::UnitsOfTimeCode::MergeFrom(from.duration_unit());
  }
  if (from.has_frequency()) {
    mutable_frequency()->::google::fhir::stu3::proto::Integer::MergeFrom(from.frequency());
  }
  if (from.has_frequency_max()) {
    mutable_frequency_max()->::google::fhir::stu3::proto::Integer::MergeFrom(from.frequency_max());
  }
  if (from.has_period()) {
    mutable_period()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.period());
  }
  if (from.has_period_max()) {
    mutable_period_max()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.period_max());
  }
  if (from.has_period_unit()) {
    mutable_period_unit()->::google::fhir::stu3::proto::UnitsOfTimeCode::MergeFrom(from.period_unit());
  }
  if (from.has_offset()) {
    mutable_offset()->::google::fhir::stu3::proto::UnsignedInt::MergeFrom(from.offset());
  }
}

void Timing_Repeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Timing.Repeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Timing_Repeat::CopyFrom(const Timing_Repeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Timing.Repeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Timing_Repeat::IsInitialized() const {
  return true;
}

void Timing_Repeat::Swap(Timing_Repeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Timing_Repeat::InternalSwap(Timing_Repeat* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&day_of_week_)->InternalSwap(CastToBase(&other->day_of_week_));
  CastToBase(&time_of_day_)->InternalSwap(CastToBase(&other->time_of_day_));
  CastToBase(&when_)->InternalSwap(CastToBase(&other->when_));
  swap(id_, other->id_);
  swap(bounds_, other->bounds_);
  swap(count_, other->count_);
  swap(count_max_, other->count_max_);
  swap(duration_, other->duration_);
  swap(duration_max_, other->duration_max_);
  swap(duration_unit_, other->duration_unit_);
  swap(frequency_, other->frequency_);
  swap(frequency_max_, other->frequency_max_);
  swap(period_, other->period_);
  swap(period_max_, other->period_max_);
  swap(period_unit_, other->period_unit_);
  swap(offset_, other->offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Timing_Repeat::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Timing::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Timing_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Timing_default_instance_._instance.get_mutable()->repeat_ = const_cast< ::google::fhir::stu3::proto::Timing_Repeat*>(
      ::google::fhir::stu3::proto::Timing_Repeat::internal_default_instance());
  ::google::fhir::stu3::proto::_Timing_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Timing::kIdFieldNumber;
const int Timing::kExtensionFieldNumber;
const int Timing::kEventFieldNumber;
const int Timing::kRepeatFieldNumber;
const int Timing::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Timing::Timing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Timing)
}
Timing::Timing(const Timing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_),
      event_(from.event_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_repeat()) {
    repeat_ = new ::google::fhir::stu3::proto::Timing_Repeat(*from.repeat_);
  } else {
    repeat_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::CodeableConcept(*from.code_);
  } else {
    code_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Timing)
}

void Timing::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&id_)) + sizeof(code_));
}

Timing::~Timing() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Timing)
  SharedDtor();
}

void Timing::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete repeat_;
  if (this != internal_default_instance()) delete code_;
}

void Timing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Timing::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Timing& Timing::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Timing::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Timing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  event_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && repeat_ != NULL) {
    delete repeat_;
  }
  repeat_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  _internal_metadata_.Clear();
}

bool Timing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Timing)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.DateTime event = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Timing.Repeat repeat = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_repeat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Timing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Timing)
  return false;
#undef DO_
}

void Timing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Timing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // repeated .google.fhir.stu3.proto.DateTime event = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->event(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.Timing.Repeat repeat = 4;
  if (this->has_repeat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_repeat(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 5;
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Timing)
}

::google::protobuf::uint8* Timing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Timing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.DateTime event = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->event_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->event(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.Timing.Repeat repeat = 4;
  if (this->has_repeat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_repeat(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 5;
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_code(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Timing)
  return target;
}

size_t Timing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Timing)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // repeated .google.fhir.stu3.proto.DateTime event = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->event_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->event(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Timing.Repeat repeat = 4;
  if (this->has_repeat()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *repeat_);
  }

  // .google.fhir.stu3.proto.CodeableConcept code = 5;
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Timing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Timing)
  GOOGLE_DCHECK_NE(&from, this);
  const Timing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Timing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Timing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Timing)
    MergeFrom(*source);
  }
}

void Timing::MergeFrom(const Timing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Timing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  event_.MergeFrom(from.event_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_repeat()) {
    mutable_repeat()->::google::fhir::stu3::proto::Timing_Repeat::MergeFrom(from.repeat());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.code());
  }
}

void Timing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Timing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Timing::CopyFrom(const Timing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Timing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Timing::IsInitialized() const {
  return true;
}

void Timing::Swap(Timing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Timing::InternalSwap(Timing* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  CastToBase(&event_)->InternalSwap(CastToBase(&other->event_));
  swap(id_, other->id_);
  swap(repeat_, other->repeat_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Timing::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Extension_Value::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.base64_binary_ = const_cast< ::google::fhir::stu3::proto::Base64Binary*>(
      ::google::fhir::stu3::proto::Base64Binary::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.boolean_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.code_ = const_cast< ::google::fhir::stu3::proto::Code*>(
      ::google::fhir::stu3::proto::Code::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.date_ = const_cast< ::google::fhir::stu3::proto::Date*>(
      ::google::fhir::stu3::proto::Date::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.date_time_ = const_cast< ::google::fhir::stu3::proto::DateTime*>(
      ::google::fhir::stu3::proto::DateTime::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.decimal_ = const_cast< ::google::fhir::stu3::proto::Decimal*>(
      ::google::fhir::stu3::proto::Decimal::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.id_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.instant_ = const_cast< ::google::fhir::stu3::proto::Instant*>(
      ::google::fhir::stu3::proto::Instant::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.integer_ = const_cast< ::google::fhir::stu3::proto::Integer*>(
      ::google::fhir::stu3::proto::Integer::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.markdown_ = const_cast< ::google::fhir::stu3::proto::Markdown*>(
      ::google::fhir::stu3::proto::Markdown::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.oid_ = const_cast< ::google::fhir::stu3::proto::Oid*>(
      ::google::fhir::stu3::proto::Oid::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.positive_int_ = const_cast< ::google::fhir::stu3::proto::PositiveInt*>(
      ::google::fhir::stu3::proto::PositiveInt::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.string_value_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.time_ = const_cast< ::google::fhir::stu3::proto::Time*>(
      ::google::fhir::stu3::proto::Time::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.unsigned_int_ = const_cast< ::google::fhir::stu3::proto::UnsignedInt*>(
      ::google::fhir::stu3::proto::UnsignedInt::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.uri_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.address_ = const_cast< ::google::fhir::stu3::proto::Address*>(
      ::google::fhir::stu3::proto::Address::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.age_ = const_cast< ::google::fhir::stu3::proto::Age*>(
      ::google::fhir::stu3::proto::Age::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.annotation_ = const_cast< ::google::fhir::stu3::proto::Annotation*>(
      ::google::fhir::stu3::proto::Annotation::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.attachment_ = const_cast< ::google::fhir::stu3::proto::Attachment*>(
      ::google::fhir::stu3::proto::Attachment::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.codeable_concept_ = const_cast< ::google::fhir::stu3::proto::CodeableConcept*>(
      ::google::fhir::stu3::proto::CodeableConcept::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.coding_ = const_cast< ::google::fhir::stu3::proto::Coding*>(
      ::google::fhir::stu3::proto::Coding::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.contact_point_ = const_cast< ::google::fhir::stu3::proto::ContactPoint*>(
      ::google::fhir::stu3::proto::ContactPoint::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.count_ = const_cast< ::google::fhir::stu3::proto::Count*>(
      ::google::fhir::stu3::proto::Count::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.distance_ = const_cast< ::google::fhir::stu3::proto::Distance*>(
      ::google::fhir::stu3::proto::Distance::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.duration_ = const_cast< ::google::fhir::stu3::proto::Duration*>(
      ::google::fhir::stu3::proto::Duration::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.human_name_ = const_cast< ::google::fhir::stu3::proto::HumanName*>(
      ::google::fhir::stu3::proto::HumanName::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.identifier_ = const_cast< ::google::fhir::stu3::proto::Identifier*>(
      ::google::fhir::stu3::proto::Identifier::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.money_ = const_cast< ::google::fhir::stu3::proto::Money*>(
      ::google::fhir::stu3::proto::Money::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.period_ = const_cast< ::google::fhir::stu3::proto::Period*>(
      ::google::fhir::stu3::proto::Period::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.quantity_ = const_cast< ::google::fhir::stu3::proto::Quantity*>(
      ::google::fhir::stu3::proto::Quantity::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.range_ = const_cast< ::google::fhir::stu3::proto::Range*>(
      ::google::fhir::stu3::proto::Range::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.ratio_ = const_cast< ::google::fhir::stu3::proto::Ratio*>(
      ::google::fhir::stu3::proto::Ratio::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.reference_ = const_cast< ::google::fhir::stu3::proto::Reference*>(
      ::google::fhir::stu3::proto::Reference::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.sampled_data_ = const_cast< ::google::fhir::stu3::proto::SampledData*>(
      ::google::fhir::stu3::proto::SampledData::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.signature_ = const_cast< ::google::fhir::stu3::proto::Signature*>(
      ::google::fhir::stu3::proto::Signature::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.timing_ = const_cast< ::google::fhir::stu3::proto::Timing*>(
      ::google::fhir::stu3::proto::Timing::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_Value_default_instance_.meta_ = const_cast< ::google::fhir::stu3::proto::Meta*>(
      ::google::fhir::stu3::proto::Meta::internal_default_instance());
}
void Extension_Value::set_allocated_base64_binary(::google::fhir::stu3::proto::Base64Binary* base64_binary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (base64_binary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base64_binary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base64_binary, submessage_arena);
    }
    set_has_base64_binary();
    value_.base64_binary_ = base64_binary;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.base64_binary)
}
void Extension_Value::set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (boolean) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      boolean = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boolean, submessage_arena);
    }
    set_has_boolean();
    value_.boolean_ = boolean;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.boolean)
}
void Extension_Value::set_allocated_code(::google::fhir::stu3::proto::Code* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    set_has_code();
    value_.code_ = code;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.code)
}
void Extension_Value::set_allocated_date(::google::fhir::stu3::proto::Date* date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date, submessage_arena);
    }
    set_has_date();
    value_.date_ = date;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.date)
}
void Extension_Value::set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (date_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_time, submessage_arena);
    }
    set_has_date_time();
    value_.date_time_ = date_time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.date_time)
}
void Extension_Value::set_allocated_decimal(::google::fhir::stu3::proto::Decimal* decimal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (decimal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      decimal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, decimal, submessage_arena);
    }
    set_has_decimal();
    value_.decimal_ = decimal;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.decimal)
}
void Extension_Value::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    set_has_id();
    value_.id_ = id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.id)
}
void Extension_Value::set_allocated_instant(::google::fhir::stu3::proto::Instant* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    set_has_instant();
    value_.instant_ = instant;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.instant)
}
void Extension_Value::set_allocated_integer(::google::fhir::stu3::proto::Integer* integer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (integer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      integer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, integer, submessage_arena);
    }
    set_has_integer();
    value_.integer_ = integer;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.integer)
}
void Extension_Value::set_allocated_markdown(::google::fhir::stu3::proto::Markdown* markdown) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (markdown) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      markdown = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, markdown, submessage_arena);
    }
    set_has_markdown();
    value_.markdown_ = markdown;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.markdown)
}
void Extension_Value::set_allocated_oid(::google::fhir::stu3::proto::Oid* oid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (oid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      oid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, oid, submessage_arena);
    }
    set_has_oid();
    value_.oid_ = oid;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.oid)
}
void Extension_Value::set_allocated_positive_int(::google::fhir::stu3::proto::PositiveInt* positive_int) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (positive_int) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      positive_int = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, positive_int, submessage_arena);
    }
    set_has_positive_int();
    value_.positive_int_ = positive_int;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.positive_int)
}
void Extension_Value::set_allocated_string_value(::google::fhir::stu3::proto::String* string_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (string_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string_value, submessage_arena);
    }
    set_has_string_value();
    value_.string_value_ = string_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.string_value)
}
void Extension_Value::set_allocated_time(::google::fhir::stu3::proto::Time* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    set_has_time();
    value_.time_ = time;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.time)
}
void Extension_Value::set_allocated_unsigned_int(::google::fhir::stu3::proto::UnsignedInt* unsigned_int) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (unsigned_int) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      unsigned_int = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unsigned_int, submessage_arena);
    }
    set_has_unsigned_int();
    value_.unsigned_int_ = unsigned_int;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.unsigned_int)
}
void Extension_Value::set_allocated_uri(::google::fhir::stu3::proto::Uri* uri) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (uri) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uri = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uri, submessage_arena);
    }
    set_has_uri();
    value_.uri_ = uri;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.uri)
}
void Extension_Value::set_allocated_address(::google::fhir::stu3::proto::Address* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    set_has_address();
    value_.address_ = address;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.address)
}
void Extension_Value::set_allocated_age(::google::fhir::stu3::proto::Age* age) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (age) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      age = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, age, submessage_arena);
    }
    set_has_age();
    value_.age_ = age;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.age)
}
void Extension_Value::set_allocated_annotation(::google::fhir::stu3::proto::Annotation* annotation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (annotation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      annotation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, annotation, submessage_arena);
    }
    set_has_annotation();
    value_.annotation_ = annotation;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.annotation)
}
void Extension_Value::set_allocated_attachment(::google::fhir::stu3::proto::Attachment* attachment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (attachment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attachment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attachment, submessage_arena);
    }
    set_has_attachment();
    value_.attachment_ = attachment;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.attachment)
}
void Extension_Value::set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (codeable_concept) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      codeable_concept = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, codeable_concept, submessage_arena);
    }
    set_has_codeable_concept();
    value_.codeable_concept_ = codeable_concept;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.codeable_concept)
}
void Extension_Value::set_allocated_coding(::google::fhir::stu3::proto::Coding* coding) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (coding) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      coding = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coding, submessage_arena);
    }
    set_has_coding();
    value_.coding_ = coding;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.coding)
}
void Extension_Value::set_allocated_contact_point(::google::fhir::stu3::proto::ContactPoint* contact_point) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (contact_point) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      contact_point = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, contact_point, submessage_arena);
    }
    set_has_contact_point();
    value_.contact_point_ = contact_point;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.contact_point)
}
void Extension_Value::set_allocated_count(::google::fhir::stu3::proto::Count* count) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (count) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      count = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, count, submessage_arena);
    }
    set_has_count();
    value_.count_ = count;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.count)
}
void Extension_Value::set_allocated_distance(::google::fhir::stu3::proto::Distance* distance) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (distance) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      distance = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, distance, submessage_arena);
    }
    set_has_distance();
    value_.distance_ = distance;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.distance)
}
void Extension_Value::set_allocated_duration(::google::fhir::stu3::proto::Duration* duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (duration) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, duration, submessage_arena);
    }
    set_has_duration();
    value_.duration_ = duration;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.duration)
}
void Extension_Value::set_allocated_human_name(::google::fhir::stu3::proto::HumanName* human_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (human_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      human_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, human_name, submessage_arena);
    }
    set_has_human_name();
    value_.human_name_ = human_name;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.human_name)
}
void Extension_Value::set_allocated_identifier(::google::fhir::stu3::proto::Identifier* identifier) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (identifier) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      identifier = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, identifier, submessage_arena);
    }
    set_has_identifier();
    value_.identifier_ = identifier;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.identifier)
}
void Extension_Value::set_allocated_money(::google::fhir::stu3::proto::Money* money) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (money) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      money = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, money, submessage_arena);
    }
    set_has_money();
    value_.money_ = money;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.money)
}
void Extension_Value::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    set_has_period();
    value_.period_ = period;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.period)
}
void Extension_Value::set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (quantity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quantity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quantity, submessage_arena);
    }
    set_has_quantity();
    value_.quantity_ = quantity;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.quantity)
}
void Extension_Value::set_allocated_range(::google::fhir::stu3::proto::Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    set_has_range();
    value_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.range)
}
void Extension_Value::set_allocated_ratio(::google::fhir::stu3::proto::Ratio* ratio) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (ratio) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ratio = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ratio, submessage_arena);
    }
    set_has_ratio();
    value_.ratio_ = ratio;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.ratio)
}
void Extension_Value::set_allocated_reference(::google::fhir::stu3::proto::Reference* reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference, submessage_arena);
    }
    set_has_reference();
    value_.reference_ = reference;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.reference)
}
void Extension_Value::set_allocated_sampled_data(::google::fhir::stu3::proto::SampledData* sampled_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (sampled_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sampled_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sampled_data, submessage_arena);
    }
    set_has_sampled_data();
    value_.sampled_data_ = sampled_data;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.sampled_data)
}
void Extension_Value::set_allocated_signature(::google::fhir::stu3::proto::Signature* signature) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (signature) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      signature = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, signature, submessage_arena);
    }
    set_has_signature();
    value_.signature_ = signature;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.signature)
}
void Extension_Value::set_allocated_timing(::google::fhir::stu3::proto::Timing* timing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (timing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timing, submessage_arena);
    }
    set_has_timing();
    value_.timing_ = timing;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.timing)
}
void Extension_Value::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    set_has_meta();
    value_.meta_ = meta;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Extension.Value.meta)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Extension_Value::kBase64BinaryFieldNumber;
const int Extension_Value::kBooleanFieldNumber;
const int Extension_Value::kCodeFieldNumber;
const int Extension_Value::kDateFieldNumber;
const int Extension_Value::kDateTimeFieldNumber;
const int Extension_Value::kDecimalFieldNumber;
const int Extension_Value::kIdFieldNumber;
const int Extension_Value::kInstantFieldNumber;
const int Extension_Value::kIntegerFieldNumber;
const int Extension_Value::kMarkdownFieldNumber;
const int Extension_Value::kOidFieldNumber;
const int Extension_Value::kPositiveIntFieldNumber;
const int Extension_Value::kStringValueFieldNumber;
const int Extension_Value::kTimeFieldNumber;
const int Extension_Value::kUnsignedIntFieldNumber;
const int Extension_Value::kUriFieldNumber;
const int Extension_Value::kAddressFieldNumber;
const int Extension_Value::kAgeFieldNumber;
const int Extension_Value::kAnnotationFieldNumber;
const int Extension_Value::kAttachmentFieldNumber;
const int Extension_Value::kCodeableConceptFieldNumber;
const int Extension_Value::kCodingFieldNumber;
const int Extension_Value::kContactPointFieldNumber;
const int Extension_Value::kCountFieldNumber;
const int Extension_Value::kDistanceFieldNumber;
const int Extension_Value::kDurationFieldNumber;
const int Extension_Value::kHumanNameFieldNumber;
const int Extension_Value::kIdentifierFieldNumber;
const int Extension_Value::kMoneyFieldNumber;
const int Extension_Value::kPeriodFieldNumber;
const int Extension_Value::kQuantityFieldNumber;
const int Extension_Value::kRangeFieldNumber;
const int Extension_Value::kRatioFieldNumber;
const int Extension_Value::kReferenceFieldNumber;
const int Extension_Value::kSampledDataFieldNumber;
const int Extension_Value::kSignatureFieldNumber;
const int Extension_Value::kTimingFieldNumber;
const int Extension_Value::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Extension_Value::Extension_Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Extension.Value)
}
Extension_Value::Extension_Value(const Extension_Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kBase64Binary: {
      mutable_base64_binary()->::google::fhir::stu3::proto::Base64Binary::MergeFrom(from.base64_binary());
      break;
    }
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kCode: {
      mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
      break;
    }
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.decimal());
      break;
    }
    case kId: {
      mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
      break;
    }
    case kInstant: {
      mutable_instant()->::google::fhir::stu3::proto::Instant::MergeFrom(from.instant());
      break;
    }
    case kInteger: {
      mutable_integer()->::google::fhir::stu3::proto::Integer::MergeFrom(from.integer());
      break;
    }
    case kMarkdown: {
      mutable_markdown()->::google::fhir::stu3::proto::Markdown::MergeFrom(from.markdown());
      break;
    }
    case kOid: {
      mutable_oid()->::google::fhir::stu3::proto::Oid::MergeFrom(from.oid());
      break;
    }
    case kPositiveInt: {
      mutable_positive_int()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.positive_int());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kUnsignedInt: {
      mutable_unsigned_int()->::google::fhir::stu3::proto::UnsignedInt::MergeFrom(from.unsigned_int());
      break;
    }
    case kUri: {
      mutable_uri()->::google::fhir::stu3::proto::Uri::MergeFrom(from.uri());
      break;
    }
    case kAddress: {
      mutable_address()->::google::fhir::stu3::proto::Address::MergeFrom(from.address());
      break;
    }
    case kAge: {
      mutable_age()->::google::fhir::stu3::proto::Age::MergeFrom(from.age());
      break;
    }
    case kAnnotation: {
      mutable_annotation()->::google::fhir::stu3::proto::Annotation::MergeFrom(from.annotation());
      break;
    }
    case kAttachment: {
      mutable_attachment()->::google::fhir::stu3::proto::Attachment::MergeFrom(from.attachment());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kCoding: {
      mutable_coding()->::google::fhir::stu3::proto::Coding::MergeFrom(from.coding());
      break;
    }
    case kContactPoint: {
      mutable_contact_point()->::google::fhir::stu3::proto::ContactPoint::MergeFrom(from.contact_point());
      break;
    }
    case kCount: {
      mutable_count()->::google::fhir::stu3::proto::Count::MergeFrom(from.count());
      break;
    }
    case kDistance: {
      mutable_distance()->::google::fhir::stu3::proto::Distance::MergeFrom(from.distance());
      break;
    }
    case kDuration: {
      mutable_duration()->::google::fhir::stu3::proto::Duration::MergeFrom(from.duration());
      break;
    }
    case kHumanName: {
      mutable_human_name()->::google::fhir::stu3::proto::HumanName::MergeFrom(from.human_name());
      break;
    }
    case kIdentifier: {
      mutable_identifier()->::google::fhir::stu3::proto::Identifier::MergeFrom(from.identifier());
      break;
    }
    case kMoney: {
      mutable_money()->::google::fhir::stu3::proto::Money::MergeFrom(from.money());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kRatio: {
      mutable_ratio()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.ratio());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case kSampledData: {
      mutable_sampled_data()->::google::fhir::stu3::proto::SampledData::MergeFrom(from.sampled_data());
      break;
    }
    case kSignature: {
      mutable_signature()->::google::fhir::stu3::proto::Signature::MergeFrom(from.signature());
      break;
    }
    case kTiming: {
      mutable_timing()->::google::fhir::stu3::proto::Timing::MergeFrom(from.timing());
      break;
    }
    case kMeta: {
      mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Extension.Value)
}

void Extension_Value::SharedCtor() {
  clear_has_value();
}

Extension_Value::~Extension_Value() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Extension.Value)
  SharedDtor();
}

void Extension_Value::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void Extension_Value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Extension_Value::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Extension_Value& Extension_Value::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Extension_Value::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.Extension.Value)
  switch (value_case()) {
    case kBase64Binary: {
      delete value_.base64_binary_;
      break;
    }
    case kBoolean: {
      delete value_.boolean_;
      break;
    }
    case kCode: {
      delete value_.code_;
      break;
    }
    case kDate: {
      delete value_.date_;
      break;
    }
    case kDateTime: {
      delete value_.date_time_;
      break;
    }
    case kDecimal: {
      delete value_.decimal_;
      break;
    }
    case kId: {
      delete value_.id_;
      break;
    }
    case kInstant: {
      delete value_.instant_;
      break;
    }
    case kInteger: {
      delete value_.integer_;
      break;
    }
    case kMarkdown: {
      delete value_.markdown_;
      break;
    }
    case kOid: {
      delete value_.oid_;
      break;
    }
    case kPositiveInt: {
      delete value_.positive_int_;
      break;
    }
    case kStringValue: {
      delete value_.string_value_;
      break;
    }
    case kTime: {
      delete value_.time_;
      break;
    }
    case kUnsignedInt: {
      delete value_.unsigned_int_;
      break;
    }
    case kUri: {
      delete value_.uri_;
      break;
    }
    case kAddress: {
      delete value_.address_;
      break;
    }
    case kAge: {
      delete value_.age_;
      break;
    }
    case kAnnotation: {
      delete value_.annotation_;
      break;
    }
    case kAttachment: {
      delete value_.attachment_;
      break;
    }
    case kCodeableConcept: {
      delete value_.codeable_concept_;
      break;
    }
    case kCoding: {
      delete value_.coding_;
      break;
    }
    case kContactPoint: {
      delete value_.contact_point_;
      break;
    }
    case kCount: {
      delete value_.count_;
      break;
    }
    case kDistance: {
      delete value_.distance_;
      break;
    }
    case kDuration: {
      delete value_.duration_;
      break;
    }
    case kHumanName: {
      delete value_.human_name_;
      break;
    }
    case kIdentifier: {
      delete value_.identifier_;
      break;
    }
    case kMoney: {
      delete value_.money_;
      break;
    }
    case kPeriod: {
      delete value_.period_;
      break;
    }
    case kQuantity: {
      delete value_.quantity_;
      break;
    }
    case kRange: {
      delete value_.range_;
      break;
    }
    case kRatio: {
      delete value_.ratio_;
      break;
    }
    case kReference: {
      delete value_.reference_;
      break;
    }
    case kSampledData: {
      delete value_.sampled_data_;
      break;
    }
    case kSignature: {
      delete value_.signature_;
      break;
    }
    case kTiming: {
      delete value_.timing_;
      break;
    }
    case kMeta: {
      delete value_.meta_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Extension_Value::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Extension.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear();
}

bool Extension_Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Extension.Value)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base64_binary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean boolean = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_boolean()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Code code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Date date = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.DateTime date_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Decimal decimal = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_decimal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Id id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Instant instant = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Integer integer = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_integer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Markdown markdown = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_markdown()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Oid oid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_oid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_positive_int()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Time time = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unsigned_int()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri uri = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uri()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Address address = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Age age = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_age()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Annotation annotation = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_annotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Attachment attachment = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attachment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_codeable_concept()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Coding coding = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_contact_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Count count = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Distance distance = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_distance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Duration duration = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.HumanName human_name = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_human_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Identifier identifier = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Money money = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_money()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Period period = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Quantity quantity = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quantity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Range range = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Ratio ratio = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ratio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Reference reference = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.SampledData sampled_data = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sampled_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Signature signature = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Timing timing = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Meta meta = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Extension.Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Extension.Value)
  return false;
#undef DO_
}

void Extension_Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Extension.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
  if (has_base64_binary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_base64_binary(), output);
  }

  // .google.fhir.stu3.proto.Boolean boolean = 2;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_boolean(), output);
  }

  // .google.fhir.stu3.proto.Code code = 3;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_code(), output);
  }

  // .google.fhir.stu3.proto.Date date = 4;
  if (has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_date(), output);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 5;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_date_time(), output);
  }

  // .google.fhir.stu3.proto.Decimal decimal = 6;
  if (has_decimal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_decimal(), output);
  }

  // .google.fhir.stu3.proto.Id id = 7;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Instant instant = 8;
  if (has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_instant(), output);
  }

  // .google.fhir.stu3.proto.Integer integer = 9;
  if (has_integer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_integer(), output);
  }

  // .google.fhir.stu3.proto.Markdown markdown = 10;
  if (has_markdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_markdown(), output);
  }

  // .google.fhir.stu3.proto.Oid oid = 11;
  if (has_oid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_oid(), output);
  }

  // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
  if (has_positive_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_positive_int(), output);
  }

  // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_string_value(), output);
  }

  // .google.fhir.stu3.proto.Time time = 14;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_time(), output);
  }

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
  if (has_unsigned_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_unsigned_int(), output);
  }

  // .google.fhir.stu3.proto.Uri uri = 16;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_uri(), output);
  }

  // .google.fhir.stu3.proto.Address address = 17;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_address(), output);
  }

  // .google.fhir.stu3.proto.Age age = 18;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_age(), output);
  }

  // .google.fhir.stu3.proto.Annotation annotation = 19;
  if (has_annotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_annotation(), output);
  }

  // .google.fhir.stu3.proto.Attachment attachment = 20;
  if (has_attachment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_attachment(), output);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
  if (has_codeable_concept()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_codeable_concept(), output);
  }

  // .google.fhir.stu3.proto.Coding coding = 22;
  if (has_coding()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_coding(), output);
  }

  // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
  if (has_contact_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_contact_point(), output);
  }

  // .google.fhir.stu3.proto.Count count = 24;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_count(), output);
  }

  // .google.fhir.stu3.proto.Distance distance = 25;
  if (has_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_distance(), output);
  }

  // .google.fhir.stu3.proto.Duration duration = 26;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_duration(), output);
  }

  // .google.fhir.stu3.proto.HumanName human_name = 27;
  if (has_human_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_internal_human_name(), output);
  }

  // .google.fhir.stu3.proto.Identifier identifier = 28;
  if (has_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->_internal_identifier(), output);
  }

  // .google.fhir.stu3.proto.Money money = 29;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->_internal_money(), output);
  }

  // .google.fhir.stu3.proto.Period period = 30;
  if (has_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->_internal_period(), output);
  }

  // .google.fhir.stu3.proto.Quantity quantity = 31;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->_internal_quantity(), output);
  }

  // .google.fhir.stu3.proto.Range range = 32;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->_internal_range(), output);
  }

  // .google.fhir.stu3.proto.Ratio ratio = 33;
  if (has_ratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, this->_internal_ratio(), output);
  }

  // .google.fhir.stu3.proto.Reference reference = 34;
  if (has_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, this->_internal_reference(), output);
  }

  // .google.fhir.stu3.proto.SampledData sampled_data = 35;
  if (has_sampled_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, this->_internal_sampled_data(), output);
  }

  // .google.fhir.stu3.proto.Signature signature = 36;
  if (has_signature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, this->_internal_signature(), output);
  }

  // .google.fhir.stu3.proto.Timing timing = 37;
  if (has_timing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, this->_internal_timing(), output);
  }

  // .google.fhir.stu3.proto.Meta meta = 38;
  if (has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, this->_internal_meta(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Extension.Value)
}

::google::protobuf::uint8* Extension_Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Extension.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
  if (has_base64_binary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_base64_binary(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean boolean = 2;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_boolean(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Code code = 3;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_code(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Date date = 4;
  if (has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_date(), deterministic, target);
  }

  // .google.fhir.stu3.proto.DateTime date_time = 5;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_date_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Decimal decimal = 6;
  if (has_decimal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_decimal(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Id id = 7;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Instant instant = 8;
  if (has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_instant(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Integer integer = 9;
  if (has_integer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_integer(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Markdown markdown = 10;
  if (has_markdown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_markdown(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Oid oid = 11;
  if (has_oid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_oid(), deterministic, target);
  }

  // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
  if (has_positive_int()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_positive_int(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
  if (has_string_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_string_value(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Time time = 14;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_time(), deterministic, target);
  }

  // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
  if (has_unsigned_int()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_unsigned_int(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri uri = 16;
  if (has_uri()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_uri(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Address address = 17;
  if (has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_address(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Age age = 18;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_age(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Annotation annotation = 19;
  if (has_annotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_annotation(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Attachment attachment = 20;
  if (has_attachment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_attachment(), deterministic, target);
  }

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
  if (has_codeable_concept()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_codeable_concept(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Coding coding = 22;
  if (has_coding()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_coding(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
  if (has_contact_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_contact_point(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Count count = 24;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_count(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Distance distance = 25;
  if (has_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_distance(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Duration duration = 26;
  if (has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_duration(), deterministic, target);
  }

  // .google.fhir.stu3.proto.HumanName human_name = 27;
  if (has_human_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->_internal_human_name(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Identifier identifier = 28;
  if (has_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->_internal_identifier(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Money money = 29;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->_internal_money(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Period period = 30;
  if (has_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->_internal_period(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Quantity quantity = 31;
  if (has_quantity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->_internal_quantity(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Range range = 32;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, this->_internal_range(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Ratio ratio = 33;
  if (has_ratio()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33, this->_internal_ratio(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Reference reference = 34;
  if (has_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        34, this->_internal_reference(), deterministic, target);
  }

  // .google.fhir.stu3.proto.SampledData sampled_data = 35;
  if (has_sampled_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        35, this->_internal_sampled_data(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Signature signature = 36;
  if (has_signature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        36, this->_internal_signature(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Timing timing = 37;
  if (has_timing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        37, this->_internal_timing(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Meta meta = 38;
  if (has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        38, this->_internal_meta(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Extension.Value)
  return target;
}

size_t Extension_Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Extension.Value)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_case()) {
    // .google.fhir.stu3.proto.Base64Binary base64_binary = 1;
    case kBase64Binary: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.base64_binary_);
      break;
    }
    // .google.fhir.stu3.proto.Boolean boolean = 2;
    case kBoolean: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.boolean_);
      break;
    }
    // .google.fhir.stu3.proto.Code code = 3;
    case kCode: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.code_);
      break;
    }
    // .google.fhir.stu3.proto.Date date = 4;
    case kDate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.date_);
      break;
    }
    // .google.fhir.stu3.proto.DateTime date_time = 5;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.date_time_);
      break;
    }
    // .google.fhir.stu3.proto.Decimal decimal = 6;
    case kDecimal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.decimal_);
      break;
    }
    // .google.fhir.stu3.proto.Id id = 7;
    case kId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.id_);
      break;
    }
    // .google.fhir.stu3.proto.Instant instant = 8;
    case kInstant: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.instant_);
      break;
    }
    // .google.fhir.stu3.proto.Integer integer = 9;
    case kInteger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.integer_);
      break;
    }
    // .google.fhir.stu3.proto.Markdown markdown = 10;
    case kMarkdown: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.markdown_);
      break;
    }
    // .google.fhir.stu3.proto.Oid oid = 11;
    case kOid: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.oid_);
      break;
    }
    // .google.fhir.stu3.proto.PositiveInt positive_int = 12;
    case kPositiveInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.positive_int_);
      break;
    }
    // .google.fhir.stu3.proto.String string_value = 13[json_name = "string"];
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.string_value_);
      break;
    }
    // .google.fhir.stu3.proto.Time time = 14;
    case kTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.time_);
      break;
    }
    // .google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
    case kUnsignedInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.unsigned_int_);
      break;
    }
    // .google.fhir.stu3.proto.Uri uri = 16;
    case kUri: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.uri_);
      break;
    }
    // .google.fhir.stu3.proto.Address address = 17;
    case kAddress: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.address_);
      break;
    }
    // .google.fhir.stu3.proto.Age age = 18;
    case kAge: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.age_);
      break;
    }
    // .google.fhir.stu3.proto.Annotation annotation = 19;
    case kAnnotation: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.annotation_);
      break;
    }
    // .google.fhir.stu3.proto.Attachment attachment = 20;
    case kAttachment: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.attachment_);
      break;
    }
    // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
    case kCodeableConcept: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.codeable_concept_);
      break;
    }
    // .google.fhir.stu3.proto.Coding coding = 22;
    case kCoding: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.coding_);
      break;
    }
    // .google.fhir.stu3.proto.ContactPoint contact_point = 23;
    case kContactPoint: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.contact_point_);
      break;
    }
    // .google.fhir.stu3.proto.Count count = 24;
    case kCount: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.count_);
      break;
    }
    // .google.fhir.stu3.proto.Distance distance = 25;
    case kDistance: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.distance_);
      break;
    }
    // .google.fhir.stu3.proto.Duration duration = 26;
    case kDuration: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.duration_);
      break;
    }
    // .google.fhir.stu3.proto.HumanName human_name = 27;
    case kHumanName: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.human_name_);
      break;
    }
    // .google.fhir.stu3.proto.Identifier identifier = 28;
    case kIdentifier: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.identifier_);
      break;
    }
    // .google.fhir.stu3.proto.Money money = 29;
    case kMoney: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.money_);
      break;
    }
    // .google.fhir.stu3.proto.Period period = 30;
    case kPeriod: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.period_);
      break;
    }
    // .google.fhir.stu3.proto.Quantity quantity = 31;
    case kQuantity: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.quantity_);
      break;
    }
    // .google.fhir.stu3.proto.Range range = 32;
    case kRange: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.range_);
      break;
    }
    // .google.fhir.stu3.proto.Ratio ratio = 33;
    case kRatio: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.ratio_);
      break;
    }
    // .google.fhir.stu3.proto.Reference reference = 34;
    case kReference: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.reference_);
      break;
    }
    // .google.fhir.stu3.proto.SampledData sampled_data = 35;
    case kSampledData: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.sampled_data_);
      break;
    }
    // .google.fhir.stu3.proto.Signature signature = 36;
    case kSignature: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.signature_);
      break;
    }
    // .google.fhir.stu3.proto.Timing timing = 37;
    case kTiming: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.timing_);
      break;
    }
    // .google.fhir.stu3.proto.Meta meta = 38;
    case kMeta: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.meta_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Extension_Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Extension.Value)
  GOOGLE_DCHECK_NE(&from, this);
  const Extension_Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Extension_Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Extension.Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Extension.Value)
    MergeFrom(*source);
  }
}

void Extension_Value::MergeFrom(const Extension_Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Extension.Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kBase64Binary: {
      mutable_base64_binary()->::google::fhir::stu3::proto::Base64Binary::MergeFrom(from.base64_binary());
      break;
    }
    case kBoolean: {
      mutable_boolean()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.boolean());
      break;
    }
    case kCode: {
      mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
      break;
    }
    case kDate: {
      mutable_date()->::google::fhir::stu3::proto::Date::MergeFrom(from.date());
      break;
    }
    case kDateTime: {
      mutable_date_time()->::google::fhir::stu3::proto::DateTime::MergeFrom(from.date_time());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::google::fhir::stu3::proto::Decimal::MergeFrom(from.decimal());
      break;
    }
    case kId: {
      mutable_id()->::google::fhir::stu3::proto::Id::MergeFrom(from.id());
      break;
    }
    case kInstant: {
      mutable_instant()->::google::fhir::stu3::proto::Instant::MergeFrom(from.instant());
      break;
    }
    case kInteger: {
      mutable_integer()->::google::fhir::stu3::proto::Integer::MergeFrom(from.integer());
      break;
    }
    case kMarkdown: {
      mutable_markdown()->::google::fhir::stu3::proto::Markdown::MergeFrom(from.markdown());
      break;
    }
    case kOid: {
      mutable_oid()->::google::fhir::stu3::proto::Oid::MergeFrom(from.oid());
      break;
    }
    case kPositiveInt: {
      mutable_positive_int()->::google::fhir::stu3::proto::PositiveInt::MergeFrom(from.positive_int());
      break;
    }
    case kStringValue: {
      mutable_string_value()->::google::fhir::stu3::proto::String::MergeFrom(from.string_value());
      break;
    }
    case kTime: {
      mutable_time()->::google::fhir::stu3::proto::Time::MergeFrom(from.time());
      break;
    }
    case kUnsignedInt: {
      mutable_unsigned_int()->::google::fhir::stu3::proto::UnsignedInt::MergeFrom(from.unsigned_int());
      break;
    }
    case kUri: {
      mutable_uri()->::google::fhir::stu3::proto::Uri::MergeFrom(from.uri());
      break;
    }
    case kAddress: {
      mutable_address()->::google::fhir::stu3::proto::Address::MergeFrom(from.address());
      break;
    }
    case kAge: {
      mutable_age()->::google::fhir::stu3::proto::Age::MergeFrom(from.age());
      break;
    }
    case kAnnotation: {
      mutable_annotation()->::google::fhir::stu3::proto::Annotation::MergeFrom(from.annotation());
      break;
    }
    case kAttachment: {
      mutable_attachment()->::google::fhir::stu3::proto::Attachment::MergeFrom(from.attachment());
      break;
    }
    case kCodeableConcept: {
      mutable_codeable_concept()->::google::fhir::stu3::proto::CodeableConcept::MergeFrom(from.codeable_concept());
      break;
    }
    case kCoding: {
      mutable_coding()->::google::fhir::stu3::proto::Coding::MergeFrom(from.coding());
      break;
    }
    case kContactPoint: {
      mutable_contact_point()->::google::fhir::stu3::proto::ContactPoint::MergeFrom(from.contact_point());
      break;
    }
    case kCount: {
      mutable_count()->::google::fhir::stu3::proto::Count::MergeFrom(from.count());
      break;
    }
    case kDistance: {
      mutable_distance()->::google::fhir::stu3::proto::Distance::MergeFrom(from.distance());
      break;
    }
    case kDuration: {
      mutable_duration()->::google::fhir::stu3::proto::Duration::MergeFrom(from.duration());
      break;
    }
    case kHumanName: {
      mutable_human_name()->::google::fhir::stu3::proto::HumanName::MergeFrom(from.human_name());
      break;
    }
    case kIdentifier: {
      mutable_identifier()->::google::fhir::stu3::proto::Identifier::MergeFrom(from.identifier());
      break;
    }
    case kMoney: {
      mutable_money()->::google::fhir::stu3::proto::Money::MergeFrom(from.money());
      break;
    }
    case kPeriod: {
      mutable_period()->::google::fhir::stu3::proto::Period::MergeFrom(from.period());
      break;
    }
    case kQuantity: {
      mutable_quantity()->::google::fhir::stu3::proto::Quantity::MergeFrom(from.quantity());
      break;
    }
    case kRange: {
      mutable_range()->::google::fhir::stu3::proto::Range::MergeFrom(from.range());
      break;
    }
    case kRatio: {
      mutable_ratio()->::google::fhir::stu3::proto::Ratio::MergeFrom(from.ratio());
      break;
    }
    case kReference: {
      mutable_reference()->::google::fhir::stu3::proto::Reference::MergeFrom(from.reference());
      break;
    }
    case kSampledData: {
      mutable_sampled_data()->::google::fhir::stu3::proto::SampledData::MergeFrom(from.sampled_data());
      break;
    }
    case kSignature: {
      mutable_signature()->::google::fhir::stu3::proto::Signature::MergeFrom(from.signature());
      break;
    }
    case kTiming: {
      mutable_timing()->::google::fhir::stu3::proto::Timing::MergeFrom(from.timing());
      break;
    }
    case kMeta: {
      mutable_meta()->::google::fhir::stu3::proto::Meta::MergeFrom(from.meta());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Extension_Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Extension.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Extension_Value::CopyFrom(const Extension_Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Extension.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Extension_Value::IsInitialized() const {
  return true;
}

void Extension_Value::Swap(Extension_Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Extension_Value::InternalSwap(Extension_Value* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Extension_Value::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Extension::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Extension_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_default_instance_._instance.get_mutable()->url_ = const_cast< ::google::fhir::stu3::proto::Uri*>(
      ::google::fhir::stu3::proto::Uri::internal_default_instance());
  ::google::fhir::stu3::proto::_Extension_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::fhir::stu3::proto::Extension_Value*>(
      ::google::fhir::stu3::proto::Extension_Value::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Extension::kIdFieldNumber;
const int Extension::kUrlFieldNumber;
const int Extension::kValueFieldNumber;
const int Extension::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Extension::Extension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Extension)
}
Extension::Extension(const Extension& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_url()) {
    url_ = new ::google::fhir::stu3::proto::Uri(*from.url_);
  } else {
    url_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::fhir::stu3::proto::Extension_Value(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Extension)
}

void Extension::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

Extension::~Extension() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Extension)
  SharedDtor();
}

void Extension::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete url_;
  if (this != internal_default_instance()) delete value_;
}

void Extension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Extension::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Extension& Extension::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Extension::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Extension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && url_ != NULL) {
    delete url_;
  }
  url_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool Extension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Extension)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Uri url = 2 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Extension.Value value = 3 [(.google.fhir.stu3.proto.is_choice_type) = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Extension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Extension)
  return false;
#undef DO_
}

void Extension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Extension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .google.fhir.stu3.proto.Uri url = 2 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_url(), output);
  }

  // .google.fhir.stu3.proto.Extension.Value value = 3 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_value(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Extension)
}

::google::protobuf::uint8* Extension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Extension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Uri url = 2 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_url(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Extension.Value value = 3 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_value(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Extension)
  return target;
}

size_t Extension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Extension)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Uri url = 2 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  if (this->has_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *url_);
  }

  // .google.fhir.stu3.proto.Extension.Value value = 3 [(.google.fhir.stu3.proto.is_choice_type) = true];
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Extension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Extension)
  GOOGLE_DCHECK_NE(&from, this);
  const Extension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Extension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Extension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Extension)
    MergeFrom(*source);
  }
}

void Extension::MergeFrom(const Extension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Extension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_url()) {
    mutable_url()->::google::fhir::stu3::proto::Uri::MergeFrom(from.url());
  }
  if (from.has_value()) {
    mutable_value()->::google::fhir::stu3::proto::Extension_Value::MergeFrom(from.value());
  }
}

void Extension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Extension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Extension::CopyFrom(const Extension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Extension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Extension::IsInitialized() const {
  return true;
}

void Extension::Swap(Extension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Extension::InternalSwap(Extension* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(url_, other->url_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Extension::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CodingWithFixedSystem::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_CodingWithFixedSystem_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_CodingWithFixedSystem_default_instance_._instance.get_mutable()->version_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_CodingWithFixedSystem_default_instance_._instance.get_mutable()->code_ = const_cast< ::google::fhir::stu3::proto::Code*>(
      ::google::fhir::stu3::proto::Code::internal_default_instance());
  ::google::fhir::stu3::proto::_CodingWithFixedSystem_default_instance_._instance.get_mutable()->display_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_CodingWithFixedSystem_default_instance_._instance.get_mutable()->user_selected_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CodingWithFixedSystem::kIdFieldNumber;
const int CodingWithFixedSystem::kExtensionFieldNumber;
const int CodingWithFixedSystem::kVersionFieldNumber;
const int CodingWithFixedSystem::kCodeFieldNumber;
const int CodingWithFixedSystem::kDisplayFieldNumber;
const int CodingWithFixedSystem::kUserSelectedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CodingWithFixedSystem::CodingWithFixedSystem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_CodingWithFixedSystem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.CodingWithFixedSystem)
}
CodingWithFixedSystem::CodingWithFixedSystem(const CodingWithFixedSystem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_version()) {
    version_ = new ::google::fhir::stu3::proto::String(*from.version_);
  } else {
    version_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::google::fhir::stu3::proto::Code(*from.code_);
  } else {
    code_ = NULL;
  }
  if (from.has_display()) {
    display_ = new ::google::fhir::stu3::proto::String(*from.display_);
  } else {
    display_ = NULL;
  }
  if (from.has_user_selected()) {
    user_selected_ = new ::google::fhir::stu3::proto::Boolean(*from.user_selected_);
  } else {
    user_selected_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.CodingWithFixedSystem)
}

void CodingWithFixedSystem::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_selected_) -
      reinterpret_cast<char*>(&id_)) + sizeof(user_selected_));
}

CodingWithFixedSystem::~CodingWithFixedSystem() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.CodingWithFixedSystem)
  SharedDtor();
}

void CodingWithFixedSystem::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete version_;
  if (this != internal_default_instance()) delete code_;
  if (this != internal_default_instance()) delete display_;
  if (this != internal_default_instance()) delete user_selected_;
}

void CodingWithFixedSystem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CodingWithFixedSystem::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CodingWithFixedSystem& CodingWithFixedSystem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_CodingWithFixedSystem.base);
  return *internal_default_instance();
}


void CodingWithFixedSystem::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.CodingWithFixedSystem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  if (GetArenaNoVirtual() == NULL && display_ != NULL) {
    delete display_;
  }
  display_ = NULL;
  if (GetArenaNoVirtual() == NULL && user_selected_ != NULL) {
    delete user_selected_;
  }
  user_selected_ = NULL;
  _internal_metadata_.Clear();
}

bool CodingWithFixedSystem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.CodingWithFixedSystem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Code code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String display = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_display()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean user_selected = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_selected()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.CodingWithFixedSystem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.CodingWithFixedSystem)
  return false;
#undef DO_
}

void CodingWithFixedSystem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.CodingWithFixedSystem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String version = 4;
  if (this->has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_version(), output);
  }

  // .google.fhir.stu3.proto.Code code = 5;
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_code(), output);
  }

  // .google.fhir.stu3.proto.String display = 6;
  if (this->has_display()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_display(), output);
  }

  // .google.fhir.stu3.proto.Boolean user_selected = 7;
  if (this->has_user_selected()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_user_selected(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.CodingWithFixedSystem)
}

::google::protobuf::uint8* CodingWithFixedSystem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.CodingWithFixedSystem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String version = 4;
  if (this->has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_version(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Code code = 5;
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_code(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String display = 6;
  if (this->has_display()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_display(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean user_selected = 7;
  if (this->has_user_selected()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_user_selected(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.CodingWithFixedSystem)
  return target;
}

size_t CodingWithFixedSystem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.CodingWithFixedSystem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.String version = 4;
  if (this->has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *version_);
  }

  // .google.fhir.stu3.proto.Code code = 5;
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  // .google.fhir.stu3.proto.String display = 6;
  if (this->has_display()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *display_);
  }

  // .google.fhir.stu3.proto.Boolean user_selected = 7;
  if (this->has_user_selected()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_selected_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CodingWithFixedSystem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.CodingWithFixedSystem)
  GOOGLE_DCHECK_NE(&from, this);
  const CodingWithFixedSystem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CodingWithFixedSystem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.CodingWithFixedSystem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.CodingWithFixedSystem)
    MergeFrom(*source);
  }
}

void CodingWithFixedSystem::MergeFrom(const CodingWithFixedSystem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.CodingWithFixedSystem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_version()) {
    mutable_version()->::google::fhir::stu3::proto::String::MergeFrom(from.version());
  }
  if (from.has_code()) {
    mutable_code()->::google::fhir::stu3::proto::Code::MergeFrom(from.code());
  }
  if (from.has_display()) {
    mutable_display()->::google::fhir::stu3::proto::String::MergeFrom(from.display());
  }
  if (from.has_user_selected()) {
    mutable_user_selected()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.user_selected());
  }
}

void CodingWithFixedSystem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.CodingWithFixedSystem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CodingWithFixedSystem::CopyFrom(const CodingWithFixedSystem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.CodingWithFixedSystem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CodingWithFixedSystem::IsInitialized() const {
  return true;
}

void CodingWithFixedSystem::Swap(CodingWithFixedSystem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CodingWithFixedSystem::InternalSwap(CodingWithFixedSystem* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(version_, other->version_);
  swap(code_, other->code_);
  swap(display_, other->display_);
  swap(user_selected_, other->user_selected_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CodingWithFixedSystem::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CodingWithFixedCode::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_CodingWithFixedCode_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_CodingWithFixedCode_default_instance_._instance.get_mutable()->version_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_CodingWithFixedCode_default_instance_._instance.get_mutable()->display_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_CodingWithFixedCode_default_instance_._instance.get_mutable()->user_selected_ = const_cast< ::google::fhir::stu3::proto::Boolean*>(
      ::google::fhir::stu3::proto::Boolean::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CodingWithFixedCode::kIdFieldNumber;
const int CodingWithFixedCode::kExtensionFieldNumber;
const int CodingWithFixedCode::kVersionFieldNumber;
const int CodingWithFixedCode::kDisplayFieldNumber;
const int CodingWithFixedCode::kUserSelectedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CodingWithFixedCode::CodingWithFixedCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_CodingWithFixedCode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.CodingWithFixedCode)
}
CodingWithFixedCode::CodingWithFixedCode(const CodingWithFixedCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_version()) {
    version_ = new ::google::fhir::stu3::proto::String(*from.version_);
  } else {
    version_ = NULL;
  }
  if (from.has_display()) {
    display_ = new ::google::fhir::stu3::proto::String(*from.display_);
  } else {
    display_ = NULL;
  }
  if (from.has_user_selected()) {
    user_selected_ = new ::google::fhir::stu3::proto::Boolean(*from.user_selected_);
  } else {
    user_selected_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.CodingWithFixedCode)
}

void CodingWithFixedCode::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_selected_) -
      reinterpret_cast<char*>(&id_)) + sizeof(user_selected_));
}

CodingWithFixedCode::~CodingWithFixedCode() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.CodingWithFixedCode)
  SharedDtor();
}

void CodingWithFixedCode::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete version_;
  if (this != internal_default_instance()) delete display_;
  if (this != internal_default_instance()) delete user_selected_;
}

void CodingWithFixedCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CodingWithFixedCode::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CodingWithFixedCode& CodingWithFixedCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_CodingWithFixedCode.base);
  return *internal_default_instance();
}


void CodingWithFixedCode::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.CodingWithFixedCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
  if (GetArenaNoVirtual() == NULL && display_ != NULL) {
    delete display_;
  }
  display_ = NULL;
  if (GetArenaNoVirtual() == NULL && user_selected_ != NULL) {
    delete user_selected_;
  }
  user_selected_ = NULL;
  _internal_metadata_.Clear();
}

bool CodingWithFixedCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.CodingWithFixedCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String display = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_display()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Boolean user_selected = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_selected()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.CodingWithFixedCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.CodingWithFixedCode)
  return false;
#undef DO_
}

void CodingWithFixedCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.CodingWithFixedCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String version = 4;
  if (this->has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_version(), output);
  }

  // .google.fhir.stu3.proto.String display = 6;
  if (this->has_display()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_display(), output);
  }

  // .google.fhir.stu3.proto.Boolean user_selected = 7;
  if (this->has_user_selected()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_user_selected(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.CodingWithFixedCode)
}

::google::protobuf::uint8* CodingWithFixedCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.CodingWithFixedCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String version = 4;
  if (this->has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_version(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String display = 6;
  if (this->has_display()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_display(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Boolean user_selected = 7;
  if (this->has_user_selected()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_user_selected(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.CodingWithFixedCode)
  return target;
}

size_t CodingWithFixedCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.CodingWithFixedCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.String version = 4;
  if (this->has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *version_);
  }

  // .google.fhir.stu3.proto.String display = 6;
  if (this->has_display()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *display_);
  }

  // .google.fhir.stu3.proto.Boolean user_selected = 7;
  if (this->has_user_selected()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_selected_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CodingWithFixedCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.CodingWithFixedCode)
  GOOGLE_DCHECK_NE(&from, this);
  const CodingWithFixedCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CodingWithFixedCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.CodingWithFixedCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.CodingWithFixedCode)
    MergeFrom(*source);
  }
}

void CodingWithFixedCode::MergeFrom(const CodingWithFixedCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.CodingWithFixedCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_version()) {
    mutable_version()->::google::fhir::stu3::proto::String::MergeFrom(from.version());
  }
  if (from.has_display()) {
    mutable_display()->::google::fhir::stu3::proto::String::MergeFrom(from.display());
  }
  if (from.has_user_selected()) {
    mutable_user_selected()->::google::fhir::stu3::proto::Boolean::MergeFrom(from.user_selected());
  }
}

void CodingWithFixedCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.CodingWithFixedCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CodingWithFixedCode::CopyFrom(const CodingWithFixedCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.CodingWithFixedCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CodingWithFixedCode::IsInitialized() const {
  return true;
}

void CodingWithFixedCode::Swap(CodingWithFixedCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CodingWithFixedCode::InternalSwap(CodingWithFixedCode* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(version_, other->version_);
  swap(display_, other->display_);
  swap(user_selected_, other->user_selected_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CodingWithFixedCode::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Reference::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_Reference_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.uri_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.fragment_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.account_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.activity_definition_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.adverse_event_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.allergy_intolerance_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.appointment_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.appointment_response_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.audit_event_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.basic_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.binary_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.body_site_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.bundle_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.capability_statement_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.care_plan_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.care_team_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.charge_item_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.claim_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.claim_response_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.clinical_impression_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.code_system_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.communication_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.communication_request_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.compartment_definition_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.composition_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.concept_map_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.condition_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.consent_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.contract_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.coverage_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.data_element_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.detected_issue_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.device_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.device_component_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.device_metric_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.device_request_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.device_use_statement_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.diagnostic_report_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.document_manifest_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.document_reference_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.eligibility_request_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.eligibility_response_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.encounter_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.endpoint_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.enrollment_request_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.enrollment_response_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.episode_of_care_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.expansion_profile_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.explanation_of_benefit_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.family_member_history_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.flag_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.goal_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.graph_definition_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.group_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.guidance_response_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.healthcare_service_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.imaging_manifest_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.imaging_study_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.immunization_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.immunization_recommendation_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.implementation_guide_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.library_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.linkage_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.list_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.location_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.measure_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.measure_report_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.media_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.medication_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.medication_administration_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.medication_dispense_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.medication_request_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.medication_statement_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.message_definition_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.message_header_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.naming_system_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.nutrition_order_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.observation_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.operation_definition_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.operation_outcome_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.organization_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.parameters_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.patient_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.payment_notice_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.payment_reconciliation_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.person_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.plan_definition_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.practitioner_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.practitioner_role_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.procedure_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.procedure_request_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.process_request_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.process_response_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.provenance_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.questionnaire_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.questionnaire_response_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.referral_request_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.related_person_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.request_group_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.research_study_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.research_subject_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.risk_assessment_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.schedule_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.search_parameter_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.sequence_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.service_definition_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.slot_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.specimen_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.structure_definition_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.structure_map_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.subscription_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.substance_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.supply_delivery_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.supply_request_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.task_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.test_report_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.test_script_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.value_set_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_.vision_prescription_id_ = const_cast< ::google::fhir::stu3::proto::ReferenceId*>(
      ::google::fhir::stu3::proto::ReferenceId::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_._instance.get_mutable()->identifier_ = const_cast< ::google::fhir::stu3::proto::Identifier*>(
      ::google::fhir::stu3::proto::Identifier::internal_default_instance());
  ::google::fhir::stu3::proto::_Reference_default_instance_._instance.get_mutable()->display_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
void Reference::set_allocated_uri(::google::fhir::stu3::proto::String* uri) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (uri) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uri = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uri, submessage_arena);
    }
    set_has_uri();
    reference_.uri_ = uri;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.uri)
}
void Reference::set_allocated_fragment(::google::fhir::stu3::proto::String* fragment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (fragment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fragment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fragment, submessage_arena);
    }
    set_has_fragment();
    reference_.fragment_ = fragment;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.fragment)
}
void Reference::set_allocated_account_id(::google::fhir::stu3::proto::ReferenceId* account_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (account_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      account_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, account_id, submessage_arena);
    }
    set_has_account_id();
    reference_.account_id_ = account_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.account_id)
}
void Reference::set_allocated_activity_definition_id(::google::fhir::stu3::proto::ReferenceId* activity_definition_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (activity_definition_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      activity_definition_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, activity_definition_id, submessage_arena);
    }
    set_has_activity_definition_id();
    reference_.activity_definition_id_ = activity_definition_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.activity_definition_id)
}
void Reference::set_allocated_adverse_event_id(::google::fhir::stu3::proto::ReferenceId* adverse_event_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (adverse_event_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      adverse_event_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, adverse_event_id, submessage_arena);
    }
    set_has_adverse_event_id();
    reference_.adverse_event_id_ = adverse_event_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.adverse_event_id)
}
void Reference::set_allocated_allergy_intolerance_id(::google::fhir::stu3::proto::ReferenceId* allergy_intolerance_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (allergy_intolerance_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      allergy_intolerance_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, allergy_intolerance_id, submessage_arena);
    }
    set_has_allergy_intolerance_id();
    reference_.allergy_intolerance_id_ = allergy_intolerance_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.allergy_intolerance_id)
}
void Reference::set_allocated_appointment_id(::google::fhir::stu3::proto::ReferenceId* appointment_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (appointment_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      appointment_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, appointment_id, submessage_arena);
    }
    set_has_appointment_id();
    reference_.appointment_id_ = appointment_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.appointment_id)
}
void Reference::set_allocated_appointment_response_id(::google::fhir::stu3::proto::ReferenceId* appointment_response_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (appointment_response_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      appointment_response_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, appointment_response_id, submessage_arena);
    }
    set_has_appointment_response_id();
    reference_.appointment_response_id_ = appointment_response_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.appointment_response_id)
}
void Reference::set_allocated_audit_event_id(::google::fhir::stu3::proto::ReferenceId* audit_event_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (audit_event_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      audit_event_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, audit_event_id, submessage_arena);
    }
    set_has_audit_event_id();
    reference_.audit_event_id_ = audit_event_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.audit_event_id)
}
void Reference::set_allocated_basic_id(::google::fhir::stu3::proto::ReferenceId* basic_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (basic_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      basic_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, basic_id, submessage_arena);
    }
    set_has_basic_id();
    reference_.basic_id_ = basic_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.basic_id)
}
void Reference::set_allocated_binary_id(::google::fhir::stu3::proto::ReferenceId* binary_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (binary_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      binary_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, binary_id, submessage_arena);
    }
    set_has_binary_id();
    reference_.binary_id_ = binary_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.binary_id)
}
void Reference::set_allocated_body_site_id(::google::fhir::stu3::proto::ReferenceId* body_site_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (body_site_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      body_site_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, body_site_id, submessage_arena);
    }
    set_has_body_site_id();
    reference_.body_site_id_ = body_site_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.body_site_id)
}
void Reference::set_allocated_bundle_id(::google::fhir::stu3::proto::ReferenceId* bundle_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (bundle_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bundle_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bundle_id, submessage_arena);
    }
    set_has_bundle_id();
    reference_.bundle_id_ = bundle_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.bundle_id)
}
void Reference::set_allocated_capability_statement_id(::google::fhir::stu3::proto::ReferenceId* capability_statement_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (capability_statement_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      capability_statement_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, capability_statement_id, submessage_arena);
    }
    set_has_capability_statement_id();
    reference_.capability_statement_id_ = capability_statement_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.capability_statement_id)
}
void Reference::set_allocated_care_plan_id(::google::fhir::stu3::proto::ReferenceId* care_plan_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (care_plan_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      care_plan_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, care_plan_id, submessage_arena);
    }
    set_has_care_plan_id();
    reference_.care_plan_id_ = care_plan_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.care_plan_id)
}
void Reference::set_allocated_care_team_id(::google::fhir::stu3::proto::ReferenceId* care_team_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (care_team_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      care_team_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, care_team_id, submessage_arena);
    }
    set_has_care_team_id();
    reference_.care_team_id_ = care_team_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.care_team_id)
}
void Reference::set_allocated_charge_item_id(::google::fhir::stu3::proto::ReferenceId* charge_item_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (charge_item_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      charge_item_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, charge_item_id, submessage_arena);
    }
    set_has_charge_item_id();
    reference_.charge_item_id_ = charge_item_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.charge_item_id)
}
void Reference::set_allocated_claim_id(::google::fhir::stu3::proto::ReferenceId* claim_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (claim_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      claim_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, claim_id, submessage_arena);
    }
    set_has_claim_id();
    reference_.claim_id_ = claim_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.claim_id)
}
void Reference::set_allocated_claim_response_id(::google::fhir::stu3::proto::ReferenceId* claim_response_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (claim_response_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      claim_response_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, claim_response_id, submessage_arena);
    }
    set_has_claim_response_id();
    reference_.claim_response_id_ = claim_response_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.claim_response_id)
}
void Reference::set_allocated_clinical_impression_id(::google::fhir::stu3::proto::ReferenceId* clinical_impression_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (clinical_impression_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      clinical_impression_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clinical_impression_id, submessage_arena);
    }
    set_has_clinical_impression_id();
    reference_.clinical_impression_id_ = clinical_impression_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.clinical_impression_id)
}
void Reference::set_allocated_code_system_id(::google::fhir::stu3::proto::ReferenceId* code_system_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (code_system_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code_system_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code_system_id, submessage_arena);
    }
    set_has_code_system_id();
    reference_.code_system_id_ = code_system_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.code_system_id)
}
void Reference::set_allocated_communication_id(::google::fhir::stu3::proto::ReferenceId* communication_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (communication_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      communication_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, communication_id, submessage_arena);
    }
    set_has_communication_id();
    reference_.communication_id_ = communication_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.communication_id)
}
void Reference::set_allocated_communication_request_id(::google::fhir::stu3::proto::ReferenceId* communication_request_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (communication_request_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      communication_request_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, communication_request_id, submessage_arena);
    }
    set_has_communication_request_id();
    reference_.communication_request_id_ = communication_request_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.communication_request_id)
}
void Reference::set_allocated_compartment_definition_id(::google::fhir::stu3::proto::ReferenceId* compartment_definition_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (compartment_definition_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      compartment_definition_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, compartment_definition_id, submessage_arena);
    }
    set_has_compartment_definition_id();
    reference_.compartment_definition_id_ = compartment_definition_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.compartment_definition_id)
}
void Reference::set_allocated_composition_id(::google::fhir::stu3::proto::ReferenceId* composition_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (composition_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      composition_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, composition_id, submessage_arena);
    }
    set_has_composition_id();
    reference_.composition_id_ = composition_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.composition_id)
}
void Reference::set_allocated_concept_map_id(::google::fhir::stu3::proto::ReferenceId* concept_map_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (concept_map_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      concept_map_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, concept_map_id, submessage_arena);
    }
    set_has_concept_map_id();
    reference_.concept_map_id_ = concept_map_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.concept_map_id)
}
void Reference::set_allocated_condition_id(::google::fhir::stu3::proto::ReferenceId* condition_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (condition_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      condition_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, condition_id, submessage_arena);
    }
    set_has_condition_id();
    reference_.condition_id_ = condition_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.condition_id)
}
void Reference::set_allocated_consent_id(::google::fhir::stu3::proto::ReferenceId* consent_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (consent_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      consent_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, consent_id, submessage_arena);
    }
    set_has_consent_id();
    reference_.consent_id_ = consent_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.consent_id)
}
void Reference::set_allocated_contract_id(::google::fhir::stu3::proto::ReferenceId* contract_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (contract_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      contract_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, contract_id, submessage_arena);
    }
    set_has_contract_id();
    reference_.contract_id_ = contract_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.contract_id)
}
void Reference::set_allocated_coverage_id(::google::fhir::stu3::proto::ReferenceId* coverage_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (coverage_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      coverage_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coverage_id, submessage_arena);
    }
    set_has_coverage_id();
    reference_.coverage_id_ = coverage_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.coverage_id)
}
void Reference::set_allocated_data_element_id(::google::fhir::stu3::proto::ReferenceId* data_element_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (data_element_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data_element_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data_element_id, submessage_arena);
    }
    set_has_data_element_id();
    reference_.data_element_id_ = data_element_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.data_element_id)
}
void Reference::set_allocated_detected_issue_id(::google::fhir::stu3::proto::ReferenceId* detected_issue_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (detected_issue_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      detected_issue_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, detected_issue_id, submessage_arena);
    }
    set_has_detected_issue_id();
    reference_.detected_issue_id_ = detected_issue_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.detected_issue_id)
}
void Reference::set_allocated_device_id(::google::fhir::stu3::proto::ReferenceId* device_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (device_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      device_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_id, submessage_arena);
    }
    set_has_device_id();
    reference_.device_id_ = device_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.device_id)
}
void Reference::set_allocated_device_component_id(::google::fhir::stu3::proto::ReferenceId* device_component_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (device_component_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      device_component_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_component_id, submessage_arena);
    }
    set_has_device_component_id();
    reference_.device_component_id_ = device_component_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.device_component_id)
}
void Reference::set_allocated_device_metric_id(::google::fhir::stu3::proto::ReferenceId* device_metric_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (device_metric_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      device_metric_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_metric_id, submessage_arena);
    }
    set_has_device_metric_id();
    reference_.device_metric_id_ = device_metric_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.device_metric_id)
}
void Reference::set_allocated_device_request_id(::google::fhir::stu3::proto::ReferenceId* device_request_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (device_request_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      device_request_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_request_id, submessage_arena);
    }
    set_has_device_request_id();
    reference_.device_request_id_ = device_request_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.device_request_id)
}
void Reference::set_allocated_device_use_statement_id(::google::fhir::stu3::proto::ReferenceId* device_use_statement_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (device_use_statement_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      device_use_statement_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_use_statement_id, submessage_arena);
    }
    set_has_device_use_statement_id();
    reference_.device_use_statement_id_ = device_use_statement_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.device_use_statement_id)
}
void Reference::set_allocated_diagnostic_report_id(::google::fhir::stu3::proto::ReferenceId* diagnostic_report_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (diagnostic_report_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      diagnostic_report_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, diagnostic_report_id, submessage_arena);
    }
    set_has_diagnostic_report_id();
    reference_.diagnostic_report_id_ = diagnostic_report_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.diagnostic_report_id)
}
void Reference::set_allocated_document_manifest_id(::google::fhir::stu3::proto::ReferenceId* document_manifest_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (document_manifest_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      document_manifest_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, document_manifest_id, submessage_arena);
    }
    set_has_document_manifest_id();
    reference_.document_manifest_id_ = document_manifest_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.document_manifest_id)
}
void Reference::set_allocated_document_reference_id(::google::fhir::stu3::proto::ReferenceId* document_reference_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (document_reference_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      document_reference_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, document_reference_id, submessage_arena);
    }
    set_has_document_reference_id();
    reference_.document_reference_id_ = document_reference_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.document_reference_id)
}
void Reference::set_allocated_eligibility_request_id(::google::fhir::stu3::proto::ReferenceId* eligibility_request_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (eligibility_request_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      eligibility_request_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, eligibility_request_id, submessage_arena);
    }
    set_has_eligibility_request_id();
    reference_.eligibility_request_id_ = eligibility_request_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.eligibility_request_id)
}
void Reference::set_allocated_eligibility_response_id(::google::fhir::stu3::proto::ReferenceId* eligibility_response_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (eligibility_response_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      eligibility_response_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, eligibility_response_id, submessage_arena);
    }
    set_has_eligibility_response_id();
    reference_.eligibility_response_id_ = eligibility_response_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.eligibility_response_id)
}
void Reference::set_allocated_encounter_id(::google::fhir::stu3::proto::ReferenceId* encounter_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (encounter_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      encounter_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, encounter_id, submessage_arena);
    }
    set_has_encounter_id();
    reference_.encounter_id_ = encounter_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.encounter_id)
}
void Reference::set_allocated_endpoint_id(::google::fhir::stu3::proto::ReferenceId* endpoint_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (endpoint_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      endpoint_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, endpoint_id, submessage_arena);
    }
    set_has_endpoint_id();
    reference_.endpoint_id_ = endpoint_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.endpoint_id)
}
void Reference::set_allocated_enrollment_request_id(::google::fhir::stu3::proto::ReferenceId* enrollment_request_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (enrollment_request_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enrollment_request_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enrollment_request_id, submessage_arena);
    }
    set_has_enrollment_request_id();
    reference_.enrollment_request_id_ = enrollment_request_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.enrollment_request_id)
}
void Reference::set_allocated_enrollment_response_id(::google::fhir::stu3::proto::ReferenceId* enrollment_response_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (enrollment_response_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enrollment_response_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enrollment_response_id, submessage_arena);
    }
    set_has_enrollment_response_id();
    reference_.enrollment_response_id_ = enrollment_response_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.enrollment_response_id)
}
void Reference::set_allocated_episode_of_care_id(::google::fhir::stu3::proto::ReferenceId* episode_of_care_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (episode_of_care_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      episode_of_care_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, episode_of_care_id, submessage_arena);
    }
    set_has_episode_of_care_id();
    reference_.episode_of_care_id_ = episode_of_care_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.episode_of_care_id)
}
void Reference::set_allocated_expansion_profile_id(::google::fhir::stu3::proto::ReferenceId* expansion_profile_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (expansion_profile_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      expansion_profile_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, expansion_profile_id, submessage_arena);
    }
    set_has_expansion_profile_id();
    reference_.expansion_profile_id_ = expansion_profile_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.expansion_profile_id)
}
void Reference::set_allocated_explanation_of_benefit_id(::google::fhir::stu3::proto::ReferenceId* explanation_of_benefit_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (explanation_of_benefit_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      explanation_of_benefit_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, explanation_of_benefit_id, submessage_arena);
    }
    set_has_explanation_of_benefit_id();
    reference_.explanation_of_benefit_id_ = explanation_of_benefit_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.explanation_of_benefit_id)
}
void Reference::set_allocated_family_member_history_id(::google::fhir::stu3::proto::ReferenceId* family_member_history_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (family_member_history_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      family_member_history_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, family_member_history_id, submessage_arena);
    }
    set_has_family_member_history_id();
    reference_.family_member_history_id_ = family_member_history_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.family_member_history_id)
}
void Reference::set_allocated_flag_id(::google::fhir::stu3::proto::ReferenceId* flag_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (flag_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      flag_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, flag_id, submessage_arena);
    }
    set_has_flag_id();
    reference_.flag_id_ = flag_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.flag_id)
}
void Reference::set_allocated_goal_id(::google::fhir::stu3::proto::ReferenceId* goal_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (goal_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      goal_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, goal_id, submessage_arena);
    }
    set_has_goal_id();
    reference_.goal_id_ = goal_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.goal_id)
}
void Reference::set_allocated_graph_definition_id(::google::fhir::stu3::proto::ReferenceId* graph_definition_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (graph_definition_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      graph_definition_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, graph_definition_id, submessage_arena);
    }
    set_has_graph_definition_id();
    reference_.graph_definition_id_ = graph_definition_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.graph_definition_id)
}
void Reference::set_allocated_group_id(::google::fhir::stu3::proto::ReferenceId* group_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (group_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      group_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group_id, submessage_arena);
    }
    set_has_group_id();
    reference_.group_id_ = group_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.group_id)
}
void Reference::set_allocated_guidance_response_id(::google::fhir::stu3::proto::ReferenceId* guidance_response_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (guidance_response_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      guidance_response_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, guidance_response_id, submessage_arena);
    }
    set_has_guidance_response_id();
    reference_.guidance_response_id_ = guidance_response_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.guidance_response_id)
}
void Reference::set_allocated_healthcare_service_id(::google::fhir::stu3::proto::ReferenceId* healthcare_service_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (healthcare_service_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      healthcare_service_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, healthcare_service_id, submessage_arena);
    }
    set_has_healthcare_service_id();
    reference_.healthcare_service_id_ = healthcare_service_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.healthcare_service_id)
}
void Reference::set_allocated_imaging_manifest_id(::google::fhir::stu3::proto::ReferenceId* imaging_manifest_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (imaging_manifest_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      imaging_manifest_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, imaging_manifest_id, submessage_arena);
    }
    set_has_imaging_manifest_id();
    reference_.imaging_manifest_id_ = imaging_manifest_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.imaging_manifest_id)
}
void Reference::set_allocated_imaging_study_id(::google::fhir::stu3::proto::ReferenceId* imaging_study_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (imaging_study_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      imaging_study_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, imaging_study_id, submessage_arena);
    }
    set_has_imaging_study_id();
    reference_.imaging_study_id_ = imaging_study_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.imaging_study_id)
}
void Reference::set_allocated_immunization_id(::google::fhir::stu3::proto::ReferenceId* immunization_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (immunization_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      immunization_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, immunization_id, submessage_arena);
    }
    set_has_immunization_id();
    reference_.immunization_id_ = immunization_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.immunization_id)
}
void Reference::set_allocated_immunization_recommendation_id(::google::fhir::stu3::proto::ReferenceId* immunization_recommendation_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (immunization_recommendation_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      immunization_recommendation_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, immunization_recommendation_id, submessage_arena);
    }
    set_has_immunization_recommendation_id();
    reference_.immunization_recommendation_id_ = immunization_recommendation_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.immunization_recommendation_id)
}
void Reference::set_allocated_implementation_guide_id(::google::fhir::stu3::proto::ReferenceId* implementation_guide_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (implementation_guide_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implementation_guide_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implementation_guide_id, submessage_arena);
    }
    set_has_implementation_guide_id();
    reference_.implementation_guide_id_ = implementation_guide_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.implementation_guide_id)
}
void Reference::set_allocated_library_id(::google::fhir::stu3::proto::ReferenceId* library_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (library_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      library_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, library_id, submessage_arena);
    }
    set_has_library_id();
    reference_.library_id_ = library_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.library_id)
}
void Reference::set_allocated_linkage_id(::google::fhir::stu3::proto::ReferenceId* linkage_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (linkage_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      linkage_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, linkage_id, submessage_arena);
    }
    set_has_linkage_id();
    reference_.linkage_id_ = linkage_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.linkage_id)
}
void Reference::set_allocated_list_id(::google::fhir::stu3::proto::ReferenceId* list_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (list_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      list_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, list_id, submessage_arena);
    }
    set_has_list_id();
    reference_.list_id_ = list_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.list_id)
}
void Reference::set_allocated_location_id(::google::fhir::stu3::proto::ReferenceId* location_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (location_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      location_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, location_id, submessage_arena);
    }
    set_has_location_id();
    reference_.location_id_ = location_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.location_id)
}
void Reference::set_allocated_measure_id(::google::fhir::stu3::proto::ReferenceId* measure_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (measure_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      measure_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, measure_id, submessage_arena);
    }
    set_has_measure_id();
    reference_.measure_id_ = measure_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.measure_id)
}
void Reference::set_allocated_measure_report_id(::google::fhir::stu3::proto::ReferenceId* measure_report_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (measure_report_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      measure_report_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, measure_report_id, submessage_arena);
    }
    set_has_measure_report_id();
    reference_.measure_report_id_ = measure_report_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.measure_report_id)
}
void Reference::set_allocated_media_id(::google::fhir::stu3::proto::ReferenceId* media_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (media_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      media_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, media_id, submessage_arena);
    }
    set_has_media_id();
    reference_.media_id_ = media_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.media_id)
}
void Reference::set_allocated_medication_id(::google::fhir::stu3::proto::ReferenceId* medication_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (medication_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      medication_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, medication_id, submessage_arena);
    }
    set_has_medication_id();
    reference_.medication_id_ = medication_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.medication_id)
}
void Reference::set_allocated_medication_administration_id(::google::fhir::stu3::proto::ReferenceId* medication_administration_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (medication_administration_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      medication_administration_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, medication_administration_id, submessage_arena);
    }
    set_has_medication_administration_id();
    reference_.medication_administration_id_ = medication_administration_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.medication_administration_id)
}
void Reference::set_allocated_medication_dispense_id(::google::fhir::stu3::proto::ReferenceId* medication_dispense_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (medication_dispense_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      medication_dispense_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, medication_dispense_id, submessage_arena);
    }
    set_has_medication_dispense_id();
    reference_.medication_dispense_id_ = medication_dispense_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.medication_dispense_id)
}
void Reference::set_allocated_medication_request_id(::google::fhir::stu3::proto::ReferenceId* medication_request_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (medication_request_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      medication_request_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, medication_request_id, submessage_arena);
    }
    set_has_medication_request_id();
    reference_.medication_request_id_ = medication_request_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.medication_request_id)
}
void Reference::set_allocated_medication_statement_id(::google::fhir::stu3::proto::ReferenceId* medication_statement_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (medication_statement_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      medication_statement_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, medication_statement_id, submessage_arena);
    }
    set_has_medication_statement_id();
    reference_.medication_statement_id_ = medication_statement_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.medication_statement_id)
}
void Reference::set_allocated_message_definition_id(::google::fhir::stu3::proto::ReferenceId* message_definition_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (message_definition_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      message_definition_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, message_definition_id, submessage_arena);
    }
    set_has_message_definition_id();
    reference_.message_definition_id_ = message_definition_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.message_definition_id)
}
void Reference::set_allocated_message_header_id(::google::fhir::stu3::proto::ReferenceId* message_header_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (message_header_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      message_header_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, message_header_id, submessage_arena);
    }
    set_has_message_header_id();
    reference_.message_header_id_ = message_header_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.message_header_id)
}
void Reference::set_allocated_naming_system_id(::google::fhir::stu3::proto::ReferenceId* naming_system_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (naming_system_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      naming_system_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, naming_system_id, submessage_arena);
    }
    set_has_naming_system_id();
    reference_.naming_system_id_ = naming_system_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.naming_system_id)
}
void Reference::set_allocated_nutrition_order_id(::google::fhir::stu3::proto::ReferenceId* nutrition_order_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (nutrition_order_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      nutrition_order_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nutrition_order_id, submessage_arena);
    }
    set_has_nutrition_order_id();
    reference_.nutrition_order_id_ = nutrition_order_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.nutrition_order_id)
}
void Reference::set_allocated_observation_id(::google::fhir::stu3::proto::ReferenceId* observation_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (observation_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      observation_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, observation_id, submessage_arena);
    }
    set_has_observation_id();
    reference_.observation_id_ = observation_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.observation_id)
}
void Reference::set_allocated_operation_definition_id(::google::fhir::stu3::proto::ReferenceId* operation_definition_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (operation_definition_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      operation_definition_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, operation_definition_id, submessage_arena);
    }
    set_has_operation_definition_id();
    reference_.operation_definition_id_ = operation_definition_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.operation_definition_id)
}
void Reference::set_allocated_operation_outcome_id(::google::fhir::stu3::proto::ReferenceId* operation_outcome_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (operation_outcome_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      operation_outcome_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, operation_outcome_id, submessage_arena);
    }
    set_has_operation_outcome_id();
    reference_.operation_outcome_id_ = operation_outcome_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.operation_outcome_id)
}
void Reference::set_allocated_organization_id(::google::fhir::stu3::proto::ReferenceId* organization_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (organization_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      organization_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, organization_id, submessage_arena);
    }
    set_has_organization_id();
    reference_.organization_id_ = organization_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.organization_id)
}
void Reference::set_allocated_parameters_id(::google::fhir::stu3::proto::ReferenceId* parameters_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (parameters_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      parameters_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, parameters_id, submessage_arena);
    }
    set_has_parameters_id();
    reference_.parameters_id_ = parameters_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.parameters_id)
}
void Reference::set_allocated_patient_id(::google::fhir::stu3::proto::ReferenceId* patient_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (patient_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      patient_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, patient_id, submessage_arena);
    }
    set_has_patient_id();
    reference_.patient_id_ = patient_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.patient_id)
}
void Reference::set_allocated_payment_notice_id(::google::fhir::stu3::proto::ReferenceId* payment_notice_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (payment_notice_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      payment_notice_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, payment_notice_id, submessage_arena);
    }
    set_has_payment_notice_id();
    reference_.payment_notice_id_ = payment_notice_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.payment_notice_id)
}
void Reference::set_allocated_payment_reconciliation_id(::google::fhir::stu3::proto::ReferenceId* payment_reconciliation_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (payment_reconciliation_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      payment_reconciliation_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, payment_reconciliation_id, submessage_arena);
    }
    set_has_payment_reconciliation_id();
    reference_.payment_reconciliation_id_ = payment_reconciliation_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.payment_reconciliation_id)
}
void Reference::set_allocated_person_id(::google::fhir::stu3::proto::ReferenceId* person_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (person_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      person_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, person_id, submessage_arena);
    }
    set_has_person_id();
    reference_.person_id_ = person_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.person_id)
}
void Reference::set_allocated_plan_definition_id(::google::fhir::stu3::proto::ReferenceId* plan_definition_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (plan_definition_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      plan_definition_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, plan_definition_id, submessage_arena);
    }
    set_has_plan_definition_id();
    reference_.plan_definition_id_ = plan_definition_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.plan_definition_id)
}
void Reference::set_allocated_practitioner_id(::google::fhir::stu3::proto::ReferenceId* practitioner_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (practitioner_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      practitioner_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, practitioner_id, submessage_arena);
    }
    set_has_practitioner_id();
    reference_.practitioner_id_ = practitioner_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.practitioner_id)
}
void Reference::set_allocated_practitioner_role_id(::google::fhir::stu3::proto::ReferenceId* practitioner_role_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (practitioner_role_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      practitioner_role_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, practitioner_role_id, submessage_arena);
    }
    set_has_practitioner_role_id();
    reference_.practitioner_role_id_ = practitioner_role_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.practitioner_role_id)
}
void Reference::set_allocated_procedure_id(::google::fhir::stu3::proto::ReferenceId* procedure_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (procedure_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      procedure_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, procedure_id, submessage_arena);
    }
    set_has_procedure_id();
    reference_.procedure_id_ = procedure_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.procedure_id)
}
void Reference::set_allocated_procedure_request_id(::google::fhir::stu3::proto::ReferenceId* procedure_request_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (procedure_request_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      procedure_request_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, procedure_request_id, submessage_arena);
    }
    set_has_procedure_request_id();
    reference_.procedure_request_id_ = procedure_request_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.procedure_request_id)
}
void Reference::set_allocated_process_request_id(::google::fhir::stu3::proto::ReferenceId* process_request_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (process_request_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      process_request_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, process_request_id, submessage_arena);
    }
    set_has_process_request_id();
    reference_.process_request_id_ = process_request_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.process_request_id)
}
void Reference::set_allocated_process_response_id(::google::fhir::stu3::proto::ReferenceId* process_response_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (process_response_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      process_response_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, process_response_id, submessage_arena);
    }
    set_has_process_response_id();
    reference_.process_response_id_ = process_response_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.process_response_id)
}
void Reference::set_allocated_provenance_id(::google::fhir::stu3::proto::ReferenceId* provenance_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (provenance_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      provenance_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, provenance_id, submessage_arena);
    }
    set_has_provenance_id();
    reference_.provenance_id_ = provenance_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.provenance_id)
}
void Reference::set_allocated_questionnaire_id(::google::fhir::stu3::proto::ReferenceId* questionnaire_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (questionnaire_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      questionnaire_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, questionnaire_id, submessage_arena);
    }
    set_has_questionnaire_id();
    reference_.questionnaire_id_ = questionnaire_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.questionnaire_id)
}
void Reference::set_allocated_questionnaire_response_id(::google::fhir::stu3::proto::ReferenceId* questionnaire_response_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (questionnaire_response_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      questionnaire_response_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, questionnaire_response_id, submessage_arena);
    }
    set_has_questionnaire_response_id();
    reference_.questionnaire_response_id_ = questionnaire_response_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.questionnaire_response_id)
}
void Reference::set_allocated_referral_request_id(::google::fhir::stu3::proto::ReferenceId* referral_request_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (referral_request_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      referral_request_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, referral_request_id, submessage_arena);
    }
    set_has_referral_request_id();
    reference_.referral_request_id_ = referral_request_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.referral_request_id)
}
void Reference::set_allocated_related_person_id(::google::fhir::stu3::proto::ReferenceId* related_person_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (related_person_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      related_person_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, related_person_id, submessage_arena);
    }
    set_has_related_person_id();
    reference_.related_person_id_ = related_person_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.related_person_id)
}
void Reference::set_allocated_request_group_id(::google::fhir::stu3::proto::ReferenceId* request_group_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (request_group_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      request_group_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request_group_id, submessage_arena);
    }
    set_has_request_group_id();
    reference_.request_group_id_ = request_group_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.request_group_id)
}
void Reference::set_allocated_research_study_id(::google::fhir::stu3::proto::ReferenceId* research_study_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (research_study_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      research_study_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, research_study_id, submessage_arena);
    }
    set_has_research_study_id();
    reference_.research_study_id_ = research_study_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.research_study_id)
}
void Reference::set_allocated_research_subject_id(::google::fhir::stu3::proto::ReferenceId* research_subject_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (research_subject_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      research_subject_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, research_subject_id, submessage_arena);
    }
    set_has_research_subject_id();
    reference_.research_subject_id_ = research_subject_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.research_subject_id)
}
void Reference::set_allocated_risk_assessment_id(::google::fhir::stu3::proto::ReferenceId* risk_assessment_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (risk_assessment_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      risk_assessment_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, risk_assessment_id, submessage_arena);
    }
    set_has_risk_assessment_id();
    reference_.risk_assessment_id_ = risk_assessment_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.risk_assessment_id)
}
void Reference::set_allocated_schedule_id(::google::fhir::stu3::proto::ReferenceId* schedule_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (schedule_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      schedule_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, schedule_id, submessage_arena);
    }
    set_has_schedule_id();
    reference_.schedule_id_ = schedule_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.schedule_id)
}
void Reference::set_allocated_search_parameter_id(::google::fhir::stu3::proto::ReferenceId* search_parameter_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (search_parameter_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      search_parameter_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, search_parameter_id, submessage_arena);
    }
    set_has_search_parameter_id();
    reference_.search_parameter_id_ = search_parameter_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.search_parameter_id)
}
void Reference::set_allocated_sequence_id(::google::fhir::stu3::proto::ReferenceId* sequence_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (sequence_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sequence_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sequence_id, submessage_arena);
    }
    set_has_sequence_id();
    reference_.sequence_id_ = sequence_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.sequence_id)
}
void Reference::set_allocated_service_definition_id(::google::fhir::stu3::proto::ReferenceId* service_definition_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (service_definition_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      service_definition_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, service_definition_id, submessage_arena);
    }
    set_has_service_definition_id();
    reference_.service_definition_id_ = service_definition_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.service_definition_id)
}
void Reference::set_allocated_slot_id(::google::fhir::stu3::proto::ReferenceId* slot_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (slot_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      slot_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, slot_id, submessage_arena);
    }
    set_has_slot_id();
    reference_.slot_id_ = slot_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.slot_id)
}
void Reference::set_allocated_specimen_id(::google::fhir::stu3::proto::ReferenceId* specimen_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (specimen_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      specimen_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, specimen_id, submessage_arena);
    }
    set_has_specimen_id();
    reference_.specimen_id_ = specimen_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.specimen_id)
}
void Reference::set_allocated_structure_definition_id(::google::fhir::stu3::proto::ReferenceId* structure_definition_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (structure_definition_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      structure_definition_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, structure_definition_id, submessage_arena);
    }
    set_has_structure_definition_id();
    reference_.structure_definition_id_ = structure_definition_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.structure_definition_id)
}
void Reference::set_allocated_structure_map_id(::google::fhir::stu3::proto::ReferenceId* structure_map_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (structure_map_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      structure_map_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, structure_map_id, submessage_arena);
    }
    set_has_structure_map_id();
    reference_.structure_map_id_ = structure_map_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.structure_map_id)
}
void Reference::set_allocated_subscription_id(::google::fhir::stu3::proto::ReferenceId* subscription_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (subscription_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      subscription_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, subscription_id, submessage_arena);
    }
    set_has_subscription_id();
    reference_.subscription_id_ = subscription_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.subscription_id)
}
void Reference::set_allocated_substance_id(::google::fhir::stu3::proto::ReferenceId* substance_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (substance_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      substance_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, substance_id, submessage_arena);
    }
    set_has_substance_id();
    reference_.substance_id_ = substance_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.substance_id)
}
void Reference::set_allocated_supply_delivery_id(::google::fhir::stu3::proto::ReferenceId* supply_delivery_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (supply_delivery_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      supply_delivery_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, supply_delivery_id, submessage_arena);
    }
    set_has_supply_delivery_id();
    reference_.supply_delivery_id_ = supply_delivery_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.supply_delivery_id)
}
void Reference::set_allocated_supply_request_id(::google::fhir::stu3::proto::ReferenceId* supply_request_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (supply_request_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      supply_request_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, supply_request_id, submessage_arena);
    }
    set_has_supply_request_id();
    reference_.supply_request_id_ = supply_request_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.supply_request_id)
}
void Reference::set_allocated_task_id(::google::fhir::stu3::proto::ReferenceId* task_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (task_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      task_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, task_id, submessage_arena);
    }
    set_has_task_id();
    reference_.task_id_ = task_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.task_id)
}
void Reference::set_allocated_test_report_id(::google::fhir::stu3::proto::ReferenceId* test_report_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (test_report_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      test_report_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, test_report_id, submessage_arena);
    }
    set_has_test_report_id();
    reference_.test_report_id_ = test_report_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.test_report_id)
}
void Reference::set_allocated_test_script_id(::google::fhir::stu3::proto::ReferenceId* test_script_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (test_script_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      test_script_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, test_script_id, submessage_arena);
    }
    set_has_test_script_id();
    reference_.test_script_id_ = test_script_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.test_script_id)
}
void Reference::set_allocated_value_set_id(::google::fhir::stu3::proto::ReferenceId* value_set_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (value_set_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value_set_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value_set_id, submessage_arena);
    }
    set_has_value_set_id();
    reference_.value_set_id_ = value_set_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.value_set_id)
}
void Reference::set_allocated_vision_prescription_id(::google::fhir::stu3::proto::ReferenceId* vision_prescription_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference();
  if (vision_prescription_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vision_prescription_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vision_prescription_id, submessage_arena);
    }
    set_has_vision_prescription_id();
    reference_.vision_prescription_id_ = vision_prescription_id;
  }
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.Reference.vision_prescription_id)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Reference::kIdFieldNumber;
const int Reference::kExtensionFieldNumber;
const int Reference::kUriFieldNumber;
const int Reference::kFragmentFieldNumber;
const int Reference::kAccountIdFieldNumber;
const int Reference::kActivityDefinitionIdFieldNumber;
const int Reference::kAdverseEventIdFieldNumber;
const int Reference::kAllergyIntoleranceIdFieldNumber;
const int Reference::kAppointmentIdFieldNumber;
const int Reference::kAppointmentResponseIdFieldNumber;
const int Reference::kAuditEventIdFieldNumber;
const int Reference::kBasicIdFieldNumber;
const int Reference::kBinaryIdFieldNumber;
const int Reference::kBodySiteIdFieldNumber;
const int Reference::kBundleIdFieldNumber;
const int Reference::kCapabilityStatementIdFieldNumber;
const int Reference::kCarePlanIdFieldNumber;
const int Reference::kCareTeamIdFieldNumber;
const int Reference::kChargeItemIdFieldNumber;
const int Reference::kClaimIdFieldNumber;
const int Reference::kClaimResponseIdFieldNumber;
const int Reference::kClinicalImpressionIdFieldNumber;
const int Reference::kCodeSystemIdFieldNumber;
const int Reference::kCommunicationIdFieldNumber;
const int Reference::kCommunicationRequestIdFieldNumber;
const int Reference::kCompartmentDefinitionIdFieldNumber;
const int Reference::kCompositionIdFieldNumber;
const int Reference::kConceptMapIdFieldNumber;
const int Reference::kConditionIdFieldNumber;
const int Reference::kConsentIdFieldNumber;
const int Reference::kContractIdFieldNumber;
const int Reference::kCoverageIdFieldNumber;
const int Reference::kDataElementIdFieldNumber;
const int Reference::kDetectedIssueIdFieldNumber;
const int Reference::kDeviceIdFieldNumber;
const int Reference::kDeviceComponentIdFieldNumber;
const int Reference::kDeviceMetricIdFieldNumber;
const int Reference::kDeviceRequestIdFieldNumber;
const int Reference::kDeviceUseStatementIdFieldNumber;
const int Reference::kDiagnosticReportIdFieldNumber;
const int Reference::kDocumentManifestIdFieldNumber;
const int Reference::kDocumentReferenceIdFieldNumber;
const int Reference::kEligibilityRequestIdFieldNumber;
const int Reference::kEligibilityResponseIdFieldNumber;
const int Reference::kEncounterIdFieldNumber;
const int Reference::kEndpointIdFieldNumber;
const int Reference::kEnrollmentRequestIdFieldNumber;
const int Reference::kEnrollmentResponseIdFieldNumber;
const int Reference::kEpisodeOfCareIdFieldNumber;
const int Reference::kExpansionProfileIdFieldNumber;
const int Reference::kExplanationOfBenefitIdFieldNumber;
const int Reference::kFamilyMemberHistoryIdFieldNumber;
const int Reference::kFlagIdFieldNumber;
const int Reference::kGoalIdFieldNumber;
const int Reference::kGraphDefinitionIdFieldNumber;
const int Reference::kGroupIdFieldNumber;
const int Reference::kGuidanceResponseIdFieldNumber;
const int Reference::kHealthcareServiceIdFieldNumber;
const int Reference::kImagingManifestIdFieldNumber;
const int Reference::kImagingStudyIdFieldNumber;
const int Reference::kImmunizationIdFieldNumber;
const int Reference::kImmunizationRecommendationIdFieldNumber;
const int Reference::kImplementationGuideIdFieldNumber;
const int Reference::kLibraryIdFieldNumber;
const int Reference::kLinkageIdFieldNumber;
const int Reference::kListIdFieldNumber;
const int Reference::kLocationIdFieldNumber;
const int Reference::kMeasureIdFieldNumber;
const int Reference::kMeasureReportIdFieldNumber;
const int Reference::kMediaIdFieldNumber;
const int Reference::kMedicationIdFieldNumber;
const int Reference::kMedicationAdministrationIdFieldNumber;
const int Reference::kMedicationDispenseIdFieldNumber;
const int Reference::kMedicationRequestIdFieldNumber;
const int Reference::kMedicationStatementIdFieldNumber;
const int Reference::kMessageDefinitionIdFieldNumber;
const int Reference::kMessageHeaderIdFieldNumber;
const int Reference::kNamingSystemIdFieldNumber;
const int Reference::kNutritionOrderIdFieldNumber;
const int Reference::kObservationIdFieldNumber;
const int Reference::kOperationDefinitionIdFieldNumber;
const int Reference::kOperationOutcomeIdFieldNumber;
const int Reference::kOrganizationIdFieldNumber;
const int Reference::kParametersIdFieldNumber;
const int Reference::kPatientIdFieldNumber;
const int Reference::kPaymentNoticeIdFieldNumber;
const int Reference::kPaymentReconciliationIdFieldNumber;
const int Reference::kPersonIdFieldNumber;
const int Reference::kPlanDefinitionIdFieldNumber;
const int Reference::kPractitionerIdFieldNumber;
const int Reference::kPractitionerRoleIdFieldNumber;
const int Reference::kProcedureIdFieldNumber;
const int Reference::kProcedureRequestIdFieldNumber;
const int Reference::kProcessRequestIdFieldNumber;
const int Reference::kProcessResponseIdFieldNumber;
const int Reference::kProvenanceIdFieldNumber;
const int Reference::kQuestionnaireIdFieldNumber;
const int Reference::kQuestionnaireResponseIdFieldNumber;
const int Reference::kReferralRequestIdFieldNumber;
const int Reference::kRelatedPersonIdFieldNumber;
const int Reference::kRequestGroupIdFieldNumber;
const int Reference::kResearchStudyIdFieldNumber;
const int Reference::kResearchSubjectIdFieldNumber;
const int Reference::kRiskAssessmentIdFieldNumber;
const int Reference::kScheduleIdFieldNumber;
const int Reference::kSearchParameterIdFieldNumber;
const int Reference::kSequenceIdFieldNumber;
const int Reference::kServiceDefinitionIdFieldNumber;
const int Reference::kSlotIdFieldNumber;
const int Reference::kSpecimenIdFieldNumber;
const int Reference::kStructureDefinitionIdFieldNumber;
const int Reference::kStructureMapIdFieldNumber;
const int Reference::kSubscriptionIdFieldNumber;
const int Reference::kSubstanceIdFieldNumber;
const int Reference::kSupplyDeliveryIdFieldNumber;
const int Reference::kSupplyRequestIdFieldNumber;
const int Reference::kTaskIdFieldNumber;
const int Reference::kTestReportIdFieldNumber;
const int Reference::kTestScriptIdFieldNumber;
const int Reference::kValueSetIdFieldNumber;
const int Reference::kVisionPrescriptionIdFieldNumber;
const int Reference::kIdentifierFieldNumber;
const int Reference::kDisplayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reference::Reference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.Reference)
}
Reference::Reference(const Reference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_identifier()) {
    identifier_ = new ::google::fhir::stu3::proto::Identifier(*from.identifier_);
  } else {
    identifier_ = NULL;
  }
  if (from.has_display()) {
    display_ = new ::google::fhir::stu3::proto::String(*from.display_);
  } else {
    display_ = NULL;
  }
  clear_has_reference();
  switch (from.reference_case()) {
    case kUri: {
      mutable_uri()->::google::fhir::stu3::proto::String::MergeFrom(from.uri());
      break;
    }
    case kFragment: {
      mutable_fragment()->::google::fhir::stu3::proto::String::MergeFrom(from.fragment());
      break;
    }
    case kAccountId: {
      mutable_account_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.account_id());
      break;
    }
    case kActivityDefinitionId: {
      mutable_activity_definition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.activity_definition_id());
      break;
    }
    case kAdverseEventId: {
      mutable_adverse_event_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.adverse_event_id());
      break;
    }
    case kAllergyIntoleranceId: {
      mutable_allergy_intolerance_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.allergy_intolerance_id());
      break;
    }
    case kAppointmentId: {
      mutable_appointment_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.appointment_id());
      break;
    }
    case kAppointmentResponseId: {
      mutable_appointment_response_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.appointment_response_id());
      break;
    }
    case kAuditEventId: {
      mutable_audit_event_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.audit_event_id());
      break;
    }
    case kBasicId: {
      mutable_basic_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.basic_id());
      break;
    }
    case kBinaryId: {
      mutable_binary_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.binary_id());
      break;
    }
    case kBodySiteId: {
      mutable_body_site_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.body_site_id());
      break;
    }
    case kBundleId: {
      mutable_bundle_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.bundle_id());
      break;
    }
    case kCapabilityStatementId: {
      mutable_capability_statement_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.capability_statement_id());
      break;
    }
    case kCarePlanId: {
      mutable_care_plan_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.care_plan_id());
      break;
    }
    case kCareTeamId: {
      mutable_care_team_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.care_team_id());
      break;
    }
    case kChargeItemId: {
      mutable_charge_item_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.charge_item_id());
      break;
    }
    case kClaimId: {
      mutable_claim_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.claim_id());
      break;
    }
    case kClaimResponseId: {
      mutable_claim_response_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.claim_response_id());
      break;
    }
    case kClinicalImpressionId: {
      mutable_clinical_impression_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.clinical_impression_id());
      break;
    }
    case kCodeSystemId: {
      mutable_code_system_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.code_system_id());
      break;
    }
    case kCommunicationId: {
      mutable_communication_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.communication_id());
      break;
    }
    case kCommunicationRequestId: {
      mutable_communication_request_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.communication_request_id());
      break;
    }
    case kCompartmentDefinitionId: {
      mutable_compartment_definition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.compartment_definition_id());
      break;
    }
    case kCompositionId: {
      mutable_composition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.composition_id());
      break;
    }
    case kConceptMapId: {
      mutable_concept_map_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.concept_map_id());
      break;
    }
    case kConditionId: {
      mutable_condition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.condition_id());
      break;
    }
    case kConsentId: {
      mutable_consent_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.consent_id());
      break;
    }
    case kContractId: {
      mutable_contract_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.contract_id());
      break;
    }
    case kCoverageId: {
      mutable_coverage_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.coverage_id());
      break;
    }
    case kDataElementId: {
      mutable_data_element_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.data_element_id());
      break;
    }
    case kDetectedIssueId: {
      mutable_detected_issue_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.detected_issue_id());
      break;
    }
    case kDeviceId: {
      mutable_device_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.device_id());
      break;
    }
    case kDeviceComponentId: {
      mutable_device_component_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.device_component_id());
      break;
    }
    case kDeviceMetricId: {
      mutable_device_metric_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.device_metric_id());
      break;
    }
    case kDeviceRequestId: {
      mutable_device_request_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.device_request_id());
      break;
    }
    case kDeviceUseStatementId: {
      mutable_device_use_statement_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.device_use_statement_id());
      break;
    }
    case kDiagnosticReportId: {
      mutable_diagnostic_report_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.diagnostic_report_id());
      break;
    }
    case kDocumentManifestId: {
      mutable_document_manifest_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.document_manifest_id());
      break;
    }
    case kDocumentReferenceId: {
      mutable_document_reference_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.document_reference_id());
      break;
    }
    case kEligibilityRequestId: {
      mutable_eligibility_request_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.eligibility_request_id());
      break;
    }
    case kEligibilityResponseId: {
      mutable_eligibility_response_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.eligibility_response_id());
      break;
    }
    case kEncounterId: {
      mutable_encounter_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.encounter_id());
      break;
    }
    case kEndpointId: {
      mutable_endpoint_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.endpoint_id());
      break;
    }
    case kEnrollmentRequestId: {
      mutable_enrollment_request_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.enrollment_request_id());
      break;
    }
    case kEnrollmentResponseId: {
      mutable_enrollment_response_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.enrollment_response_id());
      break;
    }
    case kEpisodeOfCareId: {
      mutable_episode_of_care_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.episode_of_care_id());
      break;
    }
    case kExpansionProfileId: {
      mutable_expansion_profile_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.expansion_profile_id());
      break;
    }
    case kExplanationOfBenefitId: {
      mutable_explanation_of_benefit_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.explanation_of_benefit_id());
      break;
    }
    case kFamilyMemberHistoryId: {
      mutable_family_member_history_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.family_member_history_id());
      break;
    }
    case kFlagId: {
      mutable_flag_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.flag_id());
      break;
    }
    case kGoalId: {
      mutable_goal_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.goal_id());
      break;
    }
    case kGraphDefinitionId: {
      mutable_graph_definition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.graph_definition_id());
      break;
    }
    case kGroupId: {
      mutable_group_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.group_id());
      break;
    }
    case kGuidanceResponseId: {
      mutable_guidance_response_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.guidance_response_id());
      break;
    }
    case kHealthcareServiceId: {
      mutable_healthcare_service_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.healthcare_service_id());
      break;
    }
    case kImagingManifestId: {
      mutable_imaging_manifest_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.imaging_manifest_id());
      break;
    }
    case kImagingStudyId: {
      mutable_imaging_study_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.imaging_study_id());
      break;
    }
    case kImmunizationId: {
      mutable_immunization_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.immunization_id());
      break;
    }
    case kImmunizationRecommendationId: {
      mutable_immunization_recommendation_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.immunization_recommendation_id());
      break;
    }
    case kImplementationGuideId: {
      mutable_implementation_guide_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.implementation_guide_id());
      break;
    }
    case kLibraryId: {
      mutable_library_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.library_id());
      break;
    }
    case kLinkageId: {
      mutable_linkage_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.linkage_id());
      break;
    }
    case kListId: {
      mutable_list_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.list_id());
      break;
    }
    case kLocationId: {
      mutable_location_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.location_id());
      break;
    }
    case kMeasureId: {
      mutable_measure_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.measure_id());
      break;
    }
    case kMeasureReportId: {
      mutable_measure_report_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.measure_report_id());
      break;
    }
    case kMediaId: {
      mutable_media_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.media_id());
      break;
    }
    case kMedicationId: {
      mutable_medication_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.medication_id());
      break;
    }
    case kMedicationAdministrationId: {
      mutable_medication_administration_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.medication_administration_id());
      break;
    }
    case kMedicationDispenseId: {
      mutable_medication_dispense_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.medication_dispense_id());
      break;
    }
    case kMedicationRequestId: {
      mutable_medication_request_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.medication_request_id());
      break;
    }
    case kMedicationStatementId: {
      mutable_medication_statement_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.medication_statement_id());
      break;
    }
    case kMessageDefinitionId: {
      mutable_message_definition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.message_definition_id());
      break;
    }
    case kMessageHeaderId: {
      mutable_message_header_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.message_header_id());
      break;
    }
    case kNamingSystemId: {
      mutable_naming_system_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.naming_system_id());
      break;
    }
    case kNutritionOrderId: {
      mutable_nutrition_order_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.nutrition_order_id());
      break;
    }
    case kObservationId: {
      mutable_observation_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.observation_id());
      break;
    }
    case kOperationDefinitionId: {
      mutable_operation_definition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.operation_definition_id());
      break;
    }
    case kOperationOutcomeId: {
      mutable_operation_outcome_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.operation_outcome_id());
      break;
    }
    case kOrganizationId: {
      mutable_organization_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.organization_id());
      break;
    }
    case kParametersId: {
      mutable_parameters_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.parameters_id());
      break;
    }
    case kPatientId: {
      mutable_patient_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.patient_id());
      break;
    }
    case kPaymentNoticeId: {
      mutable_payment_notice_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.payment_notice_id());
      break;
    }
    case kPaymentReconciliationId: {
      mutable_payment_reconciliation_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.payment_reconciliation_id());
      break;
    }
    case kPersonId: {
      mutable_person_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.person_id());
      break;
    }
    case kPlanDefinitionId: {
      mutable_plan_definition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.plan_definition_id());
      break;
    }
    case kPractitionerId: {
      mutable_practitioner_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.practitioner_id());
      break;
    }
    case kPractitionerRoleId: {
      mutable_practitioner_role_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.practitioner_role_id());
      break;
    }
    case kProcedureId: {
      mutable_procedure_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.procedure_id());
      break;
    }
    case kProcedureRequestId: {
      mutable_procedure_request_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.procedure_request_id());
      break;
    }
    case kProcessRequestId: {
      mutable_process_request_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.process_request_id());
      break;
    }
    case kProcessResponseId: {
      mutable_process_response_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.process_response_id());
      break;
    }
    case kProvenanceId: {
      mutable_provenance_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.provenance_id());
      break;
    }
    case kQuestionnaireId: {
      mutable_questionnaire_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.questionnaire_id());
      break;
    }
    case kQuestionnaireResponseId: {
      mutable_questionnaire_response_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.questionnaire_response_id());
      break;
    }
    case kReferralRequestId: {
      mutable_referral_request_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.referral_request_id());
      break;
    }
    case kRelatedPersonId: {
      mutable_related_person_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.related_person_id());
      break;
    }
    case kRequestGroupId: {
      mutable_request_group_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.request_group_id());
      break;
    }
    case kResearchStudyId: {
      mutable_research_study_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.research_study_id());
      break;
    }
    case kResearchSubjectId: {
      mutable_research_subject_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.research_subject_id());
      break;
    }
    case kRiskAssessmentId: {
      mutable_risk_assessment_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.risk_assessment_id());
      break;
    }
    case kScheduleId: {
      mutable_schedule_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.schedule_id());
      break;
    }
    case kSearchParameterId: {
      mutable_search_parameter_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.search_parameter_id());
      break;
    }
    case kSequenceId: {
      mutable_sequence_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.sequence_id());
      break;
    }
    case kServiceDefinitionId: {
      mutable_service_definition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.service_definition_id());
      break;
    }
    case kSlotId: {
      mutable_slot_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.slot_id());
      break;
    }
    case kSpecimenId: {
      mutable_specimen_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.specimen_id());
      break;
    }
    case kStructureDefinitionId: {
      mutable_structure_definition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.structure_definition_id());
      break;
    }
    case kStructureMapId: {
      mutable_structure_map_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.structure_map_id());
      break;
    }
    case kSubscriptionId: {
      mutable_subscription_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.subscription_id());
      break;
    }
    case kSubstanceId: {
      mutable_substance_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.substance_id());
      break;
    }
    case kSupplyDeliveryId: {
      mutable_supply_delivery_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.supply_delivery_id());
      break;
    }
    case kSupplyRequestId: {
      mutable_supply_request_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.supply_request_id());
      break;
    }
    case kTaskId: {
      mutable_task_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.task_id());
      break;
    }
    case kTestReportId: {
      mutable_test_report_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.test_report_id());
      break;
    }
    case kTestScriptId: {
      mutable_test_script_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.test_script_id());
      break;
    }
    case kValueSetId: {
      mutable_value_set_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.value_set_id());
      break;
    }
    case kVisionPrescriptionId: {
      mutable_vision_prescription_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.vision_prescription_id());
      break;
    }
    case REFERENCE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.Reference)
}

void Reference::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&display_) -
      reinterpret_cast<char*>(&id_)) + sizeof(display_));
  clear_has_reference();
}

Reference::~Reference() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.Reference)
  SharedDtor();
}

void Reference::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete identifier_;
  if (this != internal_default_instance()) delete display_;
  if (has_reference()) {
    clear_reference();
  }
}

void Reference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Reference::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Reference& Reference::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Reference::clear_reference() {
// @@protoc_insertion_point(one_of_clear_start:google.fhir.stu3.proto.Reference)
  switch (reference_case()) {
    case kUri: {
      delete reference_.uri_;
      break;
    }
    case kFragment: {
      delete reference_.fragment_;
      break;
    }
    case kAccountId: {
      delete reference_.account_id_;
      break;
    }
    case kActivityDefinitionId: {
      delete reference_.activity_definition_id_;
      break;
    }
    case kAdverseEventId: {
      delete reference_.adverse_event_id_;
      break;
    }
    case kAllergyIntoleranceId: {
      delete reference_.allergy_intolerance_id_;
      break;
    }
    case kAppointmentId: {
      delete reference_.appointment_id_;
      break;
    }
    case kAppointmentResponseId: {
      delete reference_.appointment_response_id_;
      break;
    }
    case kAuditEventId: {
      delete reference_.audit_event_id_;
      break;
    }
    case kBasicId: {
      delete reference_.basic_id_;
      break;
    }
    case kBinaryId: {
      delete reference_.binary_id_;
      break;
    }
    case kBodySiteId: {
      delete reference_.body_site_id_;
      break;
    }
    case kBundleId: {
      delete reference_.bundle_id_;
      break;
    }
    case kCapabilityStatementId: {
      delete reference_.capability_statement_id_;
      break;
    }
    case kCarePlanId: {
      delete reference_.care_plan_id_;
      break;
    }
    case kCareTeamId: {
      delete reference_.care_team_id_;
      break;
    }
    case kChargeItemId: {
      delete reference_.charge_item_id_;
      break;
    }
    case kClaimId: {
      delete reference_.claim_id_;
      break;
    }
    case kClaimResponseId: {
      delete reference_.claim_response_id_;
      break;
    }
    case kClinicalImpressionId: {
      delete reference_.clinical_impression_id_;
      break;
    }
    case kCodeSystemId: {
      delete reference_.code_system_id_;
      break;
    }
    case kCommunicationId: {
      delete reference_.communication_id_;
      break;
    }
    case kCommunicationRequestId: {
      delete reference_.communication_request_id_;
      break;
    }
    case kCompartmentDefinitionId: {
      delete reference_.compartment_definition_id_;
      break;
    }
    case kCompositionId: {
      delete reference_.composition_id_;
      break;
    }
    case kConceptMapId: {
      delete reference_.concept_map_id_;
      break;
    }
    case kConditionId: {
      delete reference_.condition_id_;
      break;
    }
    case kConsentId: {
      delete reference_.consent_id_;
      break;
    }
    case kContractId: {
      delete reference_.contract_id_;
      break;
    }
    case kCoverageId: {
      delete reference_.coverage_id_;
      break;
    }
    case kDataElementId: {
      delete reference_.data_element_id_;
      break;
    }
    case kDetectedIssueId: {
      delete reference_.detected_issue_id_;
      break;
    }
    case kDeviceId: {
      delete reference_.device_id_;
      break;
    }
    case kDeviceComponentId: {
      delete reference_.device_component_id_;
      break;
    }
    case kDeviceMetricId: {
      delete reference_.device_metric_id_;
      break;
    }
    case kDeviceRequestId: {
      delete reference_.device_request_id_;
      break;
    }
    case kDeviceUseStatementId: {
      delete reference_.device_use_statement_id_;
      break;
    }
    case kDiagnosticReportId: {
      delete reference_.diagnostic_report_id_;
      break;
    }
    case kDocumentManifestId: {
      delete reference_.document_manifest_id_;
      break;
    }
    case kDocumentReferenceId: {
      delete reference_.document_reference_id_;
      break;
    }
    case kEligibilityRequestId: {
      delete reference_.eligibility_request_id_;
      break;
    }
    case kEligibilityResponseId: {
      delete reference_.eligibility_response_id_;
      break;
    }
    case kEncounterId: {
      delete reference_.encounter_id_;
      break;
    }
    case kEndpointId: {
      delete reference_.endpoint_id_;
      break;
    }
    case kEnrollmentRequestId: {
      delete reference_.enrollment_request_id_;
      break;
    }
    case kEnrollmentResponseId: {
      delete reference_.enrollment_response_id_;
      break;
    }
    case kEpisodeOfCareId: {
      delete reference_.episode_of_care_id_;
      break;
    }
    case kExpansionProfileId: {
      delete reference_.expansion_profile_id_;
      break;
    }
    case kExplanationOfBenefitId: {
      delete reference_.explanation_of_benefit_id_;
      break;
    }
    case kFamilyMemberHistoryId: {
      delete reference_.family_member_history_id_;
      break;
    }
    case kFlagId: {
      delete reference_.flag_id_;
      break;
    }
    case kGoalId: {
      delete reference_.goal_id_;
      break;
    }
    case kGraphDefinitionId: {
      delete reference_.graph_definition_id_;
      break;
    }
    case kGroupId: {
      delete reference_.group_id_;
      break;
    }
    case kGuidanceResponseId: {
      delete reference_.guidance_response_id_;
      break;
    }
    case kHealthcareServiceId: {
      delete reference_.healthcare_service_id_;
      break;
    }
    case kImagingManifestId: {
      delete reference_.imaging_manifest_id_;
      break;
    }
    case kImagingStudyId: {
      delete reference_.imaging_study_id_;
      break;
    }
    case kImmunizationId: {
      delete reference_.immunization_id_;
      break;
    }
    case kImmunizationRecommendationId: {
      delete reference_.immunization_recommendation_id_;
      break;
    }
    case kImplementationGuideId: {
      delete reference_.implementation_guide_id_;
      break;
    }
    case kLibraryId: {
      delete reference_.library_id_;
      break;
    }
    case kLinkageId: {
      delete reference_.linkage_id_;
      break;
    }
    case kListId: {
      delete reference_.list_id_;
      break;
    }
    case kLocationId: {
      delete reference_.location_id_;
      break;
    }
    case kMeasureId: {
      delete reference_.measure_id_;
      break;
    }
    case kMeasureReportId: {
      delete reference_.measure_report_id_;
      break;
    }
    case kMediaId: {
      delete reference_.media_id_;
      break;
    }
    case kMedicationId: {
      delete reference_.medication_id_;
      break;
    }
    case kMedicationAdministrationId: {
      delete reference_.medication_administration_id_;
      break;
    }
    case kMedicationDispenseId: {
      delete reference_.medication_dispense_id_;
      break;
    }
    case kMedicationRequestId: {
      delete reference_.medication_request_id_;
      break;
    }
    case kMedicationStatementId: {
      delete reference_.medication_statement_id_;
      break;
    }
    case kMessageDefinitionId: {
      delete reference_.message_definition_id_;
      break;
    }
    case kMessageHeaderId: {
      delete reference_.message_header_id_;
      break;
    }
    case kNamingSystemId: {
      delete reference_.naming_system_id_;
      break;
    }
    case kNutritionOrderId: {
      delete reference_.nutrition_order_id_;
      break;
    }
    case kObservationId: {
      delete reference_.observation_id_;
      break;
    }
    case kOperationDefinitionId: {
      delete reference_.operation_definition_id_;
      break;
    }
    case kOperationOutcomeId: {
      delete reference_.operation_outcome_id_;
      break;
    }
    case kOrganizationId: {
      delete reference_.organization_id_;
      break;
    }
    case kParametersId: {
      delete reference_.parameters_id_;
      break;
    }
    case kPatientId: {
      delete reference_.patient_id_;
      break;
    }
    case kPaymentNoticeId: {
      delete reference_.payment_notice_id_;
      break;
    }
    case kPaymentReconciliationId: {
      delete reference_.payment_reconciliation_id_;
      break;
    }
    case kPersonId: {
      delete reference_.person_id_;
      break;
    }
    case kPlanDefinitionId: {
      delete reference_.plan_definition_id_;
      break;
    }
    case kPractitionerId: {
      delete reference_.practitioner_id_;
      break;
    }
    case kPractitionerRoleId: {
      delete reference_.practitioner_role_id_;
      break;
    }
    case kProcedureId: {
      delete reference_.procedure_id_;
      break;
    }
    case kProcedureRequestId: {
      delete reference_.procedure_request_id_;
      break;
    }
    case kProcessRequestId: {
      delete reference_.process_request_id_;
      break;
    }
    case kProcessResponseId: {
      delete reference_.process_response_id_;
      break;
    }
    case kProvenanceId: {
      delete reference_.provenance_id_;
      break;
    }
    case kQuestionnaireId: {
      delete reference_.questionnaire_id_;
      break;
    }
    case kQuestionnaireResponseId: {
      delete reference_.questionnaire_response_id_;
      break;
    }
    case kReferralRequestId: {
      delete reference_.referral_request_id_;
      break;
    }
    case kRelatedPersonId: {
      delete reference_.related_person_id_;
      break;
    }
    case kRequestGroupId: {
      delete reference_.request_group_id_;
      break;
    }
    case kResearchStudyId: {
      delete reference_.research_study_id_;
      break;
    }
    case kResearchSubjectId: {
      delete reference_.research_subject_id_;
      break;
    }
    case kRiskAssessmentId: {
      delete reference_.risk_assessment_id_;
      break;
    }
    case kScheduleId: {
      delete reference_.schedule_id_;
      break;
    }
    case kSearchParameterId: {
      delete reference_.search_parameter_id_;
      break;
    }
    case kSequenceId: {
      delete reference_.sequence_id_;
      break;
    }
    case kServiceDefinitionId: {
      delete reference_.service_definition_id_;
      break;
    }
    case kSlotId: {
      delete reference_.slot_id_;
      break;
    }
    case kSpecimenId: {
      delete reference_.specimen_id_;
      break;
    }
    case kStructureDefinitionId: {
      delete reference_.structure_definition_id_;
      break;
    }
    case kStructureMapId: {
      delete reference_.structure_map_id_;
      break;
    }
    case kSubscriptionId: {
      delete reference_.subscription_id_;
      break;
    }
    case kSubstanceId: {
      delete reference_.substance_id_;
      break;
    }
    case kSupplyDeliveryId: {
      delete reference_.supply_delivery_id_;
      break;
    }
    case kSupplyRequestId: {
      delete reference_.supply_request_id_;
      break;
    }
    case kTaskId: {
      delete reference_.task_id_;
      break;
    }
    case kTestReportId: {
      delete reference_.test_report_id_;
      break;
    }
    case kTestScriptId: {
      delete reference_.test_script_id_;
      break;
    }
    case kValueSetId: {
      delete reference_.value_set_id_;
      break;
    }
    case kVisionPrescriptionId: {
      delete reference_.vision_prescription_id_;
      break;
    }
    case REFERENCE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REFERENCE_NOT_SET;
}


void Reference::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.Reference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && identifier_ != NULL) {
    delete identifier_;
  }
  identifier_ = NULL;
  if (GetArenaNoVirtual() == NULL && display_ != NULL) {
    delete display_;
  }
  display_ = NULL;
  clear_reference();
  _internal_metadata_.Clear();
}

bool Reference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.Reference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String uri = 3[json_name = "reference"];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uri()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String fragment = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fragment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId account_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_account_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId activity_definition_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_activity_definition_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId adverse_event_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adverse_event_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId allergy_intolerance_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_allergy_intolerance_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId appointment_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_appointment_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId appointment_response_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_appointment_response_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId audit_event_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_audit_event_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId basic_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_basic_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId binary_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_binary_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId body_site_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body_site_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId bundle_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bundle_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId capability_statement_id = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_capability_statement_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId care_plan_id = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_care_plan_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId care_team_id = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_care_team_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId charge_item_id = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_charge_item_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId claim_id = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_claim_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId claim_response_id = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_claim_response_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId clinical_impression_id = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clinical_impression_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId code_system_id = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code_system_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId communication_id = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_communication_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId communication_request_id = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_communication_request_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId compartment_definition_id = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_compartment_definition_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId composition_id = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_composition_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId concept_map_id = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_concept_map_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId condition_id = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_condition_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId consent_id = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_consent_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId contract_id = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_contract_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId coverage_id = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coverage_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId data_element_id = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data_element_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId detected_issue_id = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_detected_issue_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId device_id = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId device_component_id = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_component_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId device_metric_id = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_metric_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId device_request_id = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_request_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId device_use_statement_id = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 314 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_use_statement_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId diagnostic_report_id = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_diagnostic_report_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId document_manifest_id = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_document_manifest_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId document_reference_id = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 338 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_document_reference_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId eligibility_request_id = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_eligibility_request_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId eligibility_response_id = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_eligibility_response_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId encounter_id = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_encounter_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId endpoint_id = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 370 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_endpoint_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId enrollment_request_id = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enrollment_request_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId enrollment_response_id = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enrollment_response_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId episode_of_care_id = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_episode_of_care_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId expansion_profile_id = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expansion_profile_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId explanation_of_benefit_id = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_explanation_of_benefit_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId family_member_history_id = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_family_member_history_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId flag_id = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_flag_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId goal_id = 54;
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_goal_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId graph_definition_id = 55;
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_graph_definition_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId group_id = 56;
      case 56: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 450 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_group_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId guidance_response_id = 57;
      case 57: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 458 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_guidance_response_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId healthcare_service_id = 58;
      case 58: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 466 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_healthcare_service_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId imaging_manifest_id = 59;
      case 59: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 474 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_imaging_manifest_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId imaging_study_id = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_imaging_study_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId immunization_id = 61;
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 490 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_immunization_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId immunization_recommendation_id = 62;
      case 62: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 498 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_immunization_recommendation_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId implementation_guide_id = 63;
      case 63: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 506 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_implementation_guide_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId library_id = 64;
      case 64: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 514 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_library_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId linkage_id = 65;
      case 65: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 522 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linkage_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId list_id = 66;
      case 66: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_list_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId location_id = 67;
      case 67: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 538 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId measure_id = 68;
      case 68: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 546 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_measure_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId measure_report_id = 69;
      case 69: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 554 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_measure_report_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId media_id = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_media_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId medication_id = 71;
      case 71: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 570 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_medication_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId medication_administration_id = 72;
      case 72: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 578 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_medication_administration_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId medication_dispense_id = 73;
      case 73: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 586 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_medication_dispense_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId medication_request_id = 74;
      case 74: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_medication_request_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId medication_statement_id = 75;
      case 75: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 602 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_medication_statement_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId message_definition_id = 76;
      case 76: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 610 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message_definition_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId message_header_id = 77;
      case 77: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 618 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message_header_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId naming_system_id = 78;
      case 78: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 626 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_naming_system_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId nutrition_order_id = 79;
      case 79: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 634 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nutrition_order_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId observation_id = 80;
      case 80: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_observation_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId operation_definition_id = 81;
      case 81: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 650 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_operation_definition_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId operation_outcome_id = 82;
      case 82: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 658 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_operation_outcome_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId organization_id = 83;
      case 83: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 666 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_organization_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId parameters_id = 84;
      case 84: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 674 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parameters_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId patient_id = 85;
      case 85: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 682 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_patient_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId payment_notice_id = 86;
      case 86: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 690 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_payment_notice_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId payment_reconciliation_id = 87;
      case 87: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 698 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_payment_reconciliation_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId person_id = 88;
      case 88: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 706 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_person_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId plan_definition_id = 89;
      case 89: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 714 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_plan_definition_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId practitioner_id = 90;
      case 90: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 722 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_practitioner_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId practitioner_role_id = 91;
      case 91: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 730 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_practitioner_role_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId procedure_id = 92;
      case 92: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 738 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_procedure_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId procedure_request_id = 93;
      case 93: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 746 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_procedure_request_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId process_request_id = 94;
      case 94: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 754 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_process_request_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId process_response_id = 95;
      case 95: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 762 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_process_response_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId provenance_id = 96;
      case 96: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 770 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_provenance_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId questionnaire_id = 97;
      case 97: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 778 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_questionnaire_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId questionnaire_response_id = 98;
      case 98: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 786 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_questionnaire_response_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId referral_request_id = 99;
      case 99: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 794 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_referral_request_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId related_person_id = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_related_person_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId request_group_id = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request_group_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId research_study_id = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_research_study_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId research_subject_id = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_research_subject_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId risk_assessment_id = 104;
      case 104: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 834 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_risk_assessment_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId schedule_id = 105;
      case 105: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 842 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_schedule_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId search_parameter_id = 106;
      case 106: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 850 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_search_parameter_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId sequence_id = 107;
      case 107: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 858 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sequence_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId service_definition_id = 108;
      case 108: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 866 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_service_definition_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId slot_id = 109;
      case 109: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 874 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_slot_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId specimen_id = 110;
      case 110: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 882 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_specimen_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId structure_definition_id = 111;
      case 111: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 890 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_structure_definition_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId structure_map_id = 112;
      case 112: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 898 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_structure_map_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId subscription_id = 113;
      case 113: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 906 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subscription_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId substance_id = 114;
      case 114: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_substance_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId supply_delivery_id = 115;
      case 115: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 922 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_supply_delivery_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId supply_request_id = 116;
      case 116: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 930 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_supply_request_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId task_id = 117;
      case 117: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 938 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId test_report_id = 118;
      case 118: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 946 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_test_report_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId test_script_id = 119;
      case 119: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 954 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_test_script_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId value_set_id = 120;
      case 120: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 962 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_set_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.ReferenceId vision_prescription_id = 121;
      case 121: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 970 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vision_prescription_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Identifier identifier = 122;
      case 122: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 978 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String display = 123;
      case 123: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 986 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_display()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.Reference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.Reference)
  return false;
#undef DO_
}

void Reference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.Reference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->extension(static_cast<int>(i)),
      output);
  }

  // .google.fhir.stu3.proto.String uri = 3[json_name = "reference"];
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_uri(), output);
  }

  // .google.fhir.stu3.proto.String fragment = 4;
  if (has_fragment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_fragment(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId account_id = 5;
  if (has_account_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_account_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId activity_definition_id = 6;
  if (has_activity_definition_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_activity_definition_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId adverse_event_id = 7;
  if (has_adverse_event_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_adverse_event_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId allergy_intolerance_id = 8;
  if (has_allergy_intolerance_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_allergy_intolerance_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId appointment_id = 9;
  if (has_appointment_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_appointment_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId appointment_response_id = 10;
  if (has_appointment_response_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_appointment_response_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId audit_event_id = 11;
  if (has_audit_event_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_audit_event_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId basic_id = 12;
  if (has_basic_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_basic_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId binary_id = 13;
  if (has_binary_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_binary_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId body_site_id = 14;
  if (has_body_site_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_body_site_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId bundle_id = 15;
  if (has_bundle_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_bundle_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId capability_statement_id = 16;
  if (has_capability_statement_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_capability_statement_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId care_plan_id = 17;
  if (has_care_plan_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_care_plan_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId care_team_id = 18;
  if (has_care_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_care_team_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId charge_item_id = 19;
  if (has_charge_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_charge_item_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId claim_id = 20;
  if (has_claim_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_claim_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId claim_response_id = 21;
  if (has_claim_response_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_claim_response_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId clinical_impression_id = 22;
  if (has_clinical_impression_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_clinical_impression_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId code_system_id = 23;
  if (has_code_system_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_code_system_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId communication_id = 24;
  if (has_communication_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_communication_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId communication_request_id = 25;
  if (has_communication_request_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_communication_request_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId compartment_definition_id = 26;
  if (has_compartment_definition_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_compartment_definition_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId composition_id = 27;
  if (has_composition_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_internal_composition_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId concept_map_id = 28;
  if (has_concept_map_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->_internal_concept_map_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId condition_id = 29;
  if (has_condition_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->_internal_condition_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId consent_id = 30;
  if (has_consent_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->_internal_consent_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId contract_id = 31;
  if (has_contract_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->_internal_contract_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId coverage_id = 32;
  if (has_coverage_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->_internal_coverage_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId data_element_id = 33;
  if (has_data_element_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, this->_internal_data_element_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId detected_issue_id = 34;
  if (has_detected_issue_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, this->_internal_detected_issue_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId device_id = 35;
  if (has_device_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, this->_internal_device_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId device_component_id = 36;
  if (has_device_component_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, this->_internal_device_component_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId device_metric_id = 37;
  if (has_device_metric_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, this->_internal_device_metric_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId device_request_id = 38;
  if (has_device_request_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, this->_internal_device_request_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId device_use_statement_id = 39;
  if (has_device_use_statement_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39, this->_internal_device_use_statement_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId diagnostic_report_id = 40;
  if (has_diagnostic_report_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, this->_internal_diagnostic_report_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId document_manifest_id = 41;
  if (has_document_manifest_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, this->_internal_document_manifest_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId document_reference_id = 42;
  if (has_document_reference_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      42, this->_internal_document_reference_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId eligibility_request_id = 43;
  if (has_eligibility_request_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      43, this->_internal_eligibility_request_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId eligibility_response_id = 44;
  if (has_eligibility_response_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      44, this->_internal_eligibility_response_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId encounter_id = 45;
  if (has_encounter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      45, this->_internal_encounter_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId endpoint_id = 46;
  if (has_endpoint_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      46, this->_internal_endpoint_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId enrollment_request_id = 47;
  if (has_enrollment_request_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      47, this->_internal_enrollment_request_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId enrollment_response_id = 48;
  if (has_enrollment_response_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48, this->_internal_enrollment_response_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId episode_of_care_id = 49;
  if (has_episode_of_care_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      49, this->_internal_episode_of_care_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId expansion_profile_id = 50;
  if (has_expansion_profile_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, this->_internal_expansion_profile_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId explanation_of_benefit_id = 51;
  if (has_explanation_of_benefit_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, this->_internal_explanation_of_benefit_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId family_member_history_id = 52;
  if (has_family_member_history_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, this->_internal_family_member_history_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId flag_id = 53;
  if (has_flag_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53, this->_internal_flag_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId goal_id = 54;
  if (has_goal_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54, this->_internal_goal_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId graph_definition_id = 55;
  if (has_graph_definition_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      55, this->_internal_graph_definition_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId group_id = 56;
  if (has_group_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      56, this->_internal_group_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId guidance_response_id = 57;
  if (has_guidance_response_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      57, this->_internal_guidance_response_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId healthcare_service_id = 58;
  if (has_healthcare_service_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      58, this->_internal_healthcare_service_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId imaging_manifest_id = 59;
  if (has_imaging_manifest_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      59, this->_internal_imaging_manifest_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId imaging_study_id = 60;
  if (has_imaging_study_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60, this->_internal_imaging_study_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId immunization_id = 61;
  if (has_immunization_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      61, this->_internal_immunization_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId immunization_recommendation_id = 62;
  if (has_immunization_recommendation_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      62, this->_internal_immunization_recommendation_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId implementation_guide_id = 63;
  if (has_implementation_guide_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      63, this->_internal_implementation_guide_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId library_id = 64;
  if (has_library_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      64, this->_internal_library_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId linkage_id = 65;
  if (has_linkage_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      65, this->_internal_linkage_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId list_id = 66;
  if (has_list_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      66, this->_internal_list_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId location_id = 67;
  if (has_location_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      67, this->_internal_location_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId measure_id = 68;
  if (has_measure_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      68, this->_internal_measure_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId measure_report_id = 69;
  if (has_measure_report_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      69, this->_internal_measure_report_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId media_id = 70;
  if (has_media_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      70, this->_internal_media_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId medication_id = 71;
  if (has_medication_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      71, this->_internal_medication_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId medication_administration_id = 72;
  if (has_medication_administration_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      72, this->_internal_medication_administration_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId medication_dispense_id = 73;
  if (has_medication_dispense_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      73, this->_internal_medication_dispense_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId medication_request_id = 74;
  if (has_medication_request_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      74, this->_internal_medication_request_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId medication_statement_id = 75;
  if (has_medication_statement_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      75, this->_internal_medication_statement_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId message_definition_id = 76;
  if (has_message_definition_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      76, this->_internal_message_definition_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId message_header_id = 77;
  if (has_message_header_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      77, this->_internal_message_header_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId naming_system_id = 78;
  if (has_naming_system_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      78, this->_internal_naming_system_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId nutrition_order_id = 79;
  if (has_nutrition_order_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      79, this->_internal_nutrition_order_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId observation_id = 80;
  if (has_observation_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      80, this->_internal_observation_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId operation_definition_id = 81;
  if (has_operation_definition_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      81, this->_internal_operation_definition_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId operation_outcome_id = 82;
  if (has_operation_outcome_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      82, this->_internal_operation_outcome_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId organization_id = 83;
  if (has_organization_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      83, this->_internal_organization_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId parameters_id = 84;
  if (has_parameters_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      84, this->_internal_parameters_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId patient_id = 85;
  if (has_patient_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      85, this->_internal_patient_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId payment_notice_id = 86;
  if (has_payment_notice_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      86, this->_internal_payment_notice_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId payment_reconciliation_id = 87;
  if (has_payment_reconciliation_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      87, this->_internal_payment_reconciliation_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId person_id = 88;
  if (has_person_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      88, this->_internal_person_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId plan_definition_id = 89;
  if (has_plan_definition_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      89, this->_internal_plan_definition_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId practitioner_id = 90;
  if (has_practitioner_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      90, this->_internal_practitioner_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId practitioner_role_id = 91;
  if (has_practitioner_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      91, this->_internal_practitioner_role_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId procedure_id = 92;
  if (has_procedure_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      92, this->_internal_procedure_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId procedure_request_id = 93;
  if (has_procedure_request_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      93, this->_internal_procedure_request_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId process_request_id = 94;
  if (has_process_request_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      94, this->_internal_process_request_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId process_response_id = 95;
  if (has_process_response_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      95, this->_internal_process_response_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId provenance_id = 96;
  if (has_provenance_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      96, this->_internal_provenance_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId questionnaire_id = 97;
  if (has_questionnaire_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      97, this->_internal_questionnaire_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId questionnaire_response_id = 98;
  if (has_questionnaire_response_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      98, this->_internal_questionnaire_response_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId referral_request_id = 99;
  if (has_referral_request_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      99, this->_internal_referral_request_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId related_person_id = 100;
  if (has_related_person_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->_internal_related_person_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId request_group_id = 101;
  if (has_request_group_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, this->_internal_request_group_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId research_study_id = 102;
  if (has_research_study_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      102, this->_internal_research_study_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId research_subject_id = 103;
  if (has_research_subject_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      103, this->_internal_research_subject_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId risk_assessment_id = 104;
  if (has_risk_assessment_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      104, this->_internal_risk_assessment_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId schedule_id = 105;
  if (has_schedule_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      105, this->_internal_schedule_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId search_parameter_id = 106;
  if (has_search_parameter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      106, this->_internal_search_parameter_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId sequence_id = 107;
  if (has_sequence_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      107, this->_internal_sequence_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId service_definition_id = 108;
  if (has_service_definition_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      108, this->_internal_service_definition_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId slot_id = 109;
  if (has_slot_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      109, this->_internal_slot_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId specimen_id = 110;
  if (has_specimen_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      110, this->_internal_specimen_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId structure_definition_id = 111;
  if (has_structure_definition_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      111, this->_internal_structure_definition_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId structure_map_id = 112;
  if (has_structure_map_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      112, this->_internal_structure_map_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId subscription_id = 113;
  if (has_subscription_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      113, this->_internal_subscription_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId substance_id = 114;
  if (has_substance_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      114, this->_internal_substance_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId supply_delivery_id = 115;
  if (has_supply_delivery_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      115, this->_internal_supply_delivery_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId supply_request_id = 116;
  if (has_supply_request_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      116, this->_internal_supply_request_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId task_id = 117;
  if (has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      117, this->_internal_task_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId test_report_id = 118;
  if (has_test_report_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      118, this->_internal_test_report_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId test_script_id = 119;
  if (has_test_script_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      119, this->_internal_test_script_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId value_set_id = 120;
  if (has_value_set_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      120, this->_internal_value_set_id(), output);
  }

  // .google.fhir.stu3.proto.ReferenceId vision_prescription_id = 121;
  if (has_vision_prescription_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      121, this->_internal_vision_prescription_id(), output);
  }

  // .google.fhir.stu3.proto.Identifier identifier = 122;
  if (this->has_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      122, this->_internal_identifier(), output);
  }

  // .google.fhir.stu3.proto.String display = 123;
  if (this->has_display()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      123, this->_internal_display(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.Reference)
}

::google::protobuf::uint8* Reference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.Reference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->extension(static_cast<int>(i)), deterministic, target);
  }

  // .google.fhir.stu3.proto.String uri = 3[json_name = "reference"];
  if (has_uri()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_uri(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String fragment = 4;
  if (has_fragment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_fragment(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId account_id = 5;
  if (has_account_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_account_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId activity_definition_id = 6;
  if (has_activity_definition_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_activity_definition_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId adverse_event_id = 7;
  if (has_adverse_event_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_adverse_event_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId allergy_intolerance_id = 8;
  if (has_allergy_intolerance_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_allergy_intolerance_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId appointment_id = 9;
  if (has_appointment_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_appointment_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId appointment_response_id = 10;
  if (has_appointment_response_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_appointment_response_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId audit_event_id = 11;
  if (has_audit_event_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_audit_event_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId basic_id = 12;
  if (has_basic_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_basic_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId binary_id = 13;
  if (has_binary_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_binary_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId body_site_id = 14;
  if (has_body_site_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_body_site_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId bundle_id = 15;
  if (has_bundle_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_bundle_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId capability_statement_id = 16;
  if (has_capability_statement_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_capability_statement_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId care_plan_id = 17;
  if (has_care_plan_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_care_plan_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId care_team_id = 18;
  if (has_care_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_care_team_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId charge_item_id = 19;
  if (has_charge_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_charge_item_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId claim_id = 20;
  if (has_claim_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_claim_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId claim_response_id = 21;
  if (has_claim_response_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_claim_response_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId clinical_impression_id = 22;
  if (has_clinical_impression_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_clinical_impression_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId code_system_id = 23;
  if (has_code_system_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_code_system_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId communication_id = 24;
  if (has_communication_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_communication_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId communication_request_id = 25;
  if (has_communication_request_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_communication_request_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId compartment_definition_id = 26;
  if (has_compartment_definition_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_compartment_definition_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId composition_id = 27;
  if (has_composition_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->_internal_composition_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId concept_map_id = 28;
  if (has_concept_map_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->_internal_concept_map_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId condition_id = 29;
  if (has_condition_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->_internal_condition_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId consent_id = 30;
  if (has_consent_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->_internal_consent_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId contract_id = 31;
  if (has_contract_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->_internal_contract_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId coverage_id = 32;
  if (has_coverage_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, this->_internal_coverage_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId data_element_id = 33;
  if (has_data_element_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33, this->_internal_data_element_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId detected_issue_id = 34;
  if (has_detected_issue_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        34, this->_internal_detected_issue_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId device_id = 35;
  if (has_device_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        35, this->_internal_device_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId device_component_id = 36;
  if (has_device_component_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        36, this->_internal_device_component_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId device_metric_id = 37;
  if (has_device_metric_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        37, this->_internal_device_metric_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId device_request_id = 38;
  if (has_device_request_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        38, this->_internal_device_request_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId device_use_statement_id = 39;
  if (has_device_use_statement_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        39, this->_internal_device_use_statement_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId diagnostic_report_id = 40;
  if (has_diagnostic_report_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        40, this->_internal_diagnostic_report_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId document_manifest_id = 41;
  if (has_document_manifest_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        41, this->_internal_document_manifest_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId document_reference_id = 42;
  if (has_document_reference_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        42, this->_internal_document_reference_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId eligibility_request_id = 43;
  if (has_eligibility_request_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        43, this->_internal_eligibility_request_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId eligibility_response_id = 44;
  if (has_eligibility_response_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        44, this->_internal_eligibility_response_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId encounter_id = 45;
  if (has_encounter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        45, this->_internal_encounter_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId endpoint_id = 46;
  if (has_endpoint_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        46, this->_internal_endpoint_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId enrollment_request_id = 47;
  if (has_enrollment_request_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        47, this->_internal_enrollment_request_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId enrollment_response_id = 48;
  if (has_enrollment_response_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        48, this->_internal_enrollment_response_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId episode_of_care_id = 49;
  if (has_episode_of_care_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        49, this->_internal_episode_of_care_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId expansion_profile_id = 50;
  if (has_expansion_profile_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        50, this->_internal_expansion_profile_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId explanation_of_benefit_id = 51;
  if (has_explanation_of_benefit_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        51, this->_internal_explanation_of_benefit_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId family_member_history_id = 52;
  if (has_family_member_history_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        52, this->_internal_family_member_history_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId flag_id = 53;
  if (has_flag_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        53, this->_internal_flag_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId goal_id = 54;
  if (has_goal_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        54, this->_internal_goal_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId graph_definition_id = 55;
  if (has_graph_definition_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        55, this->_internal_graph_definition_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId group_id = 56;
  if (has_group_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        56, this->_internal_group_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId guidance_response_id = 57;
  if (has_guidance_response_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        57, this->_internal_guidance_response_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId healthcare_service_id = 58;
  if (has_healthcare_service_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        58, this->_internal_healthcare_service_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId imaging_manifest_id = 59;
  if (has_imaging_manifest_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        59, this->_internal_imaging_manifest_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId imaging_study_id = 60;
  if (has_imaging_study_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        60, this->_internal_imaging_study_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId immunization_id = 61;
  if (has_immunization_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        61, this->_internal_immunization_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId immunization_recommendation_id = 62;
  if (has_immunization_recommendation_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        62, this->_internal_immunization_recommendation_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId implementation_guide_id = 63;
  if (has_implementation_guide_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        63, this->_internal_implementation_guide_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId library_id = 64;
  if (has_library_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        64, this->_internal_library_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId linkage_id = 65;
  if (has_linkage_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        65, this->_internal_linkage_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId list_id = 66;
  if (has_list_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        66, this->_internal_list_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId location_id = 67;
  if (has_location_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        67, this->_internal_location_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId measure_id = 68;
  if (has_measure_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        68, this->_internal_measure_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId measure_report_id = 69;
  if (has_measure_report_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        69, this->_internal_measure_report_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId media_id = 70;
  if (has_media_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        70, this->_internal_media_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId medication_id = 71;
  if (has_medication_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        71, this->_internal_medication_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId medication_administration_id = 72;
  if (has_medication_administration_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        72, this->_internal_medication_administration_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId medication_dispense_id = 73;
  if (has_medication_dispense_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        73, this->_internal_medication_dispense_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId medication_request_id = 74;
  if (has_medication_request_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        74, this->_internal_medication_request_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId medication_statement_id = 75;
  if (has_medication_statement_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        75, this->_internal_medication_statement_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId message_definition_id = 76;
  if (has_message_definition_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        76, this->_internal_message_definition_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId message_header_id = 77;
  if (has_message_header_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        77, this->_internal_message_header_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId naming_system_id = 78;
  if (has_naming_system_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        78, this->_internal_naming_system_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId nutrition_order_id = 79;
  if (has_nutrition_order_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        79, this->_internal_nutrition_order_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId observation_id = 80;
  if (has_observation_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        80, this->_internal_observation_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId operation_definition_id = 81;
  if (has_operation_definition_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        81, this->_internal_operation_definition_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId operation_outcome_id = 82;
  if (has_operation_outcome_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        82, this->_internal_operation_outcome_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId organization_id = 83;
  if (has_organization_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        83, this->_internal_organization_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId parameters_id = 84;
  if (has_parameters_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        84, this->_internal_parameters_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId patient_id = 85;
  if (has_patient_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        85, this->_internal_patient_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId payment_notice_id = 86;
  if (has_payment_notice_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        86, this->_internal_payment_notice_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId payment_reconciliation_id = 87;
  if (has_payment_reconciliation_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        87, this->_internal_payment_reconciliation_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId person_id = 88;
  if (has_person_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        88, this->_internal_person_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId plan_definition_id = 89;
  if (has_plan_definition_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        89, this->_internal_plan_definition_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId practitioner_id = 90;
  if (has_practitioner_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        90, this->_internal_practitioner_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId practitioner_role_id = 91;
  if (has_practitioner_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        91, this->_internal_practitioner_role_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId procedure_id = 92;
  if (has_procedure_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        92, this->_internal_procedure_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId procedure_request_id = 93;
  if (has_procedure_request_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        93, this->_internal_procedure_request_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId process_request_id = 94;
  if (has_process_request_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        94, this->_internal_process_request_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId process_response_id = 95;
  if (has_process_response_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        95, this->_internal_process_response_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId provenance_id = 96;
  if (has_provenance_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        96, this->_internal_provenance_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId questionnaire_id = 97;
  if (has_questionnaire_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        97, this->_internal_questionnaire_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId questionnaire_response_id = 98;
  if (has_questionnaire_response_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        98, this->_internal_questionnaire_response_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId referral_request_id = 99;
  if (has_referral_request_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        99, this->_internal_referral_request_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId related_person_id = 100;
  if (has_related_person_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        100, this->_internal_related_person_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId request_group_id = 101;
  if (has_request_group_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        101, this->_internal_request_group_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId research_study_id = 102;
  if (has_research_study_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        102, this->_internal_research_study_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId research_subject_id = 103;
  if (has_research_subject_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        103, this->_internal_research_subject_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId risk_assessment_id = 104;
  if (has_risk_assessment_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        104, this->_internal_risk_assessment_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId schedule_id = 105;
  if (has_schedule_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        105, this->_internal_schedule_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId search_parameter_id = 106;
  if (has_search_parameter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        106, this->_internal_search_parameter_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId sequence_id = 107;
  if (has_sequence_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        107, this->_internal_sequence_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId service_definition_id = 108;
  if (has_service_definition_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        108, this->_internal_service_definition_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId slot_id = 109;
  if (has_slot_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        109, this->_internal_slot_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId specimen_id = 110;
  if (has_specimen_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        110, this->_internal_specimen_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId structure_definition_id = 111;
  if (has_structure_definition_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        111, this->_internal_structure_definition_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId structure_map_id = 112;
  if (has_structure_map_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        112, this->_internal_structure_map_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId subscription_id = 113;
  if (has_subscription_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        113, this->_internal_subscription_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId substance_id = 114;
  if (has_substance_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        114, this->_internal_substance_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId supply_delivery_id = 115;
  if (has_supply_delivery_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        115, this->_internal_supply_delivery_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId supply_request_id = 116;
  if (has_supply_request_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        116, this->_internal_supply_request_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId task_id = 117;
  if (has_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        117, this->_internal_task_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId test_report_id = 118;
  if (has_test_report_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        118, this->_internal_test_report_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId test_script_id = 119;
  if (has_test_script_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        119, this->_internal_test_script_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId value_set_id = 120;
  if (has_value_set_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        120, this->_internal_value_set_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.ReferenceId vision_prescription_id = 121;
  if (has_vision_prescription_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        121, this->_internal_vision_prescription_id(), deterministic, target);
  }

  // .google.fhir.stu3.proto.Identifier identifier = 122;
  if (this->has_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        122, this->_internal_identifier(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String display = 123;
  if (this->has_display()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        123, this->_internal_display(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.Reference)
  return target;
}

size_t Reference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.Reference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.Identifier identifier = 122;
  if (this->has_identifier()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *identifier_);
  }

  // .google.fhir.stu3.proto.String display = 123;
  if (this->has_display()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *display_);
  }

  switch (reference_case()) {
    // .google.fhir.stu3.proto.String uri = 3[json_name = "reference"];
    case kUri: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.uri_);
      break;
    }
    // .google.fhir.stu3.proto.String fragment = 4;
    case kFragment: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.fragment_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId account_id = 5;
    case kAccountId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.account_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId activity_definition_id = 6;
    case kActivityDefinitionId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.activity_definition_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId adverse_event_id = 7;
    case kAdverseEventId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.adverse_event_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId allergy_intolerance_id = 8;
    case kAllergyIntoleranceId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.allergy_intolerance_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId appointment_id = 9;
    case kAppointmentId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.appointment_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId appointment_response_id = 10;
    case kAppointmentResponseId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.appointment_response_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId audit_event_id = 11;
    case kAuditEventId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.audit_event_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId basic_id = 12;
    case kBasicId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.basic_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId binary_id = 13;
    case kBinaryId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.binary_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId body_site_id = 14;
    case kBodySiteId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.body_site_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId bundle_id = 15;
    case kBundleId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.bundle_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId capability_statement_id = 16;
    case kCapabilityStatementId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.capability_statement_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId care_plan_id = 17;
    case kCarePlanId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.care_plan_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId care_team_id = 18;
    case kCareTeamId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.care_team_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId charge_item_id = 19;
    case kChargeItemId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.charge_item_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId claim_id = 20;
    case kClaimId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.claim_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId claim_response_id = 21;
    case kClaimResponseId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.claim_response_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId clinical_impression_id = 22;
    case kClinicalImpressionId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.clinical_impression_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId code_system_id = 23;
    case kCodeSystemId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.code_system_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId communication_id = 24;
    case kCommunicationId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.communication_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId communication_request_id = 25;
    case kCommunicationRequestId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.communication_request_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId compartment_definition_id = 26;
    case kCompartmentDefinitionId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.compartment_definition_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId composition_id = 27;
    case kCompositionId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.composition_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId concept_map_id = 28;
    case kConceptMapId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.concept_map_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId condition_id = 29;
    case kConditionId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.condition_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId consent_id = 30;
    case kConsentId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.consent_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId contract_id = 31;
    case kContractId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.contract_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId coverage_id = 32;
    case kCoverageId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.coverage_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId data_element_id = 33;
    case kDataElementId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.data_element_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId detected_issue_id = 34;
    case kDetectedIssueId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.detected_issue_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId device_id = 35;
    case kDeviceId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.device_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId device_component_id = 36;
    case kDeviceComponentId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.device_component_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId device_metric_id = 37;
    case kDeviceMetricId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.device_metric_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId device_request_id = 38;
    case kDeviceRequestId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.device_request_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId device_use_statement_id = 39;
    case kDeviceUseStatementId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.device_use_statement_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId diagnostic_report_id = 40;
    case kDiagnosticReportId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.diagnostic_report_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId document_manifest_id = 41;
    case kDocumentManifestId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.document_manifest_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId document_reference_id = 42;
    case kDocumentReferenceId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.document_reference_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId eligibility_request_id = 43;
    case kEligibilityRequestId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.eligibility_request_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId eligibility_response_id = 44;
    case kEligibilityResponseId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.eligibility_response_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId encounter_id = 45;
    case kEncounterId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.encounter_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId endpoint_id = 46;
    case kEndpointId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.endpoint_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId enrollment_request_id = 47;
    case kEnrollmentRequestId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.enrollment_request_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId enrollment_response_id = 48;
    case kEnrollmentResponseId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.enrollment_response_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId episode_of_care_id = 49;
    case kEpisodeOfCareId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.episode_of_care_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId expansion_profile_id = 50;
    case kExpansionProfileId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.expansion_profile_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId explanation_of_benefit_id = 51;
    case kExplanationOfBenefitId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.explanation_of_benefit_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId family_member_history_id = 52;
    case kFamilyMemberHistoryId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.family_member_history_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId flag_id = 53;
    case kFlagId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.flag_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId goal_id = 54;
    case kGoalId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.goal_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId graph_definition_id = 55;
    case kGraphDefinitionId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.graph_definition_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId group_id = 56;
    case kGroupId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.group_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId guidance_response_id = 57;
    case kGuidanceResponseId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.guidance_response_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId healthcare_service_id = 58;
    case kHealthcareServiceId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.healthcare_service_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId imaging_manifest_id = 59;
    case kImagingManifestId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.imaging_manifest_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId imaging_study_id = 60;
    case kImagingStudyId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.imaging_study_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId immunization_id = 61;
    case kImmunizationId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.immunization_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId immunization_recommendation_id = 62;
    case kImmunizationRecommendationId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.immunization_recommendation_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId implementation_guide_id = 63;
    case kImplementationGuideId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.implementation_guide_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId library_id = 64;
    case kLibraryId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.library_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId linkage_id = 65;
    case kLinkageId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.linkage_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId list_id = 66;
    case kListId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.list_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId location_id = 67;
    case kLocationId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.location_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId measure_id = 68;
    case kMeasureId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.measure_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId measure_report_id = 69;
    case kMeasureReportId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.measure_report_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId media_id = 70;
    case kMediaId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.media_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId medication_id = 71;
    case kMedicationId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.medication_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId medication_administration_id = 72;
    case kMedicationAdministrationId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.medication_administration_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId medication_dispense_id = 73;
    case kMedicationDispenseId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.medication_dispense_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId medication_request_id = 74;
    case kMedicationRequestId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.medication_request_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId medication_statement_id = 75;
    case kMedicationStatementId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.medication_statement_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId message_definition_id = 76;
    case kMessageDefinitionId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.message_definition_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId message_header_id = 77;
    case kMessageHeaderId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.message_header_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId naming_system_id = 78;
    case kNamingSystemId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.naming_system_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId nutrition_order_id = 79;
    case kNutritionOrderId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.nutrition_order_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId observation_id = 80;
    case kObservationId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.observation_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId operation_definition_id = 81;
    case kOperationDefinitionId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.operation_definition_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId operation_outcome_id = 82;
    case kOperationOutcomeId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.operation_outcome_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId organization_id = 83;
    case kOrganizationId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.organization_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId parameters_id = 84;
    case kParametersId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.parameters_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId patient_id = 85;
    case kPatientId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.patient_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId payment_notice_id = 86;
    case kPaymentNoticeId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.payment_notice_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId payment_reconciliation_id = 87;
    case kPaymentReconciliationId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.payment_reconciliation_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId person_id = 88;
    case kPersonId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.person_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId plan_definition_id = 89;
    case kPlanDefinitionId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.plan_definition_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId practitioner_id = 90;
    case kPractitionerId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.practitioner_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId practitioner_role_id = 91;
    case kPractitionerRoleId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.practitioner_role_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId procedure_id = 92;
    case kProcedureId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.procedure_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId procedure_request_id = 93;
    case kProcedureRequestId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.procedure_request_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId process_request_id = 94;
    case kProcessRequestId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.process_request_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId process_response_id = 95;
    case kProcessResponseId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.process_response_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId provenance_id = 96;
    case kProvenanceId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.provenance_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId questionnaire_id = 97;
    case kQuestionnaireId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.questionnaire_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId questionnaire_response_id = 98;
    case kQuestionnaireResponseId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.questionnaire_response_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId referral_request_id = 99;
    case kReferralRequestId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.referral_request_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId related_person_id = 100;
    case kRelatedPersonId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.related_person_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId request_group_id = 101;
    case kRequestGroupId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.request_group_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId research_study_id = 102;
    case kResearchStudyId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.research_study_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId research_subject_id = 103;
    case kResearchSubjectId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.research_subject_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId risk_assessment_id = 104;
    case kRiskAssessmentId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.risk_assessment_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId schedule_id = 105;
    case kScheduleId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.schedule_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId search_parameter_id = 106;
    case kSearchParameterId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.search_parameter_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId sequence_id = 107;
    case kSequenceId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.sequence_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId service_definition_id = 108;
    case kServiceDefinitionId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.service_definition_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId slot_id = 109;
    case kSlotId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.slot_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId specimen_id = 110;
    case kSpecimenId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.specimen_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId structure_definition_id = 111;
    case kStructureDefinitionId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.structure_definition_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId structure_map_id = 112;
    case kStructureMapId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.structure_map_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId subscription_id = 113;
    case kSubscriptionId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.subscription_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId substance_id = 114;
    case kSubstanceId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.substance_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId supply_delivery_id = 115;
    case kSupplyDeliveryId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.supply_delivery_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId supply_request_id = 116;
    case kSupplyRequestId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.supply_request_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId task_id = 117;
    case kTaskId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.task_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId test_report_id = 118;
    case kTestReportId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.test_report_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId test_script_id = 119;
    case kTestScriptId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.test_script_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId value_set_id = 120;
    case kValueSetId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.value_set_id_);
      break;
    }
    // .google.fhir.stu3.proto.ReferenceId vision_prescription_id = 121;
    case kVisionPrescriptionId: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_.vision_prescription_id_);
      break;
    }
    case REFERENCE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Reference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.Reference)
  GOOGLE_DCHECK_NE(&from, this);
  const Reference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Reference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.Reference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.Reference)
    MergeFrom(*source);
  }
}

void Reference::MergeFrom(const Reference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.Reference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.has_identifier()) {
    mutable_identifier()->::google::fhir::stu3::proto::Identifier::MergeFrom(from.identifier());
  }
  if (from.has_display()) {
    mutable_display()->::google::fhir::stu3::proto::String::MergeFrom(from.display());
  }
  switch (from.reference_case()) {
    case kUri: {
      mutable_uri()->::google::fhir::stu3::proto::String::MergeFrom(from.uri());
      break;
    }
    case kFragment: {
      mutable_fragment()->::google::fhir::stu3::proto::String::MergeFrom(from.fragment());
      break;
    }
    case kAccountId: {
      mutable_account_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.account_id());
      break;
    }
    case kActivityDefinitionId: {
      mutable_activity_definition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.activity_definition_id());
      break;
    }
    case kAdverseEventId: {
      mutable_adverse_event_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.adverse_event_id());
      break;
    }
    case kAllergyIntoleranceId: {
      mutable_allergy_intolerance_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.allergy_intolerance_id());
      break;
    }
    case kAppointmentId: {
      mutable_appointment_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.appointment_id());
      break;
    }
    case kAppointmentResponseId: {
      mutable_appointment_response_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.appointment_response_id());
      break;
    }
    case kAuditEventId: {
      mutable_audit_event_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.audit_event_id());
      break;
    }
    case kBasicId: {
      mutable_basic_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.basic_id());
      break;
    }
    case kBinaryId: {
      mutable_binary_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.binary_id());
      break;
    }
    case kBodySiteId: {
      mutable_body_site_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.body_site_id());
      break;
    }
    case kBundleId: {
      mutable_bundle_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.bundle_id());
      break;
    }
    case kCapabilityStatementId: {
      mutable_capability_statement_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.capability_statement_id());
      break;
    }
    case kCarePlanId: {
      mutable_care_plan_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.care_plan_id());
      break;
    }
    case kCareTeamId: {
      mutable_care_team_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.care_team_id());
      break;
    }
    case kChargeItemId: {
      mutable_charge_item_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.charge_item_id());
      break;
    }
    case kClaimId: {
      mutable_claim_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.claim_id());
      break;
    }
    case kClaimResponseId: {
      mutable_claim_response_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.claim_response_id());
      break;
    }
    case kClinicalImpressionId: {
      mutable_clinical_impression_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.clinical_impression_id());
      break;
    }
    case kCodeSystemId: {
      mutable_code_system_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.code_system_id());
      break;
    }
    case kCommunicationId: {
      mutable_communication_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.communication_id());
      break;
    }
    case kCommunicationRequestId: {
      mutable_communication_request_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.communication_request_id());
      break;
    }
    case kCompartmentDefinitionId: {
      mutable_compartment_definition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.compartment_definition_id());
      break;
    }
    case kCompositionId: {
      mutable_composition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.composition_id());
      break;
    }
    case kConceptMapId: {
      mutable_concept_map_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.concept_map_id());
      break;
    }
    case kConditionId: {
      mutable_condition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.condition_id());
      break;
    }
    case kConsentId: {
      mutable_consent_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.consent_id());
      break;
    }
    case kContractId: {
      mutable_contract_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.contract_id());
      break;
    }
    case kCoverageId: {
      mutable_coverage_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.coverage_id());
      break;
    }
    case kDataElementId: {
      mutable_data_element_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.data_element_id());
      break;
    }
    case kDetectedIssueId: {
      mutable_detected_issue_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.detected_issue_id());
      break;
    }
    case kDeviceId: {
      mutable_device_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.device_id());
      break;
    }
    case kDeviceComponentId: {
      mutable_device_component_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.device_component_id());
      break;
    }
    case kDeviceMetricId: {
      mutable_device_metric_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.device_metric_id());
      break;
    }
    case kDeviceRequestId: {
      mutable_device_request_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.device_request_id());
      break;
    }
    case kDeviceUseStatementId: {
      mutable_device_use_statement_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.device_use_statement_id());
      break;
    }
    case kDiagnosticReportId: {
      mutable_diagnostic_report_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.diagnostic_report_id());
      break;
    }
    case kDocumentManifestId: {
      mutable_document_manifest_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.document_manifest_id());
      break;
    }
    case kDocumentReferenceId: {
      mutable_document_reference_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.document_reference_id());
      break;
    }
    case kEligibilityRequestId: {
      mutable_eligibility_request_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.eligibility_request_id());
      break;
    }
    case kEligibilityResponseId: {
      mutable_eligibility_response_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.eligibility_response_id());
      break;
    }
    case kEncounterId: {
      mutable_encounter_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.encounter_id());
      break;
    }
    case kEndpointId: {
      mutable_endpoint_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.endpoint_id());
      break;
    }
    case kEnrollmentRequestId: {
      mutable_enrollment_request_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.enrollment_request_id());
      break;
    }
    case kEnrollmentResponseId: {
      mutable_enrollment_response_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.enrollment_response_id());
      break;
    }
    case kEpisodeOfCareId: {
      mutable_episode_of_care_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.episode_of_care_id());
      break;
    }
    case kExpansionProfileId: {
      mutable_expansion_profile_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.expansion_profile_id());
      break;
    }
    case kExplanationOfBenefitId: {
      mutable_explanation_of_benefit_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.explanation_of_benefit_id());
      break;
    }
    case kFamilyMemberHistoryId: {
      mutable_family_member_history_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.family_member_history_id());
      break;
    }
    case kFlagId: {
      mutable_flag_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.flag_id());
      break;
    }
    case kGoalId: {
      mutable_goal_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.goal_id());
      break;
    }
    case kGraphDefinitionId: {
      mutable_graph_definition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.graph_definition_id());
      break;
    }
    case kGroupId: {
      mutable_group_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.group_id());
      break;
    }
    case kGuidanceResponseId: {
      mutable_guidance_response_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.guidance_response_id());
      break;
    }
    case kHealthcareServiceId: {
      mutable_healthcare_service_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.healthcare_service_id());
      break;
    }
    case kImagingManifestId: {
      mutable_imaging_manifest_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.imaging_manifest_id());
      break;
    }
    case kImagingStudyId: {
      mutable_imaging_study_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.imaging_study_id());
      break;
    }
    case kImmunizationId: {
      mutable_immunization_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.immunization_id());
      break;
    }
    case kImmunizationRecommendationId: {
      mutable_immunization_recommendation_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.immunization_recommendation_id());
      break;
    }
    case kImplementationGuideId: {
      mutable_implementation_guide_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.implementation_guide_id());
      break;
    }
    case kLibraryId: {
      mutable_library_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.library_id());
      break;
    }
    case kLinkageId: {
      mutable_linkage_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.linkage_id());
      break;
    }
    case kListId: {
      mutable_list_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.list_id());
      break;
    }
    case kLocationId: {
      mutable_location_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.location_id());
      break;
    }
    case kMeasureId: {
      mutable_measure_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.measure_id());
      break;
    }
    case kMeasureReportId: {
      mutable_measure_report_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.measure_report_id());
      break;
    }
    case kMediaId: {
      mutable_media_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.media_id());
      break;
    }
    case kMedicationId: {
      mutable_medication_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.medication_id());
      break;
    }
    case kMedicationAdministrationId: {
      mutable_medication_administration_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.medication_administration_id());
      break;
    }
    case kMedicationDispenseId: {
      mutable_medication_dispense_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.medication_dispense_id());
      break;
    }
    case kMedicationRequestId: {
      mutable_medication_request_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.medication_request_id());
      break;
    }
    case kMedicationStatementId: {
      mutable_medication_statement_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.medication_statement_id());
      break;
    }
    case kMessageDefinitionId: {
      mutable_message_definition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.message_definition_id());
      break;
    }
    case kMessageHeaderId: {
      mutable_message_header_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.message_header_id());
      break;
    }
    case kNamingSystemId: {
      mutable_naming_system_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.naming_system_id());
      break;
    }
    case kNutritionOrderId: {
      mutable_nutrition_order_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.nutrition_order_id());
      break;
    }
    case kObservationId: {
      mutable_observation_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.observation_id());
      break;
    }
    case kOperationDefinitionId: {
      mutable_operation_definition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.operation_definition_id());
      break;
    }
    case kOperationOutcomeId: {
      mutable_operation_outcome_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.operation_outcome_id());
      break;
    }
    case kOrganizationId: {
      mutable_organization_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.organization_id());
      break;
    }
    case kParametersId: {
      mutable_parameters_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.parameters_id());
      break;
    }
    case kPatientId: {
      mutable_patient_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.patient_id());
      break;
    }
    case kPaymentNoticeId: {
      mutable_payment_notice_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.payment_notice_id());
      break;
    }
    case kPaymentReconciliationId: {
      mutable_payment_reconciliation_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.payment_reconciliation_id());
      break;
    }
    case kPersonId: {
      mutable_person_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.person_id());
      break;
    }
    case kPlanDefinitionId: {
      mutable_plan_definition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.plan_definition_id());
      break;
    }
    case kPractitionerId: {
      mutable_practitioner_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.practitioner_id());
      break;
    }
    case kPractitionerRoleId: {
      mutable_practitioner_role_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.practitioner_role_id());
      break;
    }
    case kProcedureId: {
      mutable_procedure_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.procedure_id());
      break;
    }
    case kProcedureRequestId: {
      mutable_procedure_request_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.procedure_request_id());
      break;
    }
    case kProcessRequestId: {
      mutable_process_request_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.process_request_id());
      break;
    }
    case kProcessResponseId: {
      mutable_process_response_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.process_response_id());
      break;
    }
    case kProvenanceId: {
      mutable_provenance_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.provenance_id());
      break;
    }
    case kQuestionnaireId: {
      mutable_questionnaire_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.questionnaire_id());
      break;
    }
    case kQuestionnaireResponseId: {
      mutable_questionnaire_response_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.questionnaire_response_id());
      break;
    }
    case kReferralRequestId: {
      mutable_referral_request_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.referral_request_id());
      break;
    }
    case kRelatedPersonId: {
      mutable_related_person_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.related_person_id());
      break;
    }
    case kRequestGroupId: {
      mutable_request_group_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.request_group_id());
      break;
    }
    case kResearchStudyId: {
      mutable_research_study_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.research_study_id());
      break;
    }
    case kResearchSubjectId: {
      mutable_research_subject_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.research_subject_id());
      break;
    }
    case kRiskAssessmentId: {
      mutable_risk_assessment_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.risk_assessment_id());
      break;
    }
    case kScheduleId: {
      mutable_schedule_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.schedule_id());
      break;
    }
    case kSearchParameterId: {
      mutable_search_parameter_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.search_parameter_id());
      break;
    }
    case kSequenceId: {
      mutable_sequence_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.sequence_id());
      break;
    }
    case kServiceDefinitionId: {
      mutable_service_definition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.service_definition_id());
      break;
    }
    case kSlotId: {
      mutable_slot_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.slot_id());
      break;
    }
    case kSpecimenId: {
      mutable_specimen_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.specimen_id());
      break;
    }
    case kStructureDefinitionId: {
      mutable_structure_definition_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.structure_definition_id());
      break;
    }
    case kStructureMapId: {
      mutable_structure_map_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.structure_map_id());
      break;
    }
    case kSubscriptionId: {
      mutable_subscription_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.subscription_id());
      break;
    }
    case kSubstanceId: {
      mutable_substance_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.substance_id());
      break;
    }
    case kSupplyDeliveryId: {
      mutable_supply_delivery_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.supply_delivery_id());
      break;
    }
    case kSupplyRequestId: {
      mutable_supply_request_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.supply_request_id());
      break;
    }
    case kTaskId: {
      mutable_task_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.task_id());
      break;
    }
    case kTestReportId: {
      mutable_test_report_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.test_report_id());
      break;
    }
    case kTestScriptId: {
      mutable_test_script_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.test_script_id());
      break;
    }
    case kValueSetId: {
      mutable_value_set_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.value_set_id());
      break;
    }
    case kVisionPrescriptionId: {
      mutable_vision_prescription_id()->::google::fhir::stu3::proto::ReferenceId::MergeFrom(from.vision_prescription_id());
      break;
    }
    case REFERENCE_NOT_SET: {
      break;
    }
  }
}

void Reference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.Reference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reference::CopyFrom(const Reference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.Reference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reference::IsInitialized() const {
  return true;
}

void Reference::Swap(Reference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Reference::InternalSwap(Reference* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(identifier_, other->identifier_);
  swap(display_, other->display_);
  swap(reference_, other->reference_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Reference::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReferenceId::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ReferenceId_default_instance_._instance.get_mutable()->history_ = const_cast< ::google::fhir::stu3::proto::Id*>(
      ::google::fhir::stu3::proto::Id::internal_default_instance());
  ::google::fhir::stu3::proto::_ReferenceId_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReferenceId::kValueFieldNumber;
const int ReferenceId::kHistoryFieldNumber;
const int ReferenceId::kIdFieldNumber;
const int ReferenceId::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReferenceId::ReferenceId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ReferenceId)
}
ReferenceId::ReferenceId(const ReferenceId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_history()) {
    history_ = new ::google::fhir::stu3::proto::Id(*from.history_);
  } else {
    history_ = NULL;
  }
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ReferenceId)
}

void ReferenceId::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&history_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&history_)) + sizeof(id_));
}

ReferenceId::~ReferenceId() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ReferenceId)
  SharedDtor();
}

void ReferenceId::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete history_;
  if (this != internal_default_instance()) delete id_;
}

void ReferenceId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReferenceId::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReferenceId& ReferenceId::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void ReferenceId::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ReferenceId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && history_ != NULL) {
    delete history_;
  }
  history_ = NULL;
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool ReferenceId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ReferenceId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.stu3.proto.ReferenceId.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.Id history = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_history()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ReferenceId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ReferenceId)
  return false;
#undef DO_
}

void ReferenceId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ReferenceId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.ReferenceId.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.Id history = 2;
  if (this->has_history()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_history(), output);
  }

  // .google.fhir.stu3.proto.String id = 3;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ReferenceId)
}

::google::protobuf::uint8* ReferenceId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ReferenceId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.ReferenceId.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // .google.fhir.stu3.proto.Id history = 2;
  if (this->has_history()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_history(), deterministic, target);
  }

  // .google.fhir.stu3.proto.String id = 3;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ReferenceId)
  return target;
}

size_t ReferenceId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ReferenceId)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .google.fhir.stu3.proto.Id history = 2;
  if (this->has_history()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *history_);
  }

  // .google.fhir.stu3.proto.String id = 3;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReferenceId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ReferenceId)
  GOOGLE_DCHECK_NE(&from, this);
  const ReferenceId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReferenceId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ReferenceId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ReferenceId)
    MergeFrom(*source);
  }
}

void ReferenceId::MergeFrom(const ReferenceId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ReferenceId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_history()) {
    mutable_history()->::google::fhir::stu3::proto::Id::MergeFrom(from.history());
  }
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
}

void ReferenceId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ReferenceId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReferenceId::CopyFrom(const ReferenceId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ReferenceId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReferenceId::IsInitialized() const {
  return true;
}

void ReferenceId::Swap(ReferenceId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReferenceId::InternalSwap(ReferenceId* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(history_, other->history_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReferenceId::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddressTypeCode::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_AddressTypeCode_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddressTypeCode::kValueFieldNumber;
const int AddressTypeCode::kIdFieldNumber;
const int AddressTypeCode::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddressTypeCode::AddressTypeCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.AddressTypeCode)
}
AddressTypeCode::AddressTypeCode(const AddressTypeCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.AddressTypeCode)
}

void AddressTypeCode::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

AddressTypeCode::~AddressTypeCode() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.AddressTypeCode)
  SharedDtor();
}

void AddressTypeCode::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void AddressTypeCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddressTypeCode::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddressTypeCode& AddressTypeCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void AddressTypeCode::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.AddressTypeCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  value_ = 0;
  _internal_metadata_.Clear();
}

bool AddressTypeCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.AddressTypeCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.AddressTypeCode.Value value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::google::fhir::stu3::proto::AddressTypeCode_Value >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.AddressTypeCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.AddressTypeCode)
  return false;
#undef DO_
}

void AddressTypeCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.AddressTypeCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.AddressTypeCode.Value value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.AddressTypeCode)
}

::google::protobuf::uint8* AddressTypeCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.AddressTypeCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.AddressTypeCode.Value value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.AddressTypeCode)
  return target;
}

size_t AddressTypeCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.AddressTypeCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.AddressTypeCode.Value value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddressTypeCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.AddressTypeCode)
  GOOGLE_DCHECK_NE(&from, this);
  const AddressTypeCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddressTypeCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.AddressTypeCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.AddressTypeCode)
    MergeFrom(*source);
  }
}

void AddressTypeCode::MergeFrom(const AddressTypeCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.AddressTypeCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void AddressTypeCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.AddressTypeCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddressTypeCode::CopyFrom(const AddressTypeCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.AddressTypeCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddressTypeCode::IsInitialized() const {
  return true;
}

void AddressTypeCode::Swap(AddressTypeCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddressTypeCode::InternalSwap(AddressTypeCode* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddressTypeCode::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddressUseCode::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_AddressUseCode_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddressUseCode::kValueFieldNumber;
const int AddressUseCode::kIdFieldNumber;
const int AddressUseCode::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddressUseCode::AddressUseCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.AddressUseCode)
}
AddressUseCode::AddressUseCode(const AddressUseCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.AddressUseCode)
}

void AddressUseCode::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

AddressUseCode::~AddressUseCode() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.AddressUseCode)
  SharedDtor();
}

void AddressUseCode::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void AddressUseCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddressUseCode::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddressUseCode& AddressUseCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void AddressUseCode::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.AddressUseCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  value_ = 0;
  _internal_metadata_.Clear();
}

bool AddressUseCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.AddressUseCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.AddressUseCode.Value value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::google::fhir::stu3::proto::AddressUseCode_Value >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.AddressUseCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.AddressUseCode)
  return false;
#undef DO_
}

void AddressUseCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.AddressUseCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.AddressUseCode.Value value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.AddressUseCode)
}

::google::protobuf::uint8* AddressUseCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.AddressUseCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.AddressUseCode.Value value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.AddressUseCode)
  return target;
}

size_t AddressUseCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.AddressUseCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.AddressUseCode.Value value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddressUseCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.AddressUseCode)
  GOOGLE_DCHECK_NE(&from, this);
  const AddressUseCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddressUseCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.AddressUseCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.AddressUseCode)
    MergeFrom(*source);
  }
}

void AddressUseCode::MergeFrom(const AddressUseCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.AddressUseCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void AddressUseCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.AddressUseCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddressUseCode::CopyFrom(const AddressUseCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.AddressUseCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddressUseCode::IsInitialized() const {
  return true;
}

void AddressUseCode::Swap(AddressUseCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddressUseCode::InternalSwap(AddressUseCode* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddressUseCode::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContactPointSystemCode::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ContactPointSystemCode_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContactPointSystemCode::kValueFieldNumber;
const int ContactPointSystemCode::kIdFieldNumber;
const int ContactPointSystemCode::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContactPointSystemCode::ContactPointSystemCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ContactPointSystemCode)
}
ContactPointSystemCode::ContactPointSystemCode(const ContactPointSystemCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ContactPointSystemCode)
}

void ContactPointSystemCode::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

ContactPointSystemCode::~ContactPointSystemCode() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ContactPointSystemCode)
  SharedDtor();
}

void ContactPointSystemCode::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void ContactPointSystemCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ContactPointSystemCode::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContactPointSystemCode& ContactPointSystemCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void ContactPointSystemCode::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ContactPointSystemCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  value_ = 0;
  _internal_metadata_.Clear();
}

bool ContactPointSystemCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ContactPointSystemCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.ContactPointSystemCode.Value value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::google::fhir::stu3::proto::ContactPointSystemCode_Value >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ContactPointSystemCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ContactPointSystemCode)
  return false;
#undef DO_
}

void ContactPointSystemCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ContactPointSystemCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.ContactPointSystemCode.Value value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ContactPointSystemCode)
}

::google::protobuf::uint8* ContactPointSystemCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ContactPointSystemCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.ContactPointSystemCode.Value value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ContactPointSystemCode)
  return target;
}

size_t ContactPointSystemCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ContactPointSystemCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.ContactPointSystemCode.Value value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContactPointSystemCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ContactPointSystemCode)
  GOOGLE_DCHECK_NE(&from, this);
  const ContactPointSystemCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContactPointSystemCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ContactPointSystemCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ContactPointSystemCode)
    MergeFrom(*source);
  }
}

void ContactPointSystemCode::MergeFrom(const ContactPointSystemCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ContactPointSystemCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void ContactPointSystemCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ContactPointSystemCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContactPointSystemCode::CopyFrom(const ContactPointSystemCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ContactPointSystemCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContactPointSystemCode::IsInitialized() const {
  return true;
}

void ContactPointSystemCode::Swap(ContactPointSystemCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContactPointSystemCode::InternalSwap(ContactPointSystemCode* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ContactPointSystemCode::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContactPointUseCode::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_ContactPointUseCode_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContactPointUseCode::kValueFieldNumber;
const int ContactPointUseCode::kIdFieldNumber;
const int ContactPointUseCode::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContactPointUseCode::ContactPointUseCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.ContactPointUseCode)
}
ContactPointUseCode::ContactPointUseCode(const ContactPointUseCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.ContactPointUseCode)
}

void ContactPointUseCode::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

ContactPointUseCode::~ContactPointUseCode() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.ContactPointUseCode)
  SharedDtor();
}

void ContactPointUseCode::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void ContactPointUseCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ContactPointUseCode::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContactPointUseCode& ContactPointUseCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void ContactPointUseCode::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.ContactPointUseCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  value_ = 0;
  _internal_metadata_.Clear();
}

bool ContactPointUseCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.ContactPointUseCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.ContactPointUseCode.Value value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::google::fhir::stu3::proto::ContactPointUseCode_Value >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.ContactPointUseCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.ContactPointUseCode)
  return false;
#undef DO_
}

void ContactPointUseCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.ContactPointUseCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.ContactPointUseCode.Value value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.ContactPointUseCode)
}

::google::protobuf::uint8* ContactPointUseCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.ContactPointUseCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.ContactPointUseCode.Value value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.ContactPointUseCode)
  return target;
}

size_t ContactPointUseCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.ContactPointUseCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.ContactPointUseCode.Value value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContactPointUseCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.ContactPointUseCode)
  GOOGLE_DCHECK_NE(&from, this);
  const ContactPointUseCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContactPointUseCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.ContactPointUseCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.ContactPointUseCode)
    MergeFrom(*source);
  }
}

void ContactPointUseCode::MergeFrom(const ContactPointUseCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.ContactPointUseCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void ContactPointUseCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.ContactPointUseCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContactPointUseCode::CopyFrom(const ContactPointUseCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.ContactPointUseCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContactPointUseCode::IsInitialized() const {
  return true;
}

void ContactPointUseCode::Swap(ContactPointUseCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContactPointUseCode::InternalSwap(ContactPointUseCode* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ContactPointUseCode::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DaysOfWeekCode::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_DaysOfWeekCode_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DaysOfWeekCode::kValueFieldNumber;
const int DaysOfWeekCode::kIdFieldNumber;
const int DaysOfWeekCode::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DaysOfWeekCode::DaysOfWeekCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.DaysOfWeekCode)
}
DaysOfWeekCode::DaysOfWeekCode(const DaysOfWeekCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.DaysOfWeekCode)
}

void DaysOfWeekCode::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

DaysOfWeekCode::~DaysOfWeekCode() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.DaysOfWeekCode)
  SharedDtor();
}

void DaysOfWeekCode::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void DaysOfWeekCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DaysOfWeekCode::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DaysOfWeekCode& DaysOfWeekCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void DaysOfWeekCode::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.DaysOfWeekCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  value_ = 0;
  _internal_metadata_.Clear();
}

bool DaysOfWeekCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.DaysOfWeekCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.DaysOfWeekCode.Value value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::google::fhir::stu3::proto::DaysOfWeekCode_Value >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.DaysOfWeekCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.DaysOfWeekCode)
  return false;
#undef DO_
}

void DaysOfWeekCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.DaysOfWeekCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DaysOfWeekCode.Value value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.DaysOfWeekCode)
}

::google::protobuf::uint8* DaysOfWeekCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.DaysOfWeekCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.DaysOfWeekCode.Value value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.DaysOfWeekCode)
  return target;
}

size_t DaysOfWeekCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.DaysOfWeekCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.DaysOfWeekCode.Value value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DaysOfWeekCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.DaysOfWeekCode)
  GOOGLE_DCHECK_NE(&from, this);
  const DaysOfWeekCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DaysOfWeekCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.DaysOfWeekCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.DaysOfWeekCode)
    MergeFrom(*source);
  }
}

void DaysOfWeekCode::MergeFrom(const DaysOfWeekCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.DaysOfWeekCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void DaysOfWeekCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.DaysOfWeekCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DaysOfWeekCode::CopyFrom(const DaysOfWeekCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.DaysOfWeekCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DaysOfWeekCode::IsInitialized() const {
  return true;
}

void DaysOfWeekCode::Swap(DaysOfWeekCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DaysOfWeekCode::InternalSwap(DaysOfWeekCode* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DaysOfWeekCode::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventTimingCode::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_EventTimingCode_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventTimingCode::kValueFieldNumber;
const int EventTimingCode::kIdFieldNumber;
const int EventTimingCode::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventTimingCode::EventTimingCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.EventTimingCode)
}
EventTimingCode::EventTimingCode(const EventTimingCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.EventTimingCode)
}

void EventTimingCode::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

EventTimingCode::~EventTimingCode() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.EventTimingCode)
  SharedDtor();
}

void EventTimingCode::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void EventTimingCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EventTimingCode::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventTimingCode& EventTimingCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void EventTimingCode::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.EventTimingCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  value_ = 0;
  _internal_metadata_.Clear();
}

bool EventTimingCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.EventTimingCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.EventTimingCode.Value value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::google::fhir::stu3::proto::EventTimingCode_Value >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.EventTimingCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.EventTimingCode)
  return false;
#undef DO_
}

void EventTimingCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.EventTimingCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.EventTimingCode.Value value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.EventTimingCode)
}

::google::protobuf::uint8* EventTimingCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.EventTimingCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.EventTimingCode.Value value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.EventTimingCode)
  return target;
}

size_t EventTimingCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.EventTimingCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.EventTimingCode.Value value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventTimingCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.EventTimingCode)
  GOOGLE_DCHECK_NE(&from, this);
  const EventTimingCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventTimingCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.EventTimingCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.EventTimingCode)
    MergeFrom(*source);
  }
}

void EventTimingCode::MergeFrom(const EventTimingCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.EventTimingCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void EventTimingCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.EventTimingCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventTimingCode::CopyFrom(const EventTimingCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.EventTimingCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventTimingCode::IsInitialized() const {
  return true;
}

void EventTimingCode::Swap(EventTimingCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventTimingCode::InternalSwap(EventTimingCode* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EventTimingCode::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IdentifierUseCode::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_IdentifierUseCode_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdentifierUseCode::kValueFieldNumber;
const int IdentifierUseCode::kIdFieldNumber;
const int IdentifierUseCode::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdentifierUseCode::IdentifierUseCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.IdentifierUseCode)
}
IdentifierUseCode::IdentifierUseCode(const IdentifierUseCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.IdentifierUseCode)
}

void IdentifierUseCode::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

IdentifierUseCode::~IdentifierUseCode() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.IdentifierUseCode)
  SharedDtor();
}

void IdentifierUseCode::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void IdentifierUseCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IdentifierUseCode::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdentifierUseCode& IdentifierUseCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void IdentifierUseCode::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.IdentifierUseCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  value_ = 0;
  _internal_metadata_.Clear();
}

bool IdentifierUseCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.IdentifierUseCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.IdentifierUseCode.Value value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::google::fhir::stu3::proto::IdentifierUseCode_Value >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.IdentifierUseCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.IdentifierUseCode)
  return false;
#undef DO_
}

void IdentifierUseCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.IdentifierUseCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.IdentifierUseCode.Value value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.IdentifierUseCode)
}

::google::protobuf::uint8* IdentifierUseCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.IdentifierUseCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.IdentifierUseCode.Value value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.IdentifierUseCode)
  return target;
}

size_t IdentifierUseCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.IdentifierUseCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.IdentifierUseCode.Value value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IdentifierUseCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.IdentifierUseCode)
  GOOGLE_DCHECK_NE(&from, this);
  const IdentifierUseCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdentifierUseCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.IdentifierUseCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.IdentifierUseCode)
    MergeFrom(*source);
  }
}

void IdentifierUseCode::MergeFrom(const IdentifierUseCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.IdentifierUseCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void IdentifierUseCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.IdentifierUseCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdentifierUseCode::CopyFrom(const IdentifierUseCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.IdentifierUseCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdentifierUseCode::IsInitialized() const {
  return true;
}

void IdentifierUseCode::Swap(IdentifierUseCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdentifierUseCode::InternalSwap(IdentifierUseCode* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IdentifierUseCode::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AllLanguageCode::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_AllLanguageCode_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllLanguageCode::kValueFieldNumber;
const int AllLanguageCode::kIdFieldNumber;
const int AllLanguageCode::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllLanguageCode::AllLanguageCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_AllLanguageCode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.AllLanguageCode)
}
AllLanguageCode::AllLanguageCode(const AllLanguageCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.AllLanguageCode)
}

void AllLanguageCode::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = NULL;
}

AllLanguageCode::~AllLanguageCode() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.AllLanguageCode)
  SharedDtor();
}

void AllLanguageCode::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void AllLanguageCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AllLanguageCode::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllLanguageCode& AllLanguageCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_AllLanguageCode.base);
  return *internal_default_instance();
}


void AllLanguageCode::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.AllLanguageCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool AllLanguageCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.AllLanguageCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.stu3.proto.AllLanguageCode.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.AllLanguageCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.AllLanguageCode)
  return false;
#undef DO_
}

void AllLanguageCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.AllLanguageCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.AllLanguageCode.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.AllLanguageCode)
}

::google::protobuf::uint8* AllLanguageCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.AllLanguageCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.AllLanguageCode.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.AllLanguageCode)
  return target;
}

size_t AllLanguageCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.AllLanguageCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllLanguageCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.AllLanguageCode)
  GOOGLE_DCHECK_NE(&from, this);
  const AllLanguageCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllLanguageCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.AllLanguageCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.AllLanguageCode)
    MergeFrom(*source);
  }
}

void AllLanguageCode::MergeFrom(const AllLanguageCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.AllLanguageCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
}

void AllLanguageCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.AllLanguageCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllLanguageCode::CopyFrom(const AllLanguageCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.AllLanguageCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllLanguageCode::IsInitialized() const {
  return true;
}

void AllLanguageCode::Swap(AllLanguageCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllLanguageCode::InternalSwap(AllLanguageCode* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AllLanguageCode::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LanguageCode::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_LanguageCode_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LanguageCode::kValueFieldNumber;
const int LanguageCode::kIdFieldNumber;
const int LanguageCode::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LanguageCode::LanguageCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.LanguageCode)
}
LanguageCode::LanguageCode(const LanguageCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.LanguageCode)
}

void LanguageCode::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = NULL;
}

LanguageCode::~LanguageCode() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.LanguageCode)
  SharedDtor();
}

void LanguageCode::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void LanguageCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LanguageCode::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LanguageCode& LanguageCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void LanguageCode::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.LanguageCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool LanguageCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.LanguageCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.stu3.proto.LanguageCode.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.LanguageCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.LanguageCode)
  return false;
#undef DO_
}

void LanguageCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.LanguageCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.LanguageCode.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.LanguageCode)
}

::google::protobuf::uint8* LanguageCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.LanguageCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.LanguageCode.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.LanguageCode)
  return target;
}

size_t LanguageCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.LanguageCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LanguageCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.LanguageCode)
  GOOGLE_DCHECK_NE(&from, this);
  const LanguageCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LanguageCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.LanguageCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.LanguageCode)
    MergeFrom(*source);
  }
}

void LanguageCode::MergeFrom(const LanguageCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.LanguageCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
}

void LanguageCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.LanguageCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LanguageCode::CopyFrom(const LanguageCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.LanguageCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LanguageCode::IsInitialized() const {
  return true;
}

void LanguageCode::Swap(LanguageCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LanguageCode::InternalSwap(LanguageCode* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LanguageCode::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MimeTypeCode::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_MimeTypeCode_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MimeTypeCode::kValueFieldNumber;
const int MimeTypeCode::kIdFieldNumber;
const int MimeTypeCode::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MimeTypeCode::MimeTypeCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.MimeTypeCode)
}
MimeTypeCode::MimeTypeCode(const MimeTypeCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.MimeTypeCode)
}

void MimeTypeCode::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = NULL;
}

MimeTypeCode::~MimeTypeCode() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.MimeTypeCode)
  SharedDtor();
}

void MimeTypeCode::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void MimeTypeCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MimeTypeCode::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MimeTypeCode& MimeTypeCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void MimeTypeCode::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.MimeTypeCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool MimeTypeCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.MimeTypeCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.fhir.stu3.proto.MimeTypeCode.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.MimeTypeCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.MimeTypeCode)
  return false;
#undef DO_
}

void MimeTypeCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.MimeTypeCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.MimeTypeCode.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.MimeTypeCode)
}

::google::protobuf::uint8* MimeTypeCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.MimeTypeCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.fhir.stu3.proto.MimeTypeCode.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.MimeTypeCode)
  return target;
}

size_t MimeTypeCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.MimeTypeCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MimeTypeCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.MimeTypeCode)
  GOOGLE_DCHECK_NE(&from, this);
  const MimeTypeCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MimeTypeCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.MimeTypeCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.MimeTypeCode)
    MergeFrom(*source);
  }
}

void MimeTypeCode::MergeFrom(const MimeTypeCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.MimeTypeCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
}

void MimeTypeCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.MimeTypeCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MimeTypeCode::CopyFrom(const MimeTypeCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.MimeTypeCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MimeTypeCode::IsInitialized() const {
  return true;
}

void MimeTypeCode::Swap(MimeTypeCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MimeTypeCode::InternalSwap(MimeTypeCode* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MimeTypeCode::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NameUseCode::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_NameUseCode_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NameUseCode::kValueFieldNumber;
const int NameUseCode::kIdFieldNumber;
const int NameUseCode::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NameUseCode::NameUseCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.NameUseCode)
}
NameUseCode::NameUseCode(const NameUseCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.NameUseCode)
}

void NameUseCode::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

NameUseCode::~NameUseCode() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.NameUseCode)
  SharedDtor();
}

void NameUseCode::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void NameUseCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NameUseCode::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NameUseCode& NameUseCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void NameUseCode::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.NameUseCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  value_ = 0;
  _internal_metadata_.Clear();
}

bool NameUseCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.NameUseCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.NameUseCode.Value value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::google::fhir::stu3::proto::NameUseCode_Value >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.NameUseCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.NameUseCode)
  return false;
#undef DO_
}

void NameUseCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.NameUseCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.NameUseCode.Value value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.NameUseCode)
}

::google::protobuf::uint8* NameUseCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.NameUseCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.NameUseCode.Value value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.NameUseCode)
  return target;
}

size_t NameUseCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.NameUseCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.NameUseCode.Value value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NameUseCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.NameUseCode)
  GOOGLE_DCHECK_NE(&from, this);
  const NameUseCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NameUseCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.NameUseCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.NameUseCode)
    MergeFrom(*source);
  }
}

void NameUseCode::MergeFrom(const NameUseCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.NameUseCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void NameUseCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.NameUseCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NameUseCode::CopyFrom(const NameUseCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.NameUseCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NameUseCode::IsInitialized() const {
  return true;
}

void NameUseCode::Swap(NameUseCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NameUseCode::InternalSwap(NameUseCode* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NameUseCode::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuantityComparatorCode::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_QuantityComparatorCode_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuantityComparatorCode::kValueFieldNumber;
const int QuantityComparatorCode::kIdFieldNumber;
const int QuantityComparatorCode::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuantityComparatorCode::QuantityComparatorCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.QuantityComparatorCode)
}
QuantityComparatorCode::QuantityComparatorCode(const QuantityComparatorCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.QuantityComparatorCode)
}

void QuantityComparatorCode::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

QuantityComparatorCode::~QuantityComparatorCode() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.QuantityComparatorCode)
  SharedDtor();
}

void QuantityComparatorCode::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void QuantityComparatorCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QuantityComparatorCode::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuantityComparatorCode& QuantityComparatorCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void QuantityComparatorCode::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.QuantityComparatorCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  value_ = 0;
  _internal_metadata_.Clear();
}

bool QuantityComparatorCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.QuantityComparatorCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.QuantityComparatorCode.Value value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::google::fhir::stu3::proto::QuantityComparatorCode_Value >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.QuantityComparatorCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.QuantityComparatorCode)
  return false;
#undef DO_
}

void QuantityComparatorCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.QuantityComparatorCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.QuantityComparatorCode.Value value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.QuantityComparatorCode)
}

::google::protobuf::uint8* QuantityComparatorCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.QuantityComparatorCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.QuantityComparatorCode.Value value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.QuantityComparatorCode)
  return target;
}

size_t QuantityComparatorCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.QuantityComparatorCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.QuantityComparatorCode.Value value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuantityComparatorCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.QuantityComparatorCode)
  GOOGLE_DCHECK_NE(&from, this);
  const QuantityComparatorCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuantityComparatorCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.QuantityComparatorCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.QuantityComparatorCode)
    MergeFrom(*source);
  }
}

void QuantityComparatorCode::MergeFrom(const QuantityComparatorCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.QuantityComparatorCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void QuantityComparatorCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.QuantityComparatorCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuantityComparatorCode::CopyFrom(const QuantityComparatorCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.QuantityComparatorCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuantityComparatorCode::IsInitialized() const {
  return true;
}

void QuantityComparatorCode::Swap(QuantityComparatorCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuantityComparatorCode::InternalSwap(QuantityComparatorCode* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QuantityComparatorCode::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnitsOfTimeCode::InitAsDefaultInstance() {
  ::google::fhir::stu3::proto::_UnitsOfTimeCode_default_instance_._instance.get_mutable()->id_ = const_cast< ::google::fhir::stu3::proto::String*>(
      ::google::fhir::stu3::proto::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnitsOfTimeCode::kValueFieldNumber;
const int UnitsOfTimeCode::kIdFieldNumber;
const int UnitsOfTimeCode::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnitsOfTimeCode::UnitsOfTimeCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.fhir.stu3.proto.UnitsOfTimeCode)
}
UnitsOfTimeCode::UnitsOfTimeCode(const UnitsOfTimeCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extension_(from.extension_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::google::fhir::stu3::proto::String(*from.id_);
  } else {
    id_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:google.fhir.stu3.proto.UnitsOfTimeCode)
}

void UnitsOfTimeCode::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

UnitsOfTimeCode::~UnitsOfTimeCode() {
  // @@protoc_insertion_point(destructor:google.fhir.stu3.proto.UnitsOfTimeCode)
  SharedDtor();
}

void UnitsOfTimeCode::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void UnitsOfTimeCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnitsOfTimeCode::descriptor() {
  ::protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnitsOfTimeCode& UnitsOfTimeCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstu3_2fdatatypes_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void UnitsOfTimeCode::Clear() {
// @@protoc_insertion_point(message_clear_start:google.fhir.stu3.proto.UnitsOfTimeCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_.Clear();
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  value_ = 0;
  _internal_metadata_.Clear();
}

bool UnitsOfTimeCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.fhir.stu3.proto.UnitsOfTimeCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.fhir.stu3.proto.UnitsOfTimeCode.Value value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::google::fhir::stu3::proto::UnitsOfTimeCode_Value >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.fhir.stu3.proto.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.fhir.stu3.proto.Extension extension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.fhir.stu3.proto.UnitsOfTimeCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.fhir.stu3.proto.UnitsOfTimeCode)
  return false;
#undef DO_
}

void UnitsOfTimeCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.fhir.stu3.proto.UnitsOfTimeCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.UnitsOfTimeCode.Value value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->extension(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.fhir.stu3.proto.UnitsOfTimeCode)
}

::google::protobuf::uint8* UnitsOfTimeCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.fhir.stu3.proto.UnitsOfTimeCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.fhir.stu3.proto.UnitsOfTimeCode.Value value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extension_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->extension(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.fhir.stu3.proto.UnitsOfTimeCode)
  return target;
}

size_t UnitsOfTimeCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.fhir.stu3.proto.UnitsOfTimeCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.fhir.stu3.proto.Extension extension = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extension_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extension(static_cast<int>(i)));
    }
  }

  // .google.fhir.stu3.proto.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.fhir.stu3.proto.UnitsOfTimeCode.Value value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnitsOfTimeCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.fhir.stu3.proto.UnitsOfTimeCode)
  GOOGLE_DCHECK_NE(&from, this);
  const UnitsOfTimeCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnitsOfTimeCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.fhir.stu3.proto.UnitsOfTimeCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.fhir.stu3.proto.UnitsOfTimeCode)
    MergeFrom(*source);
  }
}

void UnitsOfTimeCode::MergeFrom(const UnitsOfTimeCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.fhir.stu3.proto.UnitsOfTimeCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_.MergeFrom(from.extension_);
  if (from.has_id()) {
    mutable_id()->::google::fhir::stu3::proto::String::MergeFrom(from.id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void UnitsOfTimeCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.fhir.stu3.proto.UnitsOfTimeCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitsOfTimeCode::CopyFrom(const UnitsOfTimeCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.fhir.stu3.proto.UnitsOfTimeCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitsOfTimeCode::IsInitialized() const {
  return true;
}

void UnitsOfTimeCode::Swap(UnitsOfTimeCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnitsOfTimeCode::InternalSwap(UnitsOfTimeCode* other) {
  using std::swap;
  CastToBase(&extension_)->InternalSwap(CastToBase(&other->extension_));
  swap(id_, other->id_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnitsOfTimeCode::GetMetadata() const {
  protobuf_proto_2fstu3_2fdatatypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstu3_2fdatatypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace stu3
}  // namespace fhir
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Base64Binary* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Base64Binary >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Base64Binary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Boolean* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Boolean >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Boolean >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Code* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Code >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Code >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Date* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Date >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Date >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::DateTime* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::DateTime >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Decimal* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Decimal >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Decimal >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Id* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Id >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Id >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Instant* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Instant >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Instant >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Integer* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Integer >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Integer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Markdown* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Markdown >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Markdown >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Oid* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Oid >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Oid >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::PositiveInt* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::PositiveInt >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::PositiveInt >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::String* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::String >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::String >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Time* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Time >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Time >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::UnsignedInt* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::UnsignedInt >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::UnsignedInt >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Uri* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Uri >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Uri >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Uuid* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Uuid >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Uuid >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Xhtml* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Xhtml >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Xhtml >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Address* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Address >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Address >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Age* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Age >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Age >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Annotation_Author* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Annotation_Author >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Annotation_Author >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Annotation* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Annotation >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Annotation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Attachment* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Attachment >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Attachment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::CodeableConcept* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::CodeableConcept >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::CodeableConcept >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Coding* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Coding >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Coding >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ContactPoint* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ContactPoint >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ContactPoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Count* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Count >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Count >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Distance* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Distance >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Distance >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Dosage_AsNeeded* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Dosage_AsNeeded >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Dosage_AsNeeded >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Dosage_Dose* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Dosage_Dose >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Dosage_Dose >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Dosage_Rate* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Dosage_Rate >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Dosage_Rate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Dosage* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Dosage >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Dosage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Duration* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Duration >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Duration >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::HumanName* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::HumanName >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::HumanName >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Identifier* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Identifier >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Identifier >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Meta* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Meta >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Meta >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Money* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Money >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Money >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Period* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Period >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Period >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Quantity* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Quantity >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Quantity >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Range* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Range >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Range >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Ratio* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Ratio >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Ratio >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::SampledData* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::SampledData >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::SampledData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Signature_Who* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Signature_Who >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Signature_Who >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Signature_OnBehalfOf* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Signature_OnBehalfOf >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Signature_OnBehalfOf >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Signature* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Signature >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Signature >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::SimpleQuantity* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::SimpleQuantity >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::SimpleQuantity >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Timing_Repeat_Bounds* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Timing_Repeat_Bounds >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Timing_Repeat_Bounds >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Timing_Repeat* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Timing_Repeat >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Timing_Repeat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Timing* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Timing >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Timing >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Extension_Value* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Extension_Value >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Extension_Value >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Extension* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Extension >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Extension >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::CodingWithFixedSystem* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::CodingWithFixedSystem >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::CodingWithFixedSystem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::CodingWithFixedCode* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::CodingWithFixedCode >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::CodingWithFixedCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::Reference* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::Reference >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::Reference >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ReferenceId* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ReferenceId >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ReferenceId >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::AddressTypeCode* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::AddressTypeCode >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::AddressTypeCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::AddressUseCode* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::AddressUseCode >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::AddressUseCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ContactPointSystemCode* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ContactPointSystemCode >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ContactPointSystemCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::ContactPointUseCode* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::ContactPointUseCode >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::ContactPointUseCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::DaysOfWeekCode* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::DaysOfWeekCode >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::DaysOfWeekCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::EventTimingCode* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::EventTimingCode >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::EventTimingCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::IdentifierUseCode* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::IdentifierUseCode >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::IdentifierUseCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::AllLanguageCode* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::AllLanguageCode >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::AllLanguageCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::LanguageCode* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::LanguageCode >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::LanguageCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::MimeTypeCode* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::MimeTypeCode >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::MimeTypeCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::NameUseCode* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::NameUseCode >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::NameUseCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::QuantityComparatorCode* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::QuantityComparatorCode >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::QuantityComparatorCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::fhir::stu3::proto::UnitsOfTimeCode* Arena::CreateMaybeMessage< ::google::fhir::stu3::proto::UnitsOfTimeCode >(Arena* arena) {
  return Arena::CreateInternal< ::google::fhir::stu3::proto::UnitsOfTimeCode >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
