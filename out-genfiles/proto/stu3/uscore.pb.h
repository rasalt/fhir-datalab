// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/stu3/uscore.proto

#ifndef PROTOBUF_INCLUDED_proto_2fstu3_2fuscore_2eproto
#define PROTOBUF_INCLUDED_proto_2fstu3_2fuscore_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "proto/stu3/annotations.pb.h"
#include "proto/stu3/codes.pb.h"
#include "proto/stu3/datatypes.pb.h"
#include "proto/stu3/metadatatypes.pb.h"
#include "proto/stu3/resources.pb.h"
#include "proto/stu3/uscore_codes.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fuscore_2eproto 

namespace protobuf_proto_2fstu3_2fuscore_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[81];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_proto_2fstu3_2fuscore_2eproto
namespace google {
namespace fhir {
namespace stu3 {
namespace uscore {
class CapabilityStatementProfileResourceAssociationExtension;
class CapabilityStatementProfileResourceAssociationExtensionDefaultTypeInternal;
extern CapabilityStatementProfileResourceAssociationExtensionDefaultTypeInternal _CapabilityStatementProfileResourceAssociationExtension_default_instance_;
class ContactPointUsCoreDirect;
class ContactPointUsCoreDirectDefaultTypeInternal;
extern ContactPointUsCoreDirectDefaultTypeInternal _ContactPointUsCoreDirect_default_instance_;
class PatientUSCoreBirthSexExtension;
class PatientUSCoreBirthSexExtensionDefaultTypeInternal;
extern PatientUSCoreBirthSexExtensionDefaultTypeInternal _PatientUSCoreBirthSexExtension_default_instance_;
class PatientUSCoreEthnicityExtension;
class PatientUSCoreEthnicityExtensionDefaultTypeInternal;
extern PatientUSCoreEthnicityExtensionDefaultTypeInternal _PatientUSCoreEthnicityExtension_default_instance_;
class PatientUSCoreRaceExtension;
class PatientUSCoreRaceExtensionDefaultTypeInternal;
extern PatientUSCoreRaceExtensionDefaultTypeInternal _PatientUSCoreRaceExtension_default_instance_;
class UsCoreAllergyintolerance;
class UsCoreAllergyintoleranceDefaultTypeInternal;
extern UsCoreAllergyintoleranceDefaultTypeInternal _UsCoreAllergyintolerance_default_instance_;
class UsCoreAllergyintolerance_Onset;
class UsCoreAllergyintolerance_OnsetDefaultTypeInternal;
extern UsCoreAllergyintolerance_OnsetDefaultTypeInternal _UsCoreAllergyintolerance_Onset_default_instance_;
class UsCoreAllergyintolerance_Reaction;
class UsCoreAllergyintolerance_ReactionDefaultTypeInternal;
extern UsCoreAllergyintolerance_ReactionDefaultTypeInternal _UsCoreAllergyintolerance_Reaction_default_instance_;
class UsCoreCareplan;
class UsCoreCareplanDefaultTypeInternal;
extern UsCoreCareplanDefaultTypeInternal _UsCoreCareplan_default_instance_;
class UsCoreCareplan_Activity;
class UsCoreCareplan_ActivityDefaultTypeInternal;
extern UsCoreCareplan_ActivityDefaultTypeInternal _UsCoreCareplan_Activity_default_instance_;
class UsCoreCareplan_Activity_Detail;
class UsCoreCareplan_Activity_DetailDefaultTypeInternal;
extern UsCoreCareplan_Activity_DetailDefaultTypeInternal _UsCoreCareplan_Activity_Detail_default_instance_;
class UsCoreCareplan_Activity_Detail_Product;
class UsCoreCareplan_Activity_Detail_ProductDefaultTypeInternal;
extern UsCoreCareplan_Activity_Detail_ProductDefaultTypeInternal _UsCoreCareplan_Activity_Detail_Product_default_instance_;
class UsCoreCareplan_Activity_Detail_Scheduled;
class UsCoreCareplan_Activity_Detail_ScheduledDefaultTypeInternal;
extern UsCoreCareplan_Activity_Detail_ScheduledDefaultTypeInternal _UsCoreCareplan_Activity_Detail_Scheduled_default_instance_;
class UsCoreCareteam;
class UsCoreCareteamDefaultTypeInternal;
extern UsCoreCareteamDefaultTypeInternal _UsCoreCareteam_default_instance_;
class UsCoreCareteam_Participant;
class UsCoreCareteam_ParticipantDefaultTypeInternal;
extern UsCoreCareteam_ParticipantDefaultTypeInternal _UsCoreCareteam_Participant_default_instance_;
class UsCoreCondition;
class UsCoreConditionDefaultTypeInternal;
extern UsCoreConditionDefaultTypeInternal _UsCoreCondition_default_instance_;
class UsCoreCondition_Abatement;
class UsCoreCondition_AbatementDefaultTypeInternal;
extern UsCoreCondition_AbatementDefaultTypeInternal _UsCoreCondition_Abatement_default_instance_;
class UsCoreCondition_Evidence;
class UsCoreCondition_EvidenceDefaultTypeInternal;
extern UsCoreCondition_EvidenceDefaultTypeInternal _UsCoreCondition_Evidence_default_instance_;
class UsCoreCondition_Onset;
class UsCoreCondition_OnsetDefaultTypeInternal;
extern UsCoreCondition_OnsetDefaultTypeInternal _UsCoreCondition_Onset_default_instance_;
class UsCoreCondition_Stage;
class UsCoreCondition_StageDefaultTypeInternal;
extern UsCoreCondition_StageDefaultTypeInternal _UsCoreCondition_Stage_default_instance_;
class UsCoreDevice;
class UsCoreDeviceDefaultTypeInternal;
extern UsCoreDeviceDefaultTypeInternal _UsCoreDevice_default_instance_;
class UsCoreDevice_Udi;
class UsCoreDevice_UdiDefaultTypeInternal;
extern UsCoreDevice_UdiDefaultTypeInternal _UsCoreDevice_Udi_default_instance_;
class UsCoreDiagnosticreport;
class UsCoreDiagnosticreportDefaultTypeInternal;
extern UsCoreDiagnosticreportDefaultTypeInternal _UsCoreDiagnosticreport_default_instance_;
class UsCoreDiagnosticreport_Effective;
class UsCoreDiagnosticreport_EffectiveDefaultTypeInternal;
extern UsCoreDiagnosticreport_EffectiveDefaultTypeInternal _UsCoreDiagnosticreport_Effective_default_instance_;
class UsCoreDiagnosticreport_Image;
class UsCoreDiagnosticreport_ImageDefaultTypeInternal;
extern UsCoreDiagnosticreport_ImageDefaultTypeInternal _UsCoreDiagnosticreport_Image_default_instance_;
class UsCoreDiagnosticreport_Performer;
class UsCoreDiagnosticreport_PerformerDefaultTypeInternal;
extern UsCoreDiagnosticreport_PerformerDefaultTypeInternal _UsCoreDiagnosticreport_Performer_default_instance_;
class UsCoreGoal;
class UsCoreGoalDefaultTypeInternal;
extern UsCoreGoalDefaultTypeInternal _UsCoreGoal_default_instance_;
class UsCoreGoal_Start;
class UsCoreGoal_StartDefaultTypeInternal;
extern UsCoreGoal_StartDefaultTypeInternal _UsCoreGoal_Start_default_instance_;
class UsCoreGoal_Target;
class UsCoreGoal_TargetDefaultTypeInternal;
extern UsCoreGoal_TargetDefaultTypeInternal _UsCoreGoal_Target_default_instance_;
class UsCoreGoal_Target_Detail;
class UsCoreGoal_Target_DetailDefaultTypeInternal;
extern UsCoreGoal_Target_DetailDefaultTypeInternal _UsCoreGoal_Target_Detail_default_instance_;
class UsCoreGoal_Target_Due;
class UsCoreGoal_Target_DueDefaultTypeInternal;
extern UsCoreGoal_Target_DueDefaultTypeInternal _UsCoreGoal_Target_Due_default_instance_;
class UsCoreImmunization;
class UsCoreImmunizationDefaultTypeInternal;
extern UsCoreImmunizationDefaultTypeInternal _UsCoreImmunization_default_instance_;
class UsCoreImmunization_Explanation;
class UsCoreImmunization_ExplanationDefaultTypeInternal;
extern UsCoreImmunization_ExplanationDefaultTypeInternal _UsCoreImmunization_Explanation_default_instance_;
class UsCoreImmunization_Practitioner;
class UsCoreImmunization_PractitionerDefaultTypeInternal;
extern UsCoreImmunization_PractitionerDefaultTypeInternal _UsCoreImmunization_Practitioner_default_instance_;
class UsCoreImmunization_Reaction;
class UsCoreImmunization_ReactionDefaultTypeInternal;
extern UsCoreImmunization_ReactionDefaultTypeInternal _UsCoreImmunization_Reaction_default_instance_;
class UsCoreImmunization_VaccinationProtocol;
class UsCoreImmunization_VaccinationProtocolDefaultTypeInternal;
extern UsCoreImmunization_VaccinationProtocolDefaultTypeInternal _UsCoreImmunization_VaccinationProtocol_default_instance_;
class UsCoreLocation;
class UsCoreLocationDefaultTypeInternal;
extern UsCoreLocationDefaultTypeInternal _UsCoreLocation_default_instance_;
class UsCoreLocation_Position;
class UsCoreLocation_PositionDefaultTypeInternal;
extern UsCoreLocation_PositionDefaultTypeInternal _UsCoreLocation_Position_default_instance_;
class UsCoreMedication;
class UsCoreMedicationDefaultTypeInternal;
extern UsCoreMedicationDefaultTypeInternal _UsCoreMedication_default_instance_;
class UsCoreMedication_Ingredient;
class UsCoreMedication_IngredientDefaultTypeInternal;
extern UsCoreMedication_IngredientDefaultTypeInternal _UsCoreMedication_Ingredient_default_instance_;
class UsCoreMedication_Ingredient_Item;
class UsCoreMedication_Ingredient_ItemDefaultTypeInternal;
extern UsCoreMedication_Ingredient_ItemDefaultTypeInternal _UsCoreMedication_Ingredient_Item_default_instance_;
class UsCoreMedication_Package;
class UsCoreMedication_PackageDefaultTypeInternal;
extern UsCoreMedication_PackageDefaultTypeInternal _UsCoreMedication_Package_default_instance_;
class UsCoreMedication_Package_Batch;
class UsCoreMedication_Package_BatchDefaultTypeInternal;
extern UsCoreMedication_Package_BatchDefaultTypeInternal _UsCoreMedication_Package_Batch_default_instance_;
class UsCoreMedication_Package_Content;
class UsCoreMedication_Package_ContentDefaultTypeInternal;
extern UsCoreMedication_Package_ContentDefaultTypeInternal _UsCoreMedication_Package_Content_default_instance_;
class UsCoreMedication_Package_Content_Item;
class UsCoreMedication_Package_Content_ItemDefaultTypeInternal;
extern UsCoreMedication_Package_Content_ItemDefaultTypeInternal _UsCoreMedication_Package_Content_Item_default_instance_;
class UsCoreMedicationrequest;
class UsCoreMedicationrequestDefaultTypeInternal;
extern UsCoreMedicationrequestDefaultTypeInternal _UsCoreMedicationrequest_default_instance_;
class UsCoreMedicationrequest_DispenseRequest;
class UsCoreMedicationrequest_DispenseRequestDefaultTypeInternal;
extern UsCoreMedicationrequest_DispenseRequestDefaultTypeInternal _UsCoreMedicationrequest_DispenseRequest_default_instance_;
class UsCoreMedicationrequest_Medication;
class UsCoreMedicationrequest_MedicationDefaultTypeInternal;
extern UsCoreMedicationrequest_MedicationDefaultTypeInternal _UsCoreMedicationrequest_Medication_default_instance_;
class UsCoreMedicationrequest_Requester;
class UsCoreMedicationrequest_RequesterDefaultTypeInternal;
extern UsCoreMedicationrequest_RequesterDefaultTypeInternal _UsCoreMedicationrequest_Requester_default_instance_;
class UsCoreMedicationrequest_Substitution;
class UsCoreMedicationrequest_SubstitutionDefaultTypeInternal;
extern UsCoreMedicationrequest_SubstitutionDefaultTypeInternal _UsCoreMedicationrequest_Substitution_default_instance_;
class UsCoreMedicationstatement;
class UsCoreMedicationstatementDefaultTypeInternal;
extern UsCoreMedicationstatementDefaultTypeInternal _UsCoreMedicationstatement_default_instance_;
class UsCoreMedicationstatement_Effective;
class UsCoreMedicationstatement_EffectiveDefaultTypeInternal;
extern UsCoreMedicationstatement_EffectiveDefaultTypeInternal _UsCoreMedicationstatement_Effective_default_instance_;
class UsCoreMedicationstatement_Medication;
class UsCoreMedicationstatement_MedicationDefaultTypeInternal;
extern UsCoreMedicationstatement_MedicationDefaultTypeInternal _UsCoreMedicationstatement_Medication_default_instance_;
class UsCoreObservationresults;
class UsCoreObservationresultsDefaultTypeInternal;
extern UsCoreObservationresultsDefaultTypeInternal _UsCoreObservationresults_default_instance_;
class UsCoreObservationresults_Component;
class UsCoreObservationresults_ComponentDefaultTypeInternal;
extern UsCoreObservationresults_ComponentDefaultTypeInternal _UsCoreObservationresults_Component_default_instance_;
class UsCoreObservationresults_Component_Value;
class UsCoreObservationresults_Component_ValueDefaultTypeInternal;
extern UsCoreObservationresults_Component_ValueDefaultTypeInternal _UsCoreObservationresults_Component_Value_default_instance_;
class UsCoreObservationresults_Effective;
class UsCoreObservationresults_EffectiveDefaultTypeInternal;
extern UsCoreObservationresults_EffectiveDefaultTypeInternal _UsCoreObservationresults_Effective_default_instance_;
class UsCoreObservationresults_ReferenceRange;
class UsCoreObservationresults_ReferenceRangeDefaultTypeInternal;
extern UsCoreObservationresults_ReferenceRangeDefaultTypeInternal _UsCoreObservationresults_ReferenceRange_default_instance_;
class UsCoreObservationresults_Related;
class UsCoreObservationresults_RelatedDefaultTypeInternal;
extern UsCoreObservationresults_RelatedDefaultTypeInternal _UsCoreObservationresults_Related_default_instance_;
class UsCoreObservationresults_Value;
class UsCoreObservationresults_ValueDefaultTypeInternal;
extern UsCoreObservationresults_ValueDefaultTypeInternal _UsCoreObservationresults_Value_default_instance_;
class UsCoreOrganization;
class UsCoreOrganizationDefaultTypeInternal;
extern UsCoreOrganizationDefaultTypeInternal _UsCoreOrganization_default_instance_;
class UsCoreOrganization_Contact;
class UsCoreOrganization_ContactDefaultTypeInternal;
extern UsCoreOrganization_ContactDefaultTypeInternal _UsCoreOrganization_Contact_default_instance_;
class UsCorePatient;
class UsCorePatientDefaultTypeInternal;
extern UsCorePatientDefaultTypeInternal _UsCorePatient_default_instance_;
class UsCorePatient_Communication;
class UsCorePatient_CommunicationDefaultTypeInternal;
extern UsCorePatient_CommunicationDefaultTypeInternal _UsCorePatient_Communication_default_instance_;
class UsCorePatient_Contact;
class UsCorePatient_ContactDefaultTypeInternal;
extern UsCorePatient_ContactDefaultTypeInternal _UsCorePatient_Contact_default_instance_;
class UsCorePatient_Deceased;
class UsCorePatient_DeceasedDefaultTypeInternal;
extern UsCorePatient_DeceasedDefaultTypeInternal _UsCorePatient_Deceased_default_instance_;
class UsCorePatient_Link;
class UsCorePatient_LinkDefaultTypeInternal;
extern UsCorePatient_LinkDefaultTypeInternal _UsCorePatient_Link_default_instance_;
class UsCorePatient_MultipleBirth;
class UsCorePatient_MultipleBirthDefaultTypeInternal;
extern UsCorePatient_MultipleBirthDefaultTypeInternal _UsCorePatient_MultipleBirth_default_instance_;
class UsCorePractitioner;
class UsCorePractitionerDefaultTypeInternal;
extern UsCorePractitionerDefaultTypeInternal _UsCorePractitioner_default_instance_;
class UsCorePractitioner_Qualification;
class UsCorePractitioner_QualificationDefaultTypeInternal;
extern UsCorePractitioner_QualificationDefaultTypeInternal _UsCorePractitioner_Qualification_default_instance_;
class UsCoreProcedure;
class UsCoreProcedureDefaultTypeInternal;
extern UsCoreProcedureDefaultTypeInternal _UsCoreProcedure_default_instance_;
class UsCoreProcedure_FocalDevice;
class UsCoreProcedure_FocalDeviceDefaultTypeInternal;
extern UsCoreProcedure_FocalDeviceDefaultTypeInternal _UsCoreProcedure_FocalDevice_default_instance_;
class UsCoreProcedure_Performed;
class UsCoreProcedure_PerformedDefaultTypeInternal;
extern UsCoreProcedure_PerformedDefaultTypeInternal _UsCoreProcedure_Performed_default_instance_;
class UsCoreProcedure_Performer;
class UsCoreProcedure_PerformerDefaultTypeInternal;
extern UsCoreProcedure_PerformerDefaultTypeInternal _UsCoreProcedure_Performer_default_instance_;
class UsCoreSmokingstatus;
class UsCoreSmokingstatusDefaultTypeInternal;
extern UsCoreSmokingstatusDefaultTypeInternal _UsCoreSmokingstatus_default_instance_;
class UsCoreSmokingstatus_Component;
class UsCoreSmokingstatus_ComponentDefaultTypeInternal;
extern UsCoreSmokingstatus_ComponentDefaultTypeInternal _UsCoreSmokingstatus_Component_default_instance_;
class UsCoreSmokingstatus_Component_Value;
class UsCoreSmokingstatus_Component_ValueDefaultTypeInternal;
extern UsCoreSmokingstatus_Component_ValueDefaultTypeInternal _UsCoreSmokingstatus_Component_Value_default_instance_;
class UsCoreSmokingstatus_Effective;
class UsCoreSmokingstatus_EffectiveDefaultTypeInternal;
extern UsCoreSmokingstatus_EffectiveDefaultTypeInternal _UsCoreSmokingstatus_Effective_default_instance_;
class UsCoreSmokingstatus_ReferenceRange;
class UsCoreSmokingstatus_ReferenceRangeDefaultTypeInternal;
extern UsCoreSmokingstatus_ReferenceRangeDefaultTypeInternal _UsCoreSmokingstatus_ReferenceRange_default_instance_;
class UsCoreSmokingstatus_Related;
class UsCoreSmokingstatus_RelatedDefaultTypeInternal;
extern UsCoreSmokingstatus_RelatedDefaultTypeInternal _UsCoreSmokingstatus_Related_default_instance_;
class UsCoreSmokingstatus_Value;
class UsCoreSmokingstatus_ValueDefaultTypeInternal;
extern UsCoreSmokingstatus_ValueDefaultTypeInternal _UsCoreSmokingstatus_Value_default_instance_;
}  // namespace uscore
}  // namespace stu3
}  // namespace fhir
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::fhir::stu3::uscore::CapabilityStatementProfileResourceAssociationExtension* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::CapabilityStatementProfileResourceAssociationExtension>(Arena*);
template<> ::google::fhir::stu3::uscore::ContactPointUsCoreDirect* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::ContactPointUsCoreDirect>(Arena*);
template<> ::google::fhir::stu3::uscore::PatientUSCoreBirthSexExtension* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::PatientUSCoreBirthSexExtension>(Arena*);
template<> ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension>(Arena*);
template<> ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::PatientUSCoreRaceExtension>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreAllergyintolerance* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreAllergyintolerance>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreCareplan* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreCareplan>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreCareplan_Activity* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreCareplan_Activity>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreCareteam* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreCareteam>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreCareteam_Participant* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreCareteam_Participant>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreCondition* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreCondition>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreCondition_Abatement* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreCondition_Abatement>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreCondition_Evidence* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreCondition_Evidence>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreCondition_Onset* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreCondition_Onset>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreCondition_Stage* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreCondition_Stage>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreDevice* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreDevice>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreDevice_Udi* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreDevice_Udi>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreDiagnosticreport* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreDiagnosticreport>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreGoal* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreGoal>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreGoal_Start* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreGoal_Start>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreGoal_Target* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreGoal_Target>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreGoal_Target_Due>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreImmunization* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreImmunization>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreImmunization_Explanation>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreImmunization_Reaction* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreImmunization_Reaction>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreLocation* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreLocation>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreLocation_Position* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreLocation_Position>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreMedication* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedication>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedication_Ingredient>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreMedication_Package* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedication_Package>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedication_Package_Content>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreMedicationrequest* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedicationrequest>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreMedicationstatement* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedicationstatement>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreObservationresults* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreObservationresults>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreObservationresults_Component* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreObservationresults_Component>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreObservationresults_Effective>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreObservationresults_Related* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreObservationresults_Related>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreObservationresults_Value* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreObservationresults_Value>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreOrganization* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreOrganization>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreOrganization_Contact* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreOrganization_Contact>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCorePatient* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCorePatient>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCorePatient_Communication* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCorePatient_Communication>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCorePatient_Contact* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCorePatient_Contact>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCorePatient_Deceased* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCorePatient_Deceased>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCorePatient_Link* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCorePatient_Link>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCorePractitioner* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCorePractitioner>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCorePractitioner_Qualification* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCorePractitioner_Qualification>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreProcedure* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreProcedure>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreProcedure_Performed* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreProcedure_Performed>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreProcedure_Performer* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreProcedure_Performer>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreSmokingstatus* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreSmokingstatus>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related>(Arena*);
template<> ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value* Arena::CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace fhir {
namespace stu3 {
namespace uscore {

// ===================================================================

class UsCoreAllergyintolerance_Onset : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset) */ {
 public:
  UsCoreAllergyintolerance_Onset();
  virtual ~UsCoreAllergyintolerance_Onset();

  UsCoreAllergyintolerance_Onset(const UsCoreAllergyintolerance_Onset& from);

  inline UsCoreAllergyintolerance_Onset& operator=(const UsCoreAllergyintolerance_Onset& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreAllergyintolerance_Onset(UsCoreAllergyintolerance_Onset&& from) noexcept
    : UsCoreAllergyintolerance_Onset() {
    *this = ::std::move(from);
  }

  inline UsCoreAllergyintolerance_Onset& operator=(UsCoreAllergyintolerance_Onset&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreAllergyintolerance_Onset& default_instance();

  enum OnsetCase {
    kDateTime = 1,
    kAge = 2,
    kPeriod = 3,
    kRange = 4,
    kStringValue = 5,
    ONSET_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreAllergyintolerance_Onset* internal_default_instance() {
    return reinterpret_cast<const UsCoreAllergyintolerance_Onset*>(
               &_UsCoreAllergyintolerance_Onset_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(UsCoreAllergyintolerance_Onset* other);
  friend void swap(UsCoreAllergyintolerance_Onset& a, UsCoreAllergyintolerance_Onset& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreAllergyintolerance_Onset* New() const final {
    return CreateMaybeMessage<UsCoreAllergyintolerance_Onset>(NULL);
  }

  UsCoreAllergyintolerance_Onset* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreAllergyintolerance_Onset>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreAllergyintolerance_Onset& from);
  void MergeFrom(const UsCoreAllergyintolerance_Onset& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreAllergyintolerance_Onset* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  // .google.fhir.stu3.proto.Age age = 2;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Age& _internal_age() const;
  public:
  const ::google::fhir::stu3::proto::Age& age() const;
  ::google::fhir::stu3::proto::Age* release_age();
  ::google::fhir::stu3::proto::Age* mutable_age();
  void set_allocated_age(::google::fhir::stu3::proto::Age* age);

  // .google.fhir.stu3.proto.Period period = 3;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  // .google.fhir.stu3.proto.Range range = 4;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Range& _internal_range() const;
  public:
  const ::google::fhir::stu3::proto::Range& range() const;
  ::google::fhir::stu3::proto::Range* release_range();
  ::google::fhir::stu3::proto::Range* mutable_range();
  void set_allocated_range(::google::fhir::stu3::proto::Range* range);

  // .google.fhir.stu3.proto.String string_value = 5[json_name = "string"];
  bool has_string_value() const;
  void clear_string_value();
  static const int kStringValueFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::String& _internal_string_value() const;
  public:
  const ::google::fhir::stu3::proto::String& string_value() const;
  ::google::fhir::stu3::proto::String* release_string_value();
  ::google::fhir::stu3::proto::String* mutable_string_value();
  void set_allocated_string_value(::google::fhir::stu3::proto::String* string_value);

  void clear_onset();
  OnsetCase onset_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset)
 private:
  void set_has_date_time();
  void set_has_age();
  void set_has_period();
  void set_has_range();
  void set_has_string_value();

  inline bool has_onset() const;
  inline void clear_has_onset();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union OnsetUnion {
    OnsetUnion() {}
    ::google::fhir::stu3::proto::DateTime* date_time_;
    ::google::fhir::stu3::proto::Age* age_;
    ::google::fhir::stu3::proto::Period* period_;
    ::google::fhir::stu3::proto::Range* range_;
    ::google::fhir::stu3::proto::String* string_value_;
  } onset_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreAllergyintolerance_Reaction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction) */ {
 public:
  UsCoreAllergyintolerance_Reaction();
  virtual ~UsCoreAllergyintolerance_Reaction();

  UsCoreAllergyintolerance_Reaction(const UsCoreAllergyintolerance_Reaction& from);

  inline UsCoreAllergyintolerance_Reaction& operator=(const UsCoreAllergyintolerance_Reaction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreAllergyintolerance_Reaction(UsCoreAllergyintolerance_Reaction&& from) noexcept
    : UsCoreAllergyintolerance_Reaction() {
    *this = ::std::move(from);
  }

  inline UsCoreAllergyintolerance_Reaction& operator=(UsCoreAllergyintolerance_Reaction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreAllergyintolerance_Reaction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreAllergyintolerance_Reaction* internal_default_instance() {
    return reinterpret_cast<const UsCoreAllergyintolerance_Reaction*>(
               &_UsCoreAllergyintolerance_Reaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(UsCoreAllergyintolerance_Reaction* other);
  friend void swap(UsCoreAllergyintolerance_Reaction& a, UsCoreAllergyintolerance_Reaction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreAllergyintolerance_Reaction* New() const final {
    return CreateMaybeMessage<UsCoreAllergyintolerance_Reaction>(NULL);
  }

  UsCoreAllergyintolerance_Reaction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreAllergyintolerance_Reaction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreAllergyintolerance_Reaction& from);
  void MergeFrom(const UsCoreAllergyintolerance_Reaction& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreAllergyintolerance_Reaction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept manifestation = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  int manifestation_size() const;
  void clear_manifestation();
  static const int kManifestationFieldNumber = 5;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_manifestation(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_manifestation();
  const ::google::fhir::stu3::proto::CodeableConcept& manifestation(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_manifestation();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      manifestation() const;

  // repeated .google.fhir.stu3.proto.Annotation note = 10;
  int note_size() const;
  void clear_note();
  static const int kNoteFieldNumber = 10;
  ::google::fhir::stu3::proto::Annotation* mutable_note(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
      mutable_note();
  const ::google::fhir::stu3::proto::Annotation& note(int index) const;
  ::google::fhir::stu3::proto::Annotation* add_note();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
      note() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CodeableConcept substance = 4;
  bool has_substance() const;
  void clear_substance();
  static const int kSubstanceFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_substance() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& substance() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_substance();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_substance();
  void set_allocated_substance(::google::fhir::stu3::proto::CodeableConcept* substance);

  // .google.fhir.stu3.proto.String description = 6;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::String& _internal_description() const;
  public:
  const ::google::fhir::stu3::proto::String& description() const;
  ::google::fhir::stu3::proto::String* release_description();
  ::google::fhir::stu3::proto::String* mutable_description();
  void set_allocated_description(::google::fhir::stu3::proto::String* description);

  // .google.fhir.stu3.proto.DateTime onset = 7;
  bool has_onset() const;
  void clear_onset();
  static const int kOnsetFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_onset() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& onset() const;
  ::google::fhir::stu3::proto::DateTime* release_onset();
  ::google::fhir::stu3::proto::DateTime* mutable_onset();
  void set_allocated_onset(::google::fhir::stu3::proto::DateTime* onset);

  // .google.fhir.stu3.proto.AllergyIntoleranceSeverityCode severity = 8;
  bool has_severity() const;
  void clear_severity();
  static const int kSeverityFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode& _internal_severity() const;
  public:
  const ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode& severity() const;
  ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode* release_severity();
  ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode* mutable_severity();
  void set_allocated_severity(::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode* severity);

  // .google.fhir.stu3.proto.CodeableConcept exposure_route = 9;
  bool has_exposure_route() const;
  void clear_exposure_route();
  static const int kExposureRouteFieldNumber = 9;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_exposure_route() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& exposure_route() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_exposure_route();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_exposure_route();
  void set_allocated_exposure_route(::google::fhir::stu3::proto::CodeableConcept* exposure_route);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > manifestation_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation > note_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::CodeableConcept* substance_;
  ::google::fhir::stu3::proto::String* description_;
  ::google::fhir::stu3::proto::DateTime* onset_;
  ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode* severity_;
  ::google::fhir::stu3::proto::CodeableConcept* exposure_route_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreAllergyintolerance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreAllergyintolerance) */ {
 public:
  UsCoreAllergyintolerance();
  virtual ~UsCoreAllergyintolerance();

  UsCoreAllergyintolerance(const UsCoreAllergyintolerance& from);

  inline UsCoreAllergyintolerance& operator=(const UsCoreAllergyintolerance& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreAllergyintolerance(UsCoreAllergyintolerance&& from) noexcept
    : UsCoreAllergyintolerance() {
    *this = ::std::move(from);
  }

  inline UsCoreAllergyintolerance& operator=(UsCoreAllergyintolerance&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreAllergyintolerance& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreAllergyintolerance* internal_default_instance() {
    return reinterpret_cast<const UsCoreAllergyintolerance*>(
               &_UsCoreAllergyintolerance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(UsCoreAllergyintolerance* other);
  friend void swap(UsCoreAllergyintolerance& a, UsCoreAllergyintolerance& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreAllergyintolerance* New() const final {
    return CreateMaybeMessage<UsCoreAllergyintolerance>(NULL);
  }

  UsCoreAllergyintolerance* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreAllergyintolerance>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreAllergyintolerance& from);
  void MergeFrom(const UsCoreAllergyintolerance& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreAllergyintolerance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreAllergyintolerance_Onset Onset;
  typedef UsCoreAllergyintolerance_Reaction Reaction;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  int contained_size() const;
  void clear_contained();
  static const int kContainedFieldNumber = 6;
  ::google::fhir::stu3::proto::ContainedResource* mutable_contained(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
      mutable_contained();
  const ::google::fhir::stu3::proto::ContainedResource& contained(int index) const;
  ::google::fhir::stu3::proto::ContainedResource* add_contained();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
      contained() const;

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 8;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  int identifier_size() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 9;
  ::google::fhir::stu3::proto::Identifier* mutable_identifier(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
      mutable_identifier();
  const ::google::fhir::stu3::proto::Identifier& identifier(int index) const;
  ::google::fhir::stu3::proto::Identifier* add_identifier();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
      identifier() const;

  // repeated .google.fhir.stu3.proto.AllergyIntoleranceCategoryCode category = 13;
  int category_size() const;
  void clear_category();
  static const int kCategoryFieldNumber = 13;
  ::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode* mutable_category(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode >*
      mutable_category();
  const ::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode& category(int index) const;
  ::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode* add_category();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode >&
      category() const;

  // repeated .google.fhir.stu3.proto.Annotation note = 22;
  int note_size() const;
  void clear_note();
  static const int kNoteFieldNumber = 22;
  ::google::fhir::stu3::proto::Annotation* mutable_note(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
      mutable_note();
  const ::google::fhir::stu3::proto::Annotation& note(int index) const;
  ::google::fhir::stu3::proto::Annotation* add_note();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
      note() const;

  // repeated .google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction reaction = 23;
  int reaction_size() const;
  void clear_reaction();
  static const int kReactionFieldNumber = 23;
  ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction* mutable_reaction(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction >*
      mutable_reaction();
  const ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction& reaction(int index) const;
  ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction* add_reaction();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction >&
      reaction() const;

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // .google.fhir.stu3.proto.Narrative text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Narrative& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::Narrative& text() const;
  ::google::fhir::stu3::proto::Narrative* release_text();
  ::google::fhir::stu3::proto::Narrative* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::Narrative* text);

  // .google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode clinical_status = 10;
  bool has_clinical_status() const;
  void clear_clinical_status();
  static const int kClinicalStatusFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode& _internal_clinical_status() const;
  public:
  const ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode& clinical_status() const;
  ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode* release_clinical_status();
  ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode* mutable_clinical_status();
  void set_allocated_clinical_status(::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode* clinical_status);

  // .google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode verification_status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_verification_status() const;
  void clear_verification_status();
  static const int kVerificationStatusFieldNumber = 11;
  private:
  const ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode& _internal_verification_status() const;
  public:
  const ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode& verification_status() const;
  ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode* release_verification_status();
  ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode* mutable_verification_status();
  void set_allocated_verification_status(::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode* verification_status);

  // .google.fhir.stu3.proto.AllergyIntoleranceTypeCode type = 12;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 12;
  private:
  const ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode& _internal_type() const;
  public:
  const ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode& type() const;
  ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode* release_type();
  ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode* mutable_type();
  void set_allocated_type(::google::fhir::stu3::proto::AllergyIntoleranceTypeCode* type);

  // .google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode criticality = 14;
  bool has_criticality() const;
  void clear_criticality();
  static const int kCriticalityFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode& _internal_criticality() const;
  public:
  const ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode& criticality() const;
  ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode* release_criticality();
  ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode* mutable_criticality();
  void set_allocated_criticality(::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode* criticality);

  // .google.fhir.stu3.proto.CodeableConcept code = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 15;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_code() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& code() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_code();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_code();
  void set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code);

  // .google.fhir.stu3.proto.Reference patient = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  bool has_patient() const;
  void clear_patient();
  static const int kPatientFieldNumber = 16;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_patient() const;
  public:
  const ::google::fhir::stu3::proto::Reference& patient() const;
  ::google::fhir::stu3::proto::Reference* release_patient();
  ::google::fhir::stu3::proto::Reference* mutable_patient();
  void set_allocated_patient(::google::fhir::stu3::proto::Reference* patient);

  // .google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset onset = 17 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_onset() const;
  void clear_onset();
  static const int kOnsetFieldNumber = 17;
  private:
  const ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset& _internal_onset() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset& onset() const;
  ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset* release_onset();
  ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset* mutable_onset();
  void set_allocated_onset(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset* onset);

  // .google.fhir.stu3.proto.DateTime asserted_date = 18;
  bool has_asserted_date() const;
  void clear_asserted_date();
  static const int kAssertedDateFieldNumber = 18;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_asserted_date() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& asserted_date() const;
  ::google::fhir::stu3::proto::DateTime* release_asserted_date();
  ::google::fhir::stu3::proto::DateTime* mutable_asserted_date();
  void set_allocated_asserted_date(::google::fhir::stu3::proto::DateTime* asserted_date);

  // .google.fhir.stu3.proto.Reference recorder = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient"];
  bool has_recorder() const;
  void clear_recorder();
  static const int kRecorderFieldNumber = 19;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_recorder() const;
  public:
  const ::google::fhir::stu3::proto::Reference& recorder() const;
  ::google::fhir::stu3::proto::Reference* release_recorder();
  ::google::fhir::stu3::proto::Reference* mutable_recorder();
  void set_allocated_recorder(::google::fhir::stu3::proto::Reference* recorder);

  // .google.fhir.stu3.proto.Reference asserter = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
  bool has_asserter() const;
  void clear_asserter();
  static const int kAsserterFieldNumber = 20;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_asserter() const;
  public:
  const ::google::fhir::stu3::proto::Reference& asserter() const;
  ::google::fhir::stu3::proto::Reference* release_asserter();
  ::google::fhir::stu3::proto::Reference* mutable_asserter();
  void set_allocated_asserter(::google::fhir::stu3::proto::Reference* asserter);

  // .google.fhir.stu3.proto.DateTime last_occurrence = 21;
  bool has_last_occurrence() const;
  void clear_last_occurrence();
  static const int kLastOccurrenceFieldNumber = 21;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_last_occurrence() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& last_occurrence() const;
  ::google::fhir::stu3::proto::DateTime* release_last_occurrence();
  ::google::fhir::stu3::proto::DateTime* mutable_last_occurrence();
  void set_allocated_last_occurrence(::google::fhir::stu3::proto::DateTime* last_occurrence);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreAllergyintolerance)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource > contained_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier > identifier_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode > category_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation > note_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction > reaction_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  ::google::fhir::stu3::proto::Narrative* text_;
  ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode* clinical_status_;
  ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode* verification_status_;
  ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode* type_;
  ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode* criticality_;
  ::google::fhir::stu3::proto::CodeableConcept* code_;
  ::google::fhir::stu3::proto::Reference* patient_;
  ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset* onset_;
  ::google::fhir::stu3::proto::DateTime* asserted_date_;
  ::google::fhir::stu3::proto::Reference* recorder_;
  ::google::fhir::stu3::proto::Reference* asserter_;
  ::google::fhir::stu3::proto::DateTime* last_occurrence_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PatientUSCoreBirthSexExtension : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension) */ {
 public:
  PatientUSCoreBirthSexExtension();
  virtual ~PatientUSCoreBirthSexExtension();

  PatientUSCoreBirthSexExtension(const PatientUSCoreBirthSexExtension& from);

  inline PatientUSCoreBirthSexExtension& operator=(const PatientUSCoreBirthSexExtension& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PatientUSCoreBirthSexExtension(PatientUSCoreBirthSexExtension&& from) noexcept
    : PatientUSCoreBirthSexExtension() {
    *this = ::std::move(from);
  }

  inline PatientUSCoreBirthSexExtension& operator=(PatientUSCoreBirthSexExtension&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PatientUSCoreBirthSexExtension& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PatientUSCoreBirthSexExtension* internal_default_instance() {
    return reinterpret_cast<const PatientUSCoreBirthSexExtension*>(
               &_PatientUSCoreBirthSexExtension_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PatientUSCoreBirthSexExtension* other);
  friend void swap(PatientUSCoreBirthSexExtension& a, PatientUSCoreBirthSexExtension& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PatientUSCoreBirthSexExtension* New() const final {
    return CreateMaybeMessage<PatientUSCoreBirthSexExtension>(NULL);
  }

  PatientUSCoreBirthSexExtension* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PatientUSCoreBirthSexExtension>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PatientUSCoreBirthSexExtension& from);
  void MergeFrom(const PatientUSCoreBirthSexExtension& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PatientUSCoreBirthSexExtension* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.uscore.UsCoreBirthSexCode value_code = 3;
  bool has_value_code() const;
  void clear_value_code();
  static const int kValueCodeFieldNumber = 3;
  private:
  const ::google::fhir::stu3::uscore::UsCoreBirthSexCode& _internal_value_code() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreBirthSexCode& value_code() const;
  ::google::fhir::stu3::uscore::UsCoreBirthSexCode* release_value_code();
  ::google::fhir::stu3::uscore::UsCoreBirthSexCode* mutable_value_code();
  void set_allocated_value_code(::google::fhir::stu3::uscore::UsCoreBirthSexCode* value_code);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::uscore::UsCoreBirthSexCode* value_code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreCareplan_Activity_Detail_Scheduled : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled) */ {
 public:
  UsCoreCareplan_Activity_Detail_Scheduled();
  virtual ~UsCoreCareplan_Activity_Detail_Scheduled();

  UsCoreCareplan_Activity_Detail_Scheduled(const UsCoreCareplan_Activity_Detail_Scheduled& from);

  inline UsCoreCareplan_Activity_Detail_Scheduled& operator=(const UsCoreCareplan_Activity_Detail_Scheduled& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreCareplan_Activity_Detail_Scheduled(UsCoreCareplan_Activity_Detail_Scheduled&& from) noexcept
    : UsCoreCareplan_Activity_Detail_Scheduled() {
    *this = ::std::move(from);
  }

  inline UsCoreCareplan_Activity_Detail_Scheduled& operator=(UsCoreCareplan_Activity_Detail_Scheduled&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreCareplan_Activity_Detail_Scheduled& default_instance();

  enum ScheduledCase {
    kTiming = 1,
    kPeriod = 2,
    kStringValue = 3,
    SCHEDULED_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreCareplan_Activity_Detail_Scheduled* internal_default_instance() {
    return reinterpret_cast<const UsCoreCareplan_Activity_Detail_Scheduled*>(
               &_UsCoreCareplan_Activity_Detail_Scheduled_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(UsCoreCareplan_Activity_Detail_Scheduled* other);
  friend void swap(UsCoreCareplan_Activity_Detail_Scheduled& a, UsCoreCareplan_Activity_Detail_Scheduled& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreCareplan_Activity_Detail_Scheduled* New() const final {
    return CreateMaybeMessage<UsCoreCareplan_Activity_Detail_Scheduled>(NULL);
  }

  UsCoreCareplan_Activity_Detail_Scheduled* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreCareplan_Activity_Detail_Scheduled>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreCareplan_Activity_Detail_Scheduled& from);
  void MergeFrom(const UsCoreCareplan_Activity_Detail_Scheduled& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreCareplan_Activity_Detail_Scheduled* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.Timing timing = 1;
  bool has_timing() const;
  void clear_timing();
  static const int kTimingFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Timing& _internal_timing() const;
  public:
  const ::google::fhir::stu3::proto::Timing& timing() const;
  ::google::fhir::stu3::proto::Timing* release_timing();
  ::google::fhir::stu3::proto::Timing* mutable_timing();
  void set_allocated_timing(::google::fhir::stu3::proto::Timing* timing);

  // .google.fhir.stu3.proto.Period period = 2;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
  bool has_string_value() const;
  void clear_string_value();
  static const int kStringValueFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::String& _internal_string_value() const;
  public:
  const ::google::fhir::stu3::proto::String& string_value() const;
  ::google::fhir::stu3::proto::String* release_string_value();
  ::google::fhir::stu3::proto::String* mutable_string_value();
  void set_allocated_string_value(::google::fhir::stu3::proto::String* string_value);

  void clear_scheduled();
  ScheduledCase scheduled_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled)
 private:
  void set_has_timing();
  void set_has_period();
  void set_has_string_value();

  inline bool has_scheduled() const;
  inline void clear_has_scheduled();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ScheduledUnion {
    ScheduledUnion() {}
    ::google::fhir::stu3::proto::Timing* timing_;
    ::google::fhir::stu3::proto::Period* period_;
    ::google::fhir::stu3::proto::String* string_value_;
  } scheduled_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreCareplan_Activity_Detail_Product : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product) */ {
 public:
  UsCoreCareplan_Activity_Detail_Product();
  virtual ~UsCoreCareplan_Activity_Detail_Product();

  UsCoreCareplan_Activity_Detail_Product(const UsCoreCareplan_Activity_Detail_Product& from);

  inline UsCoreCareplan_Activity_Detail_Product& operator=(const UsCoreCareplan_Activity_Detail_Product& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreCareplan_Activity_Detail_Product(UsCoreCareplan_Activity_Detail_Product&& from) noexcept
    : UsCoreCareplan_Activity_Detail_Product() {
    *this = ::std::move(from);
  }

  inline UsCoreCareplan_Activity_Detail_Product& operator=(UsCoreCareplan_Activity_Detail_Product&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreCareplan_Activity_Detail_Product& default_instance();

  enum ProductCase {
    kCodeableConcept = 1,
    kReference = 2,
    PRODUCT_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreCareplan_Activity_Detail_Product* internal_default_instance() {
    return reinterpret_cast<const UsCoreCareplan_Activity_Detail_Product*>(
               &_UsCoreCareplan_Activity_Detail_Product_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(UsCoreCareplan_Activity_Detail_Product* other);
  friend void swap(UsCoreCareplan_Activity_Detail_Product& a, UsCoreCareplan_Activity_Detail_Product& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreCareplan_Activity_Detail_Product* New() const final {
    return CreateMaybeMessage<UsCoreCareplan_Activity_Detail_Product>(NULL);
  }

  UsCoreCareplan_Activity_Detail_Product* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreCareplan_Activity_Detail_Product>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreCareplan_Activity_Detail_Product& from);
  void MergeFrom(const UsCoreCareplan_Activity_Detail_Product& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreCareplan_Activity_Detail_Product* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
  bool has_codeable_concept() const;
  void clear_codeable_concept();
  static const int kCodeableConceptFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_codeable_concept() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& codeable_concept() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_codeable_concept();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_codeable_concept();
  void set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept);

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Substance"];
  bool has_reference() const;
  void clear_reference();
  static const int kReferenceFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_reference() const;
  public:
  const ::google::fhir::stu3::proto::Reference& reference() const;
  ::google::fhir::stu3::proto::Reference* release_reference();
  ::google::fhir::stu3::proto::Reference* mutable_reference();
  void set_allocated_reference(::google::fhir::stu3::proto::Reference* reference);

  void clear_product();
  ProductCase product_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product)
 private:
  void set_has_codeable_concept();
  void set_has_reference();

  inline bool has_product() const;
  inline void clear_has_product();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ProductUnion {
    ProductUnion() {}
    ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
    ::google::fhir::stu3::proto::Reference* reference_;
  } product_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreCareplan_Activity_Detail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail) */ {
 public:
  UsCoreCareplan_Activity_Detail();
  virtual ~UsCoreCareplan_Activity_Detail();

  UsCoreCareplan_Activity_Detail(const UsCoreCareplan_Activity_Detail& from);

  inline UsCoreCareplan_Activity_Detail& operator=(const UsCoreCareplan_Activity_Detail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreCareplan_Activity_Detail(UsCoreCareplan_Activity_Detail&& from) noexcept
    : UsCoreCareplan_Activity_Detail() {
    *this = ::std::move(from);
  }

  inline UsCoreCareplan_Activity_Detail& operator=(UsCoreCareplan_Activity_Detail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreCareplan_Activity_Detail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreCareplan_Activity_Detail* internal_default_instance() {
    return reinterpret_cast<const UsCoreCareplan_Activity_Detail*>(
               &_UsCoreCareplan_Activity_Detail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(UsCoreCareplan_Activity_Detail* other);
  friend void swap(UsCoreCareplan_Activity_Detail& a, UsCoreCareplan_Activity_Detail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreCareplan_Activity_Detail* New() const final {
    return CreateMaybeMessage<UsCoreCareplan_Activity_Detail>(NULL);
  }

  UsCoreCareplan_Activity_Detail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreCareplan_Activity_Detail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreCareplan_Activity_Detail& from);
  void MergeFrom(const UsCoreCareplan_Activity_Detail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreCareplan_Activity_Detail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreCareplan_Activity_Detail_Scheduled Scheduled;
  typedef UsCoreCareplan_Activity_Detail_Product Product;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 7;
  int reason_code_size() const;
  void clear_reason_code();
  static const int kReasonCodeFieldNumber = 7;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_reason_code(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_reason_code();
  const ::google::fhir::stu3::proto::CodeableConcept& reason_code(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_reason_code();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      reason_code() const;

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
  int reason_reference_size() const;
  void clear_reason_reference();
  static const int kReasonReferenceFieldNumber = 8;
  ::google::fhir::stu3::proto::Reference* mutable_reason_reference(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_reason_reference();
  const ::google::fhir::stu3::proto::Reference& reason_reference(int index) const;
  ::google::fhir::stu3::proto::Reference* add_reason_reference();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      reason_reference() const;

  // repeated .google.fhir.stu3.proto.Reference goal = 9 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Goal"];
  int goal_size() const;
  void clear_goal();
  static const int kGoalFieldNumber = 9;
  ::google::fhir::stu3::proto::Reference* mutable_goal(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_goal();
  const ::google::fhir::stu3::proto::Reference& goal(int index) const;
  ::google::fhir::stu3::proto::Reference* add_goal();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      goal() const;

  // repeated .google.fhir.stu3.proto.Reference performer = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CareTeam"];
  int performer_size() const;
  void clear_performer();
  static const int kPerformerFieldNumber = 15;
  ::google::fhir::stu3::proto::Reference* mutable_performer(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_performer();
  const ::google::fhir::stu3::proto::Reference& performer(int index) const;
  ::google::fhir::stu3::proto::Reference* add_performer();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      performer() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CodeableConcept category = 4;
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_category() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& category() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_category();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_category();
  void set_allocated_category(::google::fhir::stu3::proto::CodeableConcept* category);

  // .google.fhir.stu3.proto.Reference definition = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ActivityDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Questionnaire"];
  bool has_definition() const;
  void clear_definition();
  static const int kDefinitionFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_definition() const;
  public:
  const ::google::fhir::stu3::proto::Reference& definition() const;
  ::google::fhir::stu3::proto::Reference* release_definition();
  ::google::fhir::stu3::proto::Reference* mutable_definition();
  void set_allocated_definition(::google::fhir::stu3::proto::Reference* definition);

  // .google.fhir.stu3.proto.CodeableConcept code = 6;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_code() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& code() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_code();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_code();
  void set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code);

  // .google.fhir.stu3.proto.CarePlanActivityStatusCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::CarePlanActivityStatusCode& _internal_status() const;
  public:
  const ::google::fhir::stu3::proto::CarePlanActivityStatusCode& status() const;
  ::google::fhir::stu3::proto::CarePlanActivityStatusCode* release_status();
  ::google::fhir::stu3::proto::CarePlanActivityStatusCode* mutable_status();
  void set_allocated_status(::google::fhir::stu3::proto::CarePlanActivityStatusCode* status);

  // .google.fhir.stu3.proto.String status_reason = 11;
  bool has_status_reason() const;
  void clear_status_reason();
  static const int kStatusReasonFieldNumber = 11;
  private:
  const ::google::fhir::stu3::proto::String& _internal_status_reason() const;
  public:
  const ::google::fhir::stu3::proto::String& status_reason() const;
  ::google::fhir::stu3::proto::String* release_status_reason();
  ::google::fhir::stu3::proto::String* mutable_status_reason();
  void set_allocated_status_reason(::google::fhir::stu3::proto::String* status_reason);

  // .google.fhir.stu3.proto.Boolean prohibited = 12;
  bool has_prohibited() const;
  void clear_prohibited();
  static const int kProhibitedFieldNumber = 12;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_prohibited() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& prohibited() const;
  ::google::fhir::stu3::proto::Boolean* release_prohibited();
  ::google::fhir::stu3::proto::Boolean* mutable_prohibited();
  void set_allocated_prohibited(::google::fhir::stu3::proto::Boolean* prohibited);

  // .google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled scheduled = 13 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_scheduled() const;
  void clear_scheduled();
  static const int kScheduledFieldNumber = 13;
  private:
  const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled& _internal_scheduled() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled& scheduled() const;
  ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled* release_scheduled();
  ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled* mutable_scheduled();
  void set_allocated_scheduled(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled* scheduled);

  // .google.fhir.stu3.proto.Reference location = 14 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_location() const;
  public:
  const ::google::fhir::stu3::proto::Reference& location() const;
  ::google::fhir::stu3::proto::Reference* release_location();
  ::google::fhir::stu3::proto::Reference* mutable_location();
  void set_allocated_location(::google::fhir::stu3::proto::Reference* location);

  // .google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product product = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_product() const;
  void clear_product();
  static const int kProductFieldNumber = 16;
  private:
  const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product& _internal_product() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product& product() const;
  ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product* release_product();
  ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product* mutable_product();
  void set_allocated_product(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product* product);

  // .google.fhir.stu3.proto.SimpleQuantity daily_amount = 17;
  bool has_daily_amount() const;
  void clear_daily_amount();
  static const int kDailyAmountFieldNumber = 17;
  private:
  const ::google::fhir::stu3::proto::SimpleQuantity& _internal_daily_amount() const;
  public:
  const ::google::fhir::stu3::proto::SimpleQuantity& daily_amount() const;
  ::google::fhir::stu3::proto::SimpleQuantity* release_daily_amount();
  ::google::fhir::stu3::proto::SimpleQuantity* mutable_daily_amount();
  void set_allocated_daily_amount(::google::fhir::stu3::proto::SimpleQuantity* daily_amount);

  // .google.fhir.stu3.proto.SimpleQuantity quantity = 18;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 18;
  private:
  const ::google::fhir::stu3::proto::SimpleQuantity& _internal_quantity() const;
  public:
  const ::google::fhir::stu3::proto::SimpleQuantity& quantity() const;
  ::google::fhir::stu3::proto::SimpleQuantity* release_quantity();
  ::google::fhir::stu3::proto::SimpleQuantity* mutable_quantity();
  void set_allocated_quantity(::google::fhir::stu3::proto::SimpleQuantity* quantity);

  // .google.fhir.stu3.proto.String description = 19;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 19;
  private:
  const ::google::fhir::stu3::proto::String& _internal_description() const;
  public:
  const ::google::fhir::stu3::proto::String& description() const;
  ::google::fhir::stu3::proto::String* release_description();
  ::google::fhir::stu3::proto::String* mutable_description();
  void set_allocated_description(::google::fhir::stu3::proto::String* description);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > reason_code_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > reason_reference_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > goal_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > performer_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::CodeableConcept* category_;
  ::google::fhir::stu3::proto::Reference* definition_;
  ::google::fhir::stu3::proto::CodeableConcept* code_;
  ::google::fhir::stu3::proto::CarePlanActivityStatusCode* status_;
  ::google::fhir::stu3::proto::String* status_reason_;
  ::google::fhir::stu3::proto::Boolean* prohibited_;
  ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled* scheduled_;
  ::google::fhir::stu3::proto::Reference* location_;
  ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product* product_;
  ::google::fhir::stu3::proto::SimpleQuantity* daily_amount_;
  ::google::fhir::stu3::proto::SimpleQuantity* quantity_;
  ::google::fhir::stu3::proto::String* description_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreCareplan_Activity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreCareplan.Activity) */ {
 public:
  UsCoreCareplan_Activity();
  virtual ~UsCoreCareplan_Activity();

  UsCoreCareplan_Activity(const UsCoreCareplan_Activity& from);

  inline UsCoreCareplan_Activity& operator=(const UsCoreCareplan_Activity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreCareplan_Activity(UsCoreCareplan_Activity&& from) noexcept
    : UsCoreCareplan_Activity() {
    *this = ::std::move(from);
  }

  inline UsCoreCareplan_Activity& operator=(UsCoreCareplan_Activity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreCareplan_Activity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreCareplan_Activity* internal_default_instance() {
    return reinterpret_cast<const UsCoreCareplan_Activity*>(
               &_UsCoreCareplan_Activity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(UsCoreCareplan_Activity* other);
  friend void swap(UsCoreCareplan_Activity& a, UsCoreCareplan_Activity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreCareplan_Activity* New() const final {
    return CreateMaybeMessage<UsCoreCareplan_Activity>(NULL);
  }

  UsCoreCareplan_Activity* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreCareplan_Activity>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreCareplan_Activity& from);
  void MergeFrom(const UsCoreCareplan_Activity& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreCareplan_Activity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreCareplan_Activity_Detail Detail;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept outcome_codeable_concept = 4;
  int outcome_codeable_concept_size() const;
  void clear_outcome_codeable_concept();
  static const int kOutcomeCodeableConceptFieldNumber = 4;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_outcome_codeable_concept(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_outcome_codeable_concept();
  const ::google::fhir::stu3::proto::CodeableConcept& outcome_codeable_concept(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_outcome_codeable_concept();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      outcome_codeable_concept() const;

  // repeated .google.fhir.stu3.proto.Reference outcome_reference = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  int outcome_reference_size() const;
  void clear_outcome_reference();
  static const int kOutcomeReferenceFieldNumber = 5;
  ::google::fhir::stu3::proto::Reference* mutable_outcome_reference(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_outcome_reference();
  const ::google::fhir::stu3::proto::Reference& outcome_reference(int index) const;
  ::google::fhir::stu3::proto::Reference* add_outcome_reference();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      outcome_reference() const;

  // repeated .google.fhir.stu3.proto.Annotation progress = 6;
  int progress_size() const;
  void clear_progress();
  static const int kProgressFieldNumber = 6;
  ::google::fhir::stu3::proto::Annotation* mutable_progress(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
      mutable_progress();
  const ::google::fhir::stu3::proto::Annotation& progress(int index) const;
  ::google::fhir::stu3::proto::Annotation* add_progress();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
      progress() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.Reference reference = 7 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Appointment", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CommunicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Task", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/VisionPrescription", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RequestGroup"];
  bool has_reference() const;
  void clear_reference();
  static const int kReferenceFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_reference() const;
  public:
  const ::google::fhir::stu3::proto::Reference& reference() const;
  ::google::fhir::stu3::proto::Reference* release_reference();
  ::google::fhir::stu3::proto::Reference* mutable_reference();
  void set_allocated_reference(::google::fhir::stu3::proto::Reference* reference);

  // .google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail detail = 8;
  bool has_detail() const;
  void clear_detail();
  static const int kDetailFieldNumber = 8;
  private:
  const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail& _internal_detail() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail& detail() const;
  ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail* release_detail();
  ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail* mutable_detail();
  void set_allocated_detail(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail* detail);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreCareplan.Activity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > outcome_codeable_concept_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > outcome_reference_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation > progress_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::Reference* reference_;
  ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail* detail_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreCareplan : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreCareplan) */ {
 public:
  UsCoreCareplan();
  virtual ~UsCoreCareplan();

  UsCoreCareplan(const UsCoreCareplan& from);

  inline UsCoreCareplan& operator=(const UsCoreCareplan& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreCareplan(UsCoreCareplan&& from) noexcept
    : UsCoreCareplan() {
    *this = ::std::move(from);
  }

  inline UsCoreCareplan& operator=(UsCoreCareplan&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreCareplan& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreCareplan* internal_default_instance() {
    return reinterpret_cast<const UsCoreCareplan*>(
               &_UsCoreCareplan_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(UsCoreCareplan* other);
  friend void swap(UsCoreCareplan& a, UsCoreCareplan& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreCareplan* New() const final {
    return CreateMaybeMessage<UsCoreCareplan>(NULL);
  }

  UsCoreCareplan* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreCareplan>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreCareplan& from);
  void MergeFrom(const UsCoreCareplan& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreCareplan* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreCareplan_Activity Activity;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  int contained_size() const;
  void clear_contained();
  static const int kContainedFieldNumber = 6;
  ::google::fhir::stu3::proto::ContainedResource* mutable_contained(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
      mutable_contained();
  const ::google::fhir::stu3::proto::ContainedResource& contained(int index) const;
  ::google::fhir::stu3::proto::ContainedResource* add_contained();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
      contained() const;

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 8;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  int identifier_size() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 9;
  ::google::fhir::stu3::proto::Identifier* mutable_identifier(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
      mutable_identifier();
  const ::google::fhir::stu3::proto::Identifier& identifier(int index) const;
  ::google::fhir::stu3::proto::Identifier* add_identifier();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
      identifier() const;

  // repeated .google.fhir.stu3.proto.Reference definition = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Questionnaire"];
  int definition_size() const;
  void clear_definition();
  static const int kDefinitionFieldNumber = 10;
  ::google::fhir::stu3::proto::Reference* mutable_definition(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_definition();
  const ::google::fhir::stu3::proto::Reference& definition(int index) const;
  ::google::fhir::stu3::proto::Reference* add_definition();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      definition() const;

  // repeated .google.fhir.stu3.proto.Reference based_on = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan"];
  int based_on_size() const;
  void clear_based_on();
  static const int kBasedOnFieldNumber = 11;
  ::google::fhir::stu3::proto::Reference* mutable_based_on(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_based_on();
  const ::google::fhir::stu3::proto::Reference& based_on(int index) const;
  ::google::fhir::stu3::proto::Reference* add_based_on();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      based_on() const;

  // repeated .google.fhir.stu3.proto.Reference replaces = 12 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan"];
  int replaces_size() const;
  void clear_replaces();
  static const int kReplacesFieldNumber = 12;
  ::google::fhir::stu3::proto::Reference* mutable_replaces(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_replaces();
  const ::google::fhir::stu3::proto::Reference& replaces(int index) const;
  ::google::fhir::stu3::proto::Reference* add_replaces();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      replaces() const;

  // repeated .google.fhir.stu3.proto.Reference part_of = 13 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan"];
  int part_of_size() const;
  void clear_part_of();
  static const int kPartOfFieldNumber = 13;
  ::google::fhir::stu3::proto::Reference* mutable_part_of(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_part_of();
  const ::google::fhir::stu3::proto::Reference& part_of(int index) const;
  ::google::fhir::stu3::proto::Reference* add_part_of();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      part_of() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  int category_size() const;
  void clear_category();
  static const int kCategoryFieldNumber = 16;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_category(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_category();
  const ::google::fhir::stu3::proto::CodeableConcept& category(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_category();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      category() const;

  // repeated .google.fhir.stu3.proto.Reference author = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CareTeam"];
  int author_size() const;
  void clear_author();
  static const int kAuthorFieldNumber = 22;
  ::google::fhir::stu3::proto::Reference* mutable_author(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_author();
  const ::google::fhir::stu3::proto::Reference& author(int index) const;
  ::google::fhir::stu3::proto::Reference* add_author();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      author() const;

  // repeated .google.fhir.stu3.proto.Reference care_team = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CareTeam"];
  int care_team_size() const;
  void clear_care_team();
  static const int kCareTeamFieldNumber = 23;
  ::google::fhir::stu3::proto::Reference* mutable_care_team(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_care_team();
  const ::google::fhir::stu3::proto::Reference& care_team(int index) const;
  ::google::fhir::stu3::proto::Reference* add_care_team();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      care_team() const;

  // repeated .google.fhir.stu3.proto.Reference addresses = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
  int addresses_size() const;
  void clear_addresses();
  static const int kAddressesFieldNumber = 24;
  ::google::fhir::stu3::proto::Reference* mutable_addresses(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_addresses();
  const ::google::fhir::stu3::proto::Reference& addresses(int index) const;
  ::google::fhir::stu3::proto::Reference* add_addresses();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      addresses() const;

  // repeated .google.fhir.stu3.proto.Reference supporting_info = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  int supporting_info_size() const;
  void clear_supporting_info();
  static const int kSupportingInfoFieldNumber = 25;
  ::google::fhir::stu3::proto::Reference* mutable_supporting_info(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_supporting_info();
  const ::google::fhir::stu3::proto::Reference& supporting_info(int index) const;
  ::google::fhir::stu3::proto::Reference* add_supporting_info();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      supporting_info() const;

  // repeated .google.fhir.stu3.proto.Reference goal = 26 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Goal"];
  int goal_size() const;
  void clear_goal();
  static const int kGoalFieldNumber = 26;
  ::google::fhir::stu3::proto::Reference* mutable_goal(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_goal();
  const ::google::fhir::stu3::proto::Reference& goal(int index) const;
  ::google::fhir::stu3::proto::Reference* add_goal();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      goal() const;

  // repeated .google.fhir.stu3.uscore.UsCoreCareplan.Activity activity = 27;
  int activity_size() const;
  void clear_activity();
  static const int kActivityFieldNumber = 27;
  ::google::fhir::stu3::uscore::UsCoreCareplan_Activity* mutable_activity(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreCareplan_Activity >*
      mutable_activity();
  const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity& activity(int index) const;
  ::google::fhir::stu3::uscore::UsCoreCareplan_Activity* add_activity();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreCareplan_Activity >&
      activity() const;

  // repeated .google.fhir.stu3.proto.Annotation note = 28;
  int note_size() const;
  void clear_note();
  static const int kNoteFieldNumber = 28;
  ::google::fhir::stu3::proto::Annotation* mutable_note(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
      mutable_note();
  const ::google::fhir::stu3::proto::Annotation& note(int index) const;
  ::google::fhir::stu3::proto::Annotation* add_note();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
      note() const;

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // .google.fhir.stu3.proto.Narrative text = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Narrative& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::Narrative& text() const;
  ::google::fhir::stu3::proto::Narrative* release_text();
  ::google::fhir::stu3::proto::Narrative* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::Narrative* text);

  // .google.fhir.stu3.proto.CarePlanStatusCode status = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::CarePlanStatusCode& _internal_status() const;
  public:
  const ::google::fhir::stu3::proto::CarePlanStatusCode& status() const;
  ::google::fhir::stu3::proto::CarePlanStatusCode* release_status();
  ::google::fhir::stu3::proto::CarePlanStatusCode* mutable_status();
  void set_allocated_status(::google::fhir::stu3::proto::CarePlanStatusCode* status);

  // .google.fhir.stu3.proto.CarePlanIntentCode intent = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_intent() const;
  void clear_intent();
  static const int kIntentFieldNumber = 15;
  private:
  const ::google::fhir::stu3::proto::CarePlanIntentCode& _internal_intent() const;
  public:
  const ::google::fhir::stu3::proto::CarePlanIntentCode& intent() const;
  ::google::fhir::stu3::proto::CarePlanIntentCode* release_intent();
  ::google::fhir::stu3::proto::CarePlanIntentCode* mutable_intent();
  void set_allocated_intent(::google::fhir::stu3::proto::CarePlanIntentCode* intent);

  // .google.fhir.stu3.proto.String title = 17;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 17;
  private:
  const ::google::fhir::stu3::proto::String& _internal_title() const;
  public:
  const ::google::fhir::stu3::proto::String& title() const;
  ::google::fhir::stu3::proto::String* release_title();
  ::google::fhir::stu3::proto::String* mutable_title();
  void set_allocated_title(::google::fhir::stu3::proto::String* title);

  // .google.fhir.stu3.proto.String description = 18;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 18;
  private:
  const ::google::fhir::stu3::proto::String& _internal_description() const;
  public:
  const ::google::fhir::stu3::proto::String& description() const;
  ::google::fhir::stu3::proto::String* release_description();
  ::google::fhir::stu3::proto::String* mutable_description();
  void set_allocated_description(::google::fhir::stu3::proto::String* description);

  // .google.fhir.stu3.proto.Reference subject = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  bool has_subject() const;
  void clear_subject();
  static const int kSubjectFieldNumber = 19;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_subject() const;
  public:
  const ::google::fhir::stu3::proto::Reference& subject() const;
  ::google::fhir::stu3::proto::Reference* release_subject();
  ::google::fhir::stu3::proto::Reference* mutable_subject();
  void set_allocated_subject(::google::fhir::stu3::proto::Reference* subject);

  // .google.fhir.stu3.proto.Reference context = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 20;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_context() const;
  public:
  const ::google::fhir::stu3::proto::Reference& context() const;
  ::google::fhir::stu3::proto::Reference* release_context();
  ::google::fhir::stu3::proto::Reference* mutable_context();
  void set_allocated_context(::google::fhir::stu3::proto::Reference* context);

  // .google.fhir.stu3.proto.Period period = 21;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 21;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreCareplan)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource > contained_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier > identifier_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > definition_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > based_on_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > replaces_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > part_of_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > category_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > author_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > care_team_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > addresses_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > supporting_info_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > goal_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreCareplan_Activity > activity_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation > note_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  ::google::fhir::stu3::proto::Narrative* text_;
  ::google::fhir::stu3::proto::CarePlanStatusCode* status_;
  ::google::fhir::stu3::proto::CarePlanIntentCode* intent_;
  ::google::fhir::stu3::proto::String* title_;
  ::google::fhir::stu3::proto::String* description_;
  ::google::fhir::stu3::proto::Reference* subject_;
  ::google::fhir::stu3::proto::Reference* context_;
  ::google::fhir::stu3::proto::Period* period_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreCareteam_Participant : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreCareteam.Participant) */ {
 public:
  UsCoreCareteam_Participant();
  virtual ~UsCoreCareteam_Participant();

  UsCoreCareteam_Participant(const UsCoreCareteam_Participant& from);

  inline UsCoreCareteam_Participant& operator=(const UsCoreCareteam_Participant& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreCareteam_Participant(UsCoreCareteam_Participant&& from) noexcept
    : UsCoreCareteam_Participant() {
    *this = ::std::move(from);
  }

  inline UsCoreCareteam_Participant& operator=(UsCoreCareteam_Participant&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreCareteam_Participant& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreCareteam_Participant* internal_default_instance() {
    return reinterpret_cast<const UsCoreCareteam_Participant*>(
               &_UsCoreCareteam_Participant_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(UsCoreCareteam_Participant* other);
  friend void swap(UsCoreCareteam_Participant& a, UsCoreCareteam_Participant& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreCareteam_Participant* New() const final {
    return CreateMaybeMessage<UsCoreCareteam_Participant>(NULL);
  }

  UsCoreCareteam_Participant* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreCareteam_Participant>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreCareteam_Participant& from);
  void MergeFrom(const UsCoreCareteam_Participant& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreCareteam_Participant* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CodeableConcept role = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_role() const;
  void clear_role();
  static const int kRoleFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_role() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& role() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_role();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_role();
  void set_allocated_role(::google::fhir::stu3::proto::CodeableConcept* role);

  // .google.fhir.stu3.proto.Reference member = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  bool has_member() const;
  void clear_member();
  static const int kMemberFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_member() const;
  public:
  const ::google::fhir::stu3::proto::Reference& member() const;
  ::google::fhir::stu3::proto::Reference* release_member();
  ::google::fhir::stu3::proto::Reference* mutable_member();
  void set_allocated_member(::google::fhir::stu3::proto::Reference* member);

  // .google.fhir.stu3.proto.Reference on_behalf_of = 6 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  bool has_on_behalf_of() const;
  void clear_on_behalf_of();
  static const int kOnBehalfOfFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_on_behalf_of() const;
  public:
  const ::google::fhir::stu3::proto::Reference& on_behalf_of() const;
  ::google::fhir::stu3::proto::Reference* release_on_behalf_of();
  ::google::fhir::stu3::proto::Reference* mutable_on_behalf_of();
  void set_allocated_on_behalf_of(::google::fhir::stu3::proto::Reference* on_behalf_of);

  // .google.fhir.stu3.proto.Period period = 7;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreCareteam.Participant)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::CodeableConcept* role_;
  ::google::fhir::stu3::proto::Reference* member_;
  ::google::fhir::stu3::proto::Reference* on_behalf_of_;
  ::google::fhir::stu3::proto::Period* period_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreCareteam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreCareteam) */ {
 public:
  UsCoreCareteam();
  virtual ~UsCoreCareteam();

  UsCoreCareteam(const UsCoreCareteam& from);

  inline UsCoreCareteam& operator=(const UsCoreCareteam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreCareteam(UsCoreCareteam&& from) noexcept
    : UsCoreCareteam() {
    *this = ::std::move(from);
  }

  inline UsCoreCareteam& operator=(UsCoreCareteam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreCareteam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreCareteam* internal_default_instance() {
    return reinterpret_cast<const UsCoreCareteam*>(
               &_UsCoreCareteam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(UsCoreCareteam* other);
  friend void swap(UsCoreCareteam& a, UsCoreCareteam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreCareteam* New() const final {
    return CreateMaybeMessage<UsCoreCareteam>(NULL);
  }

  UsCoreCareteam* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreCareteam>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreCareteam& from);
  void MergeFrom(const UsCoreCareteam& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreCareteam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreCareteam_Participant Participant;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  int contained_size() const;
  void clear_contained();
  static const int kContainedFieldNumber = 6;
  ::google::fhir::stu3::proto::ContainedResource* mutable_contained(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
      mutable_contained();
  const ::google::fhir::stu3::proto::ContainedResource& contained(int index) const;
  ::google::fhir::stu3::proto::ContainedResource* add_contained();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
      contained() const;

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 8;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  int identifier_size() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 9;
  ::google::fhir::stu3::proto::Identifier* mutable_identifier(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
      mutable_identifier();
  const ::google::fhir::stu3::proto::Identifier& identifier(int index) const;
  ::google::fhir::stu3::proto::Identifier* add_identifier();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
      identifier() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 11;
  int category_size() const;
  void clear_category();
  static const int kCategoryFieldNumber = 11;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_category(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_category();
  const ::google::fhir::stu3::proto::CodeableConcept& category(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_category();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      category() const;

  // repeated .google.fhir.stu3.uscore.UsCoreCareteam.Participant participant = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  int participant_size() const;
  void clear_participant();
  static const int kParticipantFieldNumber = 16;
  ::google::fhir::stu3::uscore::UsCoreCareteam_Participant* mutable_participant(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreCareteam_Participant >*
      mutable_participant();
  const ::google::fhir::stu3::uscore::UsCoreCareteam_Participant& participant(int index) const;
  ::google::fhir::stu3::uscore::UsCoreCareteam_Participant* add_participant();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreCareteam_Participant >&
      participant() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 17;
  int reason_code_size() const;
  void clear_reason_code();
  static const int kReasonCodeFieldNumber = 17;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_reason_code(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_reason_code();
  const ::google::fhir::stu3::proto::CodeableConcept& reason_code(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_reason_code();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      reason_code() const;

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
  int reason_reference_size() const;
  void clear_reason_reference();
  static const int kReasonReferenceFieldNumber = 18;
  ::google::fhir::stu3::proto::Reference* mutable_reason_reference(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_reason_reference();
  const ::google::fhir::stu3::proto::Reference& reason_reference(int index) const;
  ::google::fhir::stu3::proto::Reference* add_reason_reference();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      reason_reference() const;

  // repeated .google.fhir.stu3.proto.Reference managing_organization = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  int managing_organization_size() const;
  void clear_managing_organization();
  static const int kManagingOrganizationFieldNumber = 19;
  ::google::fhir::stu3::proto::Reference* mutable_managing_organization(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_managing_organization();
  const ::google::fhir::stu3::proto::Reference& managing_organization(int index) const;
  ::google::fhir::stu3::proto::Reference* add_managing_organization();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      managing_organization() const;

  // repeated .google.fhir.stu3.proto.Annotation note = 20;
  int note_size() const;
  void clear_note();
  static const int kNoteFieldNumber = 20;
  ::google::fhir::stu3::proto::Annotation* mutable_note(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
      mutable_note();
  const ::google::fhir::stu3::proto::Annotation& note(int index) const;
  ::google::fhir::stu3::proto::Annotation* add_note();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
      note() const;

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // .google.fhir.stu3.proto.Narrative text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Narrative& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::Narrative& text() const;
  ::google::fhir::stu3::proto::Narrative* release_text();
  ::google::fhir::stu3::proto::Narrative* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::Narrative* text);

  // .google.fhir.stu3.proto.CareTeamStatusCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::CareTeamStatusCode& _internal_status() const;
  public:
  const ::google::fhir::stu3::proto::CareTeamStatusCode& status() const;
  ::google::fhir::stu3::proto::CareTeamStatusCode* release_status();
  ::google::fhir::stu3::proto::CareTeamStatusCode* mutable_status();
  void set_allocated_status(::google::fhir::stu3::proto::CareTeamStatusCode* status);

  // .google.fhir.stu3.proto.String name = 12;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 12;
  private:
  const ::google::fhir::stu3::proto::String& _internal_name() const;
  public:
  const ::google::fhir::stu3::proto::String& name() const;
  ::google::fhir::stu3::proto::String* release_name();
  ::google::fhir::stu3::proto::String* mutable_name();
  void set_allocated_name(::google::fhir::stu3::proto::String* name);

  // .google.fhir.stu3.proto.Reference subject = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  bool has_subject() const;
  void clear_subject();
  static const int kSubjectFieldNumber = 13;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_subject() const;
  public:
  const ::google::fhir::stu3::proto::Reference& subject() const;
  ::google::fhir::stu3::proto::Reference* release_subject();
  ::google::fhir::stu3::proto::Reference* mutable_subject();
  void set_allocated_subject(::google::fhir::stu3::proto::Reference* subject);

  // .google.fhir.stu3.proto.Reference context = 14 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_context() const;
  public:
  const ::google::fhir::stu3::proto::Reference& context() const;
  ::google::fhir::stu3::proto::Reference* release_context();
  ::google::fhir::stu3::proto::Reference* mutable_context();
  void set_allocated_context(::google::fhir::stu3::proto::Reference* context);

  // .google.fhir.stu3.proto.Period period = 15;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 15;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreCareteam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource > contained_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier > identifier_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > category_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreCareteam_Participant > participant_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > reason_code_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > reason_reference_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > managing_organization_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation > note_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  ::google::fhir::stu3::proto::Narrative* text_;
  ::google::fhir::stu3::proto::CareTeamStatusCode* status_;
  ::google::fhir::stu3::proto::String* name_;
  ::google::fhir::stu3::proto::Reference* subject_;
  ::google::fhir::stu3::proto::Reference* context_;
  ::google::fhir::stu3::proto::Period* period_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreCondition_Onset : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreCondition.Onset) */ {
 public:
  UsCoreCondition_Onset();
  virtual ~UsCoreCondition_Onset();

  UsCoreCondition_Onset(const UsCoreCondition_Onset& from);

  inline UsCoreCondition_Onset& operator=(const UsCoreCondition_Onset& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreCondition_Onset(UsCoreCondition_Onset&& from) noexcept
    : UsCoreCondition_Onset() {
    *this = ::std::move(from);
  }

  inline UsCoreCondition_Onset& operator=(UsCoreCondition_Onset&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreCondition_Onset& default_instance();

  enum OnsetCase {
    kDateTime = 1,
    kAge = 2,
    kPeriod = 3,
    kRange = 4,
    kStringValue = 5,
    ONSET_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreCondition_Onset* internal_default_instance() {
    return reinterpret_cast<const UsCoreCondition_Onset*>(
               &_UsCoreCondition_Onset_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(UsCoreCondition_Onset* other);
  friend void swap(UsCoreCondition_Onset& a, UsCoreCondition_Onset& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreCondition_Onset* New() const final {
    return CreateMaybeMessage<UsCoreCondition_Onset>(NULL);
  }

  UsCoreCondition_Onset* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreCondition_Onset>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreCondition_Onset& from);
  void MergeFrom(const UsCoreCondition_Onset& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreCondition_Onset* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  // .google.fhir.stu3.proto.Age age = 2;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Age& _internal_age() const;
  public:
  const ::google::fhir::stu3::proto::Age& age() const;
  ::google::fhir::stu3::proto::Age* release_age();
  ::google::fhir::stu3::proto::Age* mutable_age();
  void set_allocated_age(::google::fhir::stu3::proto::Age* age);

  // .google.fhir.stu3.proto.Period period = 3;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  // .google.fhir.stu3.proto.Range range = 4;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Range& _internal_range() const;
  public:
  const ::google::fhir::stu3::proto::Range& range() const;
  ::google::fhir::stu3::proto::Range* release_range();
  ::google::fhir::stu3::proto::Range* mutable_range();
  void set_allocated_range(::google::fhir::stu3::proto::Range* range);

  // .google.fhir.stu3.proto.String string_value = 5[json_name = "string"];
  bool has_string_value() const;
  void clear_string_value();
  static const int kStringValueFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::String& _internal_string_value() const;
  public:
  const ::google::fhir::stu3::proto::String& string_value() const;
  ::google::fhir::stu3::proto::String* release_string_value();
  ::google::fhir::stu3::proto::String* mutable_string_value();
  void set_allocated_string_value(::google::fhir::stu3::proto::String* string_value);

  void clear_onset();
  OnsetCase onset_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreCondition.Onset)
 private:
  void set_has_date_time();
  void set_has_age();
  void set_has_period();
  void set_has_range();
  void set_has_string_value();

  inline bool has_onset() const;
  inline void clear_has_onset();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union OnsetUnion {
    OnsetUnion() {}
    ::google::fhir::stu3::proto::DateTime* date_time_;
    ::google::fhir::stu3::proto::Age* age_;
    ::google::fhir::stu3::proto::Period* period_;
    ::google::fhir::stu3::proto::Range* range_;
    ::google::fhir::stu3::proto::String* string_value_;
  } onset_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreCondition_Abatement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreCondition.Abatement) */ {
 public:
  UsCoreCondition_Abatement();
  virtual ~UsCoreCondition_Abatement();

  UsCoreCondition_Abatement(const UsCoreCondition_Abatement& from);

  inline UsCoreCondition_Abatement& operator=(const UsCoreCondition_Abatement& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreCondition_Abatement(UsCoreCondition_Abatement&& from) noexcept
    : UsCoreCondition_Abatement() {
    *this = ::std::move(from);
  }

  inline UsCoreCondition_Abatement& operator=(UsCoreCondition_Abatement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreCondition_Abatement& default_instance();

  enum AbatementCase {
    kDateTime = 1,
    kAge = 2,
    kBoolean = 3,
    kPeriod = 4,
    kRange = 5,
    kStringValue = 6,
    ABATEMENT_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreCondition_Abatement* internal_default_instance() {
    return reinterpret_cast<const UsCoreCondition_Abatement*>(
               &_UsCoreCondition_Abatement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(UsCoreCondition_Abatement* other);
  friend void swap(UsCoreCondition_Abatement& a, UsCoreCondition_Abatement& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreCondition_Abatement* New() const final {
    return CreateMaybeMessage<UsCoreCondition_Abatement>(NULL);
  }

  UsCoreCondition_Abatement* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreCondition_Abatement>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreCondition_Abatement& from);
  void MergeFrom(const UsCoreCondition_Abatement& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreCondition_Abatement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  // .google.fhir.stu3.proto.Age age = 2;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Age& _internal_age() const;
  public:
  const ::google::fhir::stu3::proto::Age& age() const;
  ::google::fhir::stu3::proto::Age* release_age();
  ::google::fhir::stu3::proto::Age* mutable_age();
  void set_allocated_age(::google::fhir::stu3::proto::Age* age);

  // .google.fhir.stu3.proto.Boolean boolean = 3;
  bool has_boolean() const;
  void clear_boolean();
  static const int kBooleanFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_boolean() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& boolean() const;
  ::google::fhir::stu3::proto::Boolean* release_boolean();
  ::google::fhir::stu3::proto::Boolean* mutable_boolean();
  void set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean);

  // .google.fhir.stu3.proto.Period period = 4;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  // .google.fhir.stu3.proto.Range range = 5;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Range& _internal_range() const;
  public:
  const ::google::fhir::stu3::proto::Range& range() const;
  ::google::fhir::stu3::proto::Range* release_range();
  ::google::fhir::stu3::proto::Range* mutable_range();
  void set_allocated_range(::google::fhir::stu3::proto::Range* range);

  // .google.fhir.stu3.proto.String string_value = 6[json_name = "string"];
  bool has_string_value() const;
  void clear_string_value();
  static const int kStringValueFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::String& _internal_string_value() const;
  public:
  const ::google::fhir::stu3::proto::String& string_value() const;
  ::google::fhir::stu3::proto::String* release_string_value();
  ::google::fhir::stu3::proto::String* mutable_string_value();
  void set_allocated_string_value(::google::fhir::stu3::proto::String* string_value);

  void clear_abatement();
  AbatementCase abatement_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreCondition.Abatement)
 private:
  void set_has_date_time();
  void set_has_age();
  void set_has_boolean();
  void set_has_period();
  void set_has_range();
  void set_has_string_value();

  inline bool has_abatement() const;
  inline void clear_has_abatement();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union AbatementUnion {
    AbatementUnion() {}
    ::google::fhir::stu3::proto::DateTime* date_time_;
    ::google::fhir::stu3::proto::Age* age_;
    ::google::fhir::stu3::proto::Boolean* boolean_;
    ::google::fhir::stu3::proto::Period* period_;
    ::google::fhir::stu3::proto::Range* range_;
    ::google::fhir::stu3::proto::String* string_value_;
  } abatement_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreCondition_Stage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreCondition.Stage) */ {
 public:
  UsCoreCondition_Stage();
  virtual ~UsCoreCondition_Stage();

  UsCoreCondition_Stage(const UsCoreCondition_Stage& from);

  inline UsCoreCondition_Stage& operator=(const UsCoreCondition_Stage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreCondition_Stage(UsCoreCondition_Stage&& from) noexcept
    : UsCoreCondition_Stage() {
    *this = ::std::move(from);
  }

  inline UsCoreCondition_Stage& operator=(UsCoreCondition_Stage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreCondition_Stage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreCondition_Stage* internal_default_instance() {
    return reinterpret_cast<const UsCoreCondition_Stage*>(
               &_UsCoreCondition_Stage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(UsCoreCondition_Stage* other);
  friend void swap(UsCoreCondition_Stage& a, UsCoreCondition_Stage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreCondition_Stage* New() const final {
    return CreateMaybeMessage<UsCoreCondition_Stage>(NULL);
  }

  UsCoreCondition_Stage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreCondition_Stage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreCondition_Stage& from);
  void MergeFrom(const UsCoreCondition_Stage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreCondition_Stage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Reference assessment = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ClinicalImpression", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DiagnosticReport", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  int assessment_size() const;
  void clear_assessment();
  static const int kAssessmentFieldNumber = 5;
  ::google::fhir::stu3::proto::Reference* mutable_assessment(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_assessment();
  const ::google::fhir::stu3::proto::Reference& assessment(int index) const;
  ::google::fhir::stu3::proto::Reference* add_assessment();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      assessment() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CodeableConcept summary = 4;
  bool has_summary() const;
  void clear_summary();
  static const int kSummaryFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_summary() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& summary() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_summary();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_summary();
  void set_allocated_summary(::google::fhir::stu3::proto::CodeableConcept* summary);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreCondition.Stage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > assessment_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::CodeableConcept* summary_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreCondition_Evidence : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreCondition.Evidence) */ {
 public:
  UsCoreCondition_Evidence();
  virtual ~UsCoreCondition_Evidence();

  UsCoreCondition_Evidence(const UsCoreCondition_Evidence& from);

  inline UsCoreCondition_Evidence& operator=(const UsCoreCondition_Evidence& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreCondition_Evidence(UsCoreCondition_Evidence&& from) noexcept
    : UsCoreCondition_Evidence() {
    *this = ::std::move(from);
  }

  inline UsCoreCondition_Evidence& operator=(UsCoreCondition_Evidence&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreCondition_Evidence& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreCondition_Evidence* internal_default_instance() {
    return reinterpret_cast<const UsCoreCondition_Evidence*>(
               &_UsCoreCondition_Evidence_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(UsCoreCondition_Evidence* other);
  friend void swap(UsCoreCondition_Evidence& a, UsCoreCondition_Evidence& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreCondition_Evidence* New() const final {
    return CreateMaybeMessage<UsCoreCondition_Evidence>(NULL);
  }

  UsCoreCondition_Evidence* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreCondition_Evidence>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreCondition_Evidence& from);
  void MergeFrom(const UsCoreCondition_Evidence& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreCondition_Evidence* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept code = 4;
  int code_size() const;
  void clear_code();
  static const int kCodeFieldNumber = 4;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_code(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_code();
  const ::google::fhir::stu3::proto::CodeableConcept& code(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_code();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      code() const;

  // repeated .google.fhir.stu3.proto.Reference detail = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  int detail_size() const;
  void clear_detail();
  static const int kDetailFieldNumber = 5;
  ::google::fhir::stu3::proto::Reference* mutable_detail(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_detail();
  const ::google::fhir::stu3::proto::Reference& detail(int index) const;
  ::google::fhir::stu3::proto::Reference* add_detail();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      detail() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreCondition.Evidence)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > code_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > detail_;
  ::google::fhir::stu3::proto::String* id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreCondition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreCondition) */ {
 public:
  UsCoreCondition();
  virtual ~UsCoreCondition();

  UsCoreCondition(const UsCoreCondition& from);

  inline UsCoreCondition& operator=(const UsCoreCondition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreCondition(UsCoreCondition&& from) noexcept
    : UsCoreCondition() {
    *this = ::std::move(from);
  }

  inline UsCoreCondition& operator=(UsCoreCondition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreCondition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreCondition* internal_default_instance() {
    return reinterpret_cast<const UsCoreCondition*>(
               &_UsCoreCondition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(UsCoreCondition* other);
  friend void swap(UsCoreCondition& a, UsCoreCondition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreCondition* New() const final {
    return CreateMaybeMessage<UsCoreCondition>(NULL);
  }

  UsCoreCondition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreCondition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreCondition& from);
  void MergeFrom(const UsCoreCondition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreCondition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreCondition_Onset Onset;
  typedef UsCoreCondition_Abatement Abatement;
  typedef UsCoreCondition_Stage Stage;
  typedef UsCoreCondition_Evidence Evidence;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  int contained_size() const;
  void clear_contained();
  static const int kContainedFieldNumber = 6;
  ::google::fhir::stu3::proto::ContainedResource* mutable_contained(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
      mutable_contained();
  const ::google::fhir::stu3::proto::ContainedResource& contained(int index) const;
  ::google::fhir::stu3::proto::ContainedResource* add_contained();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
      contained() const;

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 8;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  int identifier_size() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 9;
  ::google::fhir::stu3::proto::Identifier* mutable_identifier(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
      mutable_identifier();
  const ::google::fhir::stu3::proto::Identifier& identifier(int index) const;
  ::google::fhir::stu3::proto::Identifier* add_identifier();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
      identifier() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  int category_size() const;
  void clear_category();
  static const int kCategoryFieldNumber = 12;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_category(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_category();
  const ::google::fhir::stu3::proto::CodeableConcept& category(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_category();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      category() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept body_site = 15;
  int body_site_size() const;
  void clear_body_site();
  static const int kBodySiteFieldNumber = 15;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_body_site(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_body_site();
  const ::google::fhir::stu3::proto::CodeableConcept& body_site(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_body_site();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      body_site() const;

  // repeated .google.fhir.stu3.uscore.UsCoreCondition.Evidence evidence = 23;
  int evidence_size() const;
  void clear_evidence();
  static const int kEvidenceFieldNumber = 23;
  ::google::fhir::stu3::uscore::UsCoreCondition_Evidence* mutable_evidence(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreCondition_Evidence >*
      mutable_evidence();
  const ::google::fhir::stu3::uscore::UsCoreCondition_Evidence& evidence(int index) const;
  ::google::fhir::stu3::uscore::UsCoreCondition_Evidence* add_evidence();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreCondition_Evidence >&
      evidence() const;

  // repeated .google.fhir.stu3.proto.Annotation note = 24;
  int note_size() const;
  void clear_note();
  static const int kNoteFieldNumber = 24;
  ::google::fhir::stu3::proto::Annotation* mutable_note(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
      mutable_note();
  const ::google::fhir::stu3::proto::Annotation& note(int index) const;
  ::google::fhir::stu3::proto::Annotation* add_note();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
      note() const;

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // .google.fhir.stu3.proto.Narrative text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Narrative& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::Narrative& text() const;
  ::google::fhir::stu3::proto::Narrative* release_text();
  ::google::fhir::stu3::proto::Narrative* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::Narrative* text);

  // .google.fhir.stu3.proto.ConditionClinicalStatusCodesCode clinical_status = 10;
  bool has_clinical_status() const;
  void clear_clinical_status();
  static const int kClinicalStatusFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode& _internal_clinical_status() const;
  public:
  const ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode& clinical_status() const;
  ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode* release_clinical_status();
  ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode* mutable_clinical_status();
  void set_allocated_clinical_status(::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode* clinical_status);

  // .google.fhir.stu3.proto.ConditionVerificationStatusCode verification_status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_verification_status() const;
  void clear_verification_status();
  static const int kVerificationStatusFieldNumber = 11;
  private:
  const ::google::fhir::stu3::proto::ConditionVerificationStatusCode& _internal_verification_status() const;
  public:
  const ::google::fhir::stu3::proto::ConditionVerificationStatusCode& verification_status() const;
  ::google::fhir::stu3::proto::ConditionVerificationStatusCode* release_verification_status();
  ::google::fhir::stu3::proto::ConditionVerificationStatusCode* mutable_verification_status();
  void set_allocated_verification_status(::google::fhir::stu3::proto::ConditionVerificationStatusCode* verification_status);

  // .google.fhir.stu3.proto.CodeableConcept severity = 13;
  bool has_severity() const;
  void clear_severity();
  static const int kSeverityFieldNumber = 13;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_severity() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& severity() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_severity();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_severity();
  void set_allocated_severity(::google::fhir::stu3::proto::CodeableConcept* severity);

  // .google.fhir.stu3.proto.CodeableConcept code = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_code() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& code() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_code();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_code();
  void set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code);

  // .google.fhir.stu3.proto.Reference subject = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  bool has_subject() const;
  void clear_subject();
  static const int kSubjectFieldNumber = 16;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_subject() const;
  public:
  const ::google::fhir::stu3::proto::Reference& subject() const;
  ::google::fhir::stu3::proto::Reference* release_subject();
  ::google::fhir::stu3::proto::Reference* mutable_subject();
  void set_allocated_subject(::google::fhir::stu3::proto::Reference* subject);

  // .google.fhir.stu3.proto.Reference context = 17 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 17;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_context() const;
  public:
  const ::google::fhir::stu3::proto::Reference& context() const;
  ::google::fhir::stu3::proto::Reference* release_context();
  ::google::fhir::stu3::proto::Reference* mutable_context();
  void set_allocated_context(::google::fhir::stu3::proto::Reference* context);

  // .google.fhir.stu3.uscore.UsCoreCondition.Onset onset = 18 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_onset() const;
  void clear_onset();
  static const int kOnsetFieldNumber = 18;
  private:
  const ::google::fhir::stu3::uscore::UsCoreCondition_Onset& _internal_onset() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreCondition_Onset& onset() const;
  ::google::fhir::stu3::uscore::UsCoreCondition_Onset* release_onset();
  ::google::fhir::stu3::uscore::UsCoreCondition_Onset* mutable_onset();
  void set_allocated_onset(::google::fhir::stu3::uscore::UsCoreCondition_Onset* onset);

  // .google.fhir.stu3.uscore.UsCoreCondition.Abatement abatement = 19 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_abatement() const;
  void clear_abatement();
  static const int kAbatementFieldNumber = 19;
  private:
  const ::google::fhir::stu3::uscore::UsCoreCondition_Abatement& _internal_abatement() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreCondition_Abatement& abatement() const;
  ::google::fhir::stu3::uscore::UsCoreCondition_Abatement* release_abatement();
  ::google::fhir::stu3::uscore::UsCoreCondition_Abatement* mutable_abatement();
  void set_allocated_abatement(::google::fhir::stu3::uscore::UsCoreCondition_Abatement* abatement);

  // .google.fhir.stu3.proto.DateTime asserted_date = 20;
  bool has_asserted_date() const;
  void clear_asserted_date();
  static const int kAssertedDateFieldNumber = 20;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_asserted_date() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& asserted_date() const;
  ::google::fhir::stu3::proto::DateTime* release_asserted_date();
  ::google::fhir::stu3::proto::DateTime* mutable_asserted_date();
  void set_allocated_asserted_date(::google::fhir::stu3::proto::DateTime* asserted_date);

  // .google.fhir.stu3.proto.Reference asserter = 21 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  bool has_asserter() const;
  void clear_asserter();
  static const int kAsserterFieldNumber = 21;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_asserter() const;
  public:
  const ::google::fhir::stu3::proto::Reference& asserter() const;
  ::google::fhir::stu3::proto::Reference* release_asserter();
  ::google::fhir::stu3::proto::Reference* mutable_asserter();
  void set_allocated_asserter(::google::fhir::stu3::proto::Reference* asserter);

  // .google.fhir.stu3.uscore.UsCoreCondition.Stage stage = 22;
  bool has_stage() const;
  void clear_stage();
  static const int kStageFieldNumber = 22;
  private:
  const ::google::fhir::stu3::uscore::UsCoreCondition_Stage& _internal_stage() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreCondition_Stage& stage() const;
  ::google::fhir::stu3::uscore::UsCoreCondition_Stage* release_stage();
  ::google::fhir::stu3::uscore::UsCoreCondition_Stage* mutable_stage();
  void set_allocated_stage(::google::fhir::stu3::uscore::UsCoreCondition_Stage* stage);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreCondition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource > contained_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier > identifier_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > category_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > body_site_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreCondition_Evidence > evidence_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation > note_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  ::google::fhir::stu3::proto::Narrative* text_;
  ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode* clinical_status_;
  ::google::fhir::stu3::proto::ConditionVerificationStatusCode* verification_status_;
  ::google::fhir::stu3::proto::CodeableConcept* severity_;
  ::google::fhir::stu3::proto::CodeableConcept* code_;
  ::google::fhir::stu3::proto::Reference* subject_;
  ::google::fhir::stu3::proto::Reference* context_;
  ::google::fhir::stu3::uscore::UsCoreCondition_Onset* onset_;
  ::google::fhir::stu3::uscore::UsCoreCondition_Abatement* abatement_;
  ::google::fhir::stu3::proto::DateTime* asserted_date_;
  ::google::fhir::stu3::proto::Reference* asserter_;
  ::google::fhir::stu3::uscore::UsCoreCondition_Stage* stage_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreDevice_Udi : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreDevice.Udi) */ {
 public:
  UsCoreDevice_Udi();
  virtual ~UsCoreDevice_Udi();

  UsCoreDevice_Udi(const UsCoreDevice_Udi& from);

  inline UsCoreDevice_Udi& operator=(const UsCoreDevice_Udi& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreDevice_Udi(UsCoreDevice_Udi&& from) noexcept
    : UsCoreDevice_Udi() {
    *this = ::std::move(from);
  }

  inline UsCoreDevice_Udi& operator=(UsCoreDevice_Udi&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreDevice_Udi& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreDevice_Udi* internal_default_instance() {
    return reinterpret_cast<const UsCoreDevice_Udi*>(
               &_UsCoreDevice_Udi_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(UsCoreDevice_Udi* other);
  friend void swap(UsCoreDevice_Udi& a, UsCoreDevice_Udi& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreDevice_Udi* New() const final {
    return CreateMaybeMessage<UsCoreDevice_Udi>(NULL);
  }

  UsCoreDevice_Udi* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreDevice_Udi>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreDevice_Udi& from);
  void MergeFrom(const UsCoreDevice_Udi& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreDevice_Udi* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.String device_identifier = 4;
  bool has_device_identifier() const;
  void clear_device_identifier();
  static const int kDeviceIdentifierFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::String& _internal_device_identifier() const;
  public:
  const ::google::fhir::stu3::proto::String& device_identifier() const;
  ::google::fhir::stu3::proto::String* release_device_identifier();
  ::google::fhir::stu3::proto::String* mutable_device_identifier();
  void set_allocated_device_identifier(::google::fhir::stu3::proto::String* device_identifier);

  // .google.fhir.stu3.proto.String name = 5;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::String& _internal_name() const;
  public:
  const ::google::fhir::stu3::proto::String& name() const;
  ::google::fhir::stu3::proto::String* release_name();
  ::google::fhir::stu3::proto::String* mutable_name();
  void set_allocated_name(::google::fhir::stu3::proto::String* name);

  // .google.fhir.stu3.proto.Uri jurisdiction = 6;
  bool has_jurisdiction() const;
  void clear_jurisdiction();
  static const int kJurisdictionFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_jurisdiction() const;
  public:
  const ::google::fhir::stu3::proto::Uri& jurisdiction() const;
  ::google::fhir::stu3::proto::Uri* release_jurisdiction();
  ::google::fhir::stu3::proto::Uri* mutable_jurisdiction();
  void set_allocated_jurisdiction(::google::fhir::stu3::proto::Uri* jurisdiction);

  // .google.fhir.stu3.proto.String carrier_h_r_f = 7;
  bool has_carrier_h_r_f() const;
  void clear_carrier_h_r_f();
  static const int kCarrierHRFFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::String& _internal_carrier_h_r_f() const;
  public:
  const ::google::fhir::stu3::proto::String& carrier_h_r_f() const;
  ::google::fhir::stu3::proto::String* release_carrier_h_r_f();
  ::google::fhir::stu3::proto::String* mutable_carrier_h_r_f();
  void set_allocated_carrier_h_r_f(::google::fhir::stu3::proto::String* carrier_h_r_f);

  // .google.fhir.stu3.proto.Base64Binary carrier_a_i_d_c = 8;
  bool has_carrier_a_i_d_c() const;
  void clear_carrier_a_i_d_c();
  static const int kCarrierAIDCFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::Base64Binary& _internal_carrier_a_i_d_c() const;
  public:
  const ::google::fhir::stu3::proto::Base64Binary& carrier_a_i_d_c() const;
  ::google::fhir::stu3::proto::Base64Binary* release_carrier_a_i_d_c();
  ::google::fhir::stu3::proto::Base64Binary* mutable_carrier_a_i_d_c();
  void set_allocated_carrier_a_i_d_c(::google::fhir::stu3::proto::Base64Binary* carrier_a_i_d_c);

  // .google.fhir.stu3.proto.Uri issuer = 9;
  bool has_issuer() const;
  void clear_issuer();
  static const int kIssuerFieldNumber = 9;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_issuer() const;
  public:
  const ::google::fhir::stu3::proto::Uri& issuer() const;
  ::google::fhir::stu3::proto::Uri* release_issuer();
  ::google::fhir::stu3::proto::Uri* mutable_issuer();
  void set_allocated_issuer(::google::fhir::stu3::proto::Uri* issuer);

  // .google.fhir.stu3.proto.UDIEntryTypeCode entry_type = 10;
  bool has_entry_type() const;
  void clear_entry_type();
  static const int kEntryTypeFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::UDIEntryTypeCode& _internal_entry_type() const;
  public:
  const ::google::fhir::stu3::proto::UDIEntryTypeCode& entry_type() const;
  ::google::fhir::stu3::proto::UDIEntryTypeCode* release_entry_type();
  ::google::fhir::stu3::proto::UDIEntryTypeCode* mutable_entry_type();
  void set_allocated_entry_type(::google::fhir::stu3::proto::UDIEntryTypeCode* entry_type);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreDevice.Udi)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::String* device_identifier_;
  ::google::fhir::stu3::proto::String* name_;
  ::google::fhir::stu3::proto::Uri* jurisdiction_;
  ::google::fhir::stu3::proto::String* carrier_h_r_f_;
  ::google::fhir::stu3::proto::Base64Binary* carrier_a_i_d_c_;
  ::google::fhir::stu3::proto::Uri* issuer_;
  ::google::fhir::stu3::proto::UDIEntryTypeCode* entry_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreDevice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreDevice) */ {
 public:
  UsCoreDevice();
  virtual ~UsCoreDevice();

  UsCoreDevice(const UsCoreDevice& from);

  inline UsCoreDevice& operator=(const UsCoreDevice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreDevice(UsCoreDevice&& from) noexcept
    : UsCoreDevice() {
    *this = ::std::move(from);
  }

  inline UsCoreDevice& operator=(UsCoreDevice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreDevice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreDevice* internal_default_instance() {
    return reinterpret_cast<const UsCoreDevice*>(
               &_UsCoreDevice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(UsCoreDevice* other);
  friend void swap(UsCoreDevice& a, UsCoreDevice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreDevice* New() const final {
    return CreateMaybeMessage<UsCoreDevice>(NULL);
  }

  UsCoreDevice* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreDevice>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreDevice& from);
  void MergeFrom(const UsCoreDevice& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreDevice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreDevice_Udi Udi;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  int contained_size() const;
  void clear_contained();
  static const int kContainedFieldNumber = 6;
  ::google::fhir::stu3::proto::ContainedResource* mutable_contained(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
      mutable_contained();
  const ::google::fhir::stu3::proto::ContainedResource& contained(int index) const;
  ::google::fhir::stu3::proto::ContainedResource* add_contained();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
      contained() const;

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 8;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  int identifier_size() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 9;
  ::google::fhir::stu3::proto::Identifier* mutable_identifier(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
      mutable_identifier();
  const ::google::fhir::stu3::proto::Identifier& identifier(int index) const;
  ::google::fhir::stu3::proto::Identifier* add_identifier();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
      identifier() const;

  // repeated .google.fhir.stu3.proto.ContactPoint contact = 21;
  int contact_size() const;
  void clear_contact();
  static const int kContactFieldNumber = 21;
  ::google::fhir::stu3::proto::ContactPoint* mutable_contact(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >*
      mutable_contact();
  const ::google::fhir::stu3::proto::ContactPoint& contact(int index) const;
  ::google::fhir::stu3::proto::ContactPoint* add_contact();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >&
      contact() const;

  // repeated .google.fhir.stu3.proto.Annotation note = 24;
  int note_size() const;
  void clear_note();
  static const int kNoteFieldNumber = 24;
  ::google::fhir::stu3::proto::Annotation* mutable_note(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
      mutable_note();
  const ::google::fhir::stu3::proto::Annotation& note(int index) const;
  ::google::fhir::stu3::proto::Annotation* add_note();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
      note() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept safety = 25;
  int safety_size() const;
  void clear_safety();
  static const int kSafetyFieldNumber = 25;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_safety(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_safety();
  const ::google::fhir::stu3::proto::CodeableConcept& safety(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_safety();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      safety() const;

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // .google.fhir.stu3.proto.Narrative text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Narrative& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::Narrative& text() const;
  ::google::fhir::stu3::proto::Narrative* release_text();
  ::google::fhir::stu3::proto::Narrative* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::Narrative* text);

  // .google.fhir.stu3.uscore.UsCoreDevice.Udi udi = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_udi() const;
  void clear_udi();
  static const int kUdiFieldNumber = 10;
  private:
  const ::google::fhir::stu3::uscore::UsCoreDevice_Udi& _internal_udi() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreDevice_Udi& udi() const;
  ::google::fhir::stu3::uscore::UsCoreDevice_Udi* release_udi();
  ::google::fhir::stu3::uscore::UsCoreDevice_Udi* mutable_udi();
  void set_allocated_udi(::google::fhir::stu3::uscore::UsCoreDevice_Udi* udi);

  // .google.fhir.stu3.proto.FHIRDeviceStatusCode status = 11;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 11;
  private:
  const ::google::fhir::stu3::proto::FHIRDeviceStatusCode& _internal_status() const;
  public:
  const ::google::fhir::stu3::proto::FHIRDeviceStatusCode& status() const;
  ::google::fhir::stu3::proto::FHIRDeviceStatusCode* release_status();
  ::google::fhir::stu3::proto::FHIRDeviceStatusCode* mutable_status();
  void set_allocated_status(::google::fhir::stu3::proto::FHIRDeviceStatusCode* status);

  // .google.fhir.stu3.proto.CodeableConcept type = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 12;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_type() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& type() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_type();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_type();
  void set_allocated_type(::google::fhir::stu3::proto::CodeableConcept* type);

  // .google.fhir.stu3.proto.String lot_number = 13;
  bool has_lot_number() const;
  void clear_lot_number();
  static const int kLotNumberFieldNumber = 13;
  private:
  const ::google::fhir::stu3::proto::String& _internal_lot_number() const;
  public:
  const ::google::fhir::stu3::proto::String& lot_number() const;
  ::google::fhir::stu3::proto::String* release_lot_number();
  ::google::fhir::stu3::proto::String* mutable_lot_number();
  void set_allocated_lot_number(::google::fhir::stu3::proto::String* lot_number);

  // .google.fhir.stu3.proto.String manufacturer = 14;
  bool has_manufacturer() const;
  void clear_manufacturer();
  static const int kManufacturerFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::String& _internal_manufacturer() const;
  public:
  const ::google::fhir::stu3::proto::String& manufacturer() const;
  ::google::fhir::stu3::proto::String* release_manufacturer();
  ::google::fhir::stu3::proto::String* mutable_manufacturer();
  void set_allocated_manufacturer(::google::fhir::stu3::proto::String* manufacturer);

  // .google.fhir.stu3.proto.DateTime manufacture_date = 15;
  bool has_manufacture_date() const;
  void clear_manufacture_date();
  static const int kManufactureDateFieldNumber = 15;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_manufacture_date() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& manufacture_date() const;
  ::google::fhir::stu3::proto::DateTime* release_manufacture_date();
  ::google::fhir::stu3::proto::DateTime* mutable_manufacture_date();
  void set_allocated_manufacture_date(::google::fhir::stu3::proto::DateTime* manufacture_date);

  // .google.fhir.stu3.proto.DateTime expiration_date = 16;
  bool has_expiration_date() const;
  void clear_expiration_date();
  static const int kExpirationDateFieldNumber = 16;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_expiration_date() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& expiration_date() const;
  ::google::fhir::stu3::proto::DateTime* release_expiration_date();
  ::google::fhir::stu3::proto::DateTime* mutable_expiration_date();
  void set_allocated_expiration_date(::google::fhir::stu3::proto::DateTime* expiration_date);

  // .google.fhir.stu3.proto.String model = 17;
  bool has_model() const;
  void clear_model();
  static const int kModelFieldNumber = 17;
  private:
  const ::google::fhir::stu3::proto::String& _internal_model() const;
  public:
  const ::google::fhir::stu3::proto::String& model() const;
  ::google::fhir::stu3::proto::String* release_model();
  ::google::fhir::stu3::proto::String* mutable_model();
  void set_allocated_model(::google::fhir::stu3::proto::String* model);

  // .google.fhir.stu3.proto.String version = 18;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 18;
  private:
  const ::google::fhir::stu3::proto::String& _internal_version() const;
  public:
  const ::google::fhir::stu3::proto::String& version() const;
  ::google::fhir::stu3::proto::String* release_version();
  ::google::fhir::stu3::proto::String* mutable_version();
  void set_allocated_version(::google::fhir::stu3::proto::String* version);

  // .google.fhir.stu3.proto.Reference patient = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  bool has_patient() const;
  void clear_patient();
  static const int kPatientFieldNumber = 19;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_patient() const;
  public:
  const ::google::fhir::stu3::proto::Reference& patient() const;
  ::google::fhir::stu3::proto::Reference* release_patient();
  ::google::fhir::stu3::proto::Reference* mutable_patient();
  void set_allocated_patient(::google::fhir::stu3::proto::Reference* patient);

  // .google.fhir.stu3.proto.Reference owner = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  bool has_owner() const;
  void clear_owner();
  static const int kOwnerFieldNumber = 20;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_owner() const;
  public:
  const ::google::fhir::stu3::proto::Reference& owner() const;
  ::google::fhir::stu3::proto::Reference* release_owner();
  ::google::fhir::stu3::proto::Reference* mutable_owner();
  void set_allocated_owner(::google::fhir::stu3::proto::Reference* owner);

  // .google.fhir.stu3.proto.Reference location = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 22;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_location() const;
  public:
  const ::google::fhir::stu3::proto::Reference& location() const;
  ::google::fhir::stu3::proto::Reference* release_location();
  ::google::fhir::stu3::proto::Reference* mutable_location();
  void set_allocated_location(::google::fhir::stu3::proto::Reference* location);

  // .google.fhir.stu3.proto.Uri url = 23;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 23;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_url() const;
  public:
  const ::google::fhir::stu3::proto::Uri& url() const;
  ::google::fhir::stu3::proto::Uri* release_url();
  ::google::fhir::stu3::proto::Uri* mutable_url();
  void set_allocated_url(::google::fhir::stu3::proto::Uri* url);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreDevice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource > contained_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier > identifier_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint > contact_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation > note_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > safety_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  ::google::fhir::stu3::proto::Narrative* text_;
  ::google::fhir::stu3::uscore::UsCoreDevice_Udi* udi_;
  ::google::fhir::stu3::proto::FHIRDeviceStatusCode* status_;
  ::google::fhir::stu3::proto::CodeableConcept* type_;
  ::google::fhir::stu3::proto::String* lot_number_;
  ::google::fhir::stu3::proto::String* manufacturer_;
  ::google::fhir::stu3::proto::DateTime* manufacture_date_;
  ::google::fhir::stu3::proto::DateTime* expiration_date_;
  ::google::fhir::stu3::proto::String* model_;
  ::google::fhir::stu3::proto::String* version_;
  ::google::fhir::stu3::proto::Reference* patient_;
  ::google::fhir::stu3::proto::Reference* owner_;
  ::google::fhir::stu3::proto::Reference* location_;
  ::google::fhir::stu3::proto::Uri* url_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreDiagnosticreport_Effective : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective) */ {
 public:
  UsCoreDiagnosticreport_Effective();
  virtual ~UsCoreDiagnosticreport_Effective();

  UsCoreDiagnosticreport_Effective(const UsCoreDiagnosticreport_Effective& from);

  inline UsCoreDiagnosticreport_Effective& operator=(const UsCoreDiagnosticreport_Effective& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreDiagnosticreport_Effective(UsCoreDiagnosticreport_Effective&& from) noexcept
    : UsCoreDiagnosticreport_Effective() {
    *this = ::std::move(from);
  }

  inline UsCoreDiagnosticreport_Effective& operator=(UsCoreDiagnosticreport_Effective&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreDiagnosticreport_Effective& default_instance();

  enum EffectiveCase {
    kDateTime = 1,
    kPeriod = 2,
    EFFECTIVE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreDiagnosticreport_Effective* internal_default_instance() {
    return reinterpret_cast<const UsCoreDiagnosticreport_Effective*>(
               &_UsCoreDiagnosticreport_Effective_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(UsCoreDiagnosticreport_Effective* other);
  friend void swap(UsCoreDiagnosticreport_Effective& a, UsCoreDiagnosticreport_Effective& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreDiagnosticreport_Effective* New() const final {
    return CreateMaybeMessage<UsCoreDiagnosticreport_Effective>(NULL);
  }

  UsCoreDiagnosticreport_Effective* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreDiagnosticreport_Effective>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreDiagnosticreport_Effective& from);
  void MergeFrom(const UsCoreDiagnosticreport_Effective& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreDiagnosticreport_Effective* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  // .google.fhir.stu3.proto.Period period = 2;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  void clear_effective();
  EffectiveCase effective_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective)
 private:
  void set_has_date_time();
  void set_has_period();

  inline bool has_effective() const;
  inline void clear_has_effective();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union EffectiveUnion {
    EffectiveUnion() {}
    ::google::fhir::stu3::proto::DateTime* date_time_;
    ::google::fhir::stu3::proto::Period* period_;
  } effective_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreDiagnosticreport_Performer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer) */ {
 public:
  UsCoreDiagnosticreport_Performer();
  virtual ~UsCoreDiagnosticreport_Performer();

  UsCoreDiagnosticreport_Performer(const UsCoreDiagnosticreport_Performer& from);

  inline UsCoreDiagnosticreport_Performer& operator=(const UsCoreDiagnosticreport_Performer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreDiagnosticreport_Performer(UsCoreDiagnosticreport_Performer&& from) noexcept
    : UsCoreDiagnosticreport_Performer() {
    *this = ::std::move(from);
  }

  inline UsCoreDiagnosticreport_Performer& operator=(UsCoreDiagnosticreport_Performer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreDiagnosticreport_Performer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreDiagnosticreport_Performer* internal_default_instance() {
    return reinterpret_cast<const UsCoreDiagnosticreport_Performer*>(
               &_UsCoreDiagnosticreport_Performer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(UsCoreDiagnosticreport_Performer* other);
  friend void swap(UsCoreDiagnosticreport_Performer& a, UsCoreDiagnosticreport_Performer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreDiagnosticreport_Performer* New() const final {
    return CreateMaybeMessage<UsCoreDiagnosticreport_Performer>(NULL);
  }

  UsCoreDiagnosticreport_Performer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreDiagnosticreport_Performer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreDiagnosticreport_Performer& from);
  void MergeFrom(const UsCoreDiagnosticreport_Performer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreDiagnosticreport_Performer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CodeableConcept role = 4;
  bool has_role() const;
  void clear_role();
  static const int kRoleFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_role() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& role() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_role();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_role();
  void set_allocated_role(::google::fhir::stu3::proto::CodeableConcept* role);

  // .google.fhir.stu3.proto.Reference actor = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization"];
  bool has_actor() const;
  void clear_actor();
  static const int kActorFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_actor() const;
  public:
  const ::google::fhir::stu3::proto::Reference& actor() const;
  ::google::fhir::stu3::proto::Reference* release_actor();
  ::google::fhir::stu3::proto::Reference* mutable_actor();
  void set_allocated_actor(::google::fhir::stu3::proto::Reference* actor);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::CodeableConcept* role_;
  ::google::fhir::stu3::proto::Reference* actor_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreDiagnosticreport_Image : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image) */ {
 public:
  UsCoreDiagnosticreport_Image();
  virtual ~UsCoreDiagnosticreport_Image();

  UsCoreDiagnosticreport_Image(const UsCoreDiagnosticreport_Image& from);

  inline UsCoreDiagnosticreport_Image& operator=(const UsCoreDiagnosticreport_Image& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreDiagnosticreport_Image(UsCoreDiagnosticreport_Image&& from) noexcept
    : UsCoreDiagnosticreport_Image() {
    *this = ::std::move(from);
  }

  inline UsCoreDiagnosticreport_Image& operator=(UsCoreDiagnosticreport_Image&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreDiagnosticreport_Image& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreDiagnosticreport_Image* internal_default_instance() {
    return reinterpret_cast<const UsCoreDiagnosticreport_Image*>(
               &_UsCoreDiagnosticreport_Image_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(UsCoreDiagnosticreport_Image* other);
  friend void swap(UsCoreDiagnosticreport_Image& a, UsCoreDiagnosticreport_Image& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreDiagnosticreport_Image* New() const final {
    return CreateMaybeMessage<UsCoreDiagnosticreport_Image>(NULL);
  }

  UsCoreDiagnosticreport_Image* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreDiagnosticreport_Image>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreDiagnosticreport_Image& from);
  void MergeFrom(const UsCoreDiagnosticreport_Image& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreDiagnosticreport_Image* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.String comment = 4;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::String& _internal_comment() const;
  public:
  const ::google::fhir::stu3::proto::String& comment() const;
  ::google::fhir::stu3::proto::String* release_comment();
  ::google::fhir::stu3::proto::String* mutable_comment();
  void set_allocated_comment(::google::fhir::stu3::proto::String* comment);

  // .google.fhir.stu3.proto.Reference link = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Media"];
  bool has_link() const;
  void clear_link();
  static const int kLinkFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_link() const;
  public:
  const ::google::fhir::stu3::proto::Reference& link() const;
  ::google::fhir::stu3::proto::Reference* release_link();
  ::google::fhir::stu3::proto::Reference* mutable_link();
  void set_allocated_link(::google::fhir::stu3::proto::Reference* link);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::String* comment_;
  ::google::fhir::stu3::proto::Reference* link_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreDiagnosticreport : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreDiagnosticreport) */ {
 public:
  UsCoreDiagnosticreport();
  virtual ~UsCoreDiagnosticreport();

  UsCoreDiagnosticreport(const UsCoreDiagnosticreport& from);

  inline UsCoreDiagnosticreport& operator=(const UsCoreDiagnosticreport& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreDiagnosticreport(UsCoreDiagnosticreport&& from) noexcept
    : UsCoreDiagnosticreport() {
    *this = ::std::move(from);
  }

  inline UsCoreDiagnosticreport& operator=(UsCoreDiagnosticreport&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreDiagnosticreport& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreDiagnosticreport* internal_default_instance() {
    return reinterpret_cast<const UsCoreDiagnosticreport*>(
               &_UsCoreDiagnosticreport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(UsCoreDiagnosticreport* other);
  friend void swap(UsCoreDiagnosticreport& a, UsCoreDiagnosticreport& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreDiagnosticreport* New() const final {
    return CreateMaybeMessage<UsCoreDiagnosticreport>(NULL);
  }

  UsCoreDiagnosticreport* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreDiagnosticreport>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreDiagnosticreport& from);
  void MergeFrom(const UsCoreDiagnosticreport& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreDiagnosticreport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreDiagnosticreport_Effective Effective;
  typedef UsCoreDiagnosticreport_Performer Performer;
  typedef UsCoreDiagnosticreport_Image Image;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  int contained_size() const;
  void clear_contained();
  static const int kContainedFieldNumber = 6;
  ::google::fhir::stu3::proto::ContainedResource* mutable_contained(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
      mutable_contained();
  const ::google::fhir::stu3::proto::ContainedResource& contained(int index) const;
  ::google::fhir::stu3::proto::ContainedResource* add_contained();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
      contained() const;

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 8;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  int identifier_size() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 9;
  ::google::fhir::stu3::proto::Identifier* mutable_identifier(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
      mutable_identifier();
  const ::google::fhir::stu3::proto::Identifier& identifier(int index) const;
  ::google::fhir::stu3::proto::Identifier* add_identifier();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
      identifier() const;

  // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  int based_on_size() const;
  void clear_based_on();
  static const int kBasedOnFieldNumber = 10;
  ::google::fhir::stu3::proto::Reference* mutable_based_on(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_based_on();
  const ::google::fhir::stu3::proto::Reference& based_on(int index) const;
  ::google::fhir::stu3::proto::Reference* add_based_on();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      based_on() const;

  // repeated .google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer performer = 18;
  int performer_size() const;
  void clear_performer();
  static const int kPerformerFieldNumber = 18;
  ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer* mutable_performer(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer >*
      mutable_performer();
  const ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer& performer(int index) const;
  ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer* add_performer();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer >&
      performer() const;

  // repeated .google.fhir.stu3.proto.Reference specimen = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Specimen"];
  int specimen_size() const;
  void clear_specimen();
  static const int kSpecimenFieldNumber = 19;
  ::google::fhir::stu3::proto::Reference* mutable_specimen(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_specimen();
  const ::google::fhir::stu3::proto::Reference& specimen(int index) const;
  ::google::fhir::stu3::proto::Reference* add_specimen();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      specimen() const;

  // repeated .google.fhir.stu3.proto.Reference result = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-observationresults"];
  int result_size() const;
  void clear_result();
  static const int kResultFieldNumber = 20;
  ::google::fhir::stu3::proto::Reference* mutable_result(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_result();
  const ::google::fhir::stu3::proto::Reference& result(int index) const;
  ::google::fhir::stu3::proto::Reference* add_result();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      result() const;

  // repeated .google.fhir.stu3.proto.Reference imaging_study = 21 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImagingStudy", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImagingManifest"];
  int imaging_study_size() const;
  void clear_imaging_study();
  static const int kImagingStudyFieldNumber = 21;
  ::google::fhir::stu3::proto::Reference* mutable_imaging_study(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_imaging_study();
  const ::google::fhir::stu3::proto::Reference& imaging_study(int index) const;
  ::google::fhir::stu3::proto::Reference* add_imaging_study();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      imaging_study() const;

  // repeated .google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image image = 22;
  int image_size() const;
  void clear_image();
  static const int kImageFieldNumber = 22;
  ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image* mutable_image(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image >*
      mutable_image();
  const ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image& image(int index) const;
  ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image* add_image();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image >&
      image() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept coded_diagnosis = 24;
  int coded_diagnosis_size() const;
  void clear_coded_diagnosis();
  static const int kCodedDiagnosisFieldNumber = 24;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_coded_diagnosis(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_coded_diagnosis();
  const ::google::fhir::stu3::proto::CodeableConcept& coded_diagnosis(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_coded_diagnosis();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      coded_diagnosis() const;

  // repeated .google.fhir.stu3.proto.Attachment presented_form = 25;
  int presented_form_size() const;
  void clear_presented_form();
  static const int kPresentedFormFieldNumber = 25;
  ::google::fhir::stu3::proto::Attachment* mutable_presented_form(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment >*
      mutable_presented_form();
  const ::google::fhir::stu3::proto::Attachment& presented_form(int index) const;
  ::google::fhir::stu3::proto::Attachment* add_presented_form();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment >&
      presented_form() const;

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // .google.fhir.stu3.proto.Narrative text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Narrative& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::Narrative& text() const;
  ::google::fhir::stu3::proto::Narrative* release_text();
  ::google::fhir::stu3::proto::Narrative* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::Narrative* text);

  // .google.fhir.stu3.proto.DiagnosticReportStatusCode status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 11;
  private:
  const ::google::fhir::stu3::proto::DiagnosticReportStatusCode& _internal_status() const;
  public:
  const ::google::fhir::stu3::proto::DiagnosticReportStatusCode& status() const;
  ::google::fhir::stu3::proto::DiagnosticReportStatusCode* release_status();
  ::google::fhir::stu3::proto::DiagnosticReportStatusCode* mutable_status();
  void set_allocated_status(::google::fhir::stu3::proto::DiagnosticReportStatusCode* status);

  // .google.fhir.stu3.proto.CodeableConcept category = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 12;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_category() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& category() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_category();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_category();
  void set_allocated_category(::google::fhir::stu3::proto::CodeableConcept* category);

  // .google.fhir.stu3.proto.CodeableConcept code = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 13;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_code() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& code() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_code();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_code();
  void set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code);

  // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  bool has_subject() const;
  void clear_subject();
  static const int kSubjectFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_subject() const;
  public:
  const ::google::fhir::stu3::proto::Reference& subject() const;
  ::google::fhir::stu3::proto::Reference* release_subject();
  ::google::fhir::stu3::proto::Reference* mutable_subject();
  void set_allocated_subject(::google::fhir::stu3::proto::Reference* subject);

  // .google.fhir.stu3.proto.Reference context = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 15;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_context() const;
  public:
  const ::google::fhir::stu3::proto::Reference& context() const;
  ::google::fhir::stu3::proto::Reference* release_context();
  ::google::fhir::stu3::proto::Reference* mutable_context();
  void set_allocated_context(::google::fhir::stu3::proto::Reference* context);

  // .google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective effective = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_effective() const;
  void clear_effective();
  static const int kEffectiveFieldNumber = 16;
  private:
  const ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective& _internal_effective() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective& effective() const;
  ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective* release_effective();
  ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective* mutable_effective();
  void set_allocated_effective(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective* effective);

  // .google.fhir.stu3.proto.Instant issued = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_issued() const;
  void clear_issued();
  static const int kIssuedFieldNumber = 17;
  private:
  const ::google::fhir::stu3::proto::Instant& _internal_issued() const;
  public:
  const ::google::fhir::stu3::proto::Instant& issued() const;
  ::google::fhir::stu3::proto::Instant* release_issued();
  ::google::fhir::stu3::proto::Instant* mutable_issued();
  void set_allocated_issued(::google::fhir::stu3::proto::Instant* issued);

  // .google.fhir.stu3.proto.String conclusion = 23;
  bool has_conclusion() const;
  void clear_conclusion();
  static const int kConclusionFieldNumber = 23;
  private:
  const ::google::fhir::stu3::proto::String& _internal_conclusion() const;
  public:
  const ::google::fhir::stu3::proto::String& conclusion() const;
  ::google::fhir::stu3::proto::String* release_conclusion();
  ::google::fhir::stu3::proto::String* mutable_conclusion();
  void set_allocated_conclusion(::google::fhir::stu3::proto::String* conclusion);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreDiagnosticreport)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource > contained_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier > identifier_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > based_on_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer > performer_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > specimen_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > result_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > imaging_study_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image > image_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > coded_diagnosis_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment > presented_form_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  ::google::fhir::stu3::proto::Narrative* text_;
  ::google::fhir::stu3::proto::DiagnosticReportStatusCode* status_;
  ::google::fhir::stu3::proto::CodeableConcept* category_;
  ::google::fhir::stu3::proto::CodeableConcept* code_;
  ::google::fhir::stu3::proto::Reference* subject_;
  ::google::fhir::stu3::proto::Reference* context_;
  ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective* effective_;
  ::google::fhir::stu3::proto::Instant* issued_;
  ::google::fhir::stu3::proto::String* conclusion_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ContactPointUsCoreDirect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.ContactPointUsCoreDirect) */ {
 public:
  ContactPointUsCoreDirect();
  virtual ~ContactPointUsCoreDirect();

  ContactPointUsCoreDirect(const ContactPointUsCoreDirect& from);

  inline ContactPointUsCoreDirect& operator=(const ContactPointUsCoreDirect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContactPointUsCoreDirect(ContactPointUsCoreDirect&& from) noexcept
    : ContactPointUsCoreDirect() {
    *this = ::std::move(from);
  }

  inline ContactPointUsCoreDirect& operator=(ContactPointUsCoreDirect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactPointUsCoreDirect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContactPointUsCoreDirect* internal_default_instance() {
    return reinterpret_cast<const ContactPointUsCoreDirect*>(
               &_ContactPointUsCoreDirect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(ContactPointUsCoreDirect* other);
  friend void swap(ContactPointUsCoreDirect& a, ContactPointUsCoreDirect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContactPointUsCoreDirect* New() const final {
    return CreateMaybeMessage<ContactPointUsCoreDirect>(NULL);
  }

  ContactPointUsCoreDirect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ContactPointUsCoreDirect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ContactPointUsCoreDirect& from);
  void MergeFrom(const ContactPointUsCoreDirect& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContactPointUsCoreDirect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.Boolean value_boolean = 3;
  bool has_value_boolean() const;
  void clear_value_boolean();
  static const int kValueBooleanFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_value_boolean() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& value_boolean() const;
  ::google::fhir::stu3::proto::Boolean* release_value_boolean();
  ::google::fhir::stu3::proto::Boolean* mutable_value_boolean();
  void set_allocated_value_boolean(::google::fhir::stu3::proto::Boolean* value_boolean);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.ContactPointUsCoreDirect)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::Boolean* value_boolean_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PatientUSCoreEthnicityExtension : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension) */ {
 public:
  PatientUSCoreEthnicityExtension();
  virtual ~PatientUSCoreEthnicityExtension();

  PatientUSCoreEthnicityExtension(const PatientUSCoreEthnicityExtension& from);

  inline PatientUSCoreEthnicityExtension& operator=(const PatientUSCoreEthnicityExtension& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PatientUSCoreEthnicityExtension(PatientUSCoreEthnicityExtension&& from) noexcept
    : PatientUSCoreEthnicityExtension() {
    *this = ::std::move(from);
  }

  inline PatientUSCoreEthnicityExtension& operator=(PatientUSCoreEthnicityExtension&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PatientUSCoreEthnicityExtension& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PatientUSCoreEthnicityExtension* internal_default_instance() {
    return reinterpret_cast<const PatientUSCoreEthnicityExtension*>(
               &_PatientUSCoreEthnicityExtension_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(PatientUSCoreEthnicityExtension* other);
  friend void swap(PatientUSCoreEthnicityExtension& a, PatientUSCoreEthnicityExtension& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PatientUSCoreEthnicityExtension* New() const final {
    return CreateMaybeMessage<PatientUSCoreEthnicityExtension>(NULL);
  }

  PatientUSCoreEthnicityExtension* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PatientUSCoreEthnicityExtension>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PatientUSCoreEthnicityExtension& from);
  void MergeFrom(const PatientUSCoreEthnicityExtension& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PatientUSCoreEthnicityExtension* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Coding detailed = 5;
  int detailed_size() const;
  void clear_detailed();
  static const int kDetailedFieldNumber = 5;
  ::google::fhir::stu3::proto::Coding* mutable_detailed(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >*
      mutable_detailed();
  const ::google::fhir::stu3::proto::Coding& detailed(int index) const;
  ::google::fhir::stu3::proto::Coding* add_detailed();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >&
      detailed() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.Coding omb_category = 4;
  bool has_omb_category() const;
  void clear_omb_category();
  static const int kOmbCategoryFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Coding& _internal_omb_category() const;
  public:
  const ::google::fhir::stu3::proto::Coding& omb_category() const;
  ::google::fhir::stu3::proto::Coding* release_omb_category();
  ::google::fhir::stu3::proto::Coding* mutable_omb_category();
  void set_allocated_omb_category(::google::fhir::stu3::proto::Coding* omb_category);

  // .google.fhir.stu3.proto.String text = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::String& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::String& text() const;
  ::google::fhir::stu3::proto::String* release_text();
  ::google::fhir::stu3::proto::String* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::String* text);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding > detailed_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::Coding* omb_category_;
  ::google::fhir::stu3::proto::String* text_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreGoal_Start : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreGoal.Start) */ {
 public:
  UsCoreGoal_Start();
  virtual ~UsCoreGoal_Start();

  UsCoreGoal_Start(const UsCoreGoal_Start& from);

  inline UsCoreGoal_Start& operator=(const UsCoreGoal_Start& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreGoal_Start(UsCoreGoal_Start&& from) noexcept
    : UsCoreGoal_Start() {
    *this = ::std::move(from);
  }

  inline UsCoreGoal_Start& operator=(UsCoreGoal_Start&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreGoal_Start& default_instance();

  enum StartCase {
    kDate = 1,
    kCodeableConcept = 2,
    START_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreGoal_Start* internal_default_instance() {
    return reinterpret_cast<const UsCoreGoal_Start*>(
               &_UsCoreGoal_Start_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(UsCoreGoal_Start* other);
  friend void swap(UsCoreGoal_Start& a, UsCoreGoal_Start& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreGoal_Start* New() const final {
    return CreateMaybeMessage<UsCoreGoal_Start>(NULL);
  }

  UsCoreGoal_Start* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreGoal_Start>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreGoal_Start& from);
  void MergeFrom(const UsCoreGoal_Start& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreGoal_Start* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.Date date = 1;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Date& _internal_date() const;
  public:
  const ::google::fhir::stu3::proto::Date& date() const;
  ::google::fhir::stu3::proto::Date* release_date();
  ::google::fhir::stu3::proto::Date* mutable_date();
  void set_allocated_date(::google::fhir::stu3::proto::Date* date);

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
  bool has_codeable_concept() const;
  void clear_codeable_concept();
  static const int kCodeableConceptFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_codeable_concept() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& codeable_concept() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_codeable_concept();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_codeable_concept();
  void set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept);

  void clear_start();
  StartCase start_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreGoal.Start)
 private:
  void set_has_date();
  void set_has_codeable_concept();

  inline bool has_start() const;
  inline void clear_has_start();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union StartUnion {
    StartUnion() {}
    ::google::fhir::stu3::proto::Date* date_;
    ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
  } start_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreGoal_Target_Detail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail) */ {
 public:
  UsCoreGoal_Target_Detail();
  virtual ~UsCoreGoal_Target_Detail();

  UsCoreGoal_Target_Detail(const UsCoreGoal_Target_Detail& from);

  inline UsCoreGoal_Target_Detail& operator=(const UsCoreGoal_Target_Detail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreGoal_Target_Detail(UsCoreGoal_Target_Detail&& from) noexcept
    : UsCoreGoal_Target_Detail() {
    *this = ::std::move(from);
  }

  inline UsCoreGoal_Target_Detail& operator=(UsCoreGoal_Target_Detail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreGoal_Target_Detail& default_instance();

  enum DetailCase {
    kQuantity = 1,
    kRange = 2,
    kCodeableConcept = 3,
    DETAIL_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreGoal_Target_Detail* internal_default_instance() {
    return reinterpret_cast<const UsCoreGoal_Target_Detail*>(
               &_UsCoreGoal_Target_Detail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(UsCoreGoal_Target_Detail* other);
  friend void swap(UsCoreGoal_Target_Detail& a, UsCoreGoal_Target_Detail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreGoal_Target_Detail* New() const final {
    return CreateMaybeMessage<UsCoreGoal_Target_Detail>(NULL);
  }

  UsCoreGoal_Target_Detail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreGoal_Target_Detail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreGoal_Target_Detail& from);
  void MergeFrom(const UsCoreGoal_Target_Detail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreGoal_Target_Detail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.Quantity quantity = 1;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Quantity& _internal_quantity() const;
  public:
  const ::google::fhir::stu3::proto::Quantity& quantity() const;
  ::google::fhir::stu3::proto::Quantity* release_quantity();
  ::google::fhir::stu3::proto::Quantity* mutable_quantity();
  void set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity);

  // .google.fhir.stu3.proto.Range range = 2;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Range& _internal_range() const;
  public:
  const ::google::fhir::stu3::proto::Range& range() const;
  ::google::fhir::stu3::proto::Range* release_range();
  ::google::fhir::stu3::proto::Range* mutable_range();
  void set_allocated_range(::google::fhir::stu3::proto::Range* range);

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 3;
  bool has_codeable_concept() const;
  void clear_codeable_concept();
  static const int kCodeableConceptFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_codeable_concept() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& codeable_concept() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_codeable_concept();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_codeable_concept();
  void set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept);

  void clear_detail();
  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail)
 private:
  void set_has_quantity();
  void set_has_range();
  void set_has_codeable_concept();

  inline bool has_detail() const;
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union DetailUnion {
    DetailUnion() {}
    ::google::fhir::stu3::proto::Quantity* quantity_;
    ::google::fhir::stu3::proto::Range* range_;
    ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
  } detail_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreGoal_Target_Due : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreGoal.Target.Due) */ {
 public:
  UsCoreGoal_Target_Due();
  virtual ~UsCoreGoal_Target_Due();

  UsCoreGoal_Target_Due(const UsCoreGoal_Target_Due& from);

  inline UsCoreGoal_Target_Due& operator=(const UsCoreGoal_Target_Due& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreGoal_Target_Due(UsCoreGoal_Target_Due&& from) noexcept
    : UsCoreGoal_Target_Due() {
    *this = ::std::move(from);
  }

  inline UsCoreGoal_Target_Due& operator=(UsCoreGoal_Target_Due&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreGoal_Target_Due& default_instance();

  enum DueCase {
    kDate = 1,
    kDuration = 2,
    DUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreGoal_Target_Due* internal_default_instance() {
    return reinterpret_cast<const UsCoreGoal_Target_Due*>(
               &_UsCoreGoal_Target_Due_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(UsCoreGoal_Target_Due* other);
  friend void swap(UsCoreGoal_Target_Due& a, UsCoreGoal_Target_Due& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreGoal_Target_Due* New() const final {
    return CreateMaybeMessage<UsCoreGoal_Target_Due>(NULL);
  }

  UsCoreGoal_Target_Due* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreGoal_Target_Due>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreGoal_Target_Due& from);
  void MergeFrom(const UsCoreGoal_Target_Due& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreGoal_Target_Due* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.Date date = 1;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Date& _internal_date() const;
  public:
  const ::google::fhir::stu3::proto::Date& date() const;
  ::google::fhir::stu3::proto::Date* release_date();
  ::google::fhir::stu3::proto::Date* mutable_date();
  void set_allocated_date(::google::fhir::stu3::proto::Date* date);

  // .google.fhir.stu3.proto.Duration duration = 2;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Duration& _internal_duration() const;
  public:
  const ::google::fhir::stu3::proto::Duration& duration() const;
  ::google::fhir::stu3::proto::Duration* release_duration();
  ::google::fhir::stu3::proto::Duration* mutable_duration();
  void set_allocated_duration(::google::fhir::stu3::proto::Duration* duration);

  void clear_due();
  DueCase due_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreGoal.Target.Due)
 private:
  void set_has_date();
  void set_has_duration();

  inline bool has_due() const;
  inline void clear_has_due();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union DueUnion {
    DueUnion() {}
    ::google::fhir::stu3::proto::Date* date_;
    ::google::fhir::stu3::proto::Duration* duration_;
  } due_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreGoal_Target : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreGoal.Target) */ {
 public:
  UsCoreGoal_Target();
  virtual ~UsCoreGoal_Target();

  UsCoreGoal_Target(const UsCoreGoal_Target& from);

  inline UsCoreGoal_Target& operator=(const UsCoreGoal_Target& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreGoal_Target(UsCoreGoal_Target&& from) noexcept
    : UsCoreGoal_Target() {
    *this = ::std::move(from);
  }

  inline UsCoreGoal_Target& operator=(UsCoreGoal_Target&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreGoal_Target& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreGoal_Target* internal_default_instance() {
    return reinterpret_cast<const UsCoreGoal_Target*>(
               &_UsCoreGoal_Target_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(UsCoreGoal_Target* other);
  friend void swap(UsCoreGoal_Target& a, UsCoreGoal_Target& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreGoal_Target* New() const final {
    return CreateMaybeMessage<UsCoreGoal_Target>(NULL);
  }

  UsCoreGoal_Target* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreGoal_Target>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreGoal_Target& from);
  void MergeFrom(const UsCoreGoal_Target& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreGoal_Target* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreGoal_Target_Detail Detail;
  typedef UsCoreGoal_Target_Due Due;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CodeableConcept measure = 4;
  bool has_measure() const;
  void clear_measure();
  static const int kMeasureFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_measure() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& measure() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_measure();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_measure();
  void set_allocated_measure(::google::fhir::stu3::proto::CodeableConcept* measure);

  // .google.fhir.stu3.uscore.UsCoreGoal.Target.Detail detail = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_detail() const;
  void clear_detail();
  static const int kDetailFieldNumber = 5;
  private:
  const ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail& _internal_detail() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail& detail() const;
  ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail* release_detail();
  ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail* mutable_detail();
  void set_allocated_detail(::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail* detail);

  // .google.fhir.stu3.uscore.UsCoreGoal.Target.Due due = 6 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_due() const;
  void clear_due();
  static const int kDueFieldNumber = 6;
  private:
  const ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due& _internal_due() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due& due() const;
  ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due* release_due();
  ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due* mutable_due();
  void set_allocated_due(::google::fhir::stu3::uscore::UsCoreGoal_Target_Due* due);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreGoal.Target)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::CodeableConcept* measure_;
  ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail* detail_;
  ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due* due_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreGoal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreGoal) */ {
 public:
  UsCoreGoal();
  virtual ~UsCoreGoal();

  UsCoreGoal(const UsCoreGoal& from);

  inline UsCoreGoal& operator=(const UsCoreGoal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreGoal(UsCoreGoal&& from) noexcept
    : UsCoreGoal() {
    *this = ::std::move(from);
  }

  inline UsCoreGoal& operator=(UsCoreGoal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreGoal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreGoal* internal_default_instance() {
    return reinterpret_cast<const UsCoreGoal*>(
               &_UsCoreGoal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(UsCoreGoal* other);
  friend void swap(UsCoreGoal& a, UsCoreGoal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreGoal* New() const final {
    return CreateMaybeMessage<UsCoreGoal>(NULL);
  }

  UsCoreGoal* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreGoal>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreGoal& from);
  void MergeFrom(const UsCoreGoal& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreGoal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreGoal_Start Start;
  typedef UsCoreGoal_Target Target;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  int contained_size() const;
  void clear_contained();
  static const int kContainedFieldNumber = 6;
  ::google::fhir::stu3::proto::ContainedResource* mutable_contained(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
      mutable_contained();
  const ::google::fhir::stu3::proto::ContainedResource& contained(int index) const;
  ::google::fhir::stu3::proto::ContainedResource* add_contained();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
      contained() const;

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 8;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  int identifier_size() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 9;
  ::google::fhir::stu3::proto::Identifier* mutable_identifier(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
      mutable_identifier();
  const ::google::fhir::stu3::proto::Identifier& identifier(int index) const;
  ::google::fhir::stu3::proto::Identifier* add_identifier();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
      identifier() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 11;
  int category_size() const;
  void clear_category();
  static const int kCategoryFieldNumber = 11;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_category(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_category();
  const ::google::fhir::stu3::proto::CodeableConcept& category(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_category();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      category() const;

  // repeated .google.fhir.stu3.proto.Reference addresses = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationStatement", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RiskAssessment"];
  int addresses_size() const;
  void clear_addresses();
  static const int kAddressesFieldNumber = 20;
  ::google::fhir::stu3::proto::Reference* mutable_addresses(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_addresses();
  const ::google::fhir::stu3::proto::Reference& addresses(int index) const;
  ::google::fhir::stu3::proto::Reference* add_addresses();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      addresses() const;

  // repeated .google.fhir.stu3.proto.Annotation note = 21;
  int note_size() const;
  void clear_note();
  static const int kNoteFieldNumber = 21;
  ::google::fhir::stu3::proto::Annotation* mutable_note(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
      mutable_note();
  const ::google::fhir::stu3::proto::Annotation& note(int index) const;
  ::google::fhir::stu3::proto::Annotation* add_note();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
      note() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept outcome_code = 22;
  int outcome_code_size() const;
  void clear_outcome_code();
  static const int kOutcomeCodeFieldNumber = 22;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_outcome_code(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_outcome_code();
  const ::google::fhir::stu3::proto::CodeableConcept& outcome_code(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_outcome_code();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      outcome_code() const;

  // repeated .google.fhir.stu3.proto.Reference outcome_reference = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  int outcome_reference_size() const;
  void clear_outcome_reference();
  static const int kOutcomeReferenceFieldNumber = 23;
  ::google::fhir::stu3::proto::Reference* mutable_outcome_reference(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_outcome_reference();
  const ::google::fhir::stu3::proto::Reference& outcome_reference(int index) const;
  ::google::fhir::stu3::proto::Reference* add_outcome_reference();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      outcome_reference() const;

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // .google.fhir.stu3.proto.Narrative text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Narrative& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::Narrative& text() const;
  ::google::fhir::stu3::proto::Narrative* release_text();
  ::google::fhir::stu3::proto::Narrative* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::Narrative* text);

  // .google.fhir.stu3.proto.GoalStatusCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::GoalStatusCode& _internal_status() const;
  public:
  const ::google::fhir::stu3::proto::GoalStatusCode& status() const;
  ::google::fhir::stu3::proto::GoalStatusCode* release_status();
  ::google::fhir::stu3::proto::GoalStatusCode* mutable_status();
  void set_allocated_status(::google::fhir::stu3::proto::GoalStatusCode* status);

  // .google.fhir.stu3.proto.CodeableConcept priority = 12;
  bool has_priority() const;
  void clear_priority();
  static const int kPriorityFieldNumber = 12;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_priority() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& priority() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_priority();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_priority();
  void set_allocated_priority(::google::fhir::stu3::proto::CodeableConcept* priority);

  // .google.fhir.stu3.proto.CodeableConcept description = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 13;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_description() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& description() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_description();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_description();
  void set_allocated_description(::google::fhir::stu3::proto::CodeableConcept* description);

  // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  bool has_subject() const;
  void clear_subject();
  static const int kSubjectFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_subject() const;
  public:
  const ::google::fhir::stu3::proto::Reference& subject() const;
  ::google::fhir::stu3::proto::Reference* release_subject();
  ::google::fhir::stu3::proto::Reference* mutable_subject();
  void set_allocated_subject(::google::fhir::stu3::proto::Reference* subject);

  // .google.fhir.stu3.uscore.UsCoreGoal.Start start = 15 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_start() const;
  void clear_start();
  static const int kStartFieldNumber = 15;
  private:
  const ::google::fhir::stu3::uscore::UsCoreGoal_Start& _internal_start() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreGoal_Start& start() const;
  ::google::fhir::stu3::uscore::UsCoreGoal_Start* release_start();
  ::google::fhir::stu3::uscore::UsCoreGoal_Start* mutable_start();
  void set_allocated_start(::google::fhir::stu3::uscore::UsCoreGoal_Start* start);

  // .google.fhir.stu3.uscore.UsCoreGoal.Target target = 16;
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 16;
  private:
  const ::google::fhir::stu3::uscore::UsCoreGoal_Target& _internal_target() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreGoal_Target& target() const;
  ::google::fhir::stu3::uscore::UsCoreGoal_Target* release_target();
  ::google::fhir::stu3::uscore::UsCoreGoal_Target* mutable_target();
  void set_allocated_target(::google::fhir::stu3::uscore::UsCoreGoal_Target* target);

  // .google.fhir.stu3.proto.Date status_date = 17;
  bool has_status_date() const;
  void clear_status_date();
  static const int kStatusDateFieldNumber = 17;
  private:
  const ::google::fhir::stu3::proto::Date& _internal_status_date() const;
  public:
  const ::google::fhir::stu3::proto::Date& status_date() const;
  ::google::fhir::stu3::proto::Date* release_status_date();
  ::google::fhir::stu3::proto::Date* mutable_status_date();
  void set_allocated_status_date(::google::fhir::stu3::proto::Date* status_date);

  // .google.fhir.stu3.proto.String status_reason = 18;
  bool has_status_reason() const;
  void clear_status_reason();
  static const int kStatusReasonFieldNumber = 18;
  private:
  const ::google::fhir::stu3::proto::String& _internal_status_reason() const;
  public:
  const ::google::fhir::stu3::proto::String& status_reason() const;
  ::google::fhir::stu3::proto::String* release_status_reason();
  ::google::fhir::stu3::proto::String* mutable_status_reason();
  void set_allocated_status_reason(::google::fhir::stu3::proto::String* status_reason);

  // .google.fhir.stu3.proto.Reference expressed_by = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  bool has_expressed_by() const;
  void clear_expressed_by();
  static const int kExpressedByFieldNumber = 19;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_expressed_by() const;
  public:
  const ::google::fhir::stu3::proto::Reference& expressed_by() const;
  ::google::fhir::stu3::proto::Reference* release_expressed_by();
  ::google::fhir::stu3::proto::Reference* mutable_expressed_by();
  void set_allocated_expressed_by(::google::fhir::stu3::proto::Reference* expressed_by);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreGoal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource > contained_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier > identifier_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > category_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > addresses_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation > note_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > outcome_code_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > outcome_reference_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  ::google::fhir::stu3::proto::Narrative* text_;
  ::google::fhir::stu3::proto::GoalStatusCode* status_;
  ::google::fhir::stu3::proto::CodeableConcept* priority_;
  ::google::fhir::stu3::proto::CodeableConcept* description_;
  ::google::fhir::stu3::proto::Reference* subject_;
  ::google::fhir::stu3::uscore::UsCoreGoal_Start* start_;
  ::google::fhir::stu3::uscore::UsCoreGoal_Target* target_;
  ::google::fhir::stu3::proto::Date* status_date_;
  ::google::fhir::stu3::proto::String* status_reason_;
  ::google::fhir::stu3::proto::Reference* expressed_by_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreImmunization_Practitioner : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner) */ {
 public:
  UsCoreImmunization_Practitioner();
  virtual ~UsCoreImmunization_Practitioner();

  UsCoreImmunization_Practitioner(const UsCoreImmunization_Practitioner& from);

  inline UsCoreImmunization_Practitioner& operator=(const UsCoreImmunization_Practitioner& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreImmunization_Practitioner(UsCoreImmunization_Practitioner&& from) noexcept
    : UsCoreImmunization_Practitioner() {
    *this = ::std::move(from);
  }

  inline UsCoreImmunization_Practitioner& operator=(UsCoreImmunization_Practitioner&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreImmunization_Practitioner& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreImmunization_Practitioner* internal_default_instance() {
    return reinterpret_cast<const UsCoreImmunization_Practitioner*>(
               &_UsCoreImmunization_Practitioner_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(UsCoreImmunization_Practitioner* other);
  friend void swap(UsCoreImmunization_Practitioner& a, UsCoreImmunization_Practitioner& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreImmunization_Practitioner* New() const final {
    return CreateMaybeMessage<UsCoreImmunization_Practitioner>(NULL);
  }

  UsCoreImmunization_Practitioner* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreImmunization_Practitioner>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreImmunization_Practitioner& from);
  void MergeFrom(const UsCoreImmunization_Practitioner& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreImmunization_Practitioner* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CodeableConcept role = 4;
  bool has_role() const;
  void clear_role();
  static const int kRoleFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_role() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& role() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_role();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_role();
  void set_allocated_role(::google::fhir::stu3::proto::CodeableConcept* role);

  // .google.fhir.stu3.proto.Reference actor = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
  bool has_actor() const;
  void clear_actor();
  static const int kActorFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_actor() const;
  public:
  const ::google::fhir::stu3::proto::Reference& actor() const;
  ::google::fhir::stu3::proto::Reference* release_actor();
  ::google::fhir::stu3::proto::Reference* mutable_actor();
  void set_allocated_actor(::google::fhir::stu3::proto::Reference* actor);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::CodeableConcept* role_;
  ::google::fhir::stu3::proto::Reference* actor_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreImmunization_Explanation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreImmunization.Explanation) */ {
 public:
  UsCoreImmunization_Explanation();
  virtual ~UsCoreImmunization_Explanation();

  UsCoreImmunization_Explanation(const UsCoreImmunization_Explanation& from);

  inline UsCoreImmunization_Explanation& operator=(const UsCoreImmunization_Explanation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreImmunization_Explanation(UsCoreImmunization_Explanation&& from) noexcept
    : UsCoreImmunization_Explanation() {
    *this = ::std::move(from);
  }

  inline UsCoreImmunization_Explanation& operator=(UsCoreImmunization_Explanation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreImmunization_Explanation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreImmunization_Explanation* internal_default_instance() {
    return reinterpret_cast<const UsCoreImmunization_Explanation*>(
               &_UsCoreImmunization_Explanation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(UsCoreImmunization_Explanation* other);
  friend void swap(UsCoreImmunization_Explanation& a, UsCoreImmunization_Explanation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreImmunization_Explanation* New() const final {
    return CreateMaybeMessage<UsCoreImmunization_Explanation>(NULL);
  }

  UsCoreImmunization_Explanation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreImmunization_Explanation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreImmunization_Explanation& from);
  void MergeFrom(const UsCoreImmunization_Explanation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreImmunization_Explanation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept reason = 4;
  int reason_size() const;
  void clear_reason();
  static const int kReasonFieldNumber = 4;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_reason(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_reason();
  const ::google::fhir::stu3::proto::CodeableConcept& reason(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_reason();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      reason() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_not_given = 5;
  int reason_not_given_size() const;
  void clear_reason_not_given();
  static const int kReasonNotGivenFieldNumber = 5;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_reason_not_given(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_reason_not_given();
  const ::google::fhir::stu3::proto::CodeableConcept& reason_not_given(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_reason_not_given();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      reason_not_given() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreImmunization.Explanation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > reason_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > reason_not_given_;
  ::google::fhir::stu3::proto::String* id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreImmunization_Reaction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreImmunization.Reaction) */ {
 public:
  UsCoreImmunization_Reaction();
  virtual ~UsCoreImmunization_Reaction();

  UsCoreImmunization_Reaction(const UsCoreImmunization_Reaction& from);

  inline UsCoreImmunization_Reaction& operator=(const UsCoreImmunization_Reaction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreImmunization_Reaction(UsCoreImmunization_Reaction&& from) noexcept
    : UsCoreImmunization_Reaction() {
    *this = ::std::move(from);
  }

  inline UsCoreImmunization_Reaction& operator=(UsCoreImmunization_Reaction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreImmunization_Reaction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreImmunization_Reaction* internal_default_instance() {
    return reinterpret_cast<const UsCoreImmunization_Reaction*>(
               &_UsCoreImmunization_Reaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(UsCoreImmunization_Reaction* other);
  friend void swap(UsCoreImmunization_Reaction& a, UsCoreImmunization_Reaction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreImmunization_Reaction* New() const final {
    return CreateMaybeMessage<UsCoreImmunization_Reaction>(NULL);
  }

  UsCoreImmunization_Reaction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreImmunization_Reaction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreImmunization_Reaction& from);
  void MergeFrom(const UsCoreImmunization_Reaction& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreImmunization_Reaction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.DateTime date = 4;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date() const;
  ::google::fhir::stu3::proto::DateTime* release_date();
  ::google::fhir::stu3::proto::DateTime* mutable_date();
  void set_allocated_date(::google::fhir::stu3::proto::DateTime* date);

  // .google.fhir.stu3.proto.Reference detail = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  bool has_detail() const;
  void clear_detail();
  static const int kDetailFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_detail() const;
  public:
  const ::google::fhir::stu3::proto::Reference& detail() const;
  ::google::fhir::stu3::proto::Reference* release_detail();
  ::google::fhir::stu3::proto::Reference* mutable_detail();
  void set_allocated_detail(::google::fhir::stu3::proto::Reference* detail);

  // .google.fhir.stu3.proto.Boolean reported = 6;
  bool has_reported() const;
  void clear_reported();
  static const int kReportedFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_reported() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& reported() const;
  ::google::fhir::stu3::proto::Boolean* release_reported();
  ::google::fhir::stu3::proto::Boolean* mutable_reported();
  void set_allocated_reported(::google::fhir::stu3::proto::Boolean* reported);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreImmunization.Reaction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::DateTime* date_;
  ::google::fhir::stu3::proto::Reference* detail_;
  ::google::fhir::stu3::proto::Boolean* reported_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreImmunization_VaccinationProtocol : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol) */ {
 public:
  UsCoreImmunization_VaccinationProtocol();
  virtual ~UsCoreImmunization_VaccinationProtocol();

  UsCoreImmunization_VaccinationProtocol(const UsCoreImmunization_VaccinationProtocol& from);

  inline UsCoreImmunization_VaccinationProtocol& operator=(const UsCoreImmunization_VaccinationProtocol& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreImmunization_VaccinationProtocol(UsCoreImmunization_VaccinationProtocol&& from) noexcept
    : UsCoreImmunization_VaccinationProtocol() {
    *this = ::std::move(from);
  }

  inline UsCoreImmunization_VaccinationProtocol& operator=(UsCoreImmunization_VaccinationProtocol&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreImmunization_VaccinationProtocol& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreImmunization_VaccinationProtocol* internal_default_instance() {
    return reinterpret_cast<const UsCoreImmunization_VaccinationProtocol*>(
               &_UsCoreImmunization_VaccinationProtocol_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(UsCoreImmunization_VaccinationProtocol* other);
  friend void swap(UsCoreImmunization_VaccinationProtocol& a, UsCoreImmunization_VaccinationProtocol& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreImmunization_VaccinationProtocol* New() const final {
    return CreateMaybeMessage<UsCoreImmunization_VaccinationProtocol>(NULL);
  }

  UsCoreImmunization_VaccinationProtocol* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreImmunization_VaccinationProtocol>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreImmunization_VaccinationProtocol& from);
  void MergeFrom(const UsCoreImmunization_VaccinationProtocol& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreImmunization_VaccinationProtocol* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept target_disease = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  int target_disease_size() const;
  void clear_target_disease();
  static const int kTargetDiseaseFieldNumber = 9;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_target_disease(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_target_disease();
  const ::google::fhir::stu3::proto::CodeableConcept& target_disease(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_target_disease();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      target_disease() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.PositiveInt dose_sequence = 4;
  bool has_dose_sequence() const;
  void clear_dose_sequence();
  static const int kDoseSequenceFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::PositiveInt& _internal_dose_sequence() const;
  public:
  const ::google::fhir::stu3::proto::PositiveInt& dose_sequence() const;
  ::google::fhir::stu3::proto::PositiveInt* release_dose_sequence();
  ::google::fhir::stu3::proto::PositiveInt* mutable_dose_sequence();
  void set_allocated_dose_sequence(::google::fhir::stu3::proto::PositiveInt* dose_sequence);

  // .google.fhir.stu3.proto.String description = 5;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::String& _internal_description() const;
  public:
  const ::google::fhir::stu3::proto::String& description() const;
  ::google::fhir::stu3::proto::String* release_description();
  ::google::fhir::stu3::proto::String* mutable_description();
  void set_allocated_description(::google::fhir::stu3::proto::String* description);

  // .google.fhir.stu3.proto.Reference authority = 6 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  bool has_authority() const;
  void clear_authority();
  static const int kAuthorityFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_authority() const;
  public:
  const ::google::fhir::stu3::proto::Reference& authority() const;
  ::google::fhir::stu3::proto::Reference* release_authority();
  ::google::fhir::stu3::proto::Reference* mutable_authority();
  void set_allocated_authority(::google::fhir::stu3::proto::Reference* authority);

  // .google.fhir.stu3.proto.String series = 7;
  bool has_series() const;
  void clear_series();
  static const int kSeriesFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::String& _internal_series() const;
  public:
  const ::google::fhir::stu3::proto::String& series() const;
  ::google::fhir::stu3::proto::String* release_series();
  ::google::fhir::stu3::proto::String* mutable_series();
  void set_allocated_series(::google::fhir::stu3::proto::String* series);

  // .google.fhir.stu3.proto.PositiveInt series_doses = 8;
  bool has_series_doses() const;
  void clear_series_doses();
  static const int kSeriesDosesFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::PositiveInt& _internal_series_doses() const;
  public:
  const ::google::fhir::stu3::proto::PositiveInt& series_doses() const;
  ::google::fhir::stu3::proto::PositiveInt* release_series_doses();
  ::google::fhir::stu3::proto::PositiveInt* mutable_series_doses();
  void set_allocated_series_doses(::google::fhir::stu3::proto::PositiveInt* series_doses);

  // .google.fhir.stu3.proto.CodeableConcept dose_status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_dose_status() const;
  void clear_dose_status();
  static const int kDoseStatusFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_dose_status() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& dose_status() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_dose_status();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_dose_status();
  void set_allocated_dose_status(::google::fhir::stu3::proto::CodeableConcept* dose_status);

  // .google.fhir.stu3.proto.CodeableConcept dose_status_reason = 11;
  bool has_dose_status_reason() const;
  void clear_dose_status_reason();
  static const int kDoseStatusReasonFieldNumber = 11;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_dose_status_reason() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& dose_status_reason() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_dose_status_reason();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_dose_status_reason();
  void set_allocated_dose_status_reason(::google::fhir::stu3::proto::CodeableConcept* dose_status_reason);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > target_disease_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::PositiveInt* dose_sequence_;
  ::google::fhir::stu3::proto::String* description_;
  ::google::fhir::stu3::proto::Reference* authority_;
  ::google::fhir::stu3::proto::String* series_;
  ::google::fhir::stu3::proto::PositiveInt* series_doses_;
  ::google::fhir::stu3::proto::CodeableConcept* dose_status_;
  ::google::fhir::stu3::proto::CodeableConcept* dose_status_reason_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreImmunization : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreImmunization) */ {
 public:
  UsCoreImmunization();
  virtual ~UsCoreImmunization();

  UsCoreImmunization(const UsCoreImmunization& from);

  inline UsCoreImmunization& operator=(const UsCoreImmunization& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreImmunization(UsCoreImmunization&& from) noexcept
    : UsCoreImmunization() {
    *this = ::std::move(from);
  }

  inline UsCoreImmunization& operator=(UsCoreImmunization&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreImmunization& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreImmunization* internal_default_instance() {
    return reinterpret_cast<const UsCoreImmunization*>(
               &_UsCoreImmunization_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(UsCoreImmunization* other);
  friend void swap(UsCoreImmunization& a, UsCoreImmunization& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreImmunization* New() const final {
    return CreateMaybeMessage<UsCoreImmunization>(NULL);
  }

  UsCoreImmunization* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreImmunization>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreImmunization& from);
  void MergeFrom(const UsCoreImmunization& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreImmunization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreImmunization_Practitioner Practitioner;
  typedef UsCoreImmunization_Explanation Explanation;
  typedef UsCoreImmunization_Reaction Reaction;
  typedef UsCoreImmunization_VaccinationProtocol VaccinationProtocol;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  int contained_size() const;
  void clear_contained();
  static const int kContainedFieldNumber = 6;
  ::google::fhir::stu3::proto::ContainedResource* mutable_contained(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
      mutable_contained();
  const ::google::fhir::stu3::proto::ContainedResource& contained(int index) const;
  ::google::fhir::stu3::proto::ContainedResource* add_contained();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
      contained() const;

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 8;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  int identifier_size() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 9;
  ::google::fhir::stu3::proto::Identifier* mutable_identifier(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
      mutable_identifier();
  const ::google::fhir::stu3::proto::Identifier& identifier(int index) const;
  ::google::fhir::stu3::proto::Identifier* add_identifier();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
      identifier() const;

  // repeated .google.fhir.stu3.uscore.UsCoreImmunization.Practitioner practitioner = 25;
  int practitioner_size() const;
  void clear_practitioner();
  static const int kPractitionerFieldNumber = 25;
  ::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner* mutable_practitioner(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner >*
      mutable_practitioner();
  const ::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner& practitioner(int index) const;
  ::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner* add_practitioner();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner >&
      practitioner() const;

  // repeated .google.fhir.stu3.proto.Annotation note = 26;
  int note_size() const;
  void clear_note();
  static const int kNoteFieldNumber = 26;
  ::google::fhir::stu3::proto::Annotation* mutable_note(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
      mutable_note();
  const ::google::fhir::stu3::proto::Annotation& note(int index) const;
  ::google::fhir::stu3::proto::Annotation* add_note();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
      note() const;

  // repeated .google.fhir.stu3.uscore.UsCoreImmunization.Reaction reaction = 28;
  int reaction_size() const;
  void clear_reaction();
  static const int kReactionFieldNumber = 28;
  ::google::fhir::stu3::uscore::UsCoreImmunization_Reaction* mutable_reaction(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreImmunization_Reaction >*
      mutable_reaction();
  const ::google::fhir::stu3::uscore::UsCoreImmunization_Reaction& reaction(int index) const;
  ::google::fhir::stu3::uscore::UsCoreImmunization_Reaction* add_reaction();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreImmunization_Reaction >&
      reaction() const;

  // repeated .google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol vaccination_protocol = 29;
  int vaccination_protocol_size() const;
  void clear_vaccination_protocol();
  static const int kVaccinationProtocolFieldNumber = 29;
  ::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol* mutable_vaccination_protocol(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol >*
      mutable_vaccination_protocol();
  const ::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol& vaccination_protocol(int index) const;
  ::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol* add_vaccination_protocol();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol >&
      vaccination_protocol() const;

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // .google.fhir.stu3.proto.Narrative text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Narrative& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::Narrative& text() const;
  ::google::fhir::stu3::proto::Narrative* release_text();
  ::google::fhir::stu3::proto::Narrative* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::Narrative* text);

  // .google.fhir.stu3.proto.ImmunizationStatusCodesCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::ImmunizationStatusCodesCode& _internal_status() const;
  public:
  const ::google::fhir::stu3::proto::ImmunizationStatusCodesCode& status() const;
  ::google::fhir::stu3::proto::ImmunizationStatusCodesCode* release_status();
  ::google::fhir::stu3::proto::ImmunizationStatusCodesCode* mutable_status();
  void set_allocated_status(::google::fhir::stu3::proto::ImmunizationStatusCodesCode* status);

  // .google.fhir.stu3.proto.Boolean not_given = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_not_given() const;
  void clear_not_given();
  static const int kNotGivenFieldNumber = 11;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_not_given() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& not_given() const;
  ::google::fhir::stu3::proto::Boolean* release_not_given();
  ::google::fhir::stu3::proto::Boolean* mutable_not_given();
  void set_allocated_not_given(::google::fhir::stu3::proto::Boolean* not_given);

  // .google.fhir.stu3.proto.CodeableConcept vaccine_code = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_vaccine_code() const;
  void clear_vaccine_code();
  static const int kVaccineCodeFieldNumber = 12;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_vaccine_code() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& vaccine_code() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_vaccine_code();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_vaccine_code();
  void set_allocated_vaccine_code(::google::fhir::stu3::proto::CodeableConcept* vaccine_code);

  // .google.fhir.stu3.proto.Reference patient = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  bool has_patient() const;
  void clear_patient();
  static const int kPatientFieldNumber = 13;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_patient() const;
  public:
  const ::google::fhir::stu3::proto::Reference& patient() const;
  ::google::fhir::stu3::proto::Reference* release_patient();
  ::google::fhir::stu3::proto::Reference* mutable_patient();
  void set_allocated_patient(::google::fhir::stu3::proto::Reference* patient);

  // .google.fhir.stu3.proto.Reference encounter = 14 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter"];
  bool has_encounter() const;
  void clear_encounter();
  static const int kEncounterFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_encounter() const;
  public:
  const ::google::fhir::stu3::proto::Reference& encounter() const;
  ::google::fhir::stu3::proto::Reference* release_encounter();
  ::google::fhir::stu3::proto::Reference* mutable_encounter();
  void set_allocated_encounter(::google::fhir::stu3::proto::Reference* encounter);

  // .google.fhir.stu3.proto.DateTime date = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 15;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date() const;
  ::google::fhir::stu3::proto::DateTime* release_date();
  ::google::fhir::stu3::proto::DateTime* mutable_date();
  void set_allocated_date(::google::fhir::stu3::proto::DateTime* date);

  // .google.fhir.stu3.proto.Boolean primary_source = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_primary_source() const;
  void clear_primary_source();
  static const int kPrimarySourceFieldNumber = 16;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_primary_source() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& primary_source() const;
  ::google::fhir::stu3::proto::Boolean* release_primary_source();
  ::google::fhir::stu3::proto::Boolean* mutable_primary_source();
  void set_allocated_primary_source(::google::fhir::stu3::proto::Boolean* primary_source);

  // .google.fhir.stu3.proto.CodeableConcept report_origin = 17;
  bool has_report_origin() const;
  void clear_report_origin();
  static const int kReportOriginFieldNumber = 17;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_report_origin() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& report_origin() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_report_origin();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_report_origin();
  void set_allocated_report_origin(::google::fhir::stu3::proto::CodeableConcept* report_origin);

  // .google.fhir.stu3.proto.Reference location = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 18;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_location() const;
  public:
  const ::google::fhir::stu3::proto::Reference& location() const;
  ::google::fhir::stu3::proto::Reference* release_location();
  ::google::fhir::stu3::proto::Reference* mutable_location();
  void set_allocated_location(::google::fhir::stu3::proto::Reference* location);

  // .google.fhir.stu3.proto.Reference manufacturer = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  bool has_manufacturer() const;
  void clear_manufacturer();
  static const int kManufacturerFieldNumber = 19;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_manufacturer() const;
  public:
  const ::google::fhir::stu3::proto::Reference& manufacturer() const;
  ::google::fhir::stu3::proto::Reference* release_manufacturer();
  ::google::fhir::stu3::proto::Reference* mutable_manufacturer();
  void set_allocated_manufacturer(::google::fhir::stu3::proto::Reference* manufacturer);

  // .google.fhir.stu3.proto.String lot_number = 20;
  bool has_lot_number() const;
  void clear_lot_number();
  static const int kLotNumberFieldNumber = 20;
  private:
  const ::google::fhir::stu3::proto::String& _internal_lot_number() const;
  public:
  const ::google::fhir::stu3::proto::String& lot_number() const;
  ::google::fhir::stu3::proto::String* release_lot_number();
  ::google::fhir::stu3::proto::String* mutable_lot_number();
  void set_allocated_lot_number(::google::fhir::stu3::proto::String* lot_number);

  // .google.fhir.stu3.proto.Date expiration_date = 21;
  bool has_expiration_date() const;
  void clear_expiration_date();
  static const int kExpirationDateFieldNumber = 21;
  private:
  const ::google::fhir::stu3::proto::Date& _internal_expiration_date() const;
  public:
  const ::google::fhir::stu3::proto::Date& expiration_date() const;
  ::google::fhir::stu3::proto::Date* release_expiration_date();
  ::google::fhir::stu3::proto::Date* mutable_expiration_date();
  void set_allocated_expiration_date(::google::fhir::stu3::proto::Date* expiration_date);

  // .google.fhir.stu3.proto.CodeableConcept site = 22;
  bool has_site() const;
  void clear_site();
  static const int kSiteFieldNumber = 22;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_site() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& site() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_site();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_site();
  void set_allocated_site(::google::fhir::stu3::proto::CodeableConcept* site);

  // .google.fhir.stu3.proto.CodeableConcept route = 23;
  bool has_route() const;
  void clear_route();
  static const int kRouteFieldNumber = 23;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_route() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& route() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_route();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_route();
  void set_allocated_route(::google::fhir::stu3::proto::CodeableConcept* route);

  // .google.fhir.stu3.proto.SimpleQuantity dose_quantity = 24;
  bool has_dose_quantity() const;
  void clear_dose_quantity();
  static const int kDoseQuantityFieldNumber = 24;
  private:
  const ::google::fhir::stu3::proto::SimpleQuantity& _internal_dose_quantity() const;
  public:
  const ::google::fhir::stu3::proto::SimpleQuantity& dose_quantity() const;
  ::google::fhir::stu3::proto::SimpleQuantity* release_dose_quantity();
  ::google::fhir::stu3::proto::SimpleQuantity* mutable_dose_quantity();
  void set_allocated_dose_quantity(::google::fhir::stu3::proto::SimpleQuantity* dose_quantity);

  // .google.fhir.stu3.uscore.UsCoreImmunization.Explanation explanation = 27;
  bool has_explanation() const;
  void clear_explanation();
  static const int kExplanationFieldNumber = 27;
  private:
  const ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation& _internal_explanation() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation& explanation() const;
  ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation* release_explanation();
  ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation* mutable_explanation();
  void set_allocated_explanation(::google::fhir::stu3::uscore::UsCoreImmunization_Explanation* explanation);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreImmunization)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource > contained_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier > identifier_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner > practitioner_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation > note_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreImmunization_Reaction > reaction_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol > vaccination_protocol_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  ::google::fhir::stu3::proto::Narrative* text_;
  ::google::fhir::stu3::proto::ImmunizationStatusCodesCode* status_;
  ::google::fhir::stu3::proto::Boolean* not_given_;
  ::google::fhir::stu3::proto::CodeableConcept* vaccine_code_;
  ::google::fhir::stu3::proto::Reference* patient_;
  ::google::fhir::stu3::proto::Reference* encounter_;
  ::google::fhir::stu3::proto::DateTime* date_;
  ::google::fhir::stu3::proto::Boolean* primary_source_;
  ::google::fhir::stu3::proto::CodeableConcept* report_origin_;
  ::google::fhir::stu3::proto::Reference* location_;
  ::google::fhir::stu3::proto::Reference* manufacturer_;
  ::google::fhir::stu3::proto::String* lot_number_;
  ::google::fhir::stu3::proto::Date* expiration_date_;
  ::google::fhir::stu3::proto::CodeableConcept* site_;
  ::google::fhir::stu3::proto::CodeableConcept* route_;
  ::google::fhir::stu3::proto::SimpleQuantity* dose_quantity_;
  ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation* explanation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreLocation_Position : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreLocation.Position) */ {
 public:
  UsCoreLocation_Position();
  virtual ~UsCoreLocation_Position();

  UsCoreLocation_Position(const UsCoreLocation_Position& from);

  inline UsCoreLocation_Position& operator=(const UsCoreLocation_Position& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreLocation_Position(UsCoreLocation_Position&& from) noexcept
    : UsCoreLocation_Position() {
    *this = ::std::move(from);
  }

  inline UsCoreLocation_Position& operator=(UsCoreLocation_Position&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreLocation_Position& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreLocation_Position* internal_default_instance() {
    return reinterpret_cast<const UsCoreLocation_Position*>(
               &_UsCoreLocation_Position_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(UsCoreLocation_Position* other);
  friend void swap(UsCoreLocation_Position& a, UsCoreLocation_Position& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreLocation_Position* New() const final {
    return CreateMaybeMessage<UsCoreLocation_Position>(NULL);
  }

  UsCoreLocation_Position* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreLocation_Position>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreLocation_Position& from);
  void MergeFrom(const UsCoreLocation_Position& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreLocation_Position* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.Decimal longitude = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Decimal& _internal_longitude() const;
  public:
  const ::google::fhir::stu3::proto::Decimal& longitude() const;
  ::google::fhir::stu3::proto::Decimal* release_longitude();
  ::google::fhir::stu3::proto::Decimal* mutable_longitude();
  void set_allocated_longitude(::google::fhir::stu3::proto::Decimal* longitude);

  // .google.fhir.stu3.proto.Decimal latitude = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Decimal& _internal_latitude() const;
  public:
  const ::google::fhir::stu3::proto::Decimal& latitude() const;
  ::google::fhir::stu3::proto::Decimal* release_latitude();
  ::google::fhir::stu3::proto::Decimal* mutable_latitude();
  void set_allocated_latitude(::google::fhir::stu3::proto::Decimal* latitude);

  // .google.fhir.stu3.proto.Decimal altitude = 6;
  bool has_altitude() const;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::Decimal& _internal_altitude() const;
  public:
  const ::google::fhir::stu3::proto::Decimal& altitude() const;
  ::google::fhir::stu3::proto::Decimal* release_altitude();
  ::google::fhir::stu3::proto::Decimal* mutable_altitude();
  void set_allocated_altitude(::google::fhir::stu3::proto::Decimal* altitude);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreLocation.Position)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::Decimal* longitude_;
  ::google::fhir::stu3::proto::Decimal* latitude_;
  ::google::fhir::stu3::proto::Decimal* altitude_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreLocation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreLocation) */ {
 public:
  UsCoreLocation();
  virtual ~UsCoreLocation();

  UsCoreLocation(const UsCoreLocation& from);

  inline UsCoreLocation& operator=(const UsCoreLocation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreLocation(UsCoreLocation&& from) noexcept
    : UsCoreLocation() {
    *this = ::std::move(from);
  }

  inline UsCoreLocation& operator=(UsCoreLocation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreLocation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreLocation* internal_default_instance() {
    return reinterpret_cast<const UsCoreLocation*>(
               &_UsCoreLocation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(UsCoreLocation* other);
  friend void swap(UsCoreLocation& a, UsCoreLocation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreLocation* New() const final {
    return CreateMaybeMessage<UsCoreLocation>(NULL);
  }

  UsCoreLocation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreLocation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreLocation& from);
  void MergeFrom(const UsCoreLocation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreLocation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreLocation_Position Position;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  int contained_size() const;
  void clear_contained();
  static const int kContainedFieldNumber = 6;
  ::google::fhir::stu3::proto::ContainedResource* mutable_contained(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
      mutable_contained();
  const ::google::fhir::stu3::proto::ContainedResource& contained(int index) const;
  ::google::fhir::stu3::proto::ContainedResource* add_contained();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
      contained() const;

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 8;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  int identifier_size() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 9;
  ::google::fhir::stu3::proto::Identifier* mutable_identifier(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
      mutable_identifier();
  const ::google::fhir::stu3::proto::Identifier& identifier(int index) const;
  ::google::fhir::stu3::proto::Identifier* add_identifier();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
      identifier() const;

  // repeated .google.fhir.stu3.proto.String alias = 13;
  int alias_size() const;
  void clear_alias();
  static const int kAliasFieldNumber = 13;
  ::google::fhir::stu3::proto::String* mutable_alias(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String >*
      mutable_alias();
  const ::google::fhir::stu3::proto::String& alias(int index) const;
  ::google::fhir::stu3::proto::String* add_alias();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String >&
      alias() const;

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 17;
  int telecom_size() const;
  void clear_telecom();
  static const int kTelecomFieldNumber = 17;
  ::google::fhir::stu3::proto::ContactPoint* mutable_telecom(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >*
      mutable_telecom();
  const ::google::fhir::stu3::proto::ContactPoint& telecom(int index) const;
  ::google::fhir::stu3::proto::ContactPoint* add_telecom();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >&
      telecom() const;

  // repeated .google.fhir.stu3.proto.Reference endpoint = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Endpoint"];
  int endpoint_size() const;
  void clear_endpoint();
  static const int kEndpointFieldNumber = 23;
  ::google::fhir::stu3::proto::Reference* mutable_endpoint(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_endpoint();
  const ::google::fhir::stu3::proto::Reference& endpoint(int index) const;
  ::google::fhir::stu3::proto::Reference* add_endpoint();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      endpoint() const;

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // .google.fhir.stu3.proto.Narrative text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Narrative& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::Narrative& text() const;
  ::google::fhir::stu3::proto::Narrative* release_text();
  ::google::fhir::stu3::proto::Narrative* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::Narrative* text);

  // .google.fhir.stu3.proto.LocationStatusCode status = 10;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::LocationStatusCode& _internal_status() const;
  public:
  const ::google::fhir::stu3::proto::LocationStatusCode& status() const;
  ::google::fhir::stu3::proto::LocationStatusCode* release_status();
  ::google::fhir::stu3::proto::LocationStatusCode* mutable_status();
  void set_allocated_status(::google::fhir::stu3::proto::LocationStatusCode* status);

  // .google.fhir.stu3.proto.Coding operational_status = 11;
  bool has_operational_status() const;
  void clear_operational_status();
  static const int kOperationalStatusFieldNumber = 11;
  private:
  const ::google::fhir::stu3::proto::Coding& _internal_operational_status() const;
  public:
  const ::google::fhir::stu3::proto::Coding& operational_status() const;
  ::google::fhir::stu3::proto::Coding* release_operational_status();
  ::google::fhir::stu3::proto::Coding* mutable_operational_status();
  void set_allocated_operational_status(::google::fhir::stu3::proto::Coding* operational_status);

  // .google.fhir.stu3.proto.String name = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 12;
  private:
  const ::google::fhir::stu3::proto::String& _internal_name() const;
  public:
  const ::google::fhir::stu3::proto::String& name() const;
  ::google::fhir::stu3::proto::String* release_name();
  ::google::fhir::stu3::proto::String* mutable_name();
  void set_allocated_name(::google::fhir::stu3::proto::String* name);

  // .google.fhir.stu3.proto.String description = 14;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::String& _internal_description() const;
  public:
  const ::google::fhir::stu3::proto::String& description() const;
  ::google::fhir::stu3::proto::String* release_description();
  ::google::fhir::stu3::proto::String* mutable_description();
  void set_allocated_description(::google::fhir::stu3::proto::String* description);

  // .google.fhir.stu3.proto.LocationModeCode mode = 15;
  bool has_mode() const;
  void clear_mode();
  static const int kModeFieldNumber = 15;
  private:
  const ::google::fhir::stu3::proto::LocationModeCode& _internal_mode() const;
  public:
  const ::google::fhir::stu3::proto::LocationModeCode& mode() const;
  ::google::fhir::stu3::proto::LocationModeCode* release_mode();
  ::google::fhir::stu3::proto::LocationModeCode* mutable_mode();
  void set_allocated_mode(::google::fhir::stu3::proto::LocationModeCode* mode);

  // .google.fhir.stu3.proto.CodeableConcept type = 16;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 16;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_type() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& type() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_type();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_type();
  void set_allocated_type(::google::fhir::stu3::proto::CodeableConcept* type);

  // .google.fhir.stu3.proto.Address address = 18;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 18;
  private:
  const ::google::fhir::stu3::proto::Address& _internal_address() const;
  public:
  const ::google::fhir::stu3::proto::Address& address() const;
  ::google::fhir::stu3::proto::Address* release_address();
  ::google::fhir::stu3::proto::Address* mutable_address();
  void set_allocated_address(::google::fhir::stu3::proto::Address* address);

  // .google.fhir.stu3.proto.CodeableConcept physical_type = 19;
  bool has_physical_type() const;
  void clear_physical_type();
  static const int kPhysicalTypeFieldNumber = 19;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_physical_type() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& physical_type() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_physical_type();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_physical_type();
  void set_allocated_physical_type(::google::fhir::stu3::proto::CodeableConcept* physical_type);

  // .google.fhir.stu3.uscore.UsCoreLocation.Position position = 20;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 20;
  private:
  const ::google::fhir::stu3::uscore::UsCoreLocation_Position& _internal_position() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreLocation_Position& position() const;
  ::google::fhir::stu3::uscore::UsCoreLocation_Position* release_position();
  ::google::fhir::stu3::uscore::UsCoreLocation_Position* mutable_position();
  void set_allocated_position(::google::fhir::stu3::uscore::UsCoreLocation_Position* position);

  // .google.fhir.stu3.proto.Reference managing_organization = 21 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization"];
  bool has_managing_organization() const;
  void clear_managing_organization();
  static const int kManagingOrganizationFieldNumber = 21;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_managing_organization() const;
  public:
  const ::google::fhir::stu3::proto::Reference& managing_organization() const;
  ::google::fhir::stu3::proto::Reference* release_managing_organization();
  ::google::fhir::stu3::proto::Reference* mutable_managing_organization();
  void set_allocated_managing_organization(::google::fhir::stu3::proto::Reference* managing_organization);

  // .google.fhir.stu3.proto.Reference part_of = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  bool has_part_of() const;
  void clear_part_of();
  static const int kPartOfFieldNumber = 22;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_part_of() const;
  public:
  const ::google::fhir::stu3::proto::Reference& part_of() const;
  ::google::fhir::stu3::proto::Reference* release_part_of();
  ::google::fhir::stu3::proto::Reference* mutable_part_of();
  void set_allocated_part_of(::google::fhir::stu3::proto::Reference* part_of);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreLocation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource > contained_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier > identifier_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String > alias_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint > telecom_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > endpoint_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  ::google::fhir::stu3::proto::Narrative* text_;
  ::google::fhir::stu3::proto::LocationStatusCode* status_;
  ::google::fhir::stu3::proto::Coding* operational_status_;
  ::google::fhir::stu3::proto::String* name_;
  ::google::fhir::stu3::proto::String* description_;
  ::google::fhir::stu3::proto::LocationModeCode* mode_;
  ::google::fhir::stu3::proto::CodeableConcept* type_;
  ::google::fhir::stu3::proto::Address* address_;
  ::google::fhir::stu3::proto::CodeableConcept* physical_type_;
  ::google::fhir::stu3::uscore::UsCoreLocation_Position* position_;
  ::google::fhir::stu3::proto::Reference* managing_organization_;
  ::google::fhir::stu3::proto::Reference* part_of_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreMedication_Ingredient_Item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item) */ {
 public:
  UsCoreMedication_Ingredient_Item();
  virtual ~UsCoreMedication_Ingredient_Item();

  UsCoreMedication_Ingredient_Item(const UsCoreMedication_Ingredient_Item& from);

  inline UsCoreMedication_Ingredient_Item& operator=(const UsCoreMedication_Ingredient_Item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreMedication_Ingredient_Item(UsCoreMedication_Ingredient_Item&& from) noexcept
    : UsCoreMedication_Ingredient_Item() {
    *this = ::std::move(from);
  }

  inline UsCoreMedication_Ingredient_Item& operator=(UsCoreMedication_Ingredient_Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreMedication_Ingredient_Item& default_instance();

  enum ItemCase {
    kCodeableConcept = 1,
    kReference = 2,
    ITEM_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreMedication_Ingredient_Item* internal_default_instance() {
    return reinterpret_cast<const UsCoreMedication_Ingredient_Item*>(
               &_UsCoreMedication_Ingredient_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(UsCoreMedication_Ingredient_Item* other);
  friend void swap(UsCoreMedication_Ingredient_Item& a, UsCoreMedication_Ingredient_Item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreMedication_Ingredient_Item* New() const final {
    return CreateMaybeMessage<UsCoreMedication_Ingredient_Item>(NULL);
  }

  UsCoreMedication_Ingredient_Item* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreMedication_Ingredient_Item>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreMedication_Ingredient_Item& from);
  void MergeFrom(const UsCoreMedication_Ingredient_Item& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreMedication_Ingredient_Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
  bool has_codeable_concept() const;
  void clear_codeable_concept();
  static const int kCodeableConceptFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_codeable_concept() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& codeable_concept() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_codeable_concept();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_codeable_concept();
  void set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept);

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Substance", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
  bool has_reference() const;
  void clear_reference();
  static const int kReferenceFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_reference() const;
  public:
  const ::google::fhir::stu3::proto::Reference& reference() const;
  ::google::fhir::stu3::proto::Reference* release_reference();
  ::google::fhir::stu3::proto::Reference* mutable_reference();
  void set_allocated_reference(::google::fhir::stu3::proto::Reference* reference);

  void clear_item();
  ItemCase item_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item)
 private:
  void set_has_codeable_concept();
  void set_has_reference();

  inline bool has_item() const;
  inline void clear_has_item();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ItemUnion {
    ItemUnion() {}
    ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
    ::google::fhir::stu3::proto::Reference* reference_;
  } item_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreMedication_Ingredient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreMedication.Ingredient) */ {
 public:
  UsCoreMedication_Ingredient();
  virtual ~UsCoreMedication_Ingredient();

  UsCoreMedication_Ingredient(const UsCoreMedication_Ingredient& from);

  inline UsCoreMedication_Ingredient& operator=(const UsCoreMedication_Ingredient& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreMedication_Ingredient(UsCoreMedication_Ingredient&& from) noexcept
    : UsCoreMedication_Ingredient() {
    *this = ::std::move(from);
  }

  inline UsCoreMedication_Ingredient& operator=(UsCoreMedication_Ingredient&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreMedication_Ingredient& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreMedication_Ingredient* internal_default_instance() {
    return reinterpret_cast<const UsCoreMedication_Ingredient*>(
               &_UsCoreMedication_Ingredient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(UsCoreMedication_Ingredient* other);
  friend void swap(UsCoreMedication_Ingredient& a, UsCoreMedication_Ingredient& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreMedication_Ingredient* New() const final {
    return CreateMaybeMessage<UsCoreMedication_Ingredient>(NULL);
  }

  UsCoreMedication_Ingredient* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreMedication_Ingredient>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreMedication_Ingredient& from);
  void MergeFrom(const UsCoreMedication_Ingredient& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreMedication_Ingredient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreMedication_Ingredient_Item Item;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item item = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_item() const;
  void clear_item();
  static const int kItemFieldNumber = 4;
  private:
  const ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item& _internal_item() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item& item() const;
  ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item* release_item();
  ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item* mutable_item();
  void set_allocated_item(::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item* item);

  // .google.fhir.stu3.proto.Boolean is_active = 5;
  bool has_is_active() const;
  void clear_is_active();
  static const int kIsActiveFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_is_active() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& is_active() const;
  ::google::fhir::stu3::proto::Boolean* release_is_active();
  ::google::fhir::stu3::proto::Boolean* mutable_is_active();
  void set_allocated_is_active(::google::fhir::stu3::proto::Boolean* is_active);

  // .google.fhir.stu3.proto.Ratio amount = 6;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::Ratio& _internal_amount() const;
  public:
  const ::google::fhir::stu3::proto::Ratio& amount() const;
  ::google::fhir::stu3::proto::Ratio* release_amount();
  ::google::fhir::stu3::proto::Ratio* mutable_amount();
  void set_allocated_amount(::google::fhir::stu3::proto::Ratio* amount);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreMedication.Ingredient)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item* item_;
  ::google::fhir::stu3::proto::Boolean* is_active_;
  ::google::fhir::stu3::proto::Ratio* amount_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreMedication_Package_Content_Item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item) */ {
 public:
  UsCoreMedication_Package_Content_Item();
  virtual ~UsCoreMedication_Package_Content_Item();

  UsCoreMedication_Package_Content_Item(const UsCoreMedication_Package_Content_Item& from);

  inline UsCoreMedication_Package_Content_Item& operator=(const UsCoreMedication_Package_Content_Item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreMedication_Package_Content_Item(UsCoreMedication_Package_Content_Item&& from) noexcept
    : UsCoreMedication_Package_Content_Item() {
    *this = ::std::move(from);
  }

  inline UsCoreMedication_Package_Content_Item& operator=(UsCoreMedication_Package_Content_Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreMedication_Package_Content_Item& default_instance();

  enum ItemCase {
    kCodeableConcept = 1,
    kReference = 2,
    ITEM_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreMedication_Package_Content_Item* internal_default_instance() {
    return reinterpret_cast<const UsCoreMedication_Package_Content_Item*>(
               &_UsCoreMedication_Package_Content_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(UsCoreMedication_Package_Content_Item* other);
  friend void swap(UsCoreMedication_Package_Content_Item& a, UsCoreMedication_Package_Content_Item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreMedication_Package_Content_Item* New() const final {
    return CreateMaybeMessage<UsCoreMedication_Package_Content_Item>(NULL);
  }

  UsCoreMedication_Package_Content_Item* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreMedication_Package_Content_Item>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreMedication_Package_Content_Item& from);
  void MergeFrom(const UsCoreMedication_Package_Content_Item& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreMedication_Package_Content_Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
  bool has_codeable_concept() const;
  void clear_codeable_concept();
  static const int kCodeableConceptFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_codeable_concept() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& codeable_concept() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_codeable_concept();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_codeable_concept();
  void set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept);

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
  bool has_reference() const;
  void clear_reference();
  static const int kReferenceFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_reference() const;
  public:
  const ::google::fhir::stu3::proto::Reference& reference() const;
  ::google::fhir::stu3::proto::Reference* release_reference();
  ::google::fhir::stu3::proto::Reference* mutable_reference();
  void set_allocated_reference(::google::fhir::stu3::proto::Reference* reference);

  void clear_item();
  ItemCase item_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item)
 private:
  void set_has_codeable_concept();
  void set_has_reference();

  inline bool has_item() const;
  inline void clear_has_item();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ItemUnion {
    ItemUnion() {}
    ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
    ::google::fhir::stu3::proto::Reference* reference_;
  } item_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreMedication_Package_Content : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreMedication.Package.Content) */ {
 public:
  UsCoreMedication_Package_Content();
  virtual ~UsCoreMedication_Package_Content();

  UsCoreMedication_Package_Content(const UsCoreMedication_Package_Content& from);

  inline UsCoreMedication_Package_Content& operator=(const UsCoreMedication_Package_Content& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreMedication_Package_Content(UsCoreMedication_Package_Content&& from) noexcept
    : UsCoreMedication_Package_Content() {
    *this = ::std::move(from);
  }

  inline UsCoreMedication_Package_Content& operator=(UsCoreMedication_Package_Content&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreMedication_Package_Content& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreMedication_Package_Content* internal_default_instance() {
    return reinterpret_cast<const UsCoreMedication_Package_Content*>(
               &_UsCoreMedication_Package_Content_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(UsCoreMedication_Package_Content* other);
  friend void swap(UsCoreMedication_Package_Content& a, UsCoreMedication_Package_Content& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreMedication_Package_Content* New() const final {
    return CreateMaybeMessage<UsCoreMedication_Package_Content>(NULL);
  }

  UsCoreMedication_Package_Content* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreMedication_Package_Content>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreMedication_Package_Content& from);
  void MergeFrom(const UsCoreMedication_Package_Content& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreMedication_Package_Content* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreMedication_Package_Content_Item Item;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item item = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_item() const;
  void clear_item();
  static const int kItemFieldNumber = 4;
  private:
  const ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item& _internal_item() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item& item() const;
  ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item* release_item();
  ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item* mutable_item();
  void set_allocated_item(::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item* item);

  // .google.fhir.stu3.proto.SimpleQuantity amount = 5;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::SimpleQuantity& _internal_amount() const;
  public:
  const ::google::fhir::stu3::proto::SimpleQuantity& amount() const;
  ::google::fhir::stu3::proto::SimpleQuantity* release_amount();
  ::google::fhir::stu3::proto::SimpleQuantity* mutable_amount();
  void set_allocated_amount(::google::fhir::stu3::proto::SimpleQuantity* amount);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreMedication.Package.Content)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item* item_;
  ::google::fhir::stu3::proto::SimpleQuantity* amount_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreMedication_Package_Batch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch) */ {
 public:
  UsCoreMedication_Package_Batch();
  virtual ~UsCoreMedication_Package_Batch();

  UsCoreMedication_Package_Batch(const UsCoreMedication_Package_Batch& from);

  inline UsCoreMedication_Package_Batch& operator=(const UsCoreMedication_Package_Batch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreMedication_Package_Batch(UsCoreMedication_Package_Batch&& from) noexcept
    : UsCoreMedication_Package_Batch() {
    *this = ::std::move(from);
  }

  inline UsCoreMedication_Package_Batch& operator=(UsCoreMedication_Package_Batch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreMedication_Package_Batch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreMedication_Package_Batch* internal_default_instance() {
    return reinterpret_cast<const UsCoreMedication_Package_Batch*>(
               &_UsCoreMedication_Package_Batch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(UsCoreMedication_Package_Batch* other);
  friend void swap(UsCoreMedication_Package_Batch& a, UsCoreMedication_Package_Batch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreMedication_Package_Batch* New() const final {
    return CreateMaybeMessage<UsCoreMedication_Package_Batch>(NULL);
  }

  UsCoreMedication_Package_Batch* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreMedication_Package_Batch>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreMedication_Package_Batch& from);
  void MergeFrom(const UsCoreMedication_Package_Batch& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreMedication_Package_Batch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.String lot_number = 4;
  bool has_lot_number() const;
  void clear_lot_number();
  static const int kLotNumberFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::String& _internal_lot_number() const;
  public:
  const ::google::fhir::stu3::proto::String& lot_number() const;
  ::google::fhir::stu3::proto::String* release_lot_number();
  ::google::fhir::stu3::proto::String* mutable_lot_number();
  void set_allocated_lot_number(::google::fhir::stu3::proto::String* lot_number);

  // .google.fhir.stu3.proto.DateTime expiration_date = 5;
  bool has_expiration_date() const;
  void clear_expiration_date();
  static const int kExpirationDateFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_expiration_date() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& expiration_date() const;
  ::google::fhir::stu3::proto::DateTime* release_expiration_date();
  ::google::fhir::stu3::proto::DateTime* mutable_expiration_date();
  void set_allocated_expiration_date(::google::fhir::stu3::proto::DateTime* expiration_date);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::String* lot_number_;
  ::google::fhir::stu3::proto::DateTime* expiration_date_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreMedication_Package : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreMedication.Package) */ {
 public:
  UsCoreMedication_Package();
  virtual ~UsCoreMedication_Package();

  UsCoreMedication_Package(const UsCoreMedication_Package& from);

  inline UsCoreMedication_Package& operator=(const UsCoreMedication_Package& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreMedication_Package(UsCoreMedication_Package&& from) noexcept
    : UsCoreMedication_Package() {
    *this = ::std::move(from);
  }

  inline UsCoreMedication_Package& operator=(UsCoreMedication_Package&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreMedication_Package& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreMedication_Package* internal_default_instance() {
    return reinterpret_cast<const UsCoreMedication_Package*>(
               &_UsCoreMedication_Package_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(UsCoreMedication_Package* other);
  friend void swap(UsCoreMedication_Package& a, UsCoreMedication_Package& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreMedication_Package* New() const final {
    return CreateMaybeMessage<UsCoreMedication_Package>(NULL);
  }

  UsCoreMedication_Package* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreMedication_Package>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreMedication_Package& from);
  void MergeFrom(const UsCoreMedication_Package& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreMedication_Package* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreMedication_Package_Content Content;
  typedef UsCoreMedication_Package_Batch Batch;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.uscore.UsCoreMedication.Package.Content content = 5;
  int content_size() const;
  void clear_content();
  static const int kContentFieldNumber = 5;
  ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content* mutable_content(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content >*
      mutable_content();
  const ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content& content(int index) const;
  ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content* add_content();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content >&
      content() const;

  // repeated .google.fhir.stu3.uscore.UsCoreMedication.Package.Batch batch = 6;
  int batch_size() const;
  void clear_batch();
  static const int kBatchFieldNumber = 6;
  ::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch* mutable_batch(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch >*
      mutable_batch();
  const ::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch& batch(int index) const;
  ::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch* add_batch();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch >&
      batch() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CodeableConcept container = 4;
  bool has_container() const;
  void clear_container();
  static const int kContainerFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_container() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& container() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_container();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_container();
  void set_allocated_container(::google::fhir::stu3::proto::CodeableConcept* container);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreMedication.Package)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content > content_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch > batch_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::CodeableConcept* container_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreMedication : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreMedication) */ {
 public:
  UsCoreMedication();
  virtual ~UsCoreMedication();

  UsCoreMedication(const UsCoreMedication& from);

  inline UsCoreMedication& operator=(const UsCoreMedication& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreMedication(UsCoreMedication&& from) noexcept
    : UsCoreMedication() {
    *this = ::std::move(from);
  }

  inline UsCoreMedication& operator=(UsCoreMedication&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreMedication& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreMedication* internal_default_instance() {
    return reinterpret_cast<const UsCoreMedication*>(
               &_UsCoreMedication_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(UsCoreMedication* other);
  friend void swap(UsCoreMedication& a, UsCoreMedication& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreMedication* New() const final {
    return CreateMaybeMessage<UsCoreMedication>(NULL);
  }

  UsCoreMedication* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreMedication>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreMedication& from);
  void MergeFrom(const UsCoreMedication& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreMedication* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreMedication_Ingredient Ingredient;
  typedef UsCoreMedication_Package Package;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  int contained_size() const;
  void clear_contained();
  static const int kContainedFieldNumber = 6;
  ::google::fhir::stu3::proto::ContainedResource* mutable_contained(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
      mutable_contained();
  const ::google::fhir::stu3::proto::ContainedResource& contained(int index) const;
  ::google::fhir::stu3::proto::ContainedResource* add_contained();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
      contained() const;

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 8;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.uscore.UsCoreMedication.Ingredient ingredient = 15;
  int ingredient_size() const;
  void clear_ingredient();
  static const int kIngredientFieldNumber = 15;
  ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient* mutable_ingredient(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient >*
      mutable_ingredient();
  const ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient& ingredient(int index) const;
  ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient* add_ingredient();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient >&
      ingredient() const;

  // repeated .google.fhir.stu3.proto.Attachment image = 17;
  int image_size() const;
  void clear_image();
  static const int kImageFieldNumber = 17;
  ::google::fhir::stu3::proto::Attachment* mutable_image(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment >*
      mutable_image();
  const ::google::fhir::stu3::proto::Attachment& image(int index) const;
  ::google::fhir::stu3::proto::Attachment* add_image();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment >&
      image() const;

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // .google.fhir.stu3.proto.Narrative text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Narrative& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::Narrative& text() const;
  ::google::fhir::stu3::proto::Narrative* release_text();
  ::google::fhir::stu3::proto::Narrative* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::Narrative* text);

  // .google.fhir.stu3.proto.CodeableConcept code = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 9;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_code() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& code() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_code();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_code();
  void set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code);

  // .google.fhir.stu3.proto.MedicationStatusCode status = 10;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::MedicationStatusCode& _internal_status() const;
  public:
  const ::google::fhir::stu3::proto::MedicationStatusCode& status() const;
  ::google::fhir::stu3::proto::MedicationStatusCode* release_status();
  ::google::fhir::stu3::proto::MedicationStatusCode* mutable_status();
  void set_allocated_status(::google::fhir::stu3::proto::MedicationStatusCode* status);

  // .google.fhir.stu3.proto.Boolean is_brand = 11;
  bool has_is_brand() const;
  void clear_is_brand();
  static const int kIsBrandFieldNumber = 11;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_is_brand() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& is_brand() const;
  ::google::fhir::stu3::proto::Boolean* release_is_brand();
  ::google::fhir::stu3::proto::Boolean* mutable_is_brand();
  void set_allocated_is_brand(::google::fhir::stu3::proto::Boolean* is_brand);

  // .google.fhir.stu3.proto.Boolean is_over_the_counter = 12;
  bool has_is_over_the_counter() const;
  void clear_is_over_the_counter();
  static const int kIsOverTheCounterFieldNumber = 12;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_is_over_the_counter() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& is_over_the_counter() const;
  ::google::fhir::stu3::proto::Boolean* release_is_over_the_counter();
  ::google::fhir::stu3::proto::Boolean* mutable_is_over_the_counter();
  void set_allocated_is_over_the_counter(::google::fhir::stu3::proto::Boolean* is_over_the_counter);

  // .google.fhir.stu3.proto.Reference manufacturer = 13 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  bool has_manufacturer() const;
  void clear_manufacturer();
  static const int kManufacturerFieldNumber = 13;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_manufacturer() const;
  public:
  const ::google::fhir::stu3::proto::Reference& manufacturer() const;
  ::google::fhir::stu3::proto::Reference* release_manufacturer();
  ::google::fhir::stu3::proto::Reference* mutable_manufacturer();
  void set_allocated_manufacturer(::google::fhir::stu3::proto::Reference* manufacturer);

  // .google.fhir.stu3.proto.CodeableConcept form = 14;
  bool has_form() const;
  void clear_form();
  static const int kFormFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_form() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& form() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_form();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_form();
  void set_allocated_form(::google::fhir::stu3::proto::CodeableConcept* form);

  // .google.fhir.stu3.uscore.UsCoreMedication.Package package_value = 16[json_name = "package"];
  bool has_package_value() const;
  void clear_package_value();
  static const int kPackageValueFieldNumber = 16;
  private:
  const ::google::fhir::stu3::uscore::UsCoreMedication_Package& _internal_package_value() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreMedication_Package& package_value() const;
  ::google::fhir::stu3::uscore::UsCoreMedication_Package* release_package_value();
  ::google::fhir::stu3::uscore::UsCoreMedication_Package* mutable_package_value();
  void set_allocated_package_value(::google::fhir::stu3::uscore::UsCoreMedication_Package* package_value);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreMedication)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource > contained_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient > ingredient_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment > image_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  ::google::fhir::stu3::proto::Narrative* text_;
  ::google::fhir::stu3::proto::CodeableConcept* code_;
  ::google::fhir::stu3::proto::MedicationStatusCode* status_;
  ::google::fhir::stu3::proto::Boolean* is_brand_;
  ::google::fhir::stu3::proto::Boolean* is_over_the_counter_;
  ::google::fhir::stu3::proto::Reference* manufacturer_;
  ::google::fhir::stu3::proto::CodeableConcept* form_;
  ::google::fhir::stu3::uscore::UsCoreMedication_Package* package_value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreMedicationrequest_Medication : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication) */ {
 public:
  UsCoreMedicationrequest_Medication();
  virtual ~UsCoreMedicationrequest_Medication();

  UsCoreMedicationrequest_Medication(const UsCoreMedicationrequest_Medication& from);

  inline UsCoreMedicationrequest_Medication& operator=(const UsCoreMedicationrequest_Medication& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreMedicationrequest_Medication(UsCoreMedicationrequest_Medication&& from) noexcept
    : UsCoreMedicationrequest_Medication() {
    *this = ::std::move(from);
  }

  inline UsCoreMedicationrequest_Medication& operator=(UsCoreMedicationrequest_Medication&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreMedicationrequest_Medication& default_instance();

  enum MedicationCase {
    kCodeableConcept = 1,
    kReference = 2,
    MEDICATION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreMedicationrequest_Medication* internal_default_instance() {
    return reinterpret_cast<const UsCoreMedicationrequest_Medication*>(
               &_UsCoreMedicationrequest_Medication_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(UsCoreMedicationrequest_Medication* other);
  friend void swap(UsCoreMedicationrequest_Medication& a, UsCoreMedicationrequest_Medication& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreMedicationrequest_Medication* New() const final {
    return CreateMaybeMessage<UsCoreMedicationrequest_Medication>(NULL);
  }

  UsCoreMedicationrequest_Medication* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreMedicationrequest_Medication>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreMedicationrequest_Medication& from);
  void MergeFrom(const UsCoreMedicationrequest_Medication& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreMedicationrequest_Medication* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
  bool has_codeable_concept() const;
  void clear_codeable_concept();
  static const int kCodeableConceptFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_codeable_concept() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& codeable_concept() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_codeable_concept();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_codeable_concept();
  void set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept);

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
  bool has_reference() const;
  void clear_reference();
  static const int kReferenceFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_reference() const;
  public:
  const ::google::fhir::stu3::proto::Reference& reference() const;
  ::google::fhir::stu3::proto::Reference* release_reference();
  ::google::fhir::stu3::proto::Reference* mutable_reference();
  void set_allocated_reference(::google::fhir::stu3::proto::Reference* reference);

  void clear_medication();
  MedicationCase medication_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication)
 private:
  void set_has_codeable_concept();
  void set_has_reference();

  inline bool has_medication() const;
  inline void clear_has_medication();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union MedicationUnion {
    MedicationUnion() {}
    ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
    ::google::fhir::stu3::proto::Reference* reference_;
  } medication_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreMedicationrequest_Requester : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester) */ {
 public:
  UsCoreMedicationrequest_Requester();
  virtual ~UsCoreMedicationrequest_Requester();

  UsCoreMedicationrequest_Requester(const UsCoreMedicationrequest_Requester& from);

  inline UsCoreMedicationrequest_Requester& operator=(const UsCoreMedicationrequest_Requester& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreMedicationrequest_Requester(UsCoreMedicationrequest_Requester&& from) noexcept
    : UsCoreMedicationrequest_Requester() {
    *this = ::std::move(from);
  }

  inline UsCoreMedicationrequest_Requester& operator=(UsCoreMedicationrequest_Requester&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreMedicationrequest_Requester& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreMedicationrequest_Requester* internal_default_instance() {
    return reinterpret_cast<const UsCoreMedicationrequest_Requester*>(
               &_UsCoreMedicationrequest_Requester_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(UsCoreMedicationrequest_Requester* other);
  friend void swap(UsCoreMedicationrequest_Requester& a, UsCoreMedicationrequest_Requester& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreMedicationrequest_Requester* New() const final {
    return CreateMaybeMessage<UsCoreMedicationrequest_Requester>(NULL);
  }

  UsCoreMedicationrequest_Requester* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreMedicationrequest_Requester>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreMedicationrequest_Requester& from);
  void MergeFrom(const UsCoreMedicationrequest_Requester& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreMedicationrequest_Requester* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.Reference agent = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner"];
  bool has_agent() const;
  void clear_agent();
  static const int kAgentFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_agent() const;
  public:
  const ::google::fhir::stu3::proto::Reference& agent() const;
  ::google::fhir::stu3::proto::Reference* release_agent();
  ::google::fhir::stu3::proto::Reference* mutable_agent();
  void set_allocated_agent(::google::fhir::stu3::proto::Reference* agent);

  // .google.fhir.stu3.proto.Reference on_behalf_of = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  bool has_on_behalf_of() const;
  void clear_on_behalf_of();
  static const int kOnBehalfOfFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_on_behalf_of() const;
  public:
  const ::google::fhir::stu3::proto::Reference& on_behalf_of() const;
  ::google::fhir::stu3::proto::Reference* release_on_behalf_of();
  ::google::fhir::stu3::proto::Reference* mutable_on_behalf_of();
  void set_allocated_on_behalf_of(::google::fhir::stu3::proto::Reference* on_behalf_of);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::Reference* agent_;
  ::google::fhir::stu3::proto::Reference* on_behalf_of_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreMedicationrequest_DispenseRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest) */ {
 public:
  UsCoreMedicationrequest_DispenseRequest();
  virtual ~UsCoreMedicationrequest_DispenseRequest();

  UsCoreMedicationrequest_DispenseRequest(const UsCoreMedicationrequest_DispenseRequest& from);

  inline UsCoreMedicationrequest_DispenseRequest& operator=(const UsCoreMedicationrequest_DispenseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreMedicationrequest_DispenseRequest(UsCoreMedicationrequest_DispenseRequest&& from) noexcept
    : UsCoreMedicationrequest_DispenseRequest() {
    *this = ::std::move(from);
  }

  inline UsCoreMedicationrequest_DispenseRequest& operator=(UsCoreMedicationrequest_DispenseRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreMedicationrequest_DispenseRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreMedicationrequest_DispenseRequest* internal_default_instance() {
    return reinterpret_cast<const UsCoreMedicationrequest_DispenseRequest*>(
               &_UsCoreMedicationrequest_DispenseRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(UsCoreMedicationrequest_DispenseRequest* other);
  friend void swap(UsCoreMedicationrequest_DispenseRequest& a, UsCoreMedicationrequest_DispenseRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreMedicationrequest_DispenseRequest* New() const final {
    return CreateMaybeMessage<UsCoreMedicationrequest_DispenseRequest>(NULL);
  }

  UsCoreMedicationrequest_DispenseRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreMedicationrequest_DispenseRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreMedicationrequest_DispenseRequest& from);
  void MergeFrom(const UsCoreMedicationrequest_DispenseRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreMedicationrequest_DispenseRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.Period validity_period = 4;
  bool has_validity_period() const;
  void clear_validity_period();
  static const int kValidityPeriodFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_validity_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& validity_period() const;
  ::google::fhir::stu3::proto::Period* release_validity_period();
  ::google::fhir::stu3::proto::Period* mutable_validity_period();
  void set_allocated_validity_period(::google::fhir::stu3::proto::Period* validity_period);

  // .google.fhir.stu3.proto.PositiveInt number_of_repeats_allowed = 5;
  bool has_number_of_repeats_allowed() const;
  void clear_number_of_repeats_allowed();
  static const int kNumberOfRepeatsAllowedFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::PositiveInt& _internal_number_of_repeats_allowed() const;
  public:
  const ::google::fhir::stu3::proto::PositiveInt& number_of_repeats_allowed() const;
  ::google::fhir::stu3::proto::PositiveInt* release_number_of_repeats_allowed();
  ::google::fhir::stu3::proto::PositiveInt* mutable_number_of_repeats_allowed();
  void set_allocated_number_of_repeats_allowed(::google::fhir::stu3::proto::PositiveInt* number_of_repeats_allowed);

  // .google.fhir.stu3.proto.SimpleQuantity quantity = 6;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::SimpleQuantity& _internal_quantity() const;
  public:
  const ::google::fhir::stu3::proto::SimpleQuantity& quantity() const;
  ::google::fhir::stu3::proto::SimpleQuantity* release_quantity();
  ::google::fhir::stu3::proto::SimpleQuantity* mutable_quantity();
  void set_allocated_quantity(::google::fhir::stu3::proto::SimpleQuantity* quantity);

  // .google.fhir.stu3.proto.Duration expected_supply_duration = 7;
  bool has_expected_supply_duration() const;
  void clear_expected_supply_duration();
  static const int kExpectedSupplyDurationFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::Duration& _internal_expected_supply_duration() const;
  public:
  const ::google::fhir::stu3::proto::Duration& expected_supply_duration() const;
  ::google::fhir::stu3::proto::Duration* release_expected_supply_duration();
  ::google::fhir::stu3::proto::Duration* mutable_expected_supply_duration();
  void set_allocated_expected_supply_duration(::google::fhir::stu3::proto::Duration* expected_supply_duration);

  // .google.fhir.stu3.proto.Reference performer = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  bool has_performer() const;
  void clear_performer();
  static const int kPerformerFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_performer() const;
  public:
  const ::google::fhir::stu3::proto::Reference& performer() const;
  ::google::fhir::stu3::proto::Reference* release_performer();
  ::google::fhir::stu3::proto::Reference* mutable_performer();
  void set_allocated_performer(::google::fhir::stu3::proto::Reference* performer);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::Period* validity_period_;
  ::google::fhir::stu3::proto::PositiveInt* number_of_repeats_allowed_;
  ::google::fhir::stu3::proto::SimpleQuantity* quantity_;
  ::google::fhir::stu3::proto::Duration* expected_supply_duration_;
  ::google::fhir::stu3::proto::Reference* performer_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreMedicationrequest_Substitution : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution) */ {
 public:
  UsCoreMedicationrequest_Substitution();
  virtual ~UsCoreMedicationrequest_Substitution();

  UsCoreMedicationrequest_Substitution(const UsCoreMedicationrequest_Substitution& from);

  inline UsCoreMedicationrequest_Substitution& operator=(const UsCoreMedicationrequest_Substitution& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreMedicationrequest_Substitution(UsCoreMedicationrequest_Substitution&& from) noexcept
    : UsCoreMedicationrequest_Substitution() {
    *this = ::std::move(from);
  }

  inline UsCoreMedicationrequest_Substitution& operator=(UsCoreMedicationrequest_Substitution&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreMedicationrequest_Substitution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreMedicationrequest_Substitution* internal_default_instance() {
    return reinterpret_cast<const UsCoreMedicationrequest_Substitution*>(
               &_UsCoreMedicationrequest_Substitution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(UsCoreMedicationrequest_Substitution* other);
  friend void swap(UsCoreMedicationrequest_Substitution& a, UsCoreMedicationrequest_Substitution& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreMedicationrequest_Substitution* New() const final {
    return CreateMaybeMessage<UsCoreMedicationrequest_Substitution>(NULL);
  }

  UsCoreMedicationrequest_Substitution* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreMedicationrequest_Substitution>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreMedicationrequest_Substitution& from);
  void MergeFrom(const UsCoreMedicationrequest_Substitution& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreMedicationrequest_Substitution* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.Boolean allowed = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_allowed() const;
  void clear_allowed();
  static const int kAllowedFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_allowed() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& allowed() const;
  ::google::fhir::stu3::proto::Boolean* release_allowed();
  ::google::fhir::stu3::proto::Boolean* mutable_allowed();
  void set_allocated_allowed(::google::fhir::stu3::proto::Boolean* allowed);

  // .google.fhir.stu3.proto.CodeableConcept reason = 5;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_reason() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& reason() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_reason();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_reason();
  void set_allocated_reason(::google::fhir::stu3::proto::CodeableConcept* reason);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::Boolean* allowed_;
  ::google::fhir::stu3::proto::CodeableConcept* reason_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreMedicationrequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreMedicationrequest) */ {
 public:
  UsCoreMedicationrequest();
  virtual ~UsCoreMedicationrequest();

  UsCoreMedicationrequest(const UsCoreMedicationrequest& from);

  inline UsCoreMedicationrequest& operator=(const UsCoreMedicationrequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreMedicationrequest(UsCoreMedicationrequest&& from) noexcept
    : UsCoreMedicationrequest() {
    *this = ::std::move(from);
  }

  inline UsCoreMedicationrequest& operator=(UsCoreMedicationrequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreMedicationrequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreMedicationrequest* internal_default_instance() {
    return reinterpret_cast<const UsCoreMedicationrequest*>(
               &_UsCoreMedicationrequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(UsCoreMedicationrequest* other);
  friend void swap(UsCoreMedicationrequest& a, UsCoreMedicationrequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreMedicationrequest* New() const final {
    return CreateMaybeMessage<UsCoreMedicationrequest>(NULL);
  }

  UsCoreMedicationrequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreMedicationrequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreMedicationrequest& from);
  void MergeFrom(const UsCoreMedicationrequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreMedicationrequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreMedicationrequest_Medication Medication;
  typedef UsCoreMedicationrequest_Requester Requester;
  typedef UsCoreMedicationrequest_DispenseRequest DispenseRequest;
  typedef UsCoreMedicationrequest_Substitution Substitution;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  int contained_size() const;
  void clear_contained();
  static const int kContainedFieldNumber = 6;
  ::google::fhir::stu3::proto::ContainedResource* mutable_contained(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
      mutable_contained();
  const ::google::fhir::stu3::proto::ContainedResource& contained(int index) const;
  ::google::fhir::stu3::proto::ContainedResource* add_contained();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
      contained() const;

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 8;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  int identifier_size() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 9;
  ::google::fhir::stu3::proto::Identifier* mutable_identifier(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
      mutable_identifier();
  const ::google::fhir::stu3::proto::Identifier& identifier(int index) const;
  ::google::fhir::stu3::proto::Identifier* add_identifier();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
      identifier() const;

  // repeated .google.fhir.stu3.proto.Reference definition = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ActivityDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition"];
  int definition_size() const;
  void clear_definition();
  static const int kDefinitionFieldNumber = 10;
  ::google::fhir::stu3::proto::Reference* mutable_definition(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_definition();
  const ::google::fhir::stu3::proto::Reference& definition(int index) const;
  ::google::fhir::stu3::proto::Reference* add_definition();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      definition() const;

  // repeated .google.fhir.stu3.proto.Reference based_on = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  int based_on_size() const;
  void clear_based_on();
  static const int kBasedOnFieldNumber = 11;
  ::google::fhir::stu3::proto::Reference* mutable_based_on(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_based_on();
  const ::google::fhir::stu3::proto::Reference& based_on(int index) const;
  ::google::fhir::stu3::proto::Reference* add_based_on();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      based_on() const;

  // repeated .google.fhir.stu3.proto.Reference supporting_information = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  int supporting_information_size() const;
  void clear_supporting_information();
  static const int kSupportingInformationFieldNumber = 20;
  ::google::fhir::stu3::proto::Reference* mutable_supporting_information(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_supporting_information();
  const ::google::fhir::stu3::proto::Reference& supporting_information(int index) const;
  ::google::fhir::stu3::proto::Reference* add_supporting_information();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      supporting_information() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 24;
  int reason_code_size() const;
  void clear_reason_code();
  static const int kReasonCodeFieldNumber = 24;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_reason_code(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_reason_code();
  const ::google::fhir::stu3::proto::CodeableConcept& reason_code(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_reason_code();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      reason_code() const;

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  int reason_reference_size() const;
  void clear_reason_reference();
  static const int kReasonReferenceFieldNumber = 25;
  ::google::fhir::stu3::proto::Reference* mutable_reason_reference(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_reason_reference();
  const ::google::fhir::stu3::proto::Reference& reason_reference(int index) const;
  ::google::fhir::stu3::proto::Reference* add_reason_reference();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      reason_reference() const;

  // repeated .google.fhir.stu3.proto.Annotation note = 26;
  int note_size() const;
  void clear_note();
  static const int kNoteFieldNumber = 26;
  ::google::fhir::stu3::proto::Annotation* mutable_note(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
      mutable_note();
  const ::google::fhir::stu3::proto::Annotation& note(int index) const;
  ::google::fhir::stu3::proto::Annotation* add_note();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
      note() const;

  // repeated .google.fhir.stu3.proto.Dosage dosage_instruction = 27;
  int dosage_instruction_size() const;
  void clear_dosage_instruction();
  static const int kDosageInstructionFieldNumber = 27;
  ::google::fhir::stu3::proto::Dosage* mutable_dosage_instruction(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Dosage >*
      mutable_dosage_instruction();
  const ::google::fhir::stu3::proto::Dosage& dosage_instruction(int index) const;
  ::google::fhir::stu3::proto::Dosage* add_dosage_instruction();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Dosage >&
      dosage_instruction() const;

  // repeated .google.fhir.stu3.proto.Reference detected_issue = 31 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DetectedIssue"];
  int detected_issue_size() const;
  void clear_detected_issue();
  static const int kDetectedIssueFieldNumber = 31;
  ::google::fhir::stu3::proto::Reference* mutable_detected_issue(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_detected_issue();
  const ::google::fhir::stu3::proto::Reference& detected_issue(int index) const;
  ::google::fhir::stu3::proto::Reference* add_detected_issue();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      detected_issue() const;

  // repeated .google.fhir.stu3.proto.Reference event_history = 32 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Provenance"];
  int event_history_size() const;
  void clear_event_history();
  static const int kEventHistoryFieldNumber = 32;
  ::google::fhir::stu3::proto::Reference* mutable_event_history(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_event_history();
  const ::google::fhir::stu3::proto::Reference& event_history(int index) const;
  ::google::fhir::stu3::proto::Reference* add_event_history();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      event_history() const;

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // .google.fhir.stu3.proto.Narrative text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Narrative& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::Narrative& text() const;
  ::google::fhir::stu3::proto::Narrative* release_text();
  ::google::fhir::stu3::proto::Narrative* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::Narrative* text);

  // .google.fhir.stu3.proto.Identifier group_identifier = 12;
  bool has_group_identifier() const;
  void clear_group_identifier();
  static const int kGroupIdentifierFieldNumber = 12;
  private:
  const ::google::fhir::stu3::proto::Identifier& _internal_group_identifier() const;
  public:
  const ::google::fhir::stu3::proto::Identifier& group_identifier() const;
  ::google::fhir::stu3::proto::Identifier* release_group_identifier();
  ::google::fhir::stu3::proto::Identifier* mutable_group_identifier();
  void set_allocated_group_identifier(::google::fhir::stu3::proto::Identifier* group_identifier);

  // .google.fhir.stu3.proto.MedicationRequestStatusCode status = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 13;
  private:
  const ::google::fhir::stu3::proto::MedicationRequestStatusCode& _internal_status() const;
  public:
  const ::google::fhir::stu3::proto::MedicationRequestStatusCode& status() const;
  ::google::fhir::stu3::proto::MedicationRequestStatusCode* release_status();
  ::google::fhir::stu3::proto::MedicationRequestStatusCode* mutable_status();
  void set_allocated_status(::google::fhir::stu3::proto::MedicationRequestStatusCode* status);

  // .google.fhir.stu3.proto.MedicationRequestIntentCode intent = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_intent() const;
  void clear_intent();
  static const int kIntentFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::MedicationRequestIntentCode& _internal_intent() const;
  public:
  const ::google::fhir::stu3::proto::MedicationRequestIntentCode& intent() const;
  ::google::fhir::stu3::proto::MedicationRequestIntentCode* release_intent();
  ::google::fhir::stu3::proto::MedicationRequestIntentCode* mutable_intent();
  void set_allocated_intent(::google::fhir::stu3::proto::MedicationRequestIntentCode* intent);

  // .google.fhir.stu3.proto.CodeableConcept category = 15;
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 15;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_category() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& category() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_category();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_category();
  void set_allocated_category(::google::fhir::stu3::proto::CodeableConcept* category);

  // .google.fhir.stu3.proto.MedicationRequestPriorityCode priority = 16;
  bool has_priority() const;
  void clear_priority();
  static const int kPriorityFieldNumber = 16;
  private:
  const ::google::fhir::stu3::proto::MedicationRequestPriorityCode& _internal_priority() const;
  public:
  const ::google::fhir::stu3::proto::MedicationRequestPriorityCode& priority() const;
  ::google::fhir::stu3::proto::MedicationRequestPriorityCode* release_priority();
  ::google::fhir::stu3::proto::MedicationRequestPriorityCode* mutable_priority();
  void set_allocated_priority(::google::fhir::stu3::proto::MedicationRequestPriorityCode* priority);

  // .google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication medication = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_medication() const;
  void clear_medication();
  static const int kMedicationFieldNumber = 17;
  private:
  const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication& _internal_medication() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication& medication() const;
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication* release_medication();
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication* mutable_medication();
  void set_allocated_medication(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication* medication);

  // .google.fhir.stu3.proto.Reference subject = 18 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  bool has_subject() const;
  void clear_subject();
  static const int kSubjectFieldNumber = 18;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_subject() const;
  public:
  const ::google::fhir::stu3::proto::Reference& subject() const;
  ::google::fhir::stu3::proto::Reference* release_subject();
  ::google::fhir::stu3::proto::Reference* mutable_subject();
  void set_allocated_subject(::google::fhir::stu3::proto::Reference* subject);

  // .google.fhir.stu3.proto.Reference context = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 19;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_context() const;
  public:
  const ::google::fhir::stu3::proto::Reference& context() const;
  ::google::fhir::stu3::proto::Reference* release_context();
  ::google::fhir::stu3::proto::Reference* mutable_context();
  void set_allocated_context(::google::fhir::stu3::proto::Reference* context);

  // .google.fhir.stu3.proto.DateTime authored_on = 21 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_authored_on() const;
  void clear_authored_on();
  static const int kAuthoredOnFieldNumber = 21;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_authored_on() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& authored_on() const;
  ::google::fhir::stu3::proto::DateTime* release_authored_on();
  ::google::fhir::stu3::proto::DateTime* mutable_authored_on();
  void set_allocated_authored_on(::google::fhir::stu3::proto::DateTime* authored_on);

  // .google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester requester = 22 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_requester() const;
  void clear_requester();
  static const int kRequesterFieldNumber = 22;
  private:
  const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester& _internal_requester() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester& requester() const;
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester* release_requester();
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester* mutable_requester();
  void set_allocated_requester(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester* requester);

  // .google.fhir.stu3.proto.Reference recorder = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
  bool has_recorder() const;
  void clear_recorder();
  static const int kRecorderFieldNumber = 23;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_recorder() const;
  public:
  const ::google::fhir::stu3::proto::Reference& recorder() const;
  ::google::fhir::stu3::proto::Reference* release_recorder();
  ::google::fhir::stu3::proto::Reference* mutable_recorder();
  void set_allocated_recorder(::google::fhir::stu3::proto::Reference* recorder);

  // .google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest dispense_request = 28;
  bool has_dispense_request() const;
  void clear_dispense_request();
  static const int kDispenseRequestFieldNumber = 28;
  private:
  const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest& _internal_dispense_request() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest& dispense_request() const;
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest* release_dispense_request();
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest* mutable_dispense_request();
  void set_allocated_dispense_request(::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest* dispense_request);

  // .google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution substitution = 29;
  bool has_substitution() const;
  void clear_substitution();
  static const int kSubstitutionFieldNumber = 29;
  private:
  const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution& _internal_substitution() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution& substitution() const;
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution* release_substitution();
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution* mutable_substitution();
  void set_allocated_substitution(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution* substitution);

  // .google.fhir.stu3.proto.Reference prior_prescription = 30 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest"];
  bool has_prior_prescription() const;
  void clear_prior_prescription();
  static const int kPriorPrescriptionFieldNumber = 30;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_prior_prescription() const;
  public:
  const ::google::fhir::stu3::proto::Reference& prior_prescription() const;
  ::google::fhir::stu3::proto::Reference* release_prior_prescription();
  ::google::fhir::stu3::proto::Reference* mutable_prior_prescription();
  void set_allocated_prior_prescription(::google::fhir::stu3::proto::Reference* prior_prescription);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreMedicationrequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource > contained_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier > identifier_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > definition_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > based_on_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > supporting_information_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > reason_code_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > reason_reference_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation > note_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Dosage > dosage_instruction_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > detected_issue_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > event_history_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  ::google::fhir::stu3::proto::Narrative* text_;
  ::google::fhir::stu3::proto::Identifier* group_identifier_;
  ::google::fhir::stu3::proto::MedicationRequestStatusCode* status_;
  ::google::fhir::stu3::proto::MedicationRequestIntentCode* intent_;
  ::google::fhir::stu3::proto::CodeableConcept* category_;
  ::google::fhir::stu3::proto::MedicationRequestPriorityCode* priority_;
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication* medication_;
  ::google::fhir::stu3::proto::Reference* subject_;
  ::google::fhir::stu3::proto::Reference* context_;
  ::google::fhir::stu3::proto::DateTime* authored_on_;
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester* requester_;
  ::google::fhir::stu3::proto::Reference* recorder_;
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest* dispense_request_;
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution* substitution_;
  ::google::fhir::stu3::proto::Reference* prior_prescription_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreMedicationstatement_Medication : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication) */ {
 public:
  UsCoreMedicationstatement_Medication();
  virtual ~UsCoreMedicationstatement_Medication();

  UsCoreMedicationstatement_Medication(const UsCoreMedicationstatement_Medication& from);

  inline UsCoreMedicationstatement_Medication& operator=(const UsCoreMedicationstatement_Medication& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreMedicationstatement_Medication(UsCoreMedicationstatement_Medication&& from) noexcept
    : UsCoreMedicationstatement_Medication() {
    *this = ::std::move(from);
  }

  inline UsCoreMedicationstatement_Medication& operator=(UsCoreMedicationstatement_Medication&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreMedicationstatement_Medication& default_instance();

  enum MedicationCase {
    kCodeableConcept = 1,
    kReference = 2,
    MEDICATION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreMedicationstatement_Medication* internal_default_instance() {
    return reinterpret_cast<const UsCoreMedicationstatement_Medication*>(
               &_UsCoreMedicationstatement_Medication_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(UsCoreMedicationstatement_Medication* other);
  friend void swap(UsCoreMedicationstatement_Medication& a, UsCoreMedicationstatement_Medication& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreMedicationstatement_Medication* New() const final {
    return CreateMaybeMessage<UsCoreMedicationstatement_Medication>(NULL);
  }

  UsCoreMedicationstatement_Medication* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreMedicationstatement_Medication>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreMedicationstatement_Medication& from);
  void MergeFrom(const UsCoreMedicationstatement_Medication& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreMedicationstatement_Medication* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
  bool has_codeable_concept() const;
  void clear_codeable_concept();
  static const int kCodeableConceptFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_codeable_concept() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& codeable_concept() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_codeable_concept();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_codeable_concept();
  void set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept);

  // .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
  bool has_reference() const;
  void clear_reference();
  static const int kReferenceFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_reference() const;
  public:
  const ::google::fhir::stu3::proto::Reference& reference() const;
  ::google::fhir::stu3::proto::Reference* release_reference();
  ::google::fhir::stu3::proto::Reference* mutable_reference();
  void set_allocated_reference(::google::fhir::stu3::proto::Reference* reference);

  void clear_medication();
  MedicationCase medication_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication)
 private:
  void set_has_codeable_concept();
  void set_has_reference();

  inline bool has_medication() const;
  inline void clear_has_medication();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union MedicationUnion {
    MedicationUnion() {}
    ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
    ::google::fhir::stu3::proto::Reference* reference_;
  } medication_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreMedicationstatement_Effective : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective) */ {
 public:
  UsCoreMedicationstatement_Effective();
  virtual ~UsCoreMedicationstatement_Effective();

  UsCoreMedicationstatement_Effective(const UsCoreMedicationstatement_Effective& from);

  inline UsCoreMedicationstatement_Effective& operator=(const UsCoreMedicationstatement_Effective& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreMedicationstatement_Effective(UsCoreMedicationstatement_Effective&& from) noexcept
    : UsCoreMedicationstatement_Effective() {
    *this = ::std::move(from);
  }

  inline UsCoreMedicationstatement_Effective& operator=(UsCoreMedicationstatement_Effective&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreMedicationstatement_Effective& default_instance();

  enum EffectiveCase {
    kDateTime = 1,
    kPeriod = 2,
    EFFECTIVE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreMedicationstatement_Effective* internal_default_instance() {
    return reinterpret_cast<const UsCoreMedicationstatement_Effective*>(
               &_UsCoreMedicationstatement_Effective_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(UsCoreMedicationstatement_Effective* other);
  friend void swap(UsCoreMedicationstatement_Effective& a, UsCoreMedicationstatement_Effective& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreMedicationstatement_Effective* New() const final {
    return CreateMaybeMessage<UsCoreMedicationstatement_Effective>(NULL);
  }

  UsCoreMedicationstatement_Effective* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreMedicationstatement_Effective>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreMedicationstatement_Effective& from);
  void MergeFrom(const UsCoreMedicationstatement_Effective& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreMedicationstatement_Effective* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  // .google.fhir.stu3.proto.Period period = 2;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  void clear_effective();
  EffectiveCase effective_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective)
 private:
  void set_has_date_time();
  void set_has_period();

  inline bool has_effective() const;
  inline void clear_has_effective();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union EffectiveUnion {
    EffectiveUnion() {}
    ::google::fhir::stu3::proto::DateTime* date_time_;
    ::google::fhir::stu3::proto::Period* period_;
  } effective_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreMedicationstatement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreMedicationstatement) */ {
 public:
  UsCoreMedicationstatement();
  virtual ~UsCoreMedicationstatement();

  UsCoreMedicationstatement(const UsCoreMedicationstatement& from);

  inline UsCoreMedicationstatement& operator=(const UsCoreMedicationstatement& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreMedicationstatement(UsCoreMedicationstatement&& from) noexcept
    : UsCoreMedicationstatement() {
    *this = ::std::move(from);
  }

  inline UsCoreMedicationstatement& operator=(UsCoreMedicationstatement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreMedicationstatement& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreMedicationstatement* internal_default_instance() {
    return reinterpret_cast<const UsCoreMedicationstatement*>(
               &_UsCoreMedicationstatement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(UsCoreMedicationstatement* other);
  friend void swap(UsCoreMedicationstatement& a, UsCoreMedicationstatement& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreMedicationstatement* New() const final {
    return CreateMaybeMessage<UsCoreMedicationstatement>(NULL);
  }

  UsCoreMedicationstatement* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreMedicationstatement>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreMedicationstatement& from);
  void MergeFrom(const UsCoreMedicationstatement& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreMedicationstatement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreMedicationstatement_Medication Medication;
  typedef UsCoreMedicationstatement_Effective Effective;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  int contained_size() const;
  void clear_contained();
  static const int kContainedFieldNumber = 6;
  ::google::fhir::stu3::proto::ContainedResource* mutable_contained(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
      mutable_contained();
  const ::google::fhir::stu3::proto::ContainedResource& contained(int index) const;
  ::google::fhir::stu3::proto::ContainedResource* add_contained();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
      contained() const;

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 8;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  int identifier_size() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 9;
  ::google::fhir::stu3::proto::Identifier* mutable_identifier(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
      mutable_identifier();
  const ::google::fhir::stu3::proto::Identifier& identifier(int index) const;
  ::google::fhir::stu3::proto::Identifier* add_identifier();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
      identifier() const;

  // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  int based_on_size() const;
  void clear_based_on();
  static const int kBasedOnFieldNumber = 10;
  ::google::fhir::stu3::proto::Reference* mutable_based_on(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_based_on();
  const ::google::fhir::stu3::proto::Reference& based_on(int index) const;
  ::google::fhir::stu3::proto::Reference* add_based_on();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      based_on() const;

  // repeated .google.fhir.stu3.proto.Reference part_of = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationAdministration", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationDispense", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationStatement", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Procedure", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  int part_of_size() const;
  void clear_part_of();
  static const int kPartOfFieldNumber = 11;
  ::google::fhir::stu3::proto::Reference* mutable_part_of(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_part_of();
  const ::google::fhir::stu3::proto::Reference& part_of(int index) const;
  ::google::fhir::stu3::proto::Reference* add_part_of();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      part_of() const;

  // repeated .google.fhir.stu3.proto.Reference derived_from = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
  int derived_from_size() const;
  void clear_derived_from();
  static const int kDerivedFromFieldNumber = 20;
  ::google::fhir::stu3::proto::Reference* mutable_derived_from(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_derived_from();
  const ::google::fhir::stu3::proto::Reference& derived_from(int index) const;
  ::google::fhir::stu3::proto::Reference* add_derived_from();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      derived_from() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_not_taken = 22;
  int reason_not_taken_size() const;
  void clear_reason_not_taken();
  static const int kReasonNotTakenFieldNumber = 22;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_reason_not_taken(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_reason_not_taken();
  const ::google::fhir::stu3::proto::CodeableConcept& reason_not_taken(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_reason_not_taken();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      reason_not_taken() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 23;
  int reason_code_size() const;
  void clear_reason_code();
  static const int kReasonCodeFieldNumber = 23;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_reason_code(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_reason_code();
  const ::google::fhir::stu3::proto::CodeableConcept& reason_code(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_reason_code();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      reason_code() const;

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  int reason_reference_size() const;
  void clear_reason_reference();
  static const int kReasonReferenceFieldNumber = 24;
  ::google::fhir::stu3::proto::Reference* mutable_reason_reference(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_reason_reference();
  const ::google::fhir::stu3::proto::Reference& reason_reference(int index) const;
  ::google::fhir::stu3::proto::Reference* add_reason_reference();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      reason_reference() const;

  // repeated .google.fhir.stu3.proto.Annotation note = 25;
  int note_size() const;
  void clear_note();
  static const int kNoteFieldNumber = 25;
  ::google::fhir::stu3::proto::Annotation* mutable_note(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
      mutable_note();
  const ::google::fhir::stu3::proto::Annotation& note(int index) const;
  ::google::fhir::stu3::proto::Annotation* add_note();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
      note() const;

  // repeated .google.fhir.stu3.proto.Dosage dosage = 26;
  int dosage_size() const;
  void clear_dosage();
  static const int kDosageFieldNumber = 26;
  ::google::fhir::stu3::proto::Dosage* mutable_dosage(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Dosage >*
      mutable_dosage();
  const ::google::fhir::stu3::proto::Dosage& dosage(int index) const;
  ::google::fhir::stu3::proto::Dosage* add_dosage();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Dosage >&
      dosage() const;

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // .google.fhir.stu3.proto.Narrative text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Narrative& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::Narrative& text() const;
  ::google::fhir::stu3::proto::Narrative* release_text();
  ::google::fhir::stu3::proto::Narrative* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::Narrative* text);

  // .google.fhir.stu3.proto.Reference context = 12 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 12;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_context() const;
  public:
  const ::google::fhir::stu3::proto::Reference& context() const;
  ::google::fhir::stu3::proto::Reference* release_context();
  ::google::fhir::stu3::proto::Reference* mutable_context();
  void set_allocated_context(::google::fhir::stu3::proto::Reference* context);

  // .google.fhir.stu3.proto.MedicationStatementStatusCode status = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 13;
  private:
  const ::google::fhir::stu3::proto::MedicationStatementStatusCode& _internal_status() const;
  public:
  const ::google::fhir::stu3::proto::MedicationStatementStatusCode& status() const;
  ::google::fhir::stu3::proto::MedicationStatementStatusCode* release_status();
  ::google::fhir::stu3::proto::MedicationStatementStatusCode* mutable_status();
  void set_allocated_status(::google::fhir::stu3::proto::MedicationStatementStatusCode* status);

  // .google.fhir.stu3.proto.CodeableConcept category = 14;
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_category() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& category() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_category();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_category();
  void set_allocated_category(::google::fhir::stu3::proto::CodeableConcept* category);

  // .google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication medication = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_medication() const;
  void clear_medication();
  static const int kMedicationFieldNumber = 15;
  private:
  const ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication& _internal_medication() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication& medication() const;
  ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication* release_medication();
  ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication* mutable_medication();
  void set_allocated_medication(::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication* medication);

  // .google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective effective = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_effective() const;
  void clear_effective();
  static const int kEffectiveFieldNumber = 16;
  private:
  const ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective& _internal_effective() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective& effective() const;
  ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective* release_effective();
  ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective* mutable_effective();
  void set_allocated_effective(::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective* effective);

  // .google.fhir.stu3.proto.DateTime date_asserted = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_date_asserted() const;
  void clear_date_asserted();
  static const int kDateAssertedFieldNumber = 17;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_asserted() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_asserted() const;
  ::google::fhir::stu3::proto::DateTime* release_date_asserted();
  ::google::fhir::stu3::proto::DateTime* mutable_date_asserted();
  void set_allocated_date_asserted(::google::fhir::stu3::proto::DateTime* date_asserted);

  // .google.fhir.stu3.proto.Reference information_source = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  bool has_information_source() const;
  void clear_information_source();
  static const int kInformationSourceFieldNumber = 18;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_information_source() const;
  public:
  const ::google::fhir::stu3::proto::Reference& information_source() const;
  ::google::fhir::stu3::proto::Reference* release_information_source();
  ::google::fhir::stu3::proto::Reference* mutable_information_source();
  void set_allocated_information_source(::google::fhir::stu3::proto::Reference* information_source);

  // .google.fhir.stu3.proto.Reference subject = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  bool has_subject() const;
  void clear_subject();
  static const int kSubjectFieldNumber = 19;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_subject() const;
  public:
  const ::google::fhir::stu3::proto::Reference& subject() const;
  ::google::fhir::stu3::proto::Reference* release_subject();
  ::google::fhir::stu3::proto::Reference* mutable_subject();
  void set_allocated_subject(::google::fhir::stu3::proto::Reference* subject);

  // .google.fhir.stu3.proto.MedicationStatementTakenCode taken = 21 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_taken() const;
  void clear_taken();
  static const int kTakenFieldNumber = 21;
  private:
  const ::google::fhir::stu3::proto::MedicationStatementTakenCode& _internal_taken() const;
  public:
  const ::google::fhir::stu3::proto::MedicationStatementTakenCode& taken() const;
  ::google::fhir::stu3::proto::MedicationStatementTakenCode* release_taken();
  ::google::fhir::stu3::proto::MedicationStatementTakenCode* mutable_taken();
  void set_allocated_taken(::google::fhir::stu3::proto::MedicationStatementTakenCode* taken);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreMedicationstatement)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource > contained_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier > identifier_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > based_on_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > part_of_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > derived_from_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > reason_not_taken_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > reason_code_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > reason_reference_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation > note_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Dosage > dosage_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  ::google::fhir::stu3::proto::Narrative* text_;
  ::google::fhir::stu3::proto::Reference* context_;
  ::google::fhir::stu3::proto::MedicationStatementStatusCode* status_;
  ::google::fhir::stu3::proto::CodeableConcept* category_;
  ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication* medication_;
  ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective* effective_;
  ::google::fhir::stu3::proto::DateTime* date_asserted_;
  ::google::fhir::stu3::proto::Reference* information_source_;
  ::google::fhir::stu3::proto::Reference* subject_;
  ::google::fhir::stu3::proto::MedicationStatementTakenCode* taken_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreObservationresults_Effective : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreObservationresults.Effective) */ {
 public:
  UsCoreObservationresults_Effective();
  virtual ~UsCoreObservationresults_Effective();

  UsCoreObservationresults_Effective(const UsCoreObservationresults_Effective& from);

  inline UsCoreObservationresults_Effective& operator=(const UsCoreObservationresults_Effective& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreObservationresults_Effective(UsCoreObservationresults_Effective&& from) noexcept
    : UsCoreObservationresults_Effective() {
    *this = ::std::move(from);
  }

  inline UsCoreObservationresults_Effective& operator=(UsCoreObservationresults_Effective&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreObservationresults_Effective& default_instance();

  enum EffectiveCase {
    kDateTime = 1,
    kPeriod = 2,
    EFFECTIVE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreObservationresults_Effective* internal_default_instance() {
    return reinterpret_cast<const UsCoreObservationresults_Effective*>(
               &_UsCoreObservationresults_Effective_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(UsCoreObservationresults_Effective* other);
  friend void swap(UsCoreObservationresults_Effective& a, UsCoreObservationresults_Effective& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreObservationresults_Effective* New() const final {
    return CreateMaybeMessage<UsCoreObservationresults_Effective>(NULL);
  }

  UsCoreObservationresults_Effective* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreObservationresults_Effective>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreObservationresults_Effective& from);
  void MergeFrom(const UsCoreObservationresults_Effective& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreObservationresults_Effective* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  // .google.fhir.stu3.proto.Period period = 2;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  void clear_effective();
  EffectiveCase effective_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreObservationresults.Effective)
 private:
  void set_has_date_time();
  void set_has_period();

  inline bool has_effective() const;
  inline void clear_has_effective();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union EffectiveUnion {
    EffectiveUnion() {}
    ::google::fhir::stu3::proto::DateTime* date_time_;
    ::google::fhir::stu3::proto::Period* period_;
  } effective_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreObservationresults_Value : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreObservationresults.Value) */ {
 public:
  UsCoreObservationresults_Value();
  virtual ~UsCoreObservationresults_Value();

  UsCoreObservationresults_Value(const UsCoreObservationresults_Value& from);

  inline UsCoreObservationresults_Value& operator=(const UsCoreObservationresults_Value& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreObservationresults_Value(UsCoreObservationresults_Value&& from) noexcept
    : UsCoreObservationresults_Value() {
    *this = ::std::move(from);
  }

  inline UsCoreObservationresults_Value& operator=(UsCoreObservationresults_Value&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreObservationresults_Value& default_instance();

  enum ValueCase {
    kQuantity = 1,
    kCodeableConcept = 2,
    kStringValue = 3,
    kBoolean = 4,
    kRange = 5,
    kRatio = 6,
    kSampledData = 7,
    kAttachment = 8,
    kTime = 9,
    kDateTime = 10,
    kPeriod = 11,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreObservationresults_Value* internal_default_instance() {
    return reinterpret_cast<const UsCoreObservationresults_Value*>(
               &_UsCoreObservationresults_Value_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  void Swap(UsCoreObservationresults_Value* other);
  friend void swap(UsCoreObservationresults_Value& a, UsCoreObservationresults_Value& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreObservationresults_Value* New() const final {
    return CreateMaybeMessage<UsCoreObservationresults_Value>(NULL);
  }

  UsCoreObservationresults_Value* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreObservationresults_Value>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreObservationresults_Value& from);
  void MergeFrom(const UsCoreObservationresults_Value& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreObservationresults_Value* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.Quantity quantity = 1;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Quantity& _internal_quantity() const;
  public:
  const ::google::fhir::stu3::proto::Quantity& quantity() const;
  ::google::fhir::stu3::proto::Quantity* release_quantity();
  ::google::fhir::stu3::proto::Quantity* mutable_quantity();
  void set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity);

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
  bool has_codeable_concept() const;
  void clear_codeable_concept();
  static const int kCodeableConceptFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_codeable_concept() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& codeable_concept() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_codeable_concept();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_codeable_concept();
  void set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept);

  // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
  bool has_string_value() const;
  void clear_string_value();
  static const int kStringValueFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::String& _internal_string_value() const;
  public:
  const ::google::fhir::stu3::proto::String& string_value() const;
  ::google::fhir::stu3::proto::String* release_string_value();
  ::google::fhir::stu3::proto::String* mutable_string_value();
  void set_allocated_string_value(::google::fhir::stu3::proto::String* string_value);

  // .google.fhir.stu3.proto.Boolean boolean = 4;
  bool has_boolean() const;
  void clear_boolean();
  static const int kBooleanFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_boolean() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& boolean() const;
  ::google::fhir::stu3::proto::Boolean* release_boolean();
  ::google::fhir::stu3::proto::Boolean* mutable_boolean();
  void set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean);

  // .google.fhir.stu3.proto.Range range = 5;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Range& _internal_range() const;
  public:
  const ::google::fhir::stu3::proto::Range& range() const;
  ::google::fhir::stu3::proto::Range* release_range();
  ::google::fhir::stu3::proto::Range* mutable_range();
  void set_allocated_range(::google::fhir::stu3::proto::Range* range);

  // .google.fhir.stu3.proto.Ratio ratio = 6;
  bool has_ratio() const;
  void clear_ratio();
  static const int kRatioFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::Ratio& _internal_ratio() const;
  public:
  const ::google::fhir::stu3::proto::Ratio& ratio() const;
  ::google::fhir::stu3::proto::Ratio* release_ratio();
  ::google::fhir::stu3::proto::Ratio* mutable_ratio();
  void set_allocated_ratio(::google::fhir::stu3::proto::Ratio* ratio);

  // .google.fhir.stu3.proto.SampledData sampled_data = 7;
  bool has_sampled_data() const;
  void clear_sampled_data();
  static const int kSampledDataFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::SampledData& _internal_sampled_data() const;
  public:
  const ::google::fhir::stu3::proto::SampledData& sampled_data() const;
  ::google::fhir::stu3::proto::SampledData* release_sampled_data();
  ::google::fhir::stu3::proto::SampledData* mutable_sampled_data();
  void set_allocated_sampled_data(::google::fhir::stu3::proto::SampledData* sampled_data);

  // .google.fhir.stu3.proto.Attachment attachment = 8;
  bool has_attachment() const;
  void clear_attachment();
  static const int kAttachmentFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::Attachment& _internal_attachment() const;
  public:
  const ::google::fhir::stu3::proto::Attachment& attachment() const;
  ::google::fhir::stu3::proto::Attachment* release_attachment();
  ::google::fhir::stu3::proto::Attachment* mutable_attachment();
  void set_allocated_attachment(::google::fhir::stu3::proto::Attachment* attachment);

  // .google.fhir.stu3.proto.Time time = 9;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 9;
  private:
  const ::google::fhir::stu3::proto::Time& _internal_time() const;
  public:
  const ::google::fhir::stu3::proto::Time& time() const;
  ::google::fhir::stu3::proto::Time* release_time();
  ::google::fhir::stu3::proto::Time* mutable_time();
  void set_allocated_time(::google::fhir::stu3::proto::Time* time);

  // .google.fhir.stu3.proto.DateTime date_time = 10;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  // .google.fhir.stu3.proto.Period period = 11;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 11;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreObservationresults.Value)
 private:
  void set_has_quantity();
  void set_has_codeable_concept();
  void set_has_string_value();
  void set_has_boolean();
  void set_has_range();
  void set_has_ratio();
  void set_has_sampled_data();
  void set_has_attachment();
  void set_has_time();
  void set_has_date_time();
  void set_has_period();

  inline bool has_value() const;
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ValueUnion {
    ValueUnion() {}
    ::google::fhir::stu3::proto::Quantity* quantity_;
    ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
    ::google::fhir::stu3::proto::String* string_value_;
    ::google::fhir::stu3::proto::Boolean* boolean_;
    ::google::fhir::stu3::proto::Range* range_;
    ::google::fhir::stu3::proto::Ratio* ratio_;
    ::google::fhir::stu3::proto::SampledData* sampled_data_;
    ::google::fhir::stu3::proto::Attachment* attachment_;
    ::google::fhir::stu3::proto::Time* time_;
    ::google::fhir::stu3::proto::DateTime* date_time_;
    ::google::fhir::stu3::proto::Period* period_;
  } value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreObservationresults_ReferenceRange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange) */ {
 public:
  UsCoreObservationresults_ReferenceRange();
  virtual ~UsCoreObservationresults_ReferenceRange();

  UsCoreObservationresults_ReferenceRange(const UsCoreObservationresults_ReferenceRange& from);

  inline UsCoreObservationresults_ReferenceRange& operator=(const UsCoreObservationresults_ReferenceRange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreObservationresults_ReferenceRange(UsCoreObservationresults_ReferenceRange&& from) noexcept
    : UsCoreObservationresults_ReferenceRange() {
    *this = ::std::move(from);
  }

  inline UsCoreObservationresults_ReferenceRange& operator=(UsCoreObservationresults_ReferenceRange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreObservationresults_ReferenceRange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreObservationresults_ReferenceRange* internal_default_instance() {
    return reinterpret_cast<const UsCoreObservationresults_ReferenceRange*>(
               &_UsCoreObservationresults_ReferenceRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  void Swap(UsCoreObservationresults_ReferenceRange* other);
  friend void swap(UsCoreObservationresults_ReferenceRange& a, UsCoreObservationresults_ReferenceRange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreObservationresults_ReferenceRange* New() const final {
    return CreateMaybeMessage<UsCoreObservationresults_ReferenceRange>(NULL);
  }

  UsCoreObservationresults_ReferenceRange* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreObservationresults_ReferenceRange>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreObservationresults_ReferenceRange& from);
  void MergeFrom(const UsCoreObservationresults_ReferenceRange& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreObservationresults_ReferenceRange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept applies_to = 7;
  int applies_to_size() const;
  void clear_applies_to();
  static const int kAppliesToFieldNumber = 7;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_applies_to(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_applies_to();
  const ::google::fhir::stu3::proto::CodeableConcept& applies_to(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_applies_to();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      applies_to() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SimpleQuantity low = 4;
  bool has_low() const;
  void clear_low();
  static const int kLowFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::SimpleQuantity& _internal_low() const;
  public:
  const ::google::fhir::stu3::proto::SimpleQuantity& low() const;
  ::google::fhir::stu3::proto::SimpleQuantity* release_low();
  ::google::fhir::stu3::proto::SimpleQuantity* mutable_low();
  void set_allocated_low(::google::fhir::stu3::proto::SimpleQuantity* low);

  // .google.fhir.stu3.proto.SimpleQuantity high = 5;
  bool has_high() const;
  void clear_high();
  static const int kHighFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::SimpleQuantity& _internal_high() const;
  public:
  const ::google::fhir::stu3::proto::SimpleQuantity& high() const;
  ::google::fhir::stu3::proto::SimpleQuantity* release_high();
  ::google::fhir::stu3::proto::SimpleQuantity* mutable_high();
  void set_allocated_high(::google::fhir::stu3::proto::SimpleQuantity* high);

  // .google.fhir.stu3.proto.CodeableConcept type = 6;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_type() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& type() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_type();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_type();
  void set_allocated_type(::google::fhir::stu3::proto::CodeableConcept* type);

  // .google.fhir.stu3.proto.Range age = 8;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::Range& _internal_age() const;
  public:
  const ::google::fhir::stu3::proto::Range& age() const;
  ::google::fhir::stu3::proto::Range* release_age();
  ::google::fhir::stu3::proto::Range* mutable_age();
  void set_allocated_age(::google::fhir::stu3::proto::Range* age);

  // .google.fhir.stu3.proto.String text = 9;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 9;
  private:
  const ::google::fhir::stu3::proto::String& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::String& text() const;
  ::google::fhir::stu3::proto::String* release_text();
  ::google::fhir::stu3::proto::String* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::String* text);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > applies_to_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::SimpleQuantity* low_;
  ::google::fhir::stu3::proto::SimpleQuantity* high_;
  ::google::fhir::stu3::proto::CodeableConcept* type_;
  ::google::fhir::stu3::proto::Range* age_;
  ::google::fhir::stu3::proto::String* text_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreObservationresults_Related : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreObservationresults.Related) */ {
 public:
  UsCoreObservationresults_Related();
  virtual ~UsCoreObservationresults_Related();

  UsCoreObservationresults_Related(const UsCoreObservationresults_Related& from);

  inline UsCoreObservationresults_Related& operator=(const UsCoreObservationresults_Related& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreObservationresults_Related(UsCoreObservationresults_Related&& from) noexcept
    : UsCoreObservationresults_Related() {
    *this = ::std::move(from);
  }

  inline UsCoreObservationresults_Related& operator=(UsCoreObservationresults_Related&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreObservationresults_Related& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreObservationresults_Related* internal_default_instance() {
    return reinterpret_cast<const UsCoreObservationresults_Related*>(
               &_UsCoreObservationresults_Related_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  void Swap(UsCoreObservationresults_Related* other);
  friend void swap(UsCoreObservationresults_Related& a, UsCoreObservationresults_Related& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreObservationresults_Related* New() const final {
    return CreateMaybeMessage<UsCoreObservationresults_Related>(NULL);
  }

  UsCoreObservationresults_Related* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreObservationresults_Related>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreObservationresults_Related& from);
  void MergeFrom(const UsCoreObservationresults_Related& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreObservationresults_Related* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::ObservationRelationshipTypeCode& _internal_type() const;
  public:
  const ::google::fhir::stu3::proto::ObservationRelationshipTypeCode& type() const;
  ::google::fhir::stu3::proto::ObservationRelationshipTypeCode* release_type();
  ::google::fhir::stu3::proto::ObservationRelationshipTypeCode* mutable_type();
  void set_allocated_type(::google::fhir::stu3::proto::ObservationRelationshipTypeCode* type);

  // .google.fhir.stu3.proto.Reference target = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Sequence"];
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_target() const;
  public:
  const ::google::fhir::stu3::proto::Reference& target() const;
  ::google::fhir::stu3::proto::Reference* release_target();
  ::google::fhir::stu3::proto::Reference* mutable_target();
  void set_allocated_target(::google::fhir::stu3::proto::Reference* target);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreObservationresults.Related)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::ObservationRelationshipTypeCode* type_;
  ::google::fhir::stu3::proto::Reference* target_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreObservationresults_Component_Value : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value) */ {
 public:
  UsCoreObservationresults_Component_Value();
  virtual ~UsCoreObservationresults_Component_Value();

  UsCoreObservationresults_Component_Value(const UsCoreObservationresults_Component_Value& from);

  inline UsCoreObservationresults_Component_Value& operator=(const UsCoreObservationresults_Component_Value& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreObservationresults_Component_Value(UsCoreObservationresults_Component_Value&& from) noexcept
    : UsCoreObservationresults_Component_Value() {
    *this = ::std::move(from);
  }

  inline UsCoreObservationresults_Component_Value& operator=(UsCoreObservationresults_Component_Value&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreObservationresults_Component_Value& default_instance();

  enum ValueCase {
    kQuantity = 1,
    kCodeableConcept = 2,
    kStringValue = 3,
    kRange = 4,
    kRatio = 5,
    kSampledData = 6,
    kAttachment = 7,
    kTime = 8,
    kDateTime = 9,
    kPeriod = 10,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreObservationresults_Component_Value* internal_default_instance() {
    return reinterpret_cast<const UsCoreObservationresults_Component_Value*>(
               &_UsCoreObservationresults_Component_Value_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  void Swap(UsCoreObservationresults_Component_Value* other);
  friend void swap(UsCoreObservationresults_Component_Value& a, UsCoreObservationresults_Component_Value& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreObservationresults_Component_Value* New() const final {
    return CreateMaybeMessage<UsCoreObservationresults_Component_Value>(NULL);
  }

  UsCoreObservationresults_Component_Value* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreObservationresults_Component_Value>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreObservationresults_Component_Value& from);
  void MergeFrom(const UsCoreObservationresults_Component_Value& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreObservationresults_Component_Value* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.Quantity quantity = 1;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Quantity& _internal_quantity() const;
  public:
  const ::google::fhir::stu3::proto::Quantity& quantity() const;
  ::google::fhir::stu3::proto::Quantity* release_quantity();
  ::google::fhir::stu3::proto::Quantity* mutable_quantity();
  void set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity);

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
  bool has_codeable_concept() const;
  void clear_codeable_concept();
  static const int kCodeableConceptFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_codeable_concept() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& codeable_concept() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_codeable_concept();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_codeable_concept();
  void set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept);

  // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
  bool has_string_value() const;
  void clear_string_value();
  static const int kStringValueFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::String& _internal_string_value() const;
  public:
  const ::google::fhir::stu3::proto::String& string_value() const;
  ::google::fhir::stu3::proto::String* release_string_value();
  ::google::fhir::stu3::proto::String* mutable_string_value();
  void set_allocated_string_value(::google::fhir::stu3::proto::String* string_value);

  // .google.fhir.stu3.proto.Range range = 4;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Range& _internal_range() const;
  public:
  const ::google::fhir::stu3::proto::Range& range() const;
  ::google::fhir::stu3::proto::Range* release_range();
  ::google::fhir::stu3::proto::Range* mutable_range();
  void set_allocated_range(::google::fhir::stu3::proto::Range* range);

  // .google.fhir.stu3.proto.Ratio ratio = 5;
  bool has_ratio() const;
  void clear_ratio();
  static const int kRatioFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Ratio& _internal_ratio() const;
  public:
  const ::google::fhir::stu3::proto::Ratio& ratio() const;
  ::google::fhir::stu3::proto::Ratio* release_ratio();
  ::google::fhir::stu3::proto::Ratio* mutable_ratio();
  void set_allocated_ratio(::google::fhir::stu3::proto::Ratio* ratio);

  // .google.fhir.stu3.proto.SampledData sampled_data = 6;
  bool has_sampled_data() const;
  void clear_sampled_data();
  static const int kSampledDataFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::SampledData& _internal_sampled_data() const;
  public:
  const ::google::fhir::stu3::proto::SampledData& sampled_data() const;
  ::google::fhir::stu3::proto::SampledData* release_sampled_data();
  ::google::fhir::stu3::proto::SampledData* mutable_sampled_data();
  void set_allocated_sampled_data(::google::fhir::stu3::proto::SampledData* sampled_data);

  // .google.fhir.stu3.proto.Attachment attachment = 7;
  bool has_attachment() const;
  void clear_attachment();
  static const int kAttachmentFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::Attachment& _internal_attachment() const;
  public:
  const ::google::fhir::stu3::proto::Attachment& attachment() const;
  ::google::fhir::stu3::proto::Attachment* release_attachment();
  ::google::fhir::stu3::proto::Attachment* mutable_attachment();
  void set_allocated_attachment(::google::fhir::stu3::proto::Attachment* attachment);

  // .google.fhir.stu3.proto.Time time = 8;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::Time& _internal_time() const;
  public:
  const ::google::fhir::stu3::proto::Time& time() const;
  ::google::fhir::stu3::proto::Time* release_time();
  ::google::fhir::stu3::proto::Time* mutable_time();
  void set_allocated_time(::google::fhir::stu3::proto::Time* time);

  // .google.fhir.stu3.proto.DateTime date_time = 9;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 9;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  // .google.fhir.stu3.proto.Period period = 10;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value)
 private:
  void set_has_quantity();
  void set_has_codeable_concept();
  void set_has_string_value();
  void set_has_range();
  void set_has_ratio();
  void set_has_sampled_data();
  void set_has_attachment();
  void set_has_time();
  void set_has_date_time();
  void set_has_period();

  inline bool has_value() const;
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ValueUnion {
    ValueUnion() {}
    ::google::fhir::stu3::proto::Quantity* quantity_;
    ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
    ::google::fhir::stu3::proto::String* string_value_;
    ::google::fhir::stu3::proto::Range* range_;
    ::google::fhir::stu3::proto::Ratio* ratio_;
    ::google::fhir::stu3::proto::SampledData* sampled_data_;
    ::google::fhir::stu3::proto::Attachment* attachment_;
    ::google::fhir::stu3::proto::Time* time_;
    ::google::fhir::stu3::proto::DateTime* date_time_;
    ::google::fhir::stu3::proto::Period* period_;
  } value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreObservationresults_Component : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreObservationresults.Component) */ {
 public:
  UsCoreObservationresults_Component();
  virtual ~UsCoreObservationresults_Component();

  UsCoreObservationresults_Component(const UsCoreObservationresults_Component& from);

  inline UsCoreObservationresults_Component& operator=(const UsCoreObservationresults_Component& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreObservationresults_Component(UsCoreObservationresults_Component&& from) noexcept
    : UsCoreObservationresults_Component() {
    *this = ::std::move(from);
  }

  inline UsCoreObservationresults_Component& operator=(UsCoreObservationresults_Component&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreObservationresults_Component& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreObservationresults_Component* internal_default_instance() {
    return reinterpret_cast<const UsCoreObservationresults_Component*>(
               &_UsCoreObservationresults_Component_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(UsCoreObservationresults_Component* other);
  friend void swap(UsCoreObservationresults_Component& a, UsCoreObservationresults_Component& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreObservationresults_Component* New() const final {
    return CreateMaybeMessage<UsCoreObservationresults_Component>(NULL);
  }

  UsCoreObservationresults_Component* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreObservationresults_Component>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreObservationresults_Component& from);
  void MergeFrom(const UsCoreObservationresults_Component& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreObservationresults_Component* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreObservationresults_Component_Value Value;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange reference_range = 8;
  int reference_range_size() const;
  void clear_reference_range();
  static const int kReferenceRangeFieldNumber = 8;
  ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange* mutable_reference_range(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange >*
      mutable_reference_range();
  const ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange& reference_range(int index) const;
  ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange* add_reference_range();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange >&
      reference_range() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CodeableConcept code = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_code() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& code() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_code();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_code();
  void set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code);

  // .google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value value = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 5;
  private:
  const ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value& _internal_value() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value& value() const;
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value* release_value();
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value* mutable_value();
  void set_allocated_value(::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value* value);

  // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
  bool has_data_absent_reason() const;
  void clear_data_absent_reason();
  static const int kDataAbsentReasonFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_data_absent_reason() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& data_absent_reason() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_data_absent_reason();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_data_absent_reason();
  void set_allocated_data_absent_reason(::google::fhir::stu3::proto::CodeableConcept* data_absent_reason);

  // .google.fhir.stu3.proto.CodeableConcept interpretation = 7;
  bool has_interpretation() const;
  void clear_interpretation();
  static const int kInterpretationFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_interpretation() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& interpretation() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_interpretation();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_interpretation();
  void set_allocated_interpretation(::google::fhir::stu3::proto::CodeableConcept* interpretation);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreObservationresults.Component)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange > reference_range_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::CodeableConcept* code_;
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value* value_;
  ::google::fhir::stu3::proto::CodeableConcept* data_absent_reason_;
  ::google::fhir::stu3::proto::CodeableConcept* interpretation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreObservationresults : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreObservationresults) */ {
 public:
  UsCoreObservationresults();
  virtual ~UsCoreObservationresults();

  UsCoreObservationresults(const UsCoreObservationresults& from);

  inline UsCoreObservationresults& operator=(const UsCoreObservationresults& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreObservationresults(UsCoreObservationresults&& from) noexcept
    : UsCoreObservationresults() {
    *this = ::std::move(from);
  }

  inline UsCoreObservationresults& operator=(UsCoreObservationresults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreObservationresults& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreObservationresults* internal_default_instance() {
    return reinterpret_cast<const UsCoreObservationresults*>(
               &_UsCoreObservationresults_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  void Swap(UsCoreObservationresults* other);
  friend void swap(UsCoreObservationresults& a, UsCoreObservationresults& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreObservationresults* New() const final {
    return CreateMaybeMessage<UsCoreObservationresults>(NULL);
  }

  UsCoreObservationresults* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreObservationresults>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreObservationresults& from);
  void MergeFrom(const UsCoreObservationresults& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreObservationresults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreObservationresults_Effective Effective;
  typedef UsCoreObservationresults_Value Value;
  typedef UsCoreObservationresults_ReferenceRange ReferenceRange;
  typedef UsCoreObservationresults_Related Related;
  typedef UsCoreObservationresults_Component Component;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  int contained_size() const;
  void clear_contained();
  static const int kContainedFieldNumber = 6;
  ::google::fhir::stu3::proto::ContainedResource* mutable_contained(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
      mutable_contained();
  const ::google::fhir::stu3::proto::ContainedResource& contained(int index) const;
  ::google::fhir::stu3::proto::ContainedResource* add_contained();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
      contained() const;

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 8;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  int identifier_size() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 9;
  ::google::fhir::stu3::proto::Identifier* mutable_identifier(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
      mutable_identifier();
  const ::google::fhir::stu3::proto::Identifier& identifier(int index) const;
  ::google::fhir::stu3::proto::Identifier* add_identifier();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
      identifier() const;

  // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  int based_on_size() const;
  void clear_based_on();
  static const int kBasedOnFieldNumber = 10;
  ::google::fhir::stu3::proto::Reference* mutable_based_on(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_based_on();
  const ::google::fhir::stu3::proto::Reference& based_on(int index) const;
  ::google::fhir::stu3::proto::Reference* add_based_on();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      based_on() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  int category_size() const;
  void clear_category();
  static const int kCategoryFieldNumber = 12;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_category(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_category();
  const ::google::fhir::stu3::proto::CodeableConcept& category(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_category();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      category() const;

  // repeated .google.fhir.stu3.proto.Reference performer = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  int performer_size() const;
  void clear_performer();
  static const int kPerformerFieldNumber = 18;
  ::google::fhir::stu3::proto::Reference* mutable_performer(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_performer();
  const ::google::fhir::stu3::proto::Reference& performer(int index) const;
  ::google::fhir::stu3::proto::Reference* add_performer();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      performer() const;

  // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange reference_range = 27;
  int reference_range_size() const;
  void clear_reference_range();
  static const int kReferenceRangeFieldNumber = 27;
  ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange* mutable_reference_range(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange >*
      mutable_reference_range();
  const ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange& reference_range(int index) const;
  ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange* add_reference_range();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange >&
      reference_range() const;

  // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.Related related = 28;
  int related_size() const;
  void clear_related();
  static const int kRelatedFieldNumber = 28;
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Related* mutable_related(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_Related >*
      mutable_related();
  const ::google::fhir::stu3::uscore::UsCoreObservationresults_Related& related(int index) const;
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Related* add_related();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_Related >&
      related() const;

  // repeated .google.fhir.stu3.uscore.UsCoreObservationresults.Component component = 29;
  int component_size() const;
  void clear_component();
  static const int kComponentFieldNumber = 29;
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Component* mutable_component(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_Component >*
      mutable_component();
  const ::google::fhir::stu3::uscore::UsCoreObservationresults_Component& component(int index) const;
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Component* add_component();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_Component >&
      component() const;

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // .google.fhir.stu3.proto.Narrative text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Narrative& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::Narrative& text() const;
  ::google::fhir::stu3::proto::Narrative* release_text();
  ::google::fhir::stu3::proto::Narrative* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::Narrative* text);

  // .google.fhir.stu3.proto.ObservationStatusCode status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 11;
  private:
  const ::google::fhir::stu3::proto::ObservationStatusCode& _internal_status() const;
  public:
  const ::google::fhir::stu3::proto::ObservationStatusCode& status() const;
  ::google::fhir::stu3::proto::ObservationStatusCode* release_status();
  ::google::fhir::stu3::proto::ObservationStatusCode* mutable_status();
  void set_allocated_status(::google::fhir::stu3::proto::ObservationStatusCode* status);

  // .google.fhir.stu3.proto.CodeableConcept code = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 13;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_code() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& code() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_code();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_code();
  void set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code);

  // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  bool has_subject() const;
  void clear_subject();
  static const int kSubjectFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_subject() const;
  public:
  const ::google::fhir::stu3::proto::Reference& subject() const;
  ::google::fhir::stu3::proto::Reference* release_subject();
  ::google::fhir::stu3::proto::Reference* mutable_subject();
  void set_allocated_subject(::google::fhir::stu3::proto::Reference* subject);

  // .google.fhir.stu3.proto.Reference context = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 15;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_context() const;
  public:
  const ::google::fhir::stu3::proto::Reference& context() const;
  ::google::fhir::stu3::proto::Reference* release_context();
  ::google::fhir::stu3::proto::Reference* mutable_context();
  void set_allocated_context(::google::fhir::stu3::proto::Reference* context);

  // .google.fhir.stu3.uscore.UsCoreObservationresults.Effective effective = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_effective() const;
  void clear_effective();
  static const int kEffectiveFieldNumber = 16;
  private:
  const ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective& _internal_effective() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective& effective() const;
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective* release_effective();
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective* mutable_effective();
  void set_allocated_effective(::google::fhir::stu3::uscore::UsCoreObservationresults_Effective* effective);

  // .google.fhir.stu3.proto.Instant issued = 17;
  bool has_issued() const;
  void clear_issued();
  static const int kIssuedFieldNumber = 17;
  private:
  const ::google::fhir::stu3::proto::Instant& _internal_issued() const;
  public:
  const ::google::fhir::stu3::proto::Instant& issued() const;
  ::google::fhir::stu3::proto::Instant* release_issued();
  ::google::fhir::stu3::proto::Instant* mutable_issued();
  void set_allocated_issued(::google::fhir::stu3::proto::Instant* issued);

  // .google.fhir.stu3.uscore.UsCoreObservationresults.Value value = 19 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 19;
  private:
  const ::google::fhir::stu3::uscore::UsCoreObservationresults_Value& _internal_value() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreObservationresults_Value& value() const;
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Value* release_value();
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Value* mutable_value();
  void set_allocated_value(::google::fhir::stu3::uscore::UsCoreObservationresults_Value* value);

  // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
  bool has_data_absent_reason() const;
  void clear_data_absent_reason();
  static const int kDataAbsentReasonFieldNumber = 20;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_data_absent_reason() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& data_absent_reason() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_data_absent_reason();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_data_absent_reason();
  void set_allocated_data_absent_reason(::google::fhir::stu3::proto::CodeableConcept* data_absent_reason);

  // .google.fhir.stu3.proto.CodeableConcept interpretation = 21;
  bool has_interpretation() const;
  void clear_interpretation();
  static const int kInterpretationFieldNumber = 21;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_interpretation() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& interpretation() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_interpretation();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_interpretation();
  void set_allocated_interpretation(::google::fhir::stu3::proto::CodeableConcept* interpretation);

  // .google.fhir.stu3.proto.String comment = 22;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 22;
  private:
  const ::google::fhir::stu3::proto::String& _internal_comment() const;
  public:
  const ::google::fhir::stu3::proto::String& comment() const;
  ::google::fhir::stu3::proto::String* release_comment();
  ::google::fhir::stu3::proto::String* mutable_comment();
  void set_allocated_comment(::google::fhir::stu3::proto::String* comment);

  // .google.fhir.stu3.proto.CodeableConcept body_site = 23;
  bool has_body_site() const;
  void clear_body_site();
  static const int kBodySiteFieldNumber = 23;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_body_site() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& body_site() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_body_site();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_body_site();
  void set_allocated_body_site(::google::fhir::stu3::proto::CodeableConcept* body_site);

  // .google.fhir.stu3.proto.CodeableConcept method = 24;
  bool has_method() const;
  void clear_method();
  static const int kMethodFieldNumber = 24;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_method() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& method() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_method();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_method();
  void set_allocated_method(::google::fhir::stu3::proto::CodeableConcept* method);

  // .google.fhir.stu3.proto.Reference specimen = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Specimen"];
  bool has_specimen() const;
  void clear_specimen();
  static const int kSpecimenFieldNumber = 25;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_specimen() const;
  public:
  const ::google::fhir::stu3::proto::Reference& specimen() const;
  ::google::fhir::stu3::proto::Reference* release_specimen();
  ::google::fhir::stu3::proto::Reference* mutable_specimen();
  void set_allocated_specimen(::google::fhir::stu3::proto::Reference* specimen);

  // .google.fhir.stu3.proto.Reference device = 26 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceMetric"];
  bool has_device() const;
  void clear_device();
  static const int kDeviceFieldNumber = 26;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_device() const;
  public:
  const ::google::fhir::stu3::proto::Reference& device() const;
  ::google::fhir::stu3::proto::Reference* release_device();
  ::google::fhir::stu3::proto::Reference* mutable_device();
  void set_allocated_device(::google::fhir::stu3::proto::Reference* device);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreObservationresults)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource > contained_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier > identifier_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > based_on_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > category_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > performer_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange > reference_range_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_Related > related_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_Component > component_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  ::google::fhir::stu3::proto::Narrative* text_;
  ::google::fhir::stu3::proto::ObservationStatusCode* status_;
  ::google::fhir::stu3::proto::CodeableConcept* code_;
  ::google::fhir::stu3::proto::Reference* subject_;
  ::google::fhir::stu3::proto::Reference* context_;
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective* effective_;
  ::google::fhir::stu3::proto::Instant* issued_;
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Value* value_;
  ::google::fhir::stu3::proto::CodeableConcept* data_absent_reason_;
  ::google::fhir::stu3::proto::CodeableConcept* interpretation_;
  ::google::fhir::stu3::proto::String* comment_;
  ::google::fhir::stu3::proto::CodeableConcept* body_site_;
  ::google::fhir::stu3::proto::CodeableConcept* method_;
  ::google::fhir::stu3::proto::Reference* specimen_;
  ::google::fhir::stu3::proto::Reference* device_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreOrganization_Contact : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreOrganization.Contact) */ {
 public:
  UsCoreOrganization_Contact();
  virtual ~UsCoreOrganization_Contact();

  UsCoreOrganization_Contact(const UsCoreOrganization_Contact& from);

  inline UsCoreOrganization_Contact& operator=(const UsCoreOrganization_Contact& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreOrganization_Contact(UsCoreOrganization_Contact&& from) noexcept
    : UsCoreOrganization_Contact() {
    *this = ::std::move(from);
  }

  inline UsCoreOrganization_Contact& operator=(UsCoreOrganization_Contact&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreOrganization_Contact& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreOrganization_Contact* internal_default_instance() {
    return reinterpret_cast<const UsCoreOrganization_Contact*>(
               &_UsCoreOrganization_Contact_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  void Swap(UsCoreOrganization_Contact* other);
  friend void swap(UsCoreOrganization_Contact& a, UsCoreOrganization_Contact& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreOrganization_Contact* New() const final {
    return CreateMaybeMessage<UsCoreOrganization_Contact>(NULL);
  }

  UsCoreOrganization_Contact* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreOrganization_Contact>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreOrganization_Contact& from);
  void MergeFrom(const UsCoreOrganization_Contact& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreOrganization_Contact* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 6;
  int telecom_size() const;
  void clear_telecom();
  static const int kTelecomFieldNumber = 6;
  ::google::fhir::stu3::proto::ContactPoint* mutable_telecom(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >*
      mutable_telecom();
  const ::google::fhir::stu3::proto::ContactPoint& telecom(int index) const;
  ::google::fhir::stu3::proto::ContactPoint* add_telecom();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >&
      telecom() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CodeableConcept purpose = 4;
  bool has_purpose() const;
  void clear_purpose();
  static const int kPurposeFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_purpose() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& purpose() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_purpose();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_purpose();
  void set_allocated_purpose(::google::fhir::stu3::proto::CodeableConcept* purpose);

  // .google.fhir.stu3.proto.HumanName name = 5;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::HumanName& _internal_name() const;
  public:
  const ::google::fhir::stu3::proto::HumanName& name() const;
  ::google::fhir::stu3::proto::HumanName* release_name();
  ::google::fhir::stu3::proto::HumanName* mutable_name();
  void set_allocated_name(::google::fhir::stu3::proto::HumanName* name);

  // .google.fhir.stu3.proto.Address address = 7;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::Address& _internal_address() const;
  public:
  const ::google::fhir::stu3::proto::Address& address() const;
  ::google::fhir::stu3::proto::Address* release_address();
  ::google::fhir::stu3::proto::Address* mutable_address();
  void set_allocated_address(::google::fhir::stu3::proto::Address* address);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreOrganization.Contact)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint > telecom_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::CodeableConcept* purpose_;
  ::google::fhir::stu3::proto::HumanName* name_;
  ::google::fhir::stu3::proto::Address* address_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreOrganization : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreOrganization) */ {
 public:
  UsCoreOrganization();
  virtual ~UsCoreOrganization();

  UsCoreOrganization(const UsCoreOrganization& from);

  inline UsCoreOrganization& operator=(const UsCoreOrganization& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreOrganization(UsCoreOrganization&& from) noexcept
    : UsCoreOrganization() {
    *this = ::std::move(from);
  }

  inline UsCoreOrganization& operator=(UsCoreOrganization&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreOrganization& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreOrganization* internal_default_instance() {
    return reinterpret_cast<const UsCoreOrganization*>(
               &_UsCoreOrganization_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(UsCoreOrganization* other);
  friend void swap(UsCoreOrganization& a, UsCoreOrganization& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreOrganization* New() const final {
    return CreateMaybeMessage<UsCoreOrganization>(NULL);
  }

  UsCoreOrganization* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreOrganization>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreOrganization& from);
  void MergeFrom(const UsCoreOrganization& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreOrganization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreOrganization_Contact Contact;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  int contained_size() const;
  void clear_contained();
  static const int kContainedFieldNumber = 6;
  ::google::fhir::stu3::proto::ContainedResource* mutable_contained(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
      mutable_contained();
  const ::google::fhir::stu3::proto::ContainedResource& contained(int index) const;
  ::google::fhir::stu3::proto::ContainedResource* add_contained();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
      contained() const;

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 8;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  int identifier_size() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 9;
  ::google::fhir::stu3::proto::Identifier* mutable_identifier(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
      mutable_identifier();
  const ::google::fhir::stu3::proto::Identifier& identifier(int index) const;
  ::google::fhir::stu3::proto::Identifier* add_identifier();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
      identifier() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept type = 11;
  int type_size() const;
  void clear_type();
  static const int kTypeFieldNumber = 11;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_type(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_type();
  const ::google::fhir::stu3::proto::CodeableConcept& type(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_type();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      type() const;

  // repeated .google.fhir.stu3.proto.String alias = 13;
  int alias_size() const;
  void clear_alias();
  static const int kAliasFieldNumber = 13;
  ::google::fhir::stu3::proto::String* mutable_alias(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String >*
      mutable_alias();
  const ::google::fhir::stu3::proto::String& alias(int index) const;
  ::google::fhir::stu3::proto::String* add_alias();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String >&
      alias() const;

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  int telecom_size() const;
  void clear_telecom();
  static const int kTelecomFieldNumber = 14;
  ::google::fhir::stu3::proto::ContactPoint* mutable_telecom(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >*
      mutable_telecom();
  const ::google::fhir::stu3::proto::ContactPoint& telecom(int index) const;
  ::google::fhir::stu3::proto::ContactPoint* add_telecom();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >&
      telecom() const;

  // repeated .google.fhir.stu3.proto.Address address = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  int address_size() const;
  void clear_address();
  static const int kAddressFieldNumber = 15;
  ::google::fhir::stu3::proto::Address* mutable_address(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Address >*
      mutable_address();
  const ::google::fhir::stu3::proto::Address& address(int index) const;
  ::google::fhir::stu3::proto::Address* add_address();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Address >&
      address() const;

  // repeated .google.fhir.stu3.uscore.UsCoreOrganization.Contact contact = 17;
  int contact_size() const;
  void clear_contact();
  static const int kContactFieldNumber = 17;
  ::google::fhir::stu3::uscore::UsCoreOrganization_Contact* mutable_contact(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreOrganization_Contact >*
      mutable_contact();
  const ::google::fhir::stu3::uscore::UsCoreOrganization_Contact& contact(int index) const;
  ::google::fhir::stu3::uscore::UsCoreOrganization_Contact* add_contact();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreOrganization_Contact >&
      contact() const;

  // repeated .google.fhir.stu3.proto.Reference endpoint = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Endpoint"];
  int endpoint_size() const;
  void clear_endpoint();
  static const int kEndpointFieldNumber = 18;
  ::google::fhir::stu3::proto::Reference* mutable_endpoint(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_endpoint();
  const ::google::fhir::stu3::proto::Reference& endpoint(int index) const;
  ::google::fhir::stu3::proto::Reference* add_endpoint();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      endpoint() const;

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // .google.fhir.stu3.proto.Narrative text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Narrative& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::Narrative& text() const;
  ::google::fhir::stu3::proto::Narrative* release_text();
  ::google::fhir::stu3::proto::Narrative* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::Narrative* text);

  // .google.fhir.stu3.proto.Boolean active = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_active() const;
  void clear_active();
  static const int kActiveFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_active() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& active() const;
  ::google::fhir::stu3::proto::Boolean* release_active();
  ::google::fhir::stu3::proto::Boolean* mutable_active();
  void set_allocated_active(::google::fhir::stu3::proto::Boolean* active);

  // .google.fhir.stu3.proto.String name = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 12;
  private:
  const ::google::fhir::stu3::proto::String& _internal_name() const;
  public:
  const ::google::fhir::stu3::proto::String& name() const;
  ::google::fhir::stu3::proto::String* release_name();
  ::google::fhir::stu3::proto::String* mutable_name();
  void set_allocated_name(::google::fhir::stu3::proto::String* name);

  // .google.fhir.stu3.proto.Reference part_of = 16 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  bool has_part_of() const;
  void clear_part_of();
  static const int kPartOfFieldNumber = 16;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_part_of() const;
  public:
  const ::google::fhir::stu3::proto::Reference& part_of() const;
  ::google::fhir::stu3::proto::Reference* release_part_of();
  ::google::fhir::stu3::proto::Reference* mutable_part_of();
  void set_allocated_part_of(::google::fhir::stu3::proto::Reference* part_of);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreOrganization)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource > contained_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier > identifier_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > type_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String > alias_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint > telecom_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Address > address_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreOrganization_Contact > contact_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > endpoint_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  ::google::fhir::stu3::proto::Narrative* text_;
  ::google::fhir::stu3::proto::Boolean* active_;
  ::google::fhir::stu3::proto::String* name_;
  ::google::fhir::stu3::proto::Reference* part_of_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCorePatient_Deceased : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCorePatient.Deceased) */ {
 public:
  UsCorePatient_Deceased();
  virtual ~UsCorePatient_Deceased();

  UsCorePatient_Deceased(const UsCorePatient_Deceased& from);

  inline UsCorePatient_Deceased& operator=(const UsCorePatient_Deceased& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCorePatient_Deceased(UsCorePatient_Deceased&& from) noexcept
    : UsCorePatient_Deceased() {
    *this = ::std::move(from);
  }

  inline UsCorePatient_Deceased& operator=(UsCorePatient_Deceased&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCorePatient_Deceased& default_instance();

  enum DeceasedCase {
    kBoolean = 1,
    kDateTime = 2,
    DECEASED_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCorePatient_Deceased* internal_default_instance() {
    return reinterpret_cast<const UsCorePatient_Deceased*>(
               &_UsCorePatient_Deceased_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  void Swap(UsCorePatient_Deceased* other);
  friend void swap(UsCorePatient_Deceased& a, UsCorePatient_Deceased& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCorePatient_Deceased* New() const final {
    return CreateMaybeMessage<UsCorePatient_Deceased>(NULL);
  }

  UsCorePatient_Deceased* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCorePatient_Deceased>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCorePatient_Deceased& from);
  void MergeFrom(const UsCorePatient_Deceased& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCorePatient_Deceased* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.Boolean boolean = 1;
  bool has_boolean() const;
  void clear_boolean();
  static const int kBooleanFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_boolean() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& boolean() const;
  ::google::fhir::stu3::proto::Boolean* release_boolean();
  ::google::fhir::stu3::proto::Boolean* mutable_boolean();
  void set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean);

  // .google.fhir.stu3.proto.DateTime date_time = 2;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  void clear_deceased();
  DeceasedCase deceased_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCorePatient.Deceased)
 private:
  void set_has_boolean();
  void set_has_date_time();

  inline bool has_deceased() const;
  inline void clear_has_deceased();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union DeceasedUnion {
    DeceasedUnion() {}
    ::google::fhir::stu3::proto::Boolean* boolean_;
    ::google::fhir::stu3::proto::DateTime* date_time_;
  } deceased_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCorePatient_MultipleBirth : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth) */ {
 public:
  UsCorePatient_MultipleBirth();
  virtual ~UsCorePatient_MultipleBirth();

  UsCorePatient_MultipleBirth(const UsCorePatient_MultipleBirth& from);

  inline UsCorePatient_MultipleBirth& operator=(const UsCorePatient_MultipleBirth& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCorePatient_MultipleBirth(UsCorePatient_MultipleBirth&& from) noexcept
    : UsCorePatient_MultipleBirth() {
    *this = ::std::move(from);
  }

  inline UsCorePatient_MultipleBirth& operator=(UsCorePatient_MultipleBirth&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCorePatient_MultipleBirth& default_instance();

  enum MultipleBirthCase {
    kBoolean = 1,
    kInteger = 2,
    MULTIPLE_BIRTH_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCorePatient_MultipleBirth* internal_default_instance() {
    return reinterpret_cast<const UsCorePatient_MultipleBirth*>(
               &_UsCorePatient_MultipleBirth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  void Swap(UsCorePatient_MultipleBirth* other);
  friend void swap(UsCorePatient_MultipleBirth& a, UsCorePatient_MultipleBirth& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCorePatient_MultipleBirth* New() const final {
    return CreateMaybeMessage<UsCorePatient_MultipleBirth>(NULL);
  }

  UsCorePatient_MultipleBirth* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCorePatient_MultipleBirth>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCorePatient_MultipleBirth& from);
  void MergeFrom(const UsCorePatient_MultipleBirth& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCorePatient_MultipleBirth* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.Boolean boolean = 1;
  bool has_boolean() const;
  void clear_boolean();
  static const int kBooleanFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_boolean() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& boolean() const;
  ::google::fhir::stu3::proto::Boolean* release_boolean();
  ::google::fhir::stu3::proto::Boolean* mutable_boolean();
  void set_allocated_boolean(::google::fhir::stu3::proto::Boolean* boolean);

  // .google.fhir.stu3.proto.Integer integer = 2;
  bool has_integer() const;
  void clear_integer();
  static const int kIntegerFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Integer& _internal_integer() const;
  public:
  const ::google::fhir::stu3::proto::Integer& integer() const;
  ::google::fhir::stu3::proto::Integer* release_integer();
  ::google::fhir::stu3::proto::Integer* mutable_integer();
  void set_allocated_integer(::google::fhir::stu3::proto::Integer* integer);

  void clear_multiple_birth();
  MultipleBirthCase multiple_birth_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth)
 private:
  void set_has_boolean();
  void set_has_integer();

  inline bool has_multiple_birth() const;
  inline void clear_has_multiple_birth();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union MultipleBirthUnion {
    MultipleBirthUnion() {}
    ::google::fhir::stu3::proto::Boolean* boolean_;
    ::google::fhir::stu3::proto::Integer* integer_;
  } multiple_birth_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCorePatient_Contact : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCorePatient.Contact) */ {
 public:
  UsCorePatient_Contact();
  virtual ~UsCorePatient_Contact();

  UsCorePatient_Contact(const UsCorePatient_Contact& from);

  inline UsCorePatient_Contact& operator=(const UsCorePatient_Contact& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCorePatient_Contact(UsCorePatient_Contact&& from) noexcept
    : UsCorePatient_Contact() {
    *this = ::std::move(from);
  }

  inline UsCorePatient_Contact& operator=(UsCorePatient_Contact&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCorePatient_Contact& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCorePatient_Contact* internal_default_instance() {
    return reinterpret_cast<const UsCorePatient_Contact*>(
               &_UsCorePatient_Contact_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(UsCorePatient_Contact* other);
  friend void swap(UsCorePatient_Contact& a, UsCorePatient_Contact& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCorePatient_Contact* New() const final {
    return CreateMaybeMessage<UsCorePatient_Contact>(NULL);
  }

  UsCorePatient_Contact* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCorePatient_Contact>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCorePatient_Contact& from);
  void MergeFrom(const UsCorePatient_Contact& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCorePatient_Contact* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept relationship = 4;
  int relationship_size() const;
  void clear_relationship();
  static const int kRelationshipFieldNumber = 4;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_relationship(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_relationship();
  const ::google::fhir::stu3::proto::CodeableConcept& relationship(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_relationship();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      relationship() const;

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 6;
  int telecom_size() const;
  void clear_telecom();
  static const int kTelecomFieldNumber = 6;
  ::google::fhir::stu3::proto::ContactPoint* mutable_telecom(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >*
      mutable_telecom();
  const ::google::fhir::stu3::proto::ContactPoint& telecom(int index) const;
  ::google::fhir::stu3::proto::ContactPoint* add_telecom();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >&
      telecom() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.HumanName name = 5;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::HumanName& _internal_name() const;
  public:
  const ::google::fhir::stu3::proto::HumanName& name() const;
  ::google::fhir::stu3::proto::HumanName* release_name();
  ::google::fhir::stu3::proto::HumanName* mutable_name();
  void set_allocated_name(::google::fhir::stu3::proto::HumanName* name);

  // .google.fhir.stu3.proto.Address address = 7;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::Address& _internal_address() const;
  public:
  const ::google::fhir::stu3::proto::Address& address() const;
  ::google::fhir::stu3::proto::Address* release_address();
  ::google::fhir::stu3::proto::Address* mutable_address();
  void set_allocated_address(::google::fhir::stu3::proto::Address* address);

  // .google.fhir.stu3.proto.AdministrativeGenderCode gender = 8;
  bool has_gender() const;
  void clear_gender();
  static const int kGenderFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::AdministrativeGenderCode& _internal_gender() const;
  public:
  const ::google::fhir::stu3::proto::AdministrativeGenderCode& gender() const;
  ::google::fhir::stu3::proto::AdministrativeGenderCode* release_gender();
  ::google::fhir::stu3::proto::AdministrativeGenderCode* mutable_gender();
  void set_allocated_gender(::google::fhir::stu3::proto::AdministrativeGenderCode* gender);

  // .google.fhir.stu3.proto.Reference organization = 9 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  bool has_organization() const;
  void clear_organization();
  static const int kOrganizationFieldNumber = 9;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_organization() const;
  public:
  const ::google::fhir::stu3::proto::Reference& organization() const;
  ::google::fhir::stu3::proto::Reference* release_organization();
  ::google::fhir::stu3::proto::Reference* mutable_organization();
  void set_allocated_organization(::google::fhir::stu3::proto::Reference* organization);

  // .google.fhir.stu3.proto.Period period = 10;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCorePatient.Contact)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > relationship_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint > telecom_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::HumanName* name_;
  ::google::fhir::stu3::proto::Address* address_;
  ::google::fhir::stu3::proto::AdministrativeGenderCode* gender_;
  ::google::fhir::stu3::proto::Reference* organization_;
  ::google::fhir::stu3::proto::Period* period_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCorePatient_Communication : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCorePatient.Communication) */ {
 public:
  UsCorePatient_Communication();
  virtual ~UsCorePatient_Communication();

  UsCorePatient_Communication(const UsCorePatient_Communication& from);

  inline UsCorePatient_Communication& operator=(const UsCorePatient_Communication& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCorePatient_Communication(UsCorePatient_Communication&& from) noexcept
    : UsCorePatient_Communication() {
    *this = ::std::move(from);
  }

  inline UsCorePatient_Communication& operator=(UsCorePatient_Communication&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCorePatient_Communication& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCorePatient_Communication* internal_default_instance() {
    return reinterpret_cast<const UsCorePatient_Communication*>(
               &_UsCorePatient_Communication_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  void Swap(UsCorePatient_Communication* other);
  friend void swap(UsCorePatient_Communication& a, UsCorePatient_Communication& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCorePatient_Communication* New() const final {
    return CreateMaybeMessage<UsCorePatient_Communication>(NULL);
  }

  UsCorePatient_Communication* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCorePatient_Communication>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCorePatient_Communication& from);
  void MergeFrom(const UsCorePatient_Communication& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCorePatient_Communication* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CodeableConcept language = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& language() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_language();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::CodeableConcept* language);

  // .google.fhir.stu3.proto.Boolean preferred = 5;
  bool has_preferred() const;
  void clear_preferred();
  static const int kPreferredFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_preferred() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& preferred() const;
  ::google::fhir::stu3::proto::Boolean* release_preferred();
  ::google::fhir::stu3::proto::Boolean* mutable_preferred();
  void set_allocated_preferred(::google::fhir::stu3::proto::Boolean* preferred);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCorePatient.Communication)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::CodeableConcept* language_;
  ::google::fhir::stu3::proto::Boolean* preferred_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCorePatient_Link : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCorePatient.Link) */ {
 public:
  UsCorePatient_Link();
  virtual ~UsCorePatient_Link();

  UsCorePatient_Link(const UsCorePatient_Link& from);

  inline UsCorePatient_Link& operator=(const UsCorePatient_Link& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCorePatient_Link(UsCorePatient_Link&& from) noexcept
    : UsCorePatient_Link() {
    *this = ::std::move(from);
  }

  inline UsCorePatient_Link& operator=(UsCorePatient_Link&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCorePatient_Link& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCorePatient_Link* internal_default_instance() {
    return reinterpret_cast<const UsCorePatient_Link*>(
               &_UsCorePatient_Link_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  void Swap(UsCorePatient_Link* other);
  friend void swap(UsCorePatient_Link& a, UsCorePatient_Link& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCorePatient_Link* New() const final {
    return CreateMaybeMessage<UsCorePatient_Link>(NULL);
  }

  UsCorePatient_Link* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCorePatient_Link>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCorePatient_Link& from);
  void MergeFrom(const UsCorePatient_Link& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCorePatient_Link* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.Reference other = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  bool has_other() const;
  void clear_other();
  static const int kOtherFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_other() const;
  public:
  const ::google::fhir::stu3::proto::Reference& other() const;
  ::google::fhir::stu3::proto::Reference* release_other();
  ::google::fhir::stu3::proto::Reference* mutable_other();
  void set_allocated_other(::google::fhir::stu3::proto::Reference* other);

  // .google.fhir.stu3.proto.LinkTypeCode type = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::LinkTypeCode& _internal_type() const;
  public:
  const ::google::fhir::stu3::proto::LinkTypeCode& type() const;
  ::google::fhir::stu3::proto::LinkTypeCode* release_type();
  ::google::fhir::stu3::proto::LinkTypeCode* mutable_type();
  void set_allocated_type(::google::fhir::stu3::proto::LinkTypeCode* type);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCorePatient.Link)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::Reference* other_;
  ::google::fhir::stu3::proto::LinkTypeCode* type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCorePatient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCorePatient) */ {
 public:
  UsCorePatient();
  virtual ~UsCorePatient();

  UsCorePatient(const UsCorePatient& from);

  inline UsCorePatient& operator=(const UsCorePatient& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCorePatient(UsCorePatient&& from) noexcept
    : UsCorePatient() {
    *this = ::std::move(from);
  }

  inline UsCorePatient& operator=(UsCorePatient&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCorePatient& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCorePatient* internal_default_instance() {
    return reinterpret_cast<const UsCorePatient*>(
               &_UsCorePatient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  void Swap(UsCorePatient* other);
  friend void swap(UsCorePatient& a, UsCorePatient& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCorePatient* New() const final {
    return CreateMaybeMessage<UsCorePatient>(NULL);
  }

  UsCorePatient* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCorePatient>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCorePatient& from);
  void MergeFrom(const UsCorePatient& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCorePatient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCorePatient_Deceased Deceased;
  typedef UsCorePatient_MultipleBirth MultipleBirth;
  typedef UsCorePatient_Contact Contact;
  typedef UsCorePatient_Communication Communication;
  typedef UsCorePatient_Link Link;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  int contained_size() const;
  void clear_contained();
  static const int kContainedFieldNumber = 6;
  ::google::fhir::stu3::proto::ContainedResource* mutable_contained(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
      mutable_contained();
  const ::google::fhir::stu3::proto::ContainedResource& contained(int index) const;
  ::google::fhir::stu3::proto::ContainedResource* add_contained();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
      contained() const;

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 8;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  int identifier_size() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 9;
  ::google::fhir::stu3::proto::Identifier* mutable_identifier(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
      mutable_identifier();
  const ::google::fhir::stu3::proto::Identifier& identifier(int index) const;
  ::google::fhir::stu3::proto::Identifier* add_identifier();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
      identifier() const;

  // repeated .google.fhir.stu3.proto.HumanName name = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  int name_size() const;
  void clear_name();
  static const int kNameFieldNumber = 11;
  ::google::fhir::stu3::proto::HumanName* mutable_name(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::HumanName >*
      mutable_name();
  const ::google::fhir::stu3::proto::HumanName& name(int index) const;
  ::google::fhir::stu3::proto::HumanName* add_name();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::HumanName >&
      name() const;

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 12;
  int telecom_size() const;
  void clear_telecom();
  static const int kTelecomFieldNumber = 12;
  ::google::fhir::stu3::proto::ContactPoint* mutable_telecom(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >*
      mutable_telecom();
  const ::google::fhir::stu3::proto::ContactPoint& telecom(int index) const;
  ::google::fhir::stu3::proto::ContactPoint* add_telecom();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >&
      telecom() const;

  // repeated .google.fhir.stu3.proto.Address address = 16;
  int address_size() const;
  void clear_address();
  static const int kAddressFieldNumber = 16;
  ::google::fhir::stu3::proto::Address* mutable_address(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Address >*
      mutable_address();
  const ::google::fhir::stu3::proto::Address& address(int index) const;
  ::google::fhir::stu3::proto::Address* add_address();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Address >&
      address() const;

  // repeated .google.fhir.stu3.proto.Attachment photo = 19;
  int photo_size() const;
  void clear_photo();
  static const int kPhotoFieldNumber = 19;
  ::google::fhir::stu3::proto::Attachment* mutable_photo(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment >*
      mutable_photo();
  const ::google::fhir::stu3::proto::Attachment& photo(int index) const;
  ::google::fhir::stu3::proto::Attachment* add_photo();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment >&
      photo() const;

  // repeated .google.fhir.stu3.uscore.UsCorePatient.Contact contact = 20;
  int contact_size() const;
  void clear_contact();
  static const int kContactFieldNumber = 20;
  ::google::fhir::stu3::uscore::UsCorePatient_Contact* mutable_contact(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePatient_Contact >*
      mutable_contact();
  const ::google::fhir::stu3::uscore::UsCorePatient_Contact& contact(int index) const;
  ::google::fhir::stu3::uscore::UsCorePatient_Contact* add_contact();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePatient_Contact >&
      contact() const;

  // repeated .google.fhir.stu3.uscore.UsCorePatient.Communication communication = 22;
  int communication_size() const;
  void clear_communication();
  static const int kCommunicationFieldNumber = 22;
  ::google::fhir::stu3::uscore::UsCorePatient_Communication* mutable_communication(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePatient_Communication >*
      mutable_communication();
  const ::google::fhir::stu3::uscore::UsCorePatient_Communication& communication(int index) const;
  ::google::fhir::stu3::uscore::UsCorePatient_Communication* add_communication();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePatient_Communication >&
      communication() const;

  // repeated .google.fhir.stu3.proto.Reference general_practitioner = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
  int general_practitioner_size() const;
  void clear_general_practitioner();
  static const int kGeneralPractitionerFieldNumber = 23;
  ::google::fhir::stu3::proto::Reference* mutable_general_practitioner(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_general_practitioner();
  const ::google::fhir::stu3::proto::Reference& general_practitioner(int index) const;
  ::google::fhir::stu3::proto::Reference* add_general_practitioner();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      general_practitioner() const;

  // repeated .google.fhir.stu3.uscore.UsCorePatient.Link link = 25;
  int link_size() const;
  void clear_link();
  static const int kLinkFieldNumber = 25;
  ::google::fhir::stu3::uscore::UsCorePatient_Link* mutable_link(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePatient_Link >*
      mutable_link();
  const ::google::fhir::stu3::uscore::UsCorePatient_Link& link(int index) const;
  ::google::fhir::stu3::uscore::UsCorePatient_Link* add_link();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePatient_Link >&
      link() const;

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // .google.fhir.stu3.proto.Narrative text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Narrative& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::Narrative& text() const;
  ::google::fhir::stu3::proto::Narrative* release_text();
  ::google::fhir::stu3::proto::Narrative* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::Narrative* text);

  // .google.fhir.stu3.proto.Boolean active = 10;
  bool has_active() const;
  void clear_active();
  static const int kActiveFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_active() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& active() const;
  ::google::fhir::stu3::proto::Boolean* release_active();
  ::google::fhir::stu3::proto::Boolean* mutable_active();
  void set_allocated_active(::google::fhir::stu3::proto::Boolean* active);

  // .google.fhir.stu3.proto.AdministrativeGenderCode gender = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_gender() const;
  void clear_gender();
  static const int kGenderFieldNumber = 13;
  private:
  const ::google::fhir::stu3::proto::AdministrativeGenderCode& _internal_gender() const;
  public:
  const ::google::fhir::stu3::proto::AdministrativeGenderCode& gender() const;
  ::google::fhir::stu3::proto::AdministrativeGenderCode* release_gender();
  ::google::fhir::stu3::proto::AdministrativeGenderCode* mutable_gender();
  void set_allocated_gender(::google::fhir::stu3::proto::AdministrativeGenderCode* gender);

  // .google.fhir.stu3.proto.Date birth_date = 14;
  bool has_birth_date() const;
  void clear_birth_date();
  static const int kBirthDateFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::Date& _internal_birth_date() const;
  public:
  const ::google::fhir::stu3::proto::Date& birth_date() const;
  ::google::fhir::stu3::proto::Date* release_birth_date();
  ::google::fhir::stu3::proto::Date* mutable_birth_date();
  void set_allocated_birth_date(::google::fhir::stu3::proto::Date* birth_date);

  // .google.fhir.stu3.uscore.UsCorePatient.Deceased deceased = 15 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_deceased() const;
  void clear_deceased();
  static const int kDeceasedFieldNumber = 15;
  private:
  const ::google::fhir::stu3::uscore::UsCorePatient_Deceased& _internal_deceased() const;
  public:
  const ::google::fhir::stu3::uscore::UsCorePatient_Deceased& deceased() const;
  ::google::fhir::stu3::uscore::UsCorePatient_Deceased* release_deceased();
  ::google::fhir::stu3::uscore::UsCorePatient_Deceased* mutable_deceased();
  void set_allocated_deceased(::google::fhir::stu3::uscore::UsCorePatient_Deceased* deceased);

  // .google.fhir.stu3.proto.CodeableConcept marital_status = 17;
  bool has_marital_status() const;
  void clear_marital_status();
  static const int kMaritalStatusFieldNumber = 17;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_marital_status() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& marital_status() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_marital_status();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_marital_status();
  void set_allocated_marital_status(::google::fhir::stu3::proto::CodeableConcept* marital_status);

  // .google.fhir.stu3.uscore.UsCorePatient.MultipleBirth multiple_birth = 18 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_multiple_birth() const;
  void clear_multiple_birth();
  static const int kMultipleBirthFieldNumber = 18;
  private:
  const ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth& _internal_multiple_birth() const;
  public:
  const ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth& multiple_birth() const;
  ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth* release_multiple_birth();
  ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth* mutable_multiple_birth();
  void set_allocated_multiple_birth(::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth* multiple_birth);

  // .google.fhir.stu3.proto.Reference managing_organization = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  bool has_managing_organization() const;
  void clear_managing_organization();
  static const int kManagingOrganizationFieldNumber = 24;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_managing_organization() const;
  public:
  const ::google::fhir::stu3::proto::Reference& managing_organization() const;
  ::google::fhir::stu3::proto::Reference* release_managing_organization();
  ::google::fhir::stu3::proto::Reference* mutable_managing_organization();
  void set_allocated_managing_organization(::google::fhir::stu3::proto::Reference* managing_organization);

  // .google.fhir.stu3.uscore.PatientUSCoreRaceExtension race = 26 [(.google.fhir.stu3.proto.fhir_inlined_extension_url) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-race"];
  bool has_race() const;
  void clear_race();
  static const int kRaceFieldNumber = 26;
  private:
  const ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension& _internal_race() const;
  public:
  const ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension& race() const;
  ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension* release_race();
  ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension* mutable_race();
  void set_allocated_race(::google::fhir::stu3::uscore::PatientUSCoreRaceExtension* race);

  // .google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension ethnicity = 27 [(.google.fhir.stu3.proto.fhir_inlined_extension_url) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity"];
  bool has_ethnicity() const;
  void clear_ethnicity();
  static const int kEthnicityFieldNumber = 27;
  private:
  const ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension& _internal_ethnicity() const;
  public:
  const ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension& ethnicity() const;
  ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension* release_ethnicity();
  ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension* mutable_ethnicity();
  void set_allocated_ethnicity(::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension* ethnicity);

  // .google.fhir.stu3.uscore.UsCoreBirthSexCode birthsex = 28 [(.google.fhir.stu3.proto.fhir_inlined_extension_url) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex"];
  bool has_birthsex() const;
  void clear_birthsex();
  static const int kBirthsexFieldNumber = 28;
  private:
  const ::google::fhir::stu3::uscore::UsCoreBirthSexCode& _internal_birthsex() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreBirthSexCode& birthsex() const;
  ::google::fhir::stu3::uscore::UsCoreBirthSexCode* release_birthsex();
  ::google::fhir::stu3::uscore::UsCoreBirthSexCode* mutable_birthsex();
  void set_allocated_birthsex(::google::fhir::stu3::uscore::UsCoreBirthSexCode* birthsex);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCorePatient)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource > contained_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier > identifier_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::HumanName > name_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint > telecom_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Address > address_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment > photo_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePatient_Contact > contact_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePatient_Communication > communication_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > general_practitioner_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePatient_Link > link_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  ::google::fhir::stu3::proto::Narrative* text_;
  ::google::fhir::stu3::proto::Boolean* active_;
  ::google::fhir::stu3::proto::AdministrativeGenderCode* gender_;
  ::google::fhir::stu3::proto::Date* birth_date_;
  ::google::fhir::stu3::uscore::UsCorePatient_Deceased* deceased_;
  ::google::fhir::stu3::proto::CodeableConcept* marital_status_;
  ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth* multiple_birth_;
  ::google::fhir::stu3::proto::Reference* managing_organization_;
  ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension* race_;
  ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension* ethnicity_;
  ::google::fhir::stu3::uscore::UsCoreBirthSexCode* birthsex_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCorePractitioner_Qualification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCorePractitioner.Qualification) */ {
 public:
  UsCorePractitioner_Qualification();
  virtual ~UsCorePractitioner_Qualification();

  UsCorePractitioner_Qualification(const UsCorePractitioner_Qualification& from);

  inline UsCorePractitioner_Qualification& operator=(const UsCorePractitioner_Qualification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCorePractitioner_Qualification(UsCorePractitioner_Qualification&& from) noexcept
    : UsCorePractitioner_Qualification() {
    *this = ::std::move(from);
  }

  inline UsCorePractitioner_Qualification& operator=(UsCorePractitioner_Qualification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCorePractitioner_Qualification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCorePractitioner_Qualification* internal_default_instance() {
    return reinterpret_cast<const UsCorePractitioner_Qualification*>(
               &_UsCorePractitioner_Qualification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  void Swap(UsCorePractitioner_Qualification* other);
  friend void swap(UsCorePractitioner_Qualification& a, UsCorePractitioner_Qualification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCorePractitioner_Qualification* New() const final {
    return CreateMaybeMessage<UsCorePractitioner_Qualification>(NULL);
  }

  UsCorePractitioner_Qualification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCorePractitioner_Qualification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCorePractitioner_Qualification& from);
  void MergeFrom(const UsCorePractitioner_Qualification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCorePractitioner_Qualification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Identifier identifier = 4;
  int identifier_size() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 4;
  ::google::fhir::stu3::proto::Identifier* mutable_identifier(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
      mutable_identifier();
  const ::google::fhir::stu3::proto::Identifier& identifier(int index) const;
  ::google::fhir::stu3::proto::Identifier* add_identifier();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
      identifier() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CodeableConcept code = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_code() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& code() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_code();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_code();
  void set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code);

  // .google.fhir.stu3.proto.Period period = 6;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  // .google.fhir.stu3.proto.Reference issuer = 7 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  bool has_issuer() const;
  void clear_issuer();
  static const int kIssuerFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_issuer() const;
  public:
  const ::google::fhir::stu3::proto::Reference& issuer() const;
  ::google::fhir::stu3::proto::Reference* release_issuer();
  ::google::fhir::stu3::proto::Reference* mutable_issuer();
  void set_allocated_issuer(::google::fhir::stu3::proto::Reference* issuer);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCorePractitioner.Qualification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier > identifier_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::CodeableConcept* code_;
  ::google::fhir::stu3::proto::Period* period_;
  ::google::fhir::stu3::proto::Reference* issuer_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCorePractitioner : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCorePractitioner) */ {
 public:
  UsCorePractitioner();
  virtual ~UsCorePractitioner();

  UsCorePractitioner(const UsCorePractitioner& from);

  inline UsCorePractitioner& operator=(const UsCorePractitioner& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCorePractitioner(UsCorePractitioner&& from) noexcept
    : UsCorePractitioner() {
    *this = ::std::move(from);
  }

  inline UsCorePractitioner& operator=(UsCorePractitioner&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCorePractitioner& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCorePractitioner* internal_default_instance() {
    return reinterpret_cast<const UsCorePractitioner*>(
               &_UsCorePractitioner_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  void Swap(UsCorePractitioner* other);
  friend void swap(UsCorePractitioner& a, UsCorePractitioner& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCorePractitioner* New() const final {
    return CreateMaybeMessage<UsCorePractitioner>(NULL);
  }

  UsCorePractitioner* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCorePractitioner>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCorePractitioner& from);
  void MergeFrom(const UsCorePractitioner& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCorePractitioner* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCorePractitioner_Qualification Qualification;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  int contained_size() const;
  void clear_contained();
  static const int kContainedFieldNumber = 6;
  ::google::fhir::stu3::proto::ContainedResource* mutable_contained(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
      mutable_contained();
  const ::google::fhir::stu3::proto::ContainedResource& contained(int index) const;
  ::google::fhir::stu3::proto::ContainedResource* add_contained();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
      contained() const;

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 8;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  int identifier_size() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 9;
  ::google::fhir::stu3::proto::Identifier* mutable_identifier(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
      mutable_identifier();
  const ::google::fhir::stu3::proto::Identifier& identifier(int index) const;
  ::google::fhir::stu3::proto::Identifier* add_identifier();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
      identifier() const;

  // repeated .google.fhir.stu3.proto.ContactPoint telecom = 12;
  int telecom_size() const;
  void clear_telecom();
  static const int kTelecomFieldNumber = 12;
  ::google::fhir::stu3::proto::ContactPoint* mutable_telecom(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >*
      mutable_telecom();
  const ::google::fhir::stu3::proto::ContactPoint& telecom(int index) const;
  ::google::fhir::stu3::proto::ContactPoint* add_telecom();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >&
      telecom() const;

  // repeated .google.fhir.stu3.proto.Address address = 13;
  int address_size() const;
  void clear_address();
  static const int kAddressFieldNumber = 13;
  ::google::fhir::stu3::proto::Address* mutable_address(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Address >*
      mutable_address();
  const ::google::fhir::stu3::proto::Address& address(int index) const;
  ::google::fhir::stu3::proto::Address* add_address();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Address >&
      address() const;

  // repeated .google.fhir.stu3.proto.Attachment photo = 16;
  int photo_size() const;
  void clear_photo();
  static const int kPhotoFieldNumber = 16;
  ::google::fhir::stu3::proto::Attachment* mutable_photo(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment >*
      mutable_photo();
  const ::google::fhir::stu3::proto::Attachment& photo(int index) const;
  ::google::fhir::stu3::proto::Attachment* add_photo();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment >&
      photo() const;

  // repeated .google.fhir.stu3.uscore.UsCorePractitioner.Qualification qualification = 17;
  int qualification_size() const;
  void clear_qualification();
  static const int kQualificationFieldNumber = 17;
  ::google::fhir::stu3::uscore::UsCorePractitioner_Qualification* mutable_qualification(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePractitioner_Qualification >*
      mutable_qualification();
  const ::google::fhir::stu3::uscore::UsCorePractitioner_Qualification& qualification(int index) const;
  ::google::fhir::stu3::uscore::UsCorePractitioner_Qualification* add_qualification();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePractitioner_Qualification >&
      qualification() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept communication = 18;
  int communication_size() const;
  void clear_communication();
  static const int kCommunicationFieldNumber = 18;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_communication(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_communication();
  const ::google::fhir::stu3::proto::CodeableConcept& communication(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_communication();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      communication() const;

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // .google.fhir.stu3.proto.Narrative text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Narrative& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::Narrative& text() const;
  ::google::fhir::stu3::proto::Narrative* release_text();
  ::google::fhir::stu3::proto::Narrative* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::Narrative* text);

  // .google.fhir.stu3.proto.Boolean active = 10;
  bool has_active() const;
  void clear_active();
  static const int kActiveFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_active() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& active() const;
  ::google::fhir::stu3::proto::Boolean* release_active();
  ::google::fhir::stu3::proto::Boolean* mutable_active();
  void set_allocated_active(::google::fhir::stu3::proto::Boolean* active);

  // .google.fhir.stu3.proto.HumanName name = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 11;
  private:
  const ::google::fhir::stu3::proto::HumanName& _internal_name() const;
  public:
  const ::google::fhir::stu3::proto::HumanName& name() const;
  ::google::fhir::stu3::proto::HumanName* release_name();
  ::google::fhir::stu3::proto::HumanName* mutable_name();
  void set_allocated_name(::google::fhir::stu3::proto::HumanName* name);

  // .google.fhir.stu3.proto.AdministrativeGenderCode gender = 14;
  bool has_gender() const;
  void clear_gender();
  static const int kGenderFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::AdministrativeGenderCode& _internal_gender() const;
  public:
  const ::google::fhir::stu3::proto::AdministrativeGenderCode& gender() const;
  ::google::fhir::stu3::proto::AdministrativeGenderCode* release_gender();
  ::google::fhir::stu3::proto::AdministrativeGenderCode* mutable_gender();
  void set_allocated_gender(::google::fhir::stu3::proto::AdministrativeGenderCode* gender);

  // .google.fhir.stu3.proto.Date birth_date = 15;
  bool has_birth_date() const;
  void clear_birth_date();
  static const int kBirthDateFieldNumber = 15;
  private:
  const ::google::fhir::stu3::proto::Date& _internal_birth_date() const;
  public:
  const ::google::fhir::stu3::proto::Date& birth_date() const;
  ::google::fhir::stu3::proto::Date* release_birth_date();
  ::google::fhir::stu3::proto::Date* mutable_birth_date();
  void set_allocated_birth_date(::google::fhir::stu3::proto::Date* birth_date);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCorePractitioner)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource > contained_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier > identifier_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint > telecom_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Address > address_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment > photo_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePractitioner_Qualification > qualification_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > communication_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  ::google::fhir::stu3::proto::Narrative* text_;
  ::google::fhir::stu3::proto::Boolean* active_;
  ::google::fhir::stu3::proto::HumanName* name_;
  ::google::fhir::stu3::proto::AdministrativeGenderCode* gender_;
  ::google::fhir::stu3::proto::Date* birth_date_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreProcedure_Performed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreProcedure.Performed) */ {
 public:
  UsCoreProcedure_Performed();
  virtual ~UsCoreProcedure_Performed();

  UsCoreProcedure_Performed(const UsCoreProcedure_Performed& from);

  inline UsCoreProcedure_Performed& operator=(const UsCoreProcedure_Performed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreProcedure_Performed(UsCoreProcedure_Performed&& from) noexcept
    : UsCoreProcedure_Performed() {
    *this = ::std::move(from);
  }

  inline UsCoreProcedure_Performed& operator=(UsCoreProcedure_Performed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreProcedure_Performed& default_instance();

  enum PerformedCase {
    kDateTime = 1,
    kPeriod = 2,
    PERFORMED_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreProcedure_Performed* internal_default_instance() {
    return reinterpret_cast<const UsCoreProcedure_Performed*>(
               &_UsCoreProcedure_Performed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  void Swap(UsCoreProcedure_Performed* other);
  friend void swap(UsCoreProcedure_Performed& a, UsCoreProcedure_Performed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreProcedure_Performed* New() const final {
    return CreateMaybeMessage<UsCoreProcedure_Performed>(NULL);
  }

  UsCoreProcedure_Performed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreProcedure_Performed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreProcedure_Performed& from);
  void MergeFrom(const UsCoreProcedure_Performed& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreProcedure_Performed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  // .google.fhir.stu3.proto.Period period = 2;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  void clear_performed();
  PerformedCase performed_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreProcedure.Performed)
 private:
  void set_has_date_time();
  void set_has_period();

  inline bool has_performed() const;
  inline void clear_has_performed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union PerformedUnion {
    PerformedUnion() {}
    ::google::fhir::stu3::proto::DateTime* date_time_;
    ::google::fhir::stu3::proto::Period* period_;
  } performed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreProcedure_Performer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreProcedure.Performer) */ {
 public:
  UsCoreProcedure_Performer();
  virtual ~UsCoreProcedure_Performer();

  UsCoreProcedure_Performer(const UsCoreProcedure_Performer& from);

  inline UsCoreProcedure_Performer& operator=(const UsCoreProcedure_Performer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreProcedure_Performer(UsCoreProcedure_Performer&& from) noexcept
    : UsCoreProcedure_Performer() {
    *this = ::std::move(from);
  }

  inline UsCoreProcedure_Performer& operator=(UsCoreProcedure_Performer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreProcedure_Performer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreProcedure_Performer* internal_default_instance() {
    return reinterpret_cast<const UsCoreProcedure_Performer*>(
               &_UsCoreProcedure_Performer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  void Swap(UsCoreProcedure_Performer* other);
  friend void swap(UsCoreProcedure_Performer& a, UsCoreProcedure_Performer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreProcedure_Performer* New() const final {
    return CreateMaybeMessage<UsCoreProcedure_Performer>(NULL);
  }

  UsCoreProcedure_Performer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreProcedure_Performer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreProcedure_Performer& from);
  void MergeFrom(const UsCoreProcedure_Performer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreProcedure_Performer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CodeableConcept role = 4;
  bool has_role() const;
  void clear_role();
  static const int kRoleFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_role() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& role() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_role();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_role();
  void set_allocated_role(::google::fhir::stu3::proto::CodeableConcept* role);

  // .google.fhir.stu3.proto.Reference actor = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device"];
  bool has_actor() const;
  void clear_actor();
  static const int kActorFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_actor() const;
  public:
  const ::google::fhir::stu3::proto::Reference& actor() const;
  ::google::fhir::stu3::proto::Reference* release_actor();
  ::google::fhir::stu3::proto::Reference* mutable_actor();
  void set_allocated_actor(::google::fhir::stu3::proto::Reference* actor);

  // .google.fhir.stu3.proto.Reference on_behalf_of = 6 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
  bool has_on_behalf_of() const;
  void clear_on_behalf_of();
  static const int kOnBehalfOfFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_on_behalf_of() const;
  public:
  const ::google::fhir::stu3::proto::Reference& on_behalf_of() const;
  ::google::fhir::stu3::proto::Reference* release_on_behalf_of();
  ::google::fhir::stu3::proto::Reference* mutable_on_behalf_of();
  void set_allocated_on_behalf_of(::google::fhir::stu3::proto::Reference* on_behalf_of);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreProcedure.Performer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::CodeableConcept* role_;
  ::google::fhir::stu3::proto::Reference* actor_;
  ::google::fhir::stu3::proto::Reference* on_behalf_of_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreProcedure_FocalDevice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice) */ {
 public:
  UsCoreProcedure_FocalDevice();
  virtual ~UsCoreProcedure_FocalDevice();

  UsCoreProcedure_FocalDevice(const UsCoreProcedure_FocalDevice& from);

  inline UsCoreProcedure_FocalDevice& operator=(const UsCoreProcedure_FocalDevice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreProcedure_FocalDevice(UsCoreProcedure_FocalDevice&& from) noexcept
    : UsCoreProcedure_FocalDevice() {
    *this = ::std::move(from);
  }

  inline UsCoreProcedure_FocalDevice& operator=(UsCoreProcedure_FocalDevice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreProcedure_FocalDevice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreProcedure_FocalDevice* internal_default_instance() {
    return reinterpret_cast<const UsCoreProcedure_FocalDevice*>(
               &_UsCoreProcedure_FocalDevice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  void Swap(UsCoreProcedure_FocalDevice* other);
  friend void swap(UsCoreProcedure_FocalDevice& a, UsCoreProcedure_FocalDevice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreProcedure_FocalDevice* New() const final {
    return CreateMaybeMessage<UsCoreProcedure_FocalDevice>(NULL);
  }

  UsCoreProcedure_FocalDevice* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreProcedure_FocalDevice>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreProcedure_FocalDevice& from);
  void MergeFrom(const UsCoreProcedure_FocalDevice& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreProcedure_FocalDevice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CodeableConcept action = 4;
  bool has_action() const;
  void clear_action();
  static const int kActionFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_action() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& action() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_action();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_action();
  void set_allocated_action(::google::fhir::stu3::proto::CodeableConcept* action);

  // .google.fhir.stu3.proto.Reference manipulated = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device"];
  bool has_manipulated() const;
  void clear_manipulated();
  static const int kManipulatedFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_manipulated() const;
  public:
  const ::google::fhir::stu3::proto::Reference& manipulated() const;
  ::google::fhir::stu3::proto::Reference* release_manipulated();
  ::google::fhir::stu3::proto::Reference* mutable_manipulated();
  void set_allocated_manipulated(::google::fhir::stu3::proto::Reference* manipulated);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::CodeableConcept* action_;
  ::google::fhir::stu3::proto::Reference* manipulated_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreProcedure : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreProcedure) */ {
 public:
  UsCoreProcedure();
  virtual ~UsCoreProcedure();

  UsCoreProcedure(const UsCoreProcedure& from);

  inline UsCoreProcedure& operator=(const UsCoreProcedure& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreProcedure(UsCoreProcedure&& from) noexcept
    : UsCoreProcedure() {
    *this = ::std::move(from);
  }

  inline UsCoreProcedure& operator=(UsCoreProcedure&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreProcedure& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreProcedure* internal_default_instance() {
    return reinterpret_cast<const UsCoreProcedure*>(
               &_UsCoreProcedure_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  void Swap(UsCoreProcedure* other);
  friend void swap(UsCoreProcedure& a, UsCoreProcedure& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreProcedure* New() const final {
    return CreateMaybeMessage<UsCoreProcedure>(NULL);
  }

  UsCoreProcedure* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreProcedure>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreProcedure& from);
  void MergeFrom(const UsCoreProcedure& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreProcedure* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreProcedure_Performed Performed;
  typedef UsCoreProcedure_Performer Performer;
  typedef UsCoreProcedure_FocalDevice FocalDevice;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  int contained_size() const;
  void clear_contained();
  static const int kContainedFieldNumber = 6;
  ::google::fhir::stu3::proto::ContainedResource* mutable_contained(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
      mutable_contained();
  const ::google::fhir::stu3::proto::ContainedResource& contained(int index) const;
  ::google::fhir::stu3::proto::ContainedResource* add_contained();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
      contained() const;

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 8;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  int identifier_size() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 9;
  ::google::fhir::stu3::proto::Identifier* mutable_identifier(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
      mutable_identifier();
  const ::google::fhir::stu3::proto::Identifier& identifier(int index) const;
  ::google::fhir::stu3::proto::Identifier* add_identifier();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
      identifier() const;

  // repeated .google.fhir.stu3.proto.Reference definition = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ActivityDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/HealthcareService"];
  int definition_size() const;
  void clear_definition();
  static const int kDefinitionFieldNumber = 10;
  ::google::fhir::stu3::proto::Reference* mutable_definition(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_definition();
  const ::google::fhir::stu3::proto::Reference& definition(int index) const;
  ::google::fhir::stu3::proto::Reference* add_definition();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      definition() const;

  // repeated .google.fhir.stu3.proto.Reference based_on = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  int based_on_size() const;
  void clear_based_on();
  static const int kBasedOnFieldNumber = 11;
  ::google::fhir::stu3::proto::Reference* mutable_based_on(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_based_on();
  const ::google::fhir::stu3::proto::Reference& based_on(int index) const;
  ::google::fhir::stu3::proto::Reference* add_based_on();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      based_on() const;

  // repeated .google.fhir.stu3.proto.Reference part_of = 12 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Procedure", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationAdministration"];
  int part_of_size() const;
  void clear_part_of();
  static const int kPartOfFieldNumber = 12;
  ::google::fhir::stu3::proto::Reference* mutable_part_of(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_part_of();
  const ::google::fhir::stu3::proto::Reference& part_of(int index) const;
  ::google::fhir::stu3::proto::Reference* add_part_of();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      part_of() const;

  // repeated .google.fhir.stu3.uscore.UsCoreProcedure.Performer performer = 21;
  int performer_size() const;
  void clear_performer();
  static const int kPerformerFieldNumber = 21;
  ::google::fhir::stu3::uscore::UsCoreProcedure_Performer* mutable_performer(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreProcedure_Performer >*
      mutable_performer();
  const ::google::fhir::stu3::uscore::UsCoreProcedure_Performer& performer(int index) const;
  ::google::fhir::stu3::uscore::UsCoreProcedure_Performer* add_performer();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreProcedure_Performer >&
      performer() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 23;
  int reason_code_size() const;
  void clear_reason_code();
  static const int kReasonCodeFieldNumber = 23;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_reason_code(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_reason_code();
  const ::google::fhir::stu3::proto::CodeableConcept& reason_code(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_reason_code();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      reason_code() const;

  // repeated .google.fhir.stu3.proto.Reference reason_reference = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
  int reason_reference_size() const;
  void clear_reason_reference();
  static const int kReasonReferenceFieldNumber = 24;
  ::google::fhir::stu3::proto::Reference* mutable_reason_reference(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_reason_reference();
  const ::google::fhir::stu3::proto::Reference& reason_reference(int index) const;
  ::google::fhir::stu3::proto::Reference* add_reason_reference();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      reason_reference() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept body_site = 25;
  int body_site_size() const;
  void clear_body_site();
  static const int kBodySiteFieldNumber = 25;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_body_site(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_body_site();
  const ::google::fhir::stu3::proto::CodeableConcept& body_site(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_body_site();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      body_site() const;

  // repeated .google.fhir.stu3.proto.Reference report = 27 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DiagnosticReport"];
  int report_size() const;
  void clear_report();
  static const int kReportFieldNumber = 27;
  ::google::fhir::stu3::proto::Reference* mutable_report(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_report();
  const ::google::fhir::stu3::proto::Reference& report(int index) const;
  ::google::fhir::stu3::proto::Reference* add_report();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      report() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept complication = 28;
  int complication_size() const;
  void clear_complication();
  static const int kComplicationFieldNumber = 28;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_complication(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_complication();
  const ::google::fhir::stu3::proto::CodeableConcept& complication(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_complication();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      complication() const;

  // repeated .google.fhir.stu3.proto.Reference complication_detail = 29 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
  int complication_detail_size() const;
  void clear_complication_detail();
  static const int kComplicationDetailFieldNumber = 29;
  ::google::fhir::stu3::proto::Reference* mutable_complication_detail(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_complication_detail();
  const ::google::fhir::stu3::proto::Reference& complication_detail(int index) const;
  ::google::fhir::stu3::proto::Reference* add_complication_detail();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      complication_detail() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept follow_up = 30;
  int follow_up_size() const;
  void clear_follow_up();
  static const int kFollowUpFieldNumber = 30;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_follow_up(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_follow_up();
  const ::google::fhir::stu3::proto::CodeableConcept& follow_up(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_follow_up();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      follow_up() const;

  // repeated .google.fhir.stu3.proto.Annotation note = 31;
  int note_size() const;
  void clear_note();
  static const int kNoteFieldNumber = 31;
  ::google::fhir::stu3::proto::Annotation* mutable_note(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
      mutable_note();
  const ::google::fhir::stu3::proto::Annotation& note(int index) const;
  ::google::fhir::stu3::proto::Annotation* add_note();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
      note() const;

  // repeated .google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice focal_device = 32;
  int focal_device_size() const;
  void clear_focal_device();
  static const int kFocalDeviceFieldNumber = 32;
  ::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice* mutable_focal_device(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice >*
      mutable_focal_device();
  const ::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice& focal_device(int index) const;
  ::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice* add_focal_device();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice >&
      focal_device() const;

  // repeated .google.fhir.stu3.proto.Reference used_reference = 33 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Substance"];
  int used_reference_size() const;
  void clear_used_reference();
  static const int kUsedReferenceFieldNumber = 33;
  ::google::fhir::stu3::proto::Reference* mutable_used_reference(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_used_reference();
  const ::google::fhir::stu3::proto::Reference& used_reference(int index) const;
  ::google::fhir::stu3::proto::Reference* add_used_reference();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      used_reference() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept used_code = 34;
  int used_code_size() const;
  void clear_used_code();
  static const int kUsedCodeFieldNumber = 34;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_used_code(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_used_code();
  const ::google::fhir::stu3::proto::CodeableConcept& used_code(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_used_code();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      used_code() const;

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // .google.fhir.stu3.proto.Narrative text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Narrative& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::Narrative& text() const;
  ::google::fhir::stu3::proto::Narrative* release_text();
  ::google::fhir::stu3::proto::Narrative* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::Narrative* text);

  // .google.fhir.stu3.proto.EventStatusCode status = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 13;
  private:
  const ::google::fhir::stu3::proto::EventStatusCode& _internal_status() const;
  public:
  const ::google::fhir::stu3::proto::EventStatusCode& status() const;
  ::google::fhir::stu3::proto::EventStatusCode* release_status();
  ::google::fhir::stu3::proto::EventStatusCode* mutable_status();
  void set_allocated_status(::google::fhir::stu3::proto::EventStatusCode* status);

  // .google.fhir.stu3.proto.Boolean not_done = 14;
  bool has_not_done() const;
  void clear_not_done();
  static const int kNotDoneFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::Boolean& _internal_not_done() const;
  public:
  const ::google::fhir::stu3::proto::Boolean& not_done() const;
  ::google::fhir::stu3::proto::Boolean* release_not_done();
  ::google::fhir::stu3::proto::Boolean* mutable_not_done();
  void set_allocated_not_done(::google::fhir::stu3::proto::Boolean* not_done);

  // .google.fhir.stu3.proto.CodeableConcept not_done_reason = 15;
  bool has_not_done_reason() const;
  void clear_not_done_reason();
  static const int kNotDoneReasonFieldNumber = 15;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_not_done_reason() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& not_done_reason() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_not_done_reason();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_not_done_reason();
  void set_allocated_not_done_reason(::google::fhir::stu3::proto::CodeableConcept* not_done_reason);

  // .google.fhir.stu3.proto.CodeableConcept category = 16;
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 16;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_category() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& category() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_category();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_category();
  void set_allocated_category(::google::fhir::stu3::proto::CodeableConcept* category);

  // .google.fhir.stu3.proto.CodeableConcept code = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 17;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_code() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& code() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_code();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_code();
  void set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code);

  // .google.fhir.stu3.proto.Reference subject = 18 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  bool has_subject() const;
  void clear_subject();
  static const int kSubjectFieldNumber = 18;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_subject() const;
  public:
  const ::google::fhir::stu3::proto::Reference& subject() const;
  ::google::fhir::stu3::proto::Reference* release_subject();
  ::google::fhir::stu3::proto::Reference* mutable_subject();
  void set_allocated_subject(::google::fhir::stu3::proto::Reference* subject);

  // .google.fhir.stu3.proto.Reference context = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 19;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_context() const;
  public:
  const ::google::fhir::stu3::proto::Reference& context() const;
  ::google::fhir::stu3::proto::Reference* release_context();
  ::google::fhir::stu3::proto::Reference* mutable_context();
  void set_allocated_context(::google::fhir::stu3::proto::Reference* context);

  // .google.fhir.stu3.uscore.UsCoreProcedure.Performed performed = 20 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_performed() const;
  void clear_performed();
  static const int kPerformedFieldNumber = 20;
  private:
  const ::google::fhir::stu3::uscore::UsCoreProcedure_Performed& _internal_performed() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreProcedure_Performed& performed() const;
  ::google::fhir::stu3::uscore::UsCoreProcedure_Performed* release_performed();
  ::google::fhir::stu3::uscore::UsCoreProcedure_Performed* mutable_performed();
  void set_allocated_performed(::google::fhir::stu3::uscore::UsCoreProcedure_Performed* performed);

  // .google.fhir.stu3.proto.Reference location = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 22;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_location() const;
  public:
  const ::google::fhir::stu3::proto::Reference& location() const;
  ::google::fhir::stu3::proto::Reference* release_location();
  ::google::fhir::stu3::proto::Reference* mutable_location();
  void set_allocated_location(::google::fhir::stu3::proto::Reference* location);

  // .google.fhir.stu3.proto.CodeableConcept outcome = 26;
  bool has_outcome() const;
  void clear_outcome();
  static const int kOutcomeFieldNumber = 26;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_outcome() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& outcome() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_outcome();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_outcome();
  void set_allocated_outcome(::google::fhir::stu3::proto::CodeableConcept* outcome);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreProcedure)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource > contained_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier > identifier_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > definition_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > based_on_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > part_of_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreProcedure_Performer > performer_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > reason_code_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > reason_reference_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > body_site_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > report_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > complication_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > complication_detail_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > follow_up_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation > note_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice > focal_device_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > used_reference_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > used_code_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  ::google::fhir::stu3::proto::Narrative* text_;
  ::google::fhir::stu3::proto::EventStatusCode* status_;
  ::google::fhir::stu3::proto::Boolean* not_done_;
  ::google::fhir::stu3::proto::CodeableConcept* not_done_reason_;
  ::google::fhir::stu3::proto::CodeableConcept* category_;
  ::google::fhir::stu3::proto::CodeableConcept* code_;
  ::google::fhir::stu3::proto::Reference* subject_;
  ::google::fhir::stu3::proto::Reference* context_;
  ::google::fhir::stu3::uscore::UsCoreProcedure_Performed* performed_;
  ::google::fhir::stu3::proto::Reference* location_;
  ::google::fhir::stu3::proto::CodeableConcept* outcome_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CapabilityStatementProfileResourceAssociationExtension : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension) */ {
 public:
  CapabilityStatementProfileResourceAssociationExtension();
  virtual ~CapabilityStatementProfileResourceAssociationExtension();

  CapabilityStatementProfileResourceAssociationExtension(const CapabilityStatementProfileResourceAssociationExtension& from);

  inline CapabilityStatementProfileResourceAssociationExtension& operator=(const CapabilityStatementProfileResourceAssociationExtension& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CapabilityStatementProfileResourceAssociationExtension(CapabilityStatementProfileResourceAssociationExtension&& from) noexcept
    : CapabilityStatementProfileResourceAssociationExtension() {
    *this = ::std::move(from);
  }

  inline CapabilityStatementProfileResourceAssociationExtension& operator=(CapabilityStatementProfileResourceAssociationExtension&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CapabilityStatementProfileResourceAssociationExtension& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CapabilityStatementProfileResourceAssociationExtension* internal_default_instance() {
    return reinterpret_cast<const CapabilityStatementProfileResourceAssociationExtension*>(
               &_CapabilityStatementProfileResourceAssociationExtension_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  void Swap(CapabilityStatementProfileResourceAssociationExtension* other);
  friend void swap(CapabilityStatementProfileResourceAssociationExtension& a, CapabilityStatementProfileResourceAssociationExtension& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CapabilityStatementProfileResourceAssociationExtension* New() const final {
    return CreateMaybeMessage<CapabilityStatementProfileResourceAssociationExtension>(NULL);
  }

  CapabilityStatementProfileResourceAssociationExtension* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CapabilityStatementProfileResourceAssociationExtension>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CapabilityStatementProfileResourceAssociationExtension& from);
  void MergeFrom(const CapabilityStatementProfileResourceAssociationExtension& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CapabilityStatementProfileResourceAssociationExtension* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ResourceTypeCode value_code = 3;
  bool has_value_code() const;
  void clear_value_code();
  static const int kValueCodeFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::ResourceTypeCode& _internal_value_code() const;
  public:
  const ::google::fhir::stu3::proto::ResourceTypeCode& value_code() const;
  ::google::fhir::stu3::proto::ResourceTypeCode* release_value_code();
  ::google::fhir::stu3::proto::ResourceTypeCode* mutable_value_code();
  void set_allocated_value_code(::google::fhir::stu3::proto::ResourceTypeCode* value_code);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::ResourceTypeCode* value_code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PatientUSCoreRaceExtension : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.PatientUSCoreRaceExtension) */ {
 public:
  PatientUSCoreRaceExtension();
  virtual ~PatientUSCoreRaceExtension();

  PatientUSCoreRaceExtension(const PatientUSCoreRaceExtension& from);

  inline PatientUSCoreRaceExtension& operator=(const PatientUSCoreRaceExtension& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PatientUSCoreRaceExtension(PatientUSCoreRaceExtension&& from) noexcept
    : PatientUSCoreRaceExtension() {
    *this = ::std::move(from);
  }

  inline PatientUSCoreRaceExtension& operator=(PatientUSCoreRaceExtension&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PatientUSCoreRaceExtension& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PatientUSCoreRaceExtension* internal_default_instance() {
    return reinterpret_cast<const PatientUSCoreRaceExtension*>(
               &_PatientUSCoreRaceExtension_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  void Swap(PatientUSCoreRaceExtension* other);
  friend void swap(PatientUSCoreRaceExtension& a, PatientUSCoreRaceExtension& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PatientUSCoreRaceExtension* New() const final {
    return CreateMaybeMessage<PatientUSCoreRaceExtension>(NULL);
  }

  PatientUSCoreRaceExtension* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PatientUSCoreRaceExtension>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PatientUSCoreRaceExtension& from);
  void MergeFrom(const PatientUSCoreRaceExtension& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PatientUSCoreRaceExtension* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Coding omb_category = 4;
  int omb_category_size() const;
  void clear_omb_category();
  static const int kOmbCategoryFieldNumber = 4;
  ::google::fhir::stu3::proto::Coding* mutable_omb_category(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >*
      mutable_omb_category();
  const ::google::fhir::stu3::proto::Coding& omb_category(int index) const;
  ::google::fhir::stu3::proto::Coding* add_omb_category();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >&
      omb_category() const;

  // repeated .google.fhir.stu3.proto.Coding detailed = 5;
  int detailed_size() const;
  void clear_detailed();
  static const int kDetailedFieldNumber = 5;
  ::google::fhir::stu3::proto::Coding* mutable_detailed(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >*
      mutable_detailed();
  const ::google::fhir::stu3::proto::Coding& detailed(int index) const;
  ::google::fhir::stu3::proto::Coding* add_detailed();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >&
      detailed() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.String text = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::String& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::String& text() const;
  ::google::fhir::stu3::proto::String* release_text();
  ::google::fhir::stu3::proto::String* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::String* text);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.PatientUSCoreRaceExtension)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding > omb_category_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding > detailed_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::String* text_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreSmokingstatus_Effective : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective) */ {
 public:
  UsCoreSmokingstatus_Effective();
  virtual ~UsCoreSmokingstatus_Effective();

  UsCoreSmokingstatus_Effective(const UsCoreSmokingstatus_Effective& from);

  inline UsCoreSmokingstatus_Effective& operator=(const UsCoreSmokingstatus_Effective& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreSmokingstatus_Effective(UsCoreSmokingstatus_Effective&& from) noexcept
    : UsCoreSmokingstatus_Effective() {
    *this = ::std::move(from);
  }

  inline UsCoreSmokingstatus_Effective& operator=(UsCoreSmokingstatus_Effective&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreSmokingstatus_Effective& default_instance();

  enum EffectiveCase {
    kDateTime = 1,
    kPeriod = 2,
    EFFECTIVE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreSmokingstatus_Effective* internal_default_instance() {
    return reinterpret_cast<const UsCoreSmokingstatus_Effective*>(
               &_UsCoreSmokingstatus_Effective_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  void Swap(UsCoreSmokingstatus_Effective* other);
  friend void swap(UsCoreSmokingstatus_Effective& a, UsCoreSmokingstatus_Effective& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreSmokingstatus_Effective* New() const final {
    return CreateMaybeMessage<UsCoreSmokingstatus_Effective>(NULL);
  }

  UsCoreSmokingstatus_Effective* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreSmokingstatus_Effective>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreSmokingstatus_Effective& from);
  void MergeFrom(const UsCoreSmokingstatus_Effective& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreSmokingstatus_Effective* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.DateTime date_time = 1;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  // .google.fhir.stu3.proto.Period period = 2;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  void clear_effective();
  EffectiveCase effective_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective)
 private:
  void set_has_date_time();
  void set_has_period();

  inline bool has_effective() const;
  inline void clear_has_effective();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union EffectiveUnion {
    EffectiveUnion() {}
    ::google::fhir::stu3::proto::DateTime* date_time_;
    ::google::fhir::stu3::proto::Period* period_;
  } effective_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreSmokingstatus_Value : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value) */ {
 public:
  UsCoreSmokingstatus_Value();
  virtual ~UsCoreSmokingstatus_Value();

  UsCoreSmokingstatus_Value(const UsCoreSmokingstatus_Value& from);

  inline UsCoreSmokingstatus_Value& operator=(const UsCoreSmokingstatus_Value& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreSmokingstatus_Value(UsCoreSmokingstatus_Value&& from) noexcept
    : UsCoreSmokingstatus_Value() {
    *this = ::std::move(from);
  }

  inline UsCoreSmokingstatus_Value& operator=(UsCoreSmokingstatus_Value&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreSmokingstatus_Value& default_instance();

  enum ValueCase {
    kCodeableConcept = 2,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreSmokingstatus_Value* internal_default_instance() {
    return reinterpret_cast<const UsCoreSmokingstatus_Value*>(
               &_UsCoreSmokingstatus_Value_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  void Swap(UsCoreSmokingstatus_Value* other);
  friend void swap(UsCoreSmokingstatus_Value& a, UsCoreSmokingstatus_Value& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreSmokingstatus_Value* New() const final {
    return CreateMaybeMessage<UsCoreSmokingstatus_Value>(NULL);
  }

  UsCoreSmokingstatus_Value* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreSmokingstatus_Value>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreSmokingstatus_Value& from);
  void MergeFrom(const UsCoreSmokingstatus_Value& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreSmokingstatus_Value* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
  bool has_codeable_concept() const;
  void clear_codeable_concept();
  static const int kCodeableConceptFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_codeable_concept() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& codeable_concept() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_codeable_concept();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_codeable_concept();
  void set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept);

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value)
 private:
  void set_has_codeable_concept();

  inline bool has_value() const;
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ValueUnion {
    ValueUnion() {}
    ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
  } value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreSmokingstatus_ReferenceRange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange) */ {
 public:
  UsCoreSmokingstatus_ReferenceRange();
  virtual ~UsCoreSmokingstatus_ReferenceRange();

  UsCoreSmokingstatus_ReferenceRange(const UsCoreSmokingstatus_ReferenceRange& from);

  inline UsCoreSmokingstatus_ReferenceRange& operator=(const UsCoreSmokingstatus_ReferenceRange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreSmokingstatus_ReferenceRange(UsCoreSmokingstatus_ReferenceRange&& from) noexcept
    : UsCoreSmokingstatus_ReferenceRange() {
    *this = ::std::move(from);
  }

  inline UsCoreSmokingstatus_ReferenceRange& operator=(UsCoreSmokingstatus_ReferenceRange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreSmokingstatus_ReferenceRange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreSmokingstatus_ReferenceRange* internal_default_instance() {
    return reinterpret_cast<const UsCoreSmokingstatus_ReferenceRange*>(
               &_UsCoreSmokingstatus_ReferenceRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  void Swap(UsCoreSmokingstatus_ReferenceRange* other);
  friend void swap(UsCoreSmokingstatus_ReferenceRange& a, UsCoreSmokingstatus_ReferenceRange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreSmokingstatus_ReferenceRange* New() const final {
    return CreateMaybeMessage<UsCoreSmokingstatus_ReferenceRange>(NULL);
  }

  UsCoreSmokingstatus_ReferenceRange* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreSmokingstatus_ReferenceRange>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreSmokingstatus_ReferenceRange& from);
  void MergeFrom(const UsCoreSmokingstatus_ReferenceRange& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreSmokingstatus_ReferenceRange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept applies_to = 7;
  int applies_to_size() const;
  void clear_applies_to();
  static const int kAppliesToFieldNumber = 7;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_applies_to(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_applies_to();
  const ::google::fhir::stu3::proto::CodeableConcept& applies_to(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_applies_to();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      applies_to() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.SimpleQuantity low = 4;
  bool has_low() const;
  void clear_low();
  static const int kLowFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::SimpleQuantity& _internal_low() const;
  public:
  const ::google::fhir::stu3::proto::SimpleQuantity& low() const;
  ::google::fhir::stu3::proto::SimpleQuantity* release_low();
  ::google::fhir::stu3::proto::SimpleQuantity* mutable_low();
  void set_allocated_low(::google::fhir::stu3::proto::SimpleQuantity* low);

  // .google.fhir.stu3.proto.SimpleQuantity high = 5;
  bool has_high() const;
  void clear_high();
  static const int kHighFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::SimpleQuantity& _internal_high() const;
  public:
  const ::google::fhir::stu3::proto::SimpleQuantity& high() const;
  ::google::fhir::stu3::proto::SimpleQuantity* release_high();
  ::google::fhir::stu3::proto::SimpleQuantity* mutable_high();
  void set_allocated_high(::google::fhir::stu3::proto::SimpleQuantity* high);

  // .google.fhir.stu3.proto.CodeableConcept type = 6;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_type() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& type() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_type();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_type();
  void set_allocated_type(::google::fhir::stu3::proto::CodeableConcept* type);

  // .google.fhir.stu3.proto.Range age = 8;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::Range& _internal_age() const;
  public:
  const ::google::fhir::stu3::proto::Range& age() const;
  ::google::fhir::stu3::proto::Range* release_age();
  ::google::fhir::stu3::proto::Range* mutable_age();
  void set_allocated_age(::google::fhir::stu3::proto::Range* age);

  // .google.fhir.stu3.proto.String text = 9;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 9;
  private:
  const ::google::fhir::stu3::proto::String& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::String& text() const;
  ::google::fhir::stu3::proto::String* release_text();
  ::google::fhir::stu3::proto::String* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::String* text);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > applies_to_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::SimpleQuantity* low_;
  ::google::fhir::stu3::proto::SimpleQuantity* high_;
  ::google::fhir::stu3::proto::CodeableConcept* type_;
  ::google::fhir::stu3::proto::Range* age_;
  ::google::fhir::stu3::proto::String* text_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreSmokingstatus_Related : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related) */ {
 public:
  UsCoreSmokingstatus_Related();
  virtual ~UsCoreSmokingstatus_Related();

  UsCoreSmokingstatus_Related(const UsCoreSmokingstatus_Related& from);

  inline UsCoreSmokingstatus_Related& operator=(const UsCoreSmokingstatus_Related& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreSmokingstatus_Related(UsCoreSmokingstatus_Related&& from) noexcept
    : UsCoreSmokingstatus_Related() {
    *this = ::std::move(from);
  }

  inline UsCoreSmokingstatus_Related& operator=(UsCoreSmokingstatus_Related&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreSmokingstatus_Related& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreSmokingstatus_Related* internal_default_instance() {
    return reinterpret_cast<const UsCoreSmokingstatus_Related*>(
               &_UsCoreSmokingstatus_Related_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  void Swap(UsCoreSmokingstatus_Related* other);
  friend void swap(UsCoreSmokingstatus_Related& a, UsCoreSmokingstatus_Related& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreSmokingstatus_Related* New() const final {
    return CreateMaybeMessage<UsCoreSmokingstatus_Related>(NULL);
  }

  UsCoreSmokingstatus_Related* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreSmokingstatus_Related>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreSmokingstatus_Related& from);
  void MergeFrom(const UsCoreSmokingstatus_Related& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreSmokingstatus_Related* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::ObservationRelationshipTypeCode& _internal_type() const;
  public:
  const ::google::fhir::stu3::proto::ObservationRelationshipTypeCode& type() const;
  ::google::fhir::stu3::proto::ObservationRelationshipTypeCode* release_type();
  ::google::fhir::stu3::proto::ObservationRelationshipTypeCode* mutable_type();
  void set_allocated_type(::google::fhir::stu3::proto::ObservationRelationshipTypeCode* type);

  // .google.fhir.stu3.proto.Reference target = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Sequence"];
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_target() const;
  public:
  const ::google::fhir::stu3::proto::Reference& target() const;
  ::google::fhir::stu3::proto::Reference* release_target();
  ::google::fhir::stu3::proto::Reference* mutable_target();
  void set_allocated_target(::google::fhir::stu3::proto::Reference* target);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::ObservationRelationshipTypeCode* type_;
  ::google::fhir::stu3::proto::Reference* target_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreSmokingstatus_Component_Value : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value) */ {
 public:
  UsCoreSmokingstatus_Component_Value();
  virtual ~UsCoreSmokingstatus_Component_Value();

  UsCoreSmokingstatus_Component_Value(const UsCoreSmokingstatus_Component_Value& from);

  inline UsCoreSmokingstatus_Component_Value& operator=(const UsCoreSmokingstatus_Component_Value& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreSmokingstatus_Component_Value(UsCoreSmokingstatus_Component_Value&& from) noexcept
    : UsCoreSmokingstatus_Component_Value() {
    *this = ::std::move(from);
  }

  inline UsCoreSmokingstatus_Component_Value& operator=(UsCoreSmokingstatus_Component_Value&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreSmokingstatus_Component_Value& default_instance();

  enum ValueCase {
    kQuantity = 1,
    kCodeableConcept = 2,
    kStringValue = 3,
    kRange = 4,
    kRatio = 5,
    kSampledData = 6,
    kAttachment = 7,
    kTime = 8,
    kDateTime = 9,
    kPeriod = 10,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreSmokingstatus_Component_Value* internal_default_instance() {
    return reinterpret_cast<const UsCoreSmokingstatus_Component_Value*>(
               &_UsCoreSmokingstatus_Component_Value_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  void Swap(UsCoreSmokingstatus_Component_Value* other);
  friend void swap(UsCoreSmokingstatus_Component_Value& a, UsCoreSmokingstatus_Component_Value& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreSmokingstatus_Component_Value* New() const final {
    return CreateMaybeMessage<UsCoreSmokingstatus_Component_Value>(NULL);
  }

  UsCoreSmokingstatus_Component_Value* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreSmokingstatus_Component_Value>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreSmokingstatus_Component_Value& from);
  void MergeFrom(const UsCoreSmokingstatus_Component_Value& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreSmokingstatus_Component_Value* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.fhir.stu3.proto.Quantity quantity = 1;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Quantity& _internal_quantity() const;
  public:
  const ::google::fhir::stu3::proto::Quantity& quantity() const;
  ::google::fhir::stu3::proto::Quantity* release_quantity();
  ::google::fhir::stu3::proto::Quantity* mutable_quantity();
  void set_allocated_quantity(::google::fhir::stu3::proto::Quantity* quantity);

  // .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
  bool has_codeable_concept() const;
  void clear_codeable_concept();
  static const int kCodeableConceptFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_codeable_concept() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& codeable_concept() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_codeable_concept();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_codeable_concept();
  void set_allocated_codeable_concept(::google::fhir::stu3::proto::CodeableConcept* codeable_concept);

  // .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
  bool has_string_value() const;
  void clear_string_value();
  static const int kStringValueFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::String& _internal_string_value() const;
  public:
  const ::google::fhir::stu3::proto::String& string_value() const;
  ::google::fhir::stu3::proto::String* release_string_value();
  ::google::fhir::stu3::proto::String* mutable_string_value();
  void set_allocated_string_value(::google::fhir::stu3::proto::String* string_value);

  // .google.fhir.stu3.proto.Range range = 4;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::Range& _internal_range() const;
  public:
  const ::google::fhir::stu3::proto::Range& range() const;
  ::google::fhir::stu3::proto::Range* release_range();
  ::google::fhir::stu3::proto::Range* mutable_range();
  void set_allocated_range(::google::fhir::stu3::proto::Range* range);

  // .google.fhir.stu3.proto.Ratio ratio = 5;
  bool has_ratio() const;
  void clear_ratio();
  static const int kRatioFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Ratio& _internal_ratio() const;
  public:
  const ::google::fhir::stu3::proto::Ratio& ratio() const;
  ::google::fhir::stu3::proto::Ratio* release_ratio();
  ::google::fhir::stu3::proto::Ratio* mutable_ratio();
  void set_allocated_ratio(::google::fhir::stu3::proto::Ratio* ratio);

  // .google.fhir.stu3.proto.SampledData sampled_data = 6;
  bool has_sampled_data() const;
  void clear_sampled_data();
  static const int kSampledDataFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::SampledData& _internal_sampled_data() const;
  public:
  const ::google::fhir::stu3::proto::SampledData& sampled_data() const;
  ::google::fhir::stu3::proto::SampledData* release_sampled_data();
  ::google::fhir::stu3::proto::SampledData* mutable_sampled_data();
  void set_allocated_sampled_data(::google::fhir::stu3::proto::SampledData* sampled_data);

  // .google.fhir.stu3.proto.Attachment attachment = 7;
  bool has_attachment() const;
  void clear_attachment();
  static const int kAttachmentFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::Attachment& _internal_attachment() const;
  public:
  const ::google::fhir::stu3::proto::Attachment& attachment() const;
  ::google::fhir::stu3::proto::Attachment* release_attachment();
  ::google::fhir::stu3::proto::Attachment* mutable_attachment();
  void set_allocated_attachment(::google::fhir::stu3::proto::Attachment* attachment);

  // .google.fhir.stu3.proto.Time time = 8;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 8;
  private:
  const ::google::fhir::stu3::proto::Time& _internal_time() const;
  public:
  const ::google::fhir::stu3::proto::Time& time() const;
  ::google::fhir::stu3::proto::Time* release_time();
  ::google::fhir::stu3::proto::Time* mutable_time();
  void set_allocated_time(::google::fhir::stu3::proto::Time* time);

  // .google.fhir.stu3.proto.DateTime date_time = 9;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 9;
  private:
  const ::google::fhir::stu3::proto::DateTime& _internal_date_time() const;
  public:
  const ::google::fhir::stu3::proto::DateTime& date_time() const;
  ::google::fhir::stu3::proto::DateTime* release_date_time();
  ::google::fhir::stu3::proto::DateTime* mutable_date_time();
  void set_allocated_date_time(::google::fhir::stu3::proto::DateTime* date_time);

  // .google.fhir.stu3.proto.Period period = 10;
  bool has_period() const;
  void clear_period();
  static const int kPeriodFieldNumber = 10;
  private:
  const ::google::fhir::stu3::proto::Period& _internal_period() const;
  public:
  const ::google::fhir::stu3::proto::Period& period() const;
  ::google::fhir::stu3::proto::Period* release_period();
  ::google::fhir::stu3::proto::Period* mutable_period();
  void set_allocated_period(::google::fhir::stu3::proto::Period* period);

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value)
 private:
  void set_has_quantity();
  void set_has_codeable_concept();
  void set_has_string_value();
  void set_has_range();
  void set_has_ratio();
  void set_has_sampled_data();
  void set_has_attachment();
  void set_has_time();
  void set_has_date_time();
  void set_has_period();

  inline bool has_value() const;
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ValueUnion {
    ValueUnion() {}
    ::google::fhir::stu3::proto::Quantity* quantity_;
    ::google::fhir::stu3::proto::CodeableConcept* codeable_concept_;
    ::google::fhir::stu3::proto::String* string_value_;
    ::google::fhir::stu3::proto::Range* range_;
    ::google::fhir::stu3::proto::Ratio* ratio_;
    ::google::fhir::stu3::proto::SampledData* sampled_data_;
    ::google::fhir::stu3::proto::Attachment* attachment_;
    ::google::fhir::stu3::proto::Time* time_;
    ::google::fhir::stu3::proto::DateTime* date_time_;
    ::google::fhir::stu3::proto::Period* period_;
  } value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreSmokingstatus_Component : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component) */ {
 public:
  UsCoreSmokingstatus_Component();
  virtual ~UsCoreSmokingstatus_Component();

  UsCoreSmokingstatus_Component(const UsCoreSmokingstatus_Component& from);

  inline UsCoreSmokingstatus_Component& operator=(const UsCoreSmokingstatus_Component& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreSmokingstatus_Component(UsCoreSmokingstatus_Component&& from) noexcept
    : UsCoreSmokingstatus_Component() {
    *this = ::std::move(from);
  }

  inline UsCoreSmokingstatus_Component& operator=(UsCoreSmokingstatus_Component&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreSmokingstatus_Component& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreSmokingstatus_Component* internal_default_instance() {
    return reinterpret_cast<const UsCoreSmokingstatus_Component*>(
               &_UsCoreSmokingstatus_Component_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  void Swap(UsCoreSmokingstatus_Component* other);
  friend void swap(UsCoreSmokingstatus_Component& a, UsCoreSmokingstatus_Component& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreSmokingstatus_Component* New() const final {
    return CreateMaybeMessage<UsCoreSmokingstatus_Component>(NULL);
  }

  UsCoreSmokingstatus_Component* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreSmokingstatus_Component>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreSmokingstatus_Component& from);
  void MergeFrom(const UsCoreSmokingstatus_Component& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreSmokingstatus_Component* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreSmokingstatus_Component_Value Value;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.Extension extension = 2;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 2;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 3;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange reference_range = 8;
  int reference_range_size() const;
  void clear_reference_range();
  static const int kReferenceRangeFieldNumber = 8;
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange* mutable_reference_range(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange >*
      mutable_reference_range();
  const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange& reference_range(int index) const;
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange* add_reference_range();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange >&
      reference_range() const;

  // .google.fhir.stu3.proto.String id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::String& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::String& id() const;
  ::google::fhir::stu3::proto::String* release_id();
  ::google::fhir::stu3::proto::String* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::String* id);

  // .google.fhir.stu3.proto.CodeableConcept code = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_code() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& code() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_code();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_code();
  void set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code);

  // .google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value value = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 5;
  private:
  const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value& _internal_value() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value& value() const;
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value* release_value();
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value* mutable_value();
  void set_allocated_value(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value* value);

  // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
  bool has_data_absent_reason() const;
  void clear_data_absent_reason();
  static const int kDataAbsentReasonFieldNumber = 6;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_data_absent_reason() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& data_absent_reason() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_data_absent_reason();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_data_absent_reason();
  void set_allocated_data_absent_reason(::google::fhir::stu3::proto::CodeableConcept* data_absent_reason);

  // .google.fhir.stu3.proto.CodeableConcept interpretation = 7;
  bool has_interpretation() const;
  void clear_interpretation();
  static const int kInterpretationFieldNumber = 7;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_interpretation() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& interpretation() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_interpretation();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_interpretation();
  void set_allocated_interpretation(::google::fhir::stu3::proto::CodeableConcept* interpretation);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange > reference_range_;
  ::google::fhir::stu3::proto::String* id_;
  ::google::fhir::stu3::proto::CodeableConcept* code_;
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value* value_;
  ::google::fhir::stu3::proto::CodeableConcept* data_absent_reason_;
  ::google::fhir::stu3::proto::CodeableConcept* interpretation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsCoreSmokingstatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.uscore.UsCoreSmokingstatus) */ {
 public:
  UsCoreSmokingstatus();
  virtual ~UsCoreSmokingstatus();

  UsCoreSmokingstatus(const UsCoreSmokingstatus& from);

  inline UsCoreSmokingstatus& operator=(const UsCoreSmokingstatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsCoreSmokingstatus(UsCoreSmokingstatus&& from) noexcept
    : UsCoreSmokingstatus() {
    *this = ::std::move(from);
  }

  inline UsCoreSmokingstatus& operator=(UsCoreSmokingstatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UsCoreSmokingstatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsCoreSmokingstatus* internal_default_instance() {
    return reinterpret_cast<const UsCoreSmokingstatus*>(
               &_UsCoreSmokingstatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  void Swap(UsCoreSmokingstatus* other);
  friend void swap(UsCoreSmokingstatus& a, UsCoreSmokingstatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsCoreSmokingstatus* New() const final {
    return CreateMaybeMessage<UsCoreSmokingstatus>(NULL);
  }

  UsCoreSmokingstatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsCoreSmokingstatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsCoreSmokingstatus& from);
  void MergeFrom(const UsCoreSmokingstatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsCoreSmokingstatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UsCoreSmokingstatus_Effective Effective;
  typedef UsCoreSmokingstatus_Value Value;
  typedef UsCoreSmokingstatus_ReferenceRange ReferenceRange;
  typedef UsCoreSmokingstatus_Related Related;
  typedef UsCoreSmokingstatus_Component Component;

  // accessors -------------------------------------------------------

  // repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
  int contained_size() const;
  void clear_contained();
  static const int kContainedFieldNumber = 6;
  ::google::fhir::stu3::proto::ContainedResource* mutable_contained(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
      mutable_contained();
  const ::google::fhir::stu3::proto::ContainedResource& contained(int index) const;
  ::google::fhir::stu3::proto::ContainedResource* add_contained();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
      contained() const;

  // repeated .google.fhir.stu3.proto.Extension extension = 7;
  int extension_size() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 7;
  ::google::fhir::stu3::proto::Extension* mutable_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_extension();
  const ::google::fhir::stu3::proto::Extension& extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      extension() const;

  // repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
  int modifier_extension_size() const;
  void clear_modifier_extension();
  static const int kModifierExtensionFieldNumber = 8;
  ::google::fhir::stu3::proto::Extension* mutable_modifier_extension(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
      mutable_modifier_extension();
  const ::google::fhir::stu3::proto::Extension& modifier_extension(int index) const;
  ::google::fhir::stu3::proto::Extension* add_modifier_extension();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
      modifier_extension() const;

  // repeated .google.fhir.stu3.proto.Identifier identifier = 9;
  int identifier_size() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 9;
  ::google::fhir::stu3::proto::Identifier* mutable_identifier(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
      mutable_identifier();
  const ::google::fhir::stu3::proto::Identifier& identifier(int index) const;
  ::google::fhir::stu3::proto::Identifier* add_identifier();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
      identifier() const;

  // repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
  int based_on_size() const;
  void clear_based_on();
  static const int kBasedOnFieldNumber = 10;
  ::google::fhir::stu3::proto::Reference* mutable_based_on(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_based_on();
  const ::google::fhir::stu3::proto::Reference& based_on(int index) const;
  ::google::fhir::stu3::proto::Reference* add_based_on();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      based_on() const;

  // repeated .google.fhir.stu3.proto.CodeableConcept category = 12;
  int category_size() const;
  void clear_category();
  static const int kCategoryFieldNumber = 12;
  ::google::fhir::stu3::proto::CodeableConcept* mutable_category(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
      mutable_category();
  const ::google::fhir::stu3::proto::CodeableConcept& category(int index) const;
  ::google::fhir::stu3::proto::CodeableConcept* add_category();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
      category() const;

  // repeated .google.fhir.stu3.proto.Reference performer = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
  int performer_size() const;
  void clear_performer();
  static const int kPerformerFieldNumber = 18;
  ::google::fhir::stu3::proto::Reference* mutable_performer(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
      mutable_performer();
  const ::google::fhir::stu3::proto::Reference& performer(int index) const;
  ::google::fhir::stu3::proto::Reference* add_performer();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
      performer() const;

  // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange reference_range = 27;
  int reference_range_size() const;
  void clear_reference_range();
  static const int kReferenceRangeFieldNumber = 27;
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange* mutable_reference_range(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange >*
      mutable_reference_range();
  const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange& reference_range(int index) const;
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange* add_reference_range();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange >&
      reference_range() const;

  // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.Related related = 28;
  int related_size() const;
  void clear_related();
  static const int kRelatedFieldNumber = 28;
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related* mutable_related(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related >*
      mutable_related();
  const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related& related(int index) const;
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related* add_related();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related >&
      related() const;

  // repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.Component component = 29;
  int component_size() const;
  void clear_component();
  static const int kComponentFieldNumber = 29;
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component* mutable_component(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component >*
      mutable_component();
  const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component& component(int index) const;
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component* add_component();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component >&
      component() const;

  // .google.fhir.stu3.proto.Id id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::google::fhir::stu3::proto::Id& _internal_id() const;
  public:
  const ::google::fhir::stu3::proto::Id& id() const;
  ::google::fhir::stu3::proto::Id* release_id();
  ::google::fhir::stu3::proto::Id* mutable_id();
  void set_allocated_id(::google::fhir::stu3::proto::Id* id);

  // .google.fhir.stu3.proto.Meta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  private:
  const ::google::fhir::stu3::proto::Meta& _internal_meta() const;
  public:
  const ::google::fhir::stu3::proto::Meta& meta() const;
  ::google::fhir::stu3::proto::Meta* release_meta();
  ::google::fhir::stu3::proto::Meta* mutable_meta();
  void set_allocated_meta(::google::fhir::stu3::proto::Meta* meta);

  // .google.fhir.stu3.proto.Uri implicit_rules = 3;
  bool has_implicit_rules() const;
  void clear_implicit_rules();
  static const int kImplicitRulesFieldNumber = 3;
  private:
  const ::google::fhir::stu3::proto::Uri& _internal_implicit_rules() const;
  public:
  const ::google::fhir::stu3::proto::Uri& implicit_rules() const;
  ::google::fhir::stu3::proto::Uri* release_implicit_rules();
  ::google::fhir::stu3::proto::Uri* mutable_implicit_rules();
  void set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules);

  // .google.fhir.stu3.proto.LanguageCode language = 4;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 4;
  private:
  const ::google::fhir::stu3::proto::LanguageCode& _internal_language() const;
  public:
  const ::google::fhir::stu3::proto::LanguageCode& language() const;
  ::google::fhir::stu3::proto::LanguageCode* release_language();
  ::google::fhir::stu3::proto::LanguageCode* mutable_language();
  void set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language);

  // .google.fhir.stu3.proto.Narrative text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  private:
  const ::google::fhir::stu3::proto::Narrative& _internal_text() const;
  public:
  const ::google::fhir::stu3::proto::Narrative& text() const;
  ::google::fhir::stu3::proto::Narrative* release_text();
  ::google::fhir::stu3::proto::Narrative* mutable_text();
  void set_allocated_text(::google::fhir::stu3::proto::Narrative* text);

  // .google.fhir.stu3.proto.ObservationStatusCode status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 11;
  private:
  const ::google::fhir::stu3::proto::ObservationStatusCode& _internal_status() const;
  public:
  const ::google::fhir::stu3::proto::ObservationStatusCode& status() const;
  ::google::fhir::stu3::proto::ObservationStatusCode* release_status();
  ::google::fhir::stu3::proto::ObservationStatusCode* mutable_status();
  void set_allocated_status(::google::fhir::stu3::proto::ObservationStatusCode* status);

  // .google.fhir.stu3.proto.CodeableConcept code = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 13;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_code() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& code() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_code();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_code();
  void set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code);

  // .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
  bool has_subject() const;
  void clear_subject();
  static const int kSubjectFieldNumber = 14;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_subject() const;
  public:
  const ::google::fhir::stu3::proto::Reference& subject() const;
  ::google::fhir::stu3::proto::Reference* release_subject();
  ::google::fhir::stu3::proto::Reference* mutable_subject();
  void set_allocated_subject(::google::fhir::stu3::proto::Reference* subject);

  // .google.fhir.stu3.proto.Reference context = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 15;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_context() const;
  public:
  const ::google::fhir::stu3::proto::Reference& context() const;
  ::google::fhir::stu3::proto::Reference* release_context();
  ::google::fhir::stu3::proto::Reference* mutable_context();
  void set_allocated_context(::google::fhir::stu3::proto::Reference* context);

  // .google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective effective = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_effective() const;
  void clear_effective();
  static const int kEffectiveFieldNumber = 16;
  private:
  const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective& _internal_effective() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective& effective() const;
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective* release_effective();
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective* mutable_effective();
  void set_allocated_effective(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective* effective);

  // .google.fhir.stu3.proto.Instant issued = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
  bool has_issued() const;
  void clear_issued();
  static const int kIssuedFieldNumber = 17;
  private:
  const ::google::fhir::stu3::proto::Instant& _internal_issued() const;
  public:
  const ::google::fhir::stu3::proto::Instant& issued() const;
  ::google::fhir::stu3::proto::Instant* release_issued();
  ::google::fhir::stu3::proto::Instant* mutable_issued();
  void set_allocated_issued(::google::fhir::stu3::proto::Instant* issued);

  // .google.fhir.stu3.uscore.UsCoreSmokingstatus.Value value = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 19;
  private:
  const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value& _internal_value() const;
  public:
  const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value& value() const;
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value* release_value();
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value* mutable_value();
  void set_allocated_value(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value* value);

  // .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
  bool has_data_absent_reason() const;
  void clear_data_absent_reason();
  static const int kDataAbsentReasonFieldNumber = 20;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_data_absent_reason() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& data_absent_reason() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_data_absent_reason();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_data_absent_reason();
  void set_allocated_data_absent_reason(::google::fhir::stu3::proto::CodeableConcept* data_absent_reason);

  // .google.fhir.stu3.proto.CodeableConcept interpretation = 21;
  bool has_interpretation() const;
  void clear_interpretation();
  static const int kInterpretationFieldNumber = 21;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_interpretation() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& interpretation() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_interpretation();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_interpretation();
  void set_allocated_interpretation(::google::fhir::stu3::proto::CodeableConcept* interpretation);

  // .google.fhir.stu3.proto.String comment = 22;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 22;
  private:
  const ::google::fhir::stu3::proto::String& _internal_comment() const;
  public:
  const ::google::fhir::stu3::proto::String& comment() const;
  ::google::fhir::stu3::proto::String* release_comment();
  ::google::fhir::stu3::proto::String* mutable_comment();
  void set_allocated_comment(::google::fhir::stu3::proto::String* comment);

  // .google.fhir.stu3.proto.CodeableConcept body_site = 23;
  bool has_body_site() const;
  void clear_body_site();
  static const int kBodySiteFieldNumber = 23;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_body_site() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& body_site() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_body_site();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_body_site();
  void set_allocated_body_site(::google::fhir::stu3::proto::CodeableConcept* body_site);

  // .google.fhir.stu3.proto.CodeableConcept method = 24;
  bool has_method() const;
  void clear_method();
  static const int kMethodFieldNumber = 24;
  private:
  const ::google::fhir::stu3::proto::CodeableConcept& _internal_method() const;
  public:
  const ::google::fhir::stu3::proto::CodeableConcept& method() const;
  ::google::fhir::stu3::proto::CodeableConcept* release_method();
  ::google::fhir::stu3::proto::CodeableConcept* mutable_method();
  void set_allocated_method(::google::fhir::stu3::proto::CodeableConcept* method);

  // .google.fhir.stu3.proto.Reference specimen = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Specimen"];
  bool has_specimen() const;
  void clear_specimen();
  static const int kSpecimenFieldNumber = 25;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_specimen() const;
  public:
  const ::google::fhir::stu3::proto::Reference& specimen() const;
  ::google::fhir::stu3::proto::Reference* release_specimen();
  ::google::fhir::stu3::proto::Reference* mutable_specimen();
  void set_allocated_specimen(::google::fhir::stu3::proto::Reference* specimen);

  // .google.fhir.stu3.proto.Reference device = 26 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceMetric"];
  bool has_device() const;
  void clear_device();
  static const int kDeviceFieldNumber = 26;
  private:
  const ::google::fhir::stu3::proto::Reference& _internal_device() const;
  public:
  const ::google::fhir::stu3::proto::Reference& device() const;
  ::google::fhir::stu3::proto::Reference* release_device();
  ::google::fhir::stu3::proto::Reference* mutable_device();
  void set_allocated_device(::google::fhir::stu3::proto::Reference* device);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.uscore.UsCoreSmokingstatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource > contained_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension > modifier_extension_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier > identifier_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > based_on_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept > category_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference > performer_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange > reference_range_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related > related_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component > component_;
  ::google::fhir::stu3::proto::Id* id_;
  ::google::fhir::stu3::proto::Meta* meta_;
  ::google::fhir::stu3::proto::Uri* implicit_rules_;
  ::google::fhir::stu3::proto::LanguageCode* language_;
  ::google::fhir::stu3::proto::Narrative* text_;
  ::google::fhir::stu3::proto::ObservationStatusCode* status_;
  ::google::fhir::stu3::proto::CodeableConcept* code_;
  ::google::fhir::stu3::proto::Reference* subject_;
  ::google::fhir::stu3::proto::Reference* context_;
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective* effective_;
  ::google::fhir::stu3::proto::Instant* issued_;
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value* value_;
  ::google::fhir::stu3::proto::CodeableConcept* data_absent_reason_;
  ::google::fhir::stu3::proto::CodeableConcept* interpretation_;
  ::google::fhir::stu3::proto::String* comment_;
  ::google::fhir::stu3::proto::CodeableConcept* body_site_;
  ::google::fhir::stu3::proto::CodeableConcept* method_;
  ::google::fhir::stu3::proto::Reference* specimen_;
  ::google::fhir::stu3::proto::Reference* device_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fuscore_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UsCoreAllergyintolerance_Onset

// .google.fhir.stu3.proto.DateTime date_time = 1;
inline bool UsCoreAllergyintolerance_Onset::has_date_time() const {
  return onset_case() == kDateTime;
}
inline void UsCoreAllergyintolerance_Onset::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreAllergyintolerance_Onset::_internal_date_time() const {
  return *onset_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreAllergyintolerance_Onset::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.date_time)
  if (has_date_time()) {
    clear_has_onset();
      ::google::fhir::stu3::proto::DateTime* temp = onset_.date_time_;
    onset_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreAllergyintolerance_Onset::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.date_time)
  return has_date_time()
      ? *onset_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreAllergyintolerance_Onset::mutable_date_time() {
  if (!has_date_time()) {
    clear_onset();
    set_has_date_time();
    onset_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.date_time)
  return onset_.date_time_;
}

// .google.fhir.stu3.proto.Age age = 2;
inline bool UsCoreAllergyintolerance_Onset::has_age() const {
  return onset_case() == kAge;
}
inline void UsCoreAllergyintolerance_Onset::set_has_age() {
  _oneof_case_[0] = kAge;
}
inline const ::google::fhir::stu3::proto::Age& UsCoreAllergyintolerance_Onset::_internal_age() const {
  return *onset_.age_;
}
inline ::google::fhir::stu3::proto::Age* UsCoreAllergyintolerance_Onset::release_age() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.age)
  if (has_age()) {
    clear_has_onset();
      ::google::fhir::stu3::proto::Age* temp = onset_.age_;
    onset_.age_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Age& UsCoreAllergyintolerance_Onset::age() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.age)
  return has_age()
      ? *onset_.age_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Age*>(&::google::fhir::stu3::proto::_Age_default_instance_);
}
inline ::google::fhir::stu3::proto::Age* UsCoreAllergyintolerance_Onset::mutable_age() {
  if (!has_age()) {
    clear_onset();
    set_has_age();
    onset_.age_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Age >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.age)
  return onset_.age_;
}

// .google.fhir.stu3.proto.Period period = 3;
inline bool UsCoreAllergyintolerance_Onset::has_period() const {
  return onset_case() == kPeriod;
}
inline void UsCoreAllergyintolerance_Onset::set_has_period() {
  _oneof_case_[0] = kPeriod;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreAllergyintolerance_Onset::_internal_period() const {
  return *onset_.period_;
}
inline ::google::fhir::stu3::proto::Period* UsCoreAllergyintolerance_Onset::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.period)
  if (has_period()) {
    clear_has_onset();
      ::google::fhir::stu3::proto::Period* temp = onset_.period_;
    onset_.period_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Period& UsCoreAllergyintolerance_Onset::period() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.period)
  return has_period()
      ? *onset_.period_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Period*>(&::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* UsCoreAllergyintolerance_Onset::mutable_period() {
  if (!has_period()) {
    clear_onset();
    set_has_period();
    onset_.period_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Period >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.period)
  return onset_.period_;
}

// .google.fhir.stu3.proto.Range range = 4;
inline bool UsCoreAllergyintolerance_Onset::has_range() const {
  return onset_case() == kRange;
}
inline void UsCoreAllergyintolerance_Onset::set_has_range() {
  _oneof_case_[0] = kRange;
}
inline const ::google::fhir::stu3::proto::Range& UsCoreAllergyintolerance_Onset::_internal_range() const {
  return *onset_.range_;
}
inline ::google::fhir::stu3::proto::Range* UsCoreAllergyintolerance_Onset::release_range() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.range)
  if (has_range()) {
    clear_has_onset();
      ::google::fhir::stu3::proto::Range* temp = onset_.range_;
    onset_.range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Range& UsCoreAllergyintolerance_Onset::range() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.range)
  return has_range()
      ? *onset_.range_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Range*>(&::google::fhir::stu3::proto::_Range_default_instance_);
}
inline ::google::fhir::stu3::proto::Range* UsCoreAllergyintolerance_Onset::mutable_range() {
  if (!has_range()) {
    clear_onset();
    set_has_range();
    onset_.range_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Range >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.range)
  return onset_.range_;
}

// .google.fhir.stu3.proto.String string_value = 5[json_name = "string"];
inline bool UsCoreAllergyintolerance_Onset::has_string_value() const {
  return onset_case() == kStringValue;
}
inline void UsCoreAllergyintolerance_Onset::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline const ::google::fhir::stu3::proto::String& UsCoreAllergyintolerance_Onset::_internal_string_value() const {
  return *onset_.string_value_;
}
inline ::google::fhir::stu3::proto::String* UsCoreAllergyintolerance_Onset::release_string_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.string_value)
  if (has_string_value()) {
    clear_has_onset();
      ::google::fhir::stu3::proto::String* temp = onset_.string_value_;
    onset_.string_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::String& UsCoreAllergyintolerance_Onset::string_value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.string_value)
  return has_string_value()
      ? *onset_.string_value_
      : *reinterpret_cast< ::google::fhir::stu3::proto::String*>(&::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreAllergyintolerance_Onset::mutable_string_value() {
  if (!has_string_value()) {
    clear_onset();
    set_has_string_value();
    onset_.string_value_ = CreateMaybeMessage< ::google::fhir::stu3::proto::String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.string_value)
  return onset_.string_value_;
}

inline bool UsCoreAllergyintolerance_Onset::has_onset() const {
  return onset_case() != ONSET_NOT_SET;
}
inline void UsCoreAllergyintolerance_Onset::clear_has_onset() {
  _oneof_case_[0] = ONSET_NOT_SET;
}
inline UsCoreAllergyintolerance_Onset::OnsetCase UsCoreAllergyintolerance_Onset::onset_case() const {
  return UsCoreAllergyintolerance_Onset::OnsetCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreAllergyintolerance_Reaction

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreAllergyintolerance_Reaction::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreAllergyintolerance_Reaction::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreAllergyintolerance_Reaction::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreAllergyintolerance_Reaction::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreAllergyintolerance_Reaction::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.id)
  return id_;
}
inline void UsCoreAllergyintolerance_Reaction::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreAllergyintolerance_Reaction::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreAllergyintolerance_Reaction::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreAllergyintolerance_Reaction::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreAllergyintolerance_Reaction::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreAllergyintolerance_Reaction::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreAllergyintolerance_Reaction::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreAllergyintolerance_Reaction::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreAllergyintolerance_Reaction::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreAllergyintolerance_Reaction::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreAllergyintolerance_Reaction::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreAllergyintolerance_Reaction::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreAllergyintolerance_Reaction::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.CodeableConcept substance = 4;
inline bool UsCoreAllergyintolerance_Reaction::has_substance() const {
  return this != internal_default_instance() && substance_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreAllergyintolerance_Reaction::_internal_substance() const {
  return *substance_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreAllergyintolerance_Reaction::substance() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = substance_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.substance)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreAllergyintolerance_Reaction::release_substance() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.substance)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = substance_;
  substance_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreAllergyintolerance_Reaction::mutable_substance() {
  
  if (substance_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    substance_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.substance)
  return substance_;
}
inline void UsCoreAllergyintolerance_Reaction::set_allocated_substance(::google::fhir::stu3::proto::CodeableConcept* substance) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(substance_);
  }
  if (substance) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      substance = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, substance, submessage_arena);
    }
    
  } else {
    
  }
  substance_ = substance;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.substance)
}

// repeated .google.fhir.stu3.proto.CodeableConcept manifestation = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline int UsCoreAllergyintolerance_Reaction::manifestation_size() const {
  return manifestation_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreAllergyintolerance_Reaction::mutable_manifestation(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.manifestation)
  return manifestation_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreAllergyintolerance_Reaction::mutable_manifestation() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.manifestation)
  return &manifestation_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreAllergyintolerance_Reaction::manifestation(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.manifestation)
  return manifestation_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreAllergyintolerance_Reaction::add_manifestation() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.manifestation)
  return manifestation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreAllergyintolerance_Reaction::manifestation() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.manifestation)
  return manifestation_;
}

// .google.fhir.stu3.proto.String description = 6;
inline bool UsCoreAllergyintolerance_Reaction::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreAllergyintolerance_Reaction::_internal_description() const {
  return *description_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreAllergyintolerance_Reaction::description() const {
  const ::google::fhir::stu3::proto::String* p = description_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.description)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreAllergyintolerance_Reaction::release_description() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.description)
  
  ::google::fhir::stu3::proto::String* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreAllergyintolerance_Reaction::mutable_description() {
  
  if (description_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    description_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.description)
  return description_;
}
inline void UsCoreAllergyintolerance_Reaction::set_allocated_description(::google::fhir::stu3::proto::String* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(description_);
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.description)
}

// .google.fhir.stu3.proto.DateTime onset = 7;
inline bool UsCoreAllergyintolerance_Reaction::has_onset() const {
  return this != internal_default_instance() && onset_ != NULL;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreAllergyintolerance_Reaction::_internal_onset() const {
  return *onset_;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreAllergyintolerance_Reaction::onset() const {
  const ::google::fhir::stu3::proto::DateTime* p = onset_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.onset)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::DateTime*>(
      &::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreAllergyintolerance_Reaction::release_onset() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.onset)
  
  ::google::fhir::stu3::proto::DateTime* temp = onset_;
  onset_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreAllergyintolerance_Reaction::mutable_onset() {
  
  if (onset_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::DateTime>(GetArenaNoVirtual());
    onset_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.onset)
  return onset_;
}
inline void UsCoreAllergyintolerance_Reaction::set_allocated_onset(::google::fhir::stu3::proto::DateTime* onset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(onset_);
  }
  if (onset) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      onset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, onset, submessage_arena);
    }
    
  } else {
    
  }
  onset_ = onset;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.onset)
}

// .google.fhir.stu3.proto.AllergyIntoleranceSeverityCode severity = 8;
inline bool UsCoreAllergyintolerance_Reaction::has_severity() const {
  return this != internal_default_instance() && severity_ != NULL;
}
inline const ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode& UsCoreAllergyintolerance_Reaction::_internal_severity() const {
  return *severity_;
}
inline const ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode& UsCoreAllergyintolerance_Reaction::severity() const {
  const ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode* p = severity_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.severity)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode*>(
      &::google::fhir::stu3::proto::_AllergyIntoleranceSeverityCode_default_instance_);
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode* UsCoreAllergyintolerance_Reaction::release_severity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.severity)
  
  ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode* temp = severity_;
  severity_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode* UsCoreAllergyintolerance_Reaction::mutable_severity() {
  
  if (severity_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode>(GetArenaNoVirtual());
    severity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.severity)
  return severity_;
}
inline void UsCoreAllergyintolerance_Reaction::set_allocated_severity(::google::fhir::stu3::proto::AllergyIntoleranceSeverityCode* severity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(severity_);
  }
  if (severity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      severity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, severity, submessage_arena);
    }
    
  } else {
    
  }
  severity_ = severity;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.severity)
}

// .google.fhir.stu3.proto.CodeableConcept exposure_route = 9;
inline bool UsCoreAllergyintolerance_Reaction::has_exposure_route() const {
  return this != internal_default_instance() && exposure_route_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreAllergyintolerance_Reaction::_internal_exposure_route() const {
  return *exposure_route_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreAllergyintolerance_Reaction::exposure_route() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = exposure_route_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.exposure_route)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreAllergyintolerance_Reaction::release_exposure_route() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.exposure_route)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = exposure_route_;
  exposure_route_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreAllergyintolerance_Reaction::mutable_exposure_route() {
  
  if (exposure_route_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    exposure_route_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.exposure_route)
  return exposure_route_;
}
inline void UsCoreAllergyintolerance_Reaction::set_allocated_exposure_route(::google::fhir::stu3::proto::CodeableConcept* exposure_route) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(exposure_route_);
  }
  if (exposure_route) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      exposure_route = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, exposure_route, submessage_arena);
    }
    
  } else {
    
  }
  exposure_route_ = exposure_route;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.exposure_route)
}

// repeated .google.fhir.stu3.proto.Annotation note = 10;
inline int UsCoreAllergyintolerance_Reaction::note_size() const {
  return note_.size();
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreAllergyintolerance_Reaction::mutable_note(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.note)
  return note_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
UsCoreAllergyintolerance_Reaction::mutable_note() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.note)
  return &note_;
}
inline const ::google::fhir::stu3::proto::Annotation& UsCoreAllergyintolerance_Reaction::note(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.note)
  return note_.Get(index);
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreAllergyintolerance_Reaction::add_note() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.note)
  return note_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
UsCoreAllergyintolerance_Reaction::note() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction.note)
  return note_;
}

// -------------------------------------------------------------------

// UsCoreAllergyintolerance

// .google.fhir.stu3.proto.Id id = 1;
inline bool UsCoreAllergyintolerance::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreAllergyintolerance::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreAllergyintolerance::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* UsCoreAllergyintolerance::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* UsCoreAllergyintolerance::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.id)
  return id_;
}
inline void UsCoreAllergyintolerance::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool UsCoreAllergyintolerance::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreAllergyintolerance::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreAllergyintolerance::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* UsCoreAllergyintolerance::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* UsCoreAllergyintolerance::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.meta)
  return meta_;
}
inline void UsCoreAllergyintolerance::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool UsCoreAllergyintolerance::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreAllergyintolerance::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreAllergyintolerance::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreAllergyintolerance::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreAllergyintolerance::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.implicit_rules)
  return implicit_rules_;
}
inline void UsCoreAllergyintolerance::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool UsCoreAllergyintolerance::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreAllergyintolerance::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreAllergyintolerance::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreAllergyintolerance::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreAllergyintolerance::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.language)
  return language_;
}
inline void UsCoreAllergyintolerance::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.language)
}

// .google.fhir.stu3.proto.Narrative text = 5;
inline bool UsCoreAllergyintolerance::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreAllergyintolerance::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreAllergyintolerance::text() const {
  const ::google::fhir::stu3::proto::Narrative* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Narrative*>(
      &::google::fhir::stu3::proto::_Narrative_default_instance_);
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreAllergyintolerance::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.text)
  
  ::google::fhir::stu3::proto::Narrative* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreAllergyintolerance::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.text)
  return text_;
}
inline void UsCoreAllergyintolerance::set_allocated_text(::google::fhir::stu3::proto::Narrative* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.text)
}

// repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
inline int UsCoreAllergyintolerance::contained_size() const {
  return contained_.size();
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreAllergyintolerance::mutable_contained(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.contained)
  return contained_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
UsCoreAllergyintolerance::mutable_contained() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.contained)
  return &contained_;
}
inline const ::google::fhir::stu3::proto::ContainedResource& UsCoreAllergyintolerance::contained(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.contained)
  return contained_.Get(index);
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreAllergyintolerance::add_contained() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreAllergyintolerance.contained)
  return contained_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
UsCoreAllergyintolerance::contained() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.contained)
  return contained_;
}

// repeated .google.fhir.stu3.proto.Extension extension = 7;
inline int UsCoreAllergyintolerance::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreAllergyintolerance::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreAllergyintolerance::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreAllergyintolerance::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreAllergyintolerance::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreAllergyintolerance.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreAllergyintolerance::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
inline int UsCoreAllergyintolerance::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreAllergyintolerance::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreAllergyintolerance::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreAllergyintolerance::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreAllergyintolerance::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreAllergyintolerance.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreAllergyintolerance::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.Identifier identifier = 9;
inline int UsCoreAllergyintolerance::identifier_size() const {
  return identifier_.size();
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreAllergyintolerance::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.identifier)
  return identifier_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
UsCoreAllergyintolerance::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.identifier)
  return &identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCoreAllergyintolerance::identifier(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.identifier)
  return identifier_.Get(index);
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreAllergyintolerance::add_identifier() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreAllergyintolerance.identifier)
  return identifier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
UsCoreAllergyintolerance::identifier() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.identifier)
  return identifier_;
}

// .google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode clinical_status = 10;
inline bool UsCoreAllergyintolerance::has_clinical_status() const {
  return this != internal_default_instance() && clinical_status_ != NULL;
}
inline const ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode& UsCoreAllergyintolerance::_internal_clinical_status() const {
  return *clinical_status_;
}
inline const ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode& UsCoreAllergyintolerance::clinical_status() const {
  const ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode* p = clinical_status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.clinical_status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode*>(
      &::google::fhir::stu3::proto::_AllergyIntoleranceClinicalStatusCode_default_instance_);
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode* UsCoreAllergyintolerance::release_clinical_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.clinical_status)
  
  ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode* temp = clinical_status_;
  clinical_status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode* UsCoreAllergyintolerance::mutable_clinical_status() {
  
  if (clinical_status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode>(GetArenaNoVirtual());
    clinical_status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.clinical_status)
  return clinical_status_;
}
inline void UsCoreAllergyintolerance::set_allocated_clinical_status(::google::fhir::stu3::proto::AllergyIntoleranceClinicalStatusCode* clinical_status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(clinical_status_);
  }
  if (clinical_status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      clinical_status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clinical_status, submessage_arena);
    }
    
  } else {
    
  }
  clinical_status_ = clinical_status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.clinical_status)
}

// .google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode verification_status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreAllergyintolerance::has_verification_status() const {
  return this != internal_default_instance() && verification_status_ != NULL;
}
inline const ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode& UsCoreAllergyintolerance::_internal_verification_status() const {
  return *verification_status_;
}
inline const ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode& UsCoreAllergyintolerance::verification_status() const {
  const ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode* p = verification_status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.verification_status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode*>(
      &::google::fhir::stu3::proto::_AllergyIntoleranceVerificationStatusCode_default_instance_);
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode* UsCoreAllergyintolerance::release_verification_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.verification_status)
  
  ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode* temp = verification_status_;
  verification_status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode* UsCoreAllergyintolerance::mutable_verification_status() {
  
  if (verification_status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode>(GetArenaNoVirtual());
    verification_status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.verification_status)
  return verification_status_;
}
inline void UsCoreAllergyintolerance::set_allocated_verification_status(::google::fhir::stu3::proto::AllergyIntoleranceVerificationStatusCode* verification_status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(verification_status_);
  }
  if (verification_status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      verification_status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, verification_status, submessage_arena);
    }
    
  } else {
    
  }
  verification_status_ = verification_status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.verification_status)
}

// .google.fhir.stu3.proto.AllergyIntoleranceTypeCode type = 12;
inline bool UsCoreAllergyintolerance::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline const ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode& UsCoreAllergyintolerance::_internal_type() const {
  return *type_;
}
inline const ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode& UsCoreAllergyintolerance::type() const {
  const ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode* p = type_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.type)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode*>(
      &::google::fhir::stu3::proto::_AllergyIntoleranceTypeCode_default_instance_);
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode* UsCoreAllergyintolerance::release_type() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.type)
  
  ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceTypeCode* UsCoreAllergyintolerance::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::AllergyIntoleranceTypeCode>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.type)
  return type_;
}
inline void UsCoreAllergyintolerance::set_allocated_type(::google::fhir::stu3::proto::AllergyIntoleranceTypeCode* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(type_);
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.type)
}

// repeated .google.fhir.stu3.proto.AllergyIntoleranceCategoryCode category = 13;
inline int UsCoreAllergyintolerance::category_size() const {
  return category_.size();
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode* UsCoreAllergyintolerance::mutable_category(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.category)
  return category_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode >*
UsCoreAllergyintolerance::mutable_category() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.category)
  return &category_;
}
inline const ::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode& UsCoreAllergyintolerance::category(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.category)
  return category_.Get(index);
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode* UsCoreAllergyintolerance::add_category() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreAllergyintolerance.category)
  return category_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::AllergyIntoleranceCategoryCode >&
UsCoreAllergyintolerance::category() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.category)
  return category_;
}

// .google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode criticality = 14;
inline bool UsCoreAllergyintolerance::has_criticality() const {
  return this != internal_default_instance() && criticality_ != NULL;
}
inline const ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode& UsCoreAllergyintolerance::_internal_criticality() const {
  return *criticality_;
}
inline const ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode& UsCoreAllergyintolerance::criticality() const {
  const ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode* p = criticality_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.criticality)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode*>(
      &::google::fhir::stu3::proto::_AllergyIntoleranceCriticalityCode_default_instance_);
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode* UsCoreAllergyintolerance::release_criticality() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.criticality)
  
  ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode* temp = criticality_;
  criticality_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode* UsCoreAllergyintolerance::mutable_criticality() {
  
  if (criticality_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode>(GetArenaNoVirtual());
    criticality_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.criticality)
  return criticality_;
}
inline void UsCoreAllergyintolerance::set_allocated_criticality(::google::fhir::stu3::proto::AllergyIntoleranceCriticalityCode* criticality) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(criticality_);
  }
  if (criticality) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      criticality = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, criticality, submessage_arena);
    }
    
  } else {
    
  }
  criticality_ = criticality;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.criticality)
}

// .google.fhir.stu3.proto.CodeableConcept code = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreAllergyintolerance::has_code() const {
  return this != internal_default_instance() && code_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreAllergyintolerance::_internal_code() const {
  return *code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreAllergyintolerance::code() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = code_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.code)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreAllergyintolerance::release_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.code)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = code_;
  code_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreAllergyintolerance::mutable_code() {
  
  if (code_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    code_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.code)
  return code_;
}
inline void UsCoreAllergyintolerance::set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(code_);
  }
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    
  } else {
    
  }
  code_ = code;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.code)
}

// .google.fhir.stu3.proto.Reference patient = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
inline bool UsCoreAllergyintolerance::has_patient() const {
  return this != internal_default_instance() && patient_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreAllergyintolerance::_internal_patient() const {
  return *patient_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreAllergyintolerance::patient() const {
  const ::google::fhir::stu3::proto::Reference* p = patient_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.patient)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreAllergyintolerance::release_patient() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.patient)
  
  ::google::fhir::stu3::proto::Reference* temp = patient_;
  patient_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreAllergyintolerance::mutable_patient() {
  
  if (patient_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    patient_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.patient)
  return patient_;
}
inline void UsCoreAllergyintolerance::set_allocated_patient(::google::fhir::stu3::proto::Reference* patient) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(patient_);
  }
  if (patient) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      patient = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, patient, submessage_arena);
    }
    
  } else {
    
  }
  patient_ = patient;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.patient)
}

// .google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset onset = 17 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreAllergyintolerance::has_onset() const {
  return this != internal_default_instance() && onset_ != NULL;
}
inline void UsCoreAllergyintolerance::clear_onset() {
  if (GetArenaNoVirtual() == NULL && onset_ != NULL) {
    delete onset_;
  }
  onset_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset& UsCoreAllergyintolerance::_internal_onset() const {
  return *onset_;
}
inline const ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset& UsCoreAllergyintolerance::onset() const {
  const ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset* p = onset_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.onset)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset*>(
      &::google::fhir::stu3::uscore::_UsCoreAllergyintolerance_Onset_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset* UsCoreAllergyintolerance::release_onset() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.onset)
  
  ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset* temp = onset_;
  onset_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset* UsCoreAllergyintolerance::mutable_onset() {
  
  if (onset_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset>(GetArenaNoVirtual());
    onset_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.onset)
  return onset_;
}
inline void UsCoreAllergyintolerance::set_allocated_onset(::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Onset* onset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete onset_;
  }
  if (onset) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      onset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, onset, submessage_arena);
    }
    
  } else {
    
  }
  onset_ = onset;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.onset)
}

// .google.fhir.stu3.proto.DateTime asserted_date = 18;
inline bool UsCoreAllergyintolerance::has_asserted_date() const {
  return this != internal_default_instance() && asserted_date_ != NULL;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreAllergyintolerance::_internal_asserted_date() const {
  return *asserted_date_;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreAllergyintolerance::asserted_date() const {
  const ::google::fhir::stu3::proto::DateTime* p = asserted_date_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.asserted_date)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::DateTime*>(
      &::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreAllergyintolerance::release_asserted_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.asserted_date)
  
  ::google::fhir::stu3::proto::DateTime* temp = asserted_date_;
  asserted_date_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreAllergyintolerance::mutable_asserted_date() {
  
  if (asserted_date_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::DateTime>(GetArenaNoVirtual());
    asserted_date_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.asserted_date)
  return asserted_date_;
}
inline void UsCoreAllergyintolerance::set_allocated_asserted_date(::google::fhir::stu3::proto::DateTime* asserted_date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(asserted_date_);
  }
  if (asserted_date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      asserted_date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, asserted_date, submessage_arena);
    }
    
  } else {
    
  }
  asserted_date_ = asserted_date;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.asserted_date)
}

// .google.fhir.stu3.proto.Reference recorder = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient"];
inline bool UsCoreAllergyintolerance::has_recorder() const {
  return this != internal_default_instance() && recorder_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreAllergyintolerance::_internal_recorder() const {
  return *recorder_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreAllergyintolerance::recorder() const {
  const ::google::fhir::stu3::proto::Reference* p = recorder_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.recorder)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreAllergyintolerance::release_recorder() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.recorder)
  
  ::google::fhir::stu3::proto::Reference* temp = recorder_;
  recorder_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreAllergyintolerance::mutable_recorder() {
  
  if (recorder_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    recorder_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.recorder)
  return recorder_;
}
inline void UsCoreAllergyintolerance::set_allocated_recorder(::google::fhir::stu3::proto::Reference* recorder) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(recorder_);
  }
  if (recorder) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      recorder = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, recorder, submessage_arena);
    }
    
  } else {
    
  }
  recorder_ = recorder;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.recorder)
}

// .google.fhir.stu3.proto.Reference asserter = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
inline bool UsCoreAllergyintolerance::has_asserter() const {
  return this != internal_default_instance() && asserter_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreAllergyintolerance::_internal_asserter() const {
  return *asserter_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreAllergyintolerance::asserter() const {
  const ::google::fhir::stu3::proto::Reference* p = asserter_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.asserter)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreAllergyintolerance::release_asserter() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.asserter)
  
  ::google::fhir::stu3::proto::Reference* temp = asserter_;
  asserter_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreAllergyintolerance::mutable_asserter() {
  
  if (asserter_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    asserter_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.asserter)
  return asserter_;
}
inline void UsCoreAllergyintolerance::set_allocated_asserter(::google::fhir::stu3::proto::Reference* asserter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(asserter_);
  }
  if (asserter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      asserter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, asserter, submessage_arena);
    }
    
  } else {
    
  }
  asserter_ = asserter;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.asserter)
}

// .google.fhir.stu3.proto.DateTime last_occurrence = 21;
inline bool UsCoreAllergyintolerance::has_last_occurrence() const {
  return this != internal_default_instance() && last_occurrence_ != NULL;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreAllergyintolerance::_internal_last_occurrence() const {
  return *last_occurrence_;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreAllergyintolerance::last_occurrence() const {
  const ::google::fhir::stu3::proto::DateTime* p = last_occurrence_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.last_occurrence)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::DateTime*>(
      &::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreAllergyintolerance::release_last_occurrence() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreAllergyintolerance.last_occurrence)
  
  ::google::fhir::stu3::proto::DateTime* temp = last_occurrence_;
  last_occurrence_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreAllergyintolerance::mutable_last_occurrence() {
  
  if (last_occurrence_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::DateTime>(GetArenaNoVirtual());
    last_occurrence_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.last_occurrence)
  return last_occurrence_;
}
inline void UsCoreAllergyintolerance::set_allocated_last_occurrence(::google::fhir::stu3::proto::DateTime* last_occurrence) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(last_occurrence_);
  }
  if (last_occurrence) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      last_occurrence = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, last_occurrence, submessage_arena);
    }
    
  } else {
    
  }
  last_occurrence_ = last_occurrence;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreAllergyintolerance.last_occurrence)
}

// repeated .google.fhir.stu3.proto.Annotation note = 22;
inline int UsCoreAllergyintolerance::note_size() const {
  return note_.size();
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreAllergyintolerance::mutable_note(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.note)
  return note_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
UsCoreAllergyintolerance::mutable_note() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.note)
  return &note_;
}
inline const ::google::fhir::stu3::proto::Annotation& UsCoreAllergyintolerance::note(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.note)
  return note_.Get(index);
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreAllergyintolerance::add_note() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreAllergyintolerance.note)
  return note_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
UsCoreAllergyintolerance::note() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.note)
  return note_;
}

// repeated .google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction reaction = 23;
inline int UsCoreAllergyintolerance::reaction_size() const {
  return reaction_.size();
}
inline void UsCoreAllergyintolerance::clear_reaction() {
  reaction_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction* UsCoreAllergyintolerance::mutable_reaction(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreAllergyintolerance.reaction)
  return reaction_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction >*
UsCoreAllergyintolerance::mutable_reaction() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.reaction)
  return &reaction_;
}
inline const ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction& UsCoreAllergyintolerance::reaction(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreAllergyintolerance.reaction)
  return reaction_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction* UsCoreAllergyintolerance::add_reaction() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreAllergyintolerance.reaction)
  return reaction_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreAllergyintolerance_Reaction >&
UsCoreAllergyintolerance::reaction() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreAllergyintolerance.reaction)
  return reaction_;
}

// -------------------------------------------------------------------

// PatientUSCoreBirthSexExtension

// .google.fhir.stu3.proto.String id = 1;
inline bool PatientUSCoreBirthSexExtension::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& PatientUSCoreBirthSexExtension::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& PatientUSCoreBirthSexExtension::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* PatientUSCoreBirthSexExtension::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* PatientUSCoreBirthSexExtension::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension.id)
  return id_;
}
inline void PatientUSCoreBirthSexExtension::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int PatientUSCoreBirthSexExtension::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* PatientUSCoreBirthSexExtension::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
PatientUSCoreBirthSexExtension::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& PatientUSCoreBirthSexExtension::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* PatientUSCoreBirthSexExtension::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
PatientUSCoreBirthSexExtension::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension.extension)
  return extension_;
}

// .google.fhir.stu3.uscore.UsCoreBirthSexCode value_code = 3;
inline bool PatientUSCoreBirthSexExtension::has_value_code() const {
  return this != internal_default_instance() && value_code_ != NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreBirthSexCode& PatientUSCoreBirthSexExtension::_internal_value_code() const {
  return *value_code_;
}
inline const ::google::fhir::stu3::uscore::UsCoreBirthSexCode& PatientUSCoreBirthSexExtension::value_code() const {
  const ::google::fhir::stu3::uscore::UsCoreBirthSexCode* p = value_code_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension.value_code)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreBirthSexCode*>(
      &::google::fhir::stu3::uscore::_UsCoreBirthSexCode_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreBirthSexCode* PatientUSCoreBirthSexExtension::release_value_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension.value_code)
  
  ::google::fhir::stu3::uscore::UsCoreBirthSexCode* temp = value_code_;
  value_code_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreBirthSexCode* PatientUSCoreBirthSexExtension::mutable_value_code() {
  
  if (value_code_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreBirthSexCode>(GetArenaNoVirtual());
    value_code_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension.value_code)
  return value_code_;
}
inline void PatientUSCoreBirthSexExtension::set_allocated_value_code(::google::fhir::stu3::uscore::UsCoreBirthSexCode* value_code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(value_code_);
  }
  if (value_code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value_code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value_code, submessage_arena);
    }
    
  } else {
    
  }
  value_code_ = value_code;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension.value_code)
}

// -------------------------------------------------------------------

// UsCoreCareplan_Activity_Detail_Scheduled

// .google.fhir.stu3.proto.Timing timing = 1;
inline bool UsCoreCareplan_Activity_Detail_Scheduled::has_timing() const {
  return scheduled_case() == kTiming;
}
inline void UsCoreCareplan_Activity_Detail_Scheduled::set_has_timing() {
  _oneof_case_[0] = kTiming;
}
inline const ::google::fhir::stu3::proto::Timing& UsCoreCareplan_Activity_Detail_Scheduled::_internal_timing() const {
  return *scheduled_.timing_;
}
inline ::google::fhir::stu3::proto::Timing* UsCoreCareplan_Activity_Detail_Scheduled::release_timing() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled.timing)
  if (has_timing()) {
    clear_has_scheduled();
      ::google::fhir::stu3::proto::Timing* temp = scheduled_.timing_;
    scheduled_.timing_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Timing& UsCoreCareplan_Activity_Detail_Scheduled::timing() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled.timing)
  return has_timing()
      ? *scheduled_.timing_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Timing*>(&::google::fhir::stu3::proto::_Timing_default_instance_);
}
inline ::google::fhir::stu3::proto::Timing* UsCoreCareplan_Activity_Detail_Scheduled::mutable_timing() {
  if (!has_timing()) {
    clear_scheduled();
    set_has_timing();
    scheduled_.timing_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Timing >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled.timing)
  return scheduled_.timing_;
}

// .google.fhir.stu3.proto.Period period = 2;
inline bool UsCoreCareplan_Activity_Detail_Scheduled::has_period() const {
  return scheduled_case() == kPeriod;
}
inline void UsCoreCareplan_Activity_Detail_Scheduled::set_has_period() {
  _oneof_case_[0] = kPeriod;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreCareplan_Activity_Detail_Scheduled::_internal_period() const {
  return *scheduled_.period_;
}
inline ::google::fhir::stu3::proto::Period* UsCoreCareplan_Activity_Detail_Scheduled::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled.period)
  if (has_period()) {
    clear_has_scheduled();
      ::google::fhir::stu3::proto::Period* temp = scheduled_.period_;
    scheduled_.period_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Period& UsCoreCareplan_Activity_Detail_Scheduled::period() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled.period)
  return has_period()
      ? *scheduled_.period_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Period*>(&::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* UsCoreCareplan_Activity_Detail_Scheduled::mutable_period() {
  if (!has_period()) {
    clear_scheduled();
    set_has_period();
    scheduled_.period_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Period >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled.period)
  return scheduled_.period_;
}

// .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
inline bool UsCoreCareplan_Activity_Detail_Scheduled::has_string_value() const {
  return scheduled_case() == kStringValue;
}
inline void UsCoreCareplan_Activity_Detail_Scheduled::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCareplan_Activity_Detail_Scheduled::_internal_string_value() const {
  return *scheduled_.string_value_;
}
inline ::google::fhir::stu3::proto::String* UsCoreCareplan_Activity_Detail_Scheduled::release_string_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled.string_value)
  if (has_string_value()) {
    clear_has_scheduled();
      ::google::fhir::stu3::proto::String* temp = scheduled_.string_value_;
    scheduled_.string_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::String& UsCoreCareplan_Activity_Detail_Scheduled::string_value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled.string_value)
  return has_string_value()
      ? *scheduled_.string_value_
      : *reinterpret_cast< ::google::fhir::stu3::proto::String*>(&::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreCareplan_Activity_Detail_Scheduled::mutable_string_value() {
  if (!has_string_value()) {
    clear_scheduled();
    set_has_string_value();
    scheduled_.string_value_ = CreateMaybeMessage< ::google::fhir::stu3::proto::String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled.string_value)
  return scheduled_.string_value_;
}

inline bool UsCoreCareplan_Activity_Detail_Scheduled::has_scheduled() const {
  return scheduled_case() != SCHEDULED_NOT_SET;
}
inline void UsCoreCareplan_Activity_Detail_Scheduled::clear_has_scheduled() {
  _oneof_case_[0] = SCHEDULED_NOT_SET;
}
inline UsCoreCareplan_Activity_Detail_Scheduled::ScheduledCase UsCoreCareplan_Activity_Detail_Scheduled::scheduled_case() const {
  return UsCoreCareplan_Activity_Detail_Scheduled::ScheduledCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreCareplan_Activity_Detail_Product

// .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
inline bool UsCoreCareplan_Activity_Detail_Product::has_codeable_concept() const {
  return product_case() == kCodeableConcept;
}
inline void UsCoreCareplan_Activity_Detail_Product::set_has_codeable_concept() {
  _oneof_case_[0] = kCodeableConcept;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCareplan_Activity_Detail_Product::_internal_codeable_concept() const {
  return *product_.codeable_concept_;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCareplan_Activity_Detail_Product::release_codeable_concept() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product.codeable_concept)
  if (has_codeable_concept()) {
    clear_has_product();
      ::google::fhir::stu3::proto::CodeableConcept* temp = product_.codeable_concept_;
    product_.codeable_concept_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCareplan_Activity_Detail_Product::codeable_concept() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product.codeable_concept)
  return has_codeable_concept()
      ? *product_.codeable_concept_
      : *reinterpret_cast< ::google::fhir::stu3::proto::CodeableConcept*>(&::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCareplan_Activity_Detail_Product::mutable_codeable_concept() {
  if (!has_codeable_concept()) {
    clear_product();
    set_has_codeable_concept();
    product_.codeable_concept_ = CreateMaybeMessage< ::google::fhir::stu3::proto::CodeableConcept >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product.codeable_concept)
  return product_.codeable_concept_;
}

// .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Substance"];
inline bool UsCoreCareplan_Activity_Detail_Product::has_reference() const {
  return product_case() == kReference;
}
inline void UsCoreCareplan_Activity_Detail_Product::set_has_reference() {
  _oneof_case_[0] = kReference;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan_Activity_Detail_Product::_internal_reference() const {
  return *product_.reference_;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan_Activity_Detail_Product::release_reference() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product.reference)
  if (has_reference()) {
    clear_has_product();
      ::google::fhir::stu3::proto::Reference* temp = product_.reference_;
    product_.reference_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan_Activity_Detail_Product::reference() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product.reference)
  return has_reference()
      ? *product_.reference_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Reference*>(&::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan_Activity_Detail_Product::mutable_reference() {
  if (!has_reference()) {
    clear_product();
    set_has_reference();
    product_.reference_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Reference >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product.reference)
  return product_.reference_;
}

inline bool UsCoreCareplan_Activity_Detail_Product::has_product() const {
  return product_case() != PRODUCT_NOT_SET;
}
inline void UsCoreCareplan_Activity_Detail_Product::clear_has_product() {
  _oneof_case_[0] = PRODUCT_NOT_SET;
}
inline UsCoreCareplan_Activity_Detail_Product::ProductCase UsCoreCareplan_Activity_Detail_Product::product_case() const {
  return UsCoreCareplan_Activity_Detail_Product::ProductCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreCareplan_Activity_Detail

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreCareplan_Activity_Detail::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCareplan_Activity_Detail::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCareplan_Activity_Detail::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreCareplan_Activity_Detail::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreCareplan_Activity_Detail::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.id)
  return id_;
}
inline void UsCoreCareplan_Activity_Detail::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreCareplan_Activity_Detail::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareplan_Activity_Detail::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreCareplan_Activity_Detail::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreCareplan_Activity_Detail::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareplan_Activity_Detail::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreCareplan_Activity_Detail::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreCareplan_Activity_Detail::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareplan_Activity_Detail::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreCareplan_Activity_Detail::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreCareplan_Activity_Detail::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareplan_Activity_Detail::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreCareplan_Activity_Detail::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.CodeableConcept category = 4;
inline bool UsCoreCareplan_Activity_Detail::has_category() const {
  return this != internal_default_instance() && category_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCareplan_Activity_Detail::_internal_category() const {
  return *category_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCareplan_Activity_Detail::category() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = category_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.category)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCareplan_Activity_Detail::release_category() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.category)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = category_;
  category_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCareplan_Activity_Detail::mutable_category() {
  
  if (category_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.category)
  return category_;
}
inline void UsCoreCareplan_Activity_Detail::set_allocated_category(::google::fhir::stu3::proto::CodeableConcept* category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(category_);
  }
  if (category) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, category, submessage_arena);
    }
    
  } else {
    
  }
  category_ = category;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.category)
}

// .google.fhir.stu3.proto.Reference definition = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ActivityDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Questionnaire"];
inline bool UsCoreCareplan_Activity_Detail::has_definition() const {
  return this != internal_default_instance() && definition_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan_Activity_Detail::_internal_definition() const {
  return *definition_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan_Activity_Detail::definition() const {
  const ::google::fhir::stu3::proto::Reference* p = definition_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.definition)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan_Activity_Detail::release_definition() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.definition)
  
  ::google::fhir::stu3::proto::Reference* temp = definition_;
  definition_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan_Activity_Detail::mutable_definition() {
  
  if (definition_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    definition_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.definition)
  return definition_;
}
inline void UsCoreCareplan_Activity_Detail::set_allocated_definition(::google::fhir::stu3::proto::Reference* definition) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(definition_);
  }
  if (definition) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      definition = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, definition, submessage_arena);
    }
    
  } else {
    
  }
  definition_ = definition;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.definition)
}

// .google.fhir.stu3.proto.CodeableConcept code = 6;
inline bool UsCoreCareplan_Activity_Detail::has_code() const {
  return this != internal_default_instance() && code_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCareplan_Activity_Detail::_internal_code() const {
  return *code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCareplan_Activity_Detail::code() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = code_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.code)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCareplan_Activity_Detail::release_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.code)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = code_;
  code_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCareplan_Activity_Detail::mutable_code() {
  
  if (code_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    code_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.code)
  return code_;
}
inline void UsCoreCareplan_Activity_Detail::set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(code_);
  }
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    
  } else {
    
  }
  code_ = code;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.code)
}

// repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 7;
inline int UsCoreCareplan_Activity_Detail::reason_code_size() const {
  return reason_code_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCareplan_Activity_Detail::mutable_reason_code(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.reason_code)
  return reason_code_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreCareplan_Activity_Detail::mutable_reason_code() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.reason_code)
  return &reason_code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCareplan_Activity_Detail::reason_code(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.reason_code)
  return reason_code_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCareplan_Activity_Detail::add_reason_code() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.reason_code)
  return reason_code_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreCareplan_Activity_Detail::reason_code() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.reason_code)
  return reason_code_;
}

// repeated .google.fhir.stu3.proto.Reference reason_reference = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
inline int UsCoreCareplan_Activity_Detail::reason_reference_size() const {
  return reason_reference_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan_Activity_Detail::mutable_reason_reference(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.reason_reference)
  return reason_reference_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreCareplan_Activity_Detail::mutable_reason_reference() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.reason_reference)
  return &reason_reference_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan_Activity_Detail::reason_reference(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.reason_reference)
  return reason_reference_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan_Activity_Detail::add_reason_reference() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.reason_reference)
  return reason_reference_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreCareplan_Activity_Detail::reason_reference() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.reason_reference)
  return reason_reference_;
}

// repeated .google.fhir.stu3.proto.Reference goal = 9 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Goal"];
inline int UsCoreCareplan_Activity_Detail::goal_size() const {
  return goal_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan_Activity_Detail::mutable_goal(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.goal)
  return goal_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreCareplan_Activity_Detail::mutable_goal() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.goal)
  return &goal_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan_Activity_Detail::goal(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.goal)
  return goal_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan_Activity_Detail::add_goal() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.goal)
  return goal_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreCareplan_Activity_Detail::goal() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.goal)
  return goal_;
}

// .google.fhir.stu3.proto.CarePlanActivityStatusCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreCareplan_Activity_Detail::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::fhir::stu3::proto::CarePlanActivityStatusCode& UsCoreCareplan_Activity_Detail::_internal_status() const {
  return *status_;
}
inline const ::google::fhir::stu3::proto::CarePlanActivityStatusCode& UsCoreCareplan_Activity_Detail::status() const {
  const ::google::fhir::stu3::proto::CarePlanActivityStatusCode* p = status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CarePlanActivityStatusCode*>(
      &::google::fhir::stu3::proto::_CarePlanActivityStatusCode_default_instance_);
}
inline ::google::fhir::stu3::proto::CarePlanActivityStatusCode* UsCoreCareplan_Activity_Detail::release_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.status)
  
  ::google::fhir::stu3::proto::CarePlanActivityStatusCode* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CarePlanActivityStatusCode* UsCoreCareplan_Activity_Detail::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CarePlanActivityStatusCode>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.status)
  return status_;
}
inline void UsCoreCareplan_Activity_Detail::set_allocated_status(::google::fhir::stu3::proto::CarePlanActivityStatusCode* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.status)
}

// .google.fhir.stu3.proto.String status_reason = 11;
inline bool UsCoreCareplan_Activity_Detail::has_status_reason() const {
  return this != internal_default_instance() && status_reason_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCareplan_Activity_Detail::_internal_status_reason() const {
  return *status_reason_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCareplan_Activity_Detail::status_reason() const {
  const ::google::fhir::stu3::proto::String* p = status_reason_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.status_reason)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreCareplan_Activity_Detail::release_status_reason() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.status_reason)
  
  ::google::fhir::stu3::proto::String* temp = status_reason_;
  status_reason_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreCareplan_Activity_Detail::mutable_status_reason() {
  
  if (status_reason_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    status_reason_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.status_reason)
  return status_reason_;
}
inline void UsCoreCareplan_Activity_Detail::set_allocated_status_reason(::google::fhir::stu3::proto::String* status_reason) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_reason_);
  }
  if (status_reason) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status_reason = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status_reason, submessage_arena);
    }
    
  } else {
    
  }
  status_reason_ = status_reason;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.status_reason)
}

// .google.fhir.stu3.proto.Boolean prohibited = 12;
inline bool UsCoreCareplan_Activity_Detail::has_prohibited() const {
  return this != internal_default_instance() && prohibited_ != NULL;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreCareplan_Activity_Detail::_internal_prohibited() const {
  return *prohibited_;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreCareplan_Activity_Detail::prohibited() const {
  const ::google::fhir::stu3::proto::Boolean* p = prohibited_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.prohibited)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Boolean*>(
      &::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreCareplan_Activity_Detail::release_prohibited() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.prohibited)
  
  ::google::fhir::stu3::proto::Boolean* temp = prohibited_;
  prohibited_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreCareplan_Activity_Detail::mutable_prohibited() {
  
  if (prohibited_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Boolean>(GetArenaNoVirtual());
    prohibited_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.prohibited)
  return prohibited_;
}
inline void UsCoreCareplan_Activity_Detail::set_allocated_prohibited(::google::fhir::stu3::proto::Boolean* prohibited) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(prohibited_);
  }
  if (prohibited) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      prohibited = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, prohibited, submessage_arena);
    }
    
  } else {
    
  }
  prohibited_ = prohibited;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.prohibited)
}

// .google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled scheduled = 13 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreCareplan_Activity_Detail::has_scheduled() const {
  return this != internal_default_instance() && scheduled_ != NULL;
}
inline void UsCoreCareplan_Activity_Detail::clear_scheduled() {
  if (GetArenaNoVirtual() == NULL && scheduled_ != NULL) {
    delete scheduled_;
  }
  scheduled_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled& UsCoreCareplan_Activity_Detail::_internal_scheduled() const {
  return *scheduled_;
}
inline const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled& UsCoreCareplan_Activity_Detail::scheduled() const {
  const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled* p = scheduled_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.scheduled)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled*>(
      &::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_Scheduled_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled* UsCoreCareplan_Activity_Detail::release_scheduled() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.scheduled)
  
  ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled* temp = scheduled_;
  scheduled_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled* UsCoreCareplan_Activity_Detail::mutable_scheduled() {
  
  if (scheduled_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled>(GetArenaNoVirtual());
    scheduled_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.scheduled)
  return scheduled_;
}
inline void UsCoreCareplan_Activity_Detail::set_allocated_scheduled(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Scheduled* scheduled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete scheduled_;
  }
  if (scheduled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scheduled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scheduled, submessage_arena);
    }
    
  } else {
    
  }
  scheduled_ = scheduled;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.scheduled)
}

// .google.fhir.stu3.proto.Reference location = 14 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
inline bool UsCoreCareplan_Activity_Detail::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan_Activity_Detail::_internal_location() const {
  return *location_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan_Activity_Detail::location() const {
  const ::google::fhir::stu3::proto::Reference* p = location_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.location)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan_Activity_Detail::release_location() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.location)
  
  ::google::fhir::stu3::proto::Reference* temp = location_;
  location_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan_Activity_Detail::mutable_location() {
  
  if (location_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    location_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.location)
  return location_;
}
inline void UsCoreCareplan_Activity_Detail::set_allocated_location(::google::fhir::stu3::proto::Reference* location) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(location_);
  }
  if (location) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      location = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    
  } else {
    
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.location)
}

// repeated .google.fhir.stu3.proto.Reference performer = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CareTeam"];
inline int UsCoreCareplan_Activity_Detail::performer_size() const {
  return performer_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan_Activity_Detail::mutable_performer(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.performer)
  return performer_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreCareplan_Activity_Detail::mutable_performer() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.performer)
  return &performer_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan_Activity_Detail::performer(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.performer)
  return performer_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan_Activity_Detail::add_performer() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.performer)
  return performer_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreCareplan_Activity_Detail::performer() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.performer)
  return performer_;
}

// .google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product product = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreCareplan_Activity_Detail::has_product() const {
  return this != internal_default_instance() && product_ != NULL;
}
inline void UsCoreCareplan_Activity_Detail::clear_product() {
  if (GetArenaNoVirtual() == NULL && product_ != NULL) {
    delete product_;
  }
  product_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product& UsCoreCareplan_Activity_Detail::_internal_product() const {
  return *product_;
}
inline const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product& UsCoreCareplan_Activity_Detail::product() const {
  const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product* p = product_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.product)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product*>(
      &::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_Product_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product* UsCoreCareplan_Activity_Detail::release_product() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.product)
  
  ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product* temp = product_;
  product_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product* UsCoreCareplan_Activity_Detail::mutable_product() {
  
  if (product_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product>(GetArenaNoVirtual());
    product_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.product)
  return product_;
}
inline void UsCoreCareplan_Activity_Detail::set_allocated_product(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail_Product* product) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete product_;
  }
  if (product) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      product = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, product, submessage_arena);
    }
    
  } else {
    
  }
  product_ = product;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.product)
}

// .google.fhir.stu3.proto.SimpleQuantity daily_amount = 17;
inline bool UsCoreCareplan_Activity_Detail::has_daily_amount() const {
  return this != internal_default_instance() && daily_amount_ != NULL;
}
inline const ::google::fhir::stu3::proto::SimpleQuantity& UsCoreCareplan_Activity_Detail::_internal_daily_amount() const {
  return *daily_amount_;
}
inline const ::google::fhir::stu3::proto::SimpleQuantity& UsCoreCareplan_Activity_Detail::daily_amount() const {
  const ::google::fhir::stu3::proto::SimpleQuantity* p = daily_amount_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.daily_amount)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::SimpleQuantity*>(
      &::google::fhir::stu3::proto::_SimpleQuantity_default_instance_);
}
inline ::google::fhir::stu3::proto::SimpleQuantity* UsCoreCareplan_Activity_Detail::release_daily_amount() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.daily_amount)
  
  ::google::fhir::stu3::proto::SimpleQuantity* temp = daily_amount_;
  daily_amount_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::SimpleQuantity* UsCoreCareplan_Activity_Detail::mutable_daily_amount() {
  
  if (daily_amount_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::SimpleQuantity>(GetArenaNoVirtual());
    daily_amount_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.daily_amount)
  return daily_amount_;
}
inline void UsCoreCareplan_Activity_Detail::set_allocated_daily_amount(::google::fhir::stu3::proto::SimpleQuantity* daily_amount) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(daily_amount_);
  }
  if (daily_amount) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      daily_amount = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, daily_amount, submessage_arena);
    }
    
  } else {
    
  }
  daily_amount_ = daily_amount;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.daily_amount)
}

// .google.fhir.stu3.proto.SimpleQuantity quantity = 18;
inline bool UsCoreCareplan_Activity_Detail::has_quantity() const {
  return this != internal_default_instance() && quantity_ != NULL;
}
inline const ::google::fhir::stu3::proto::SimpleQuantity& UsCoreCareplan_Activity_Detail::_internal_quantity() const {
  return *quantity_;
}
inline const ::google::fhir::stu3::proto::SimpleQuantity& UsCoreCareplan_Activity_Detail::quantity() const {
  const ::google::fhir::stu3::proto::SimpleQuantity* p = quantity_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.quantity)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::SimpleQuantity*>(
      &::google::fhir::stu3::proto::_SimpleQuantity_default_instance_);
}
inline ::google::fhir::stu3::proto::SimpleQuantity* UsCoreCareplan_Activity_Detail::release_quantity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.quantity)
  
  ::google::fhir::stu3::proto::SimpleQuantity* temp = quantity_;
  quantity_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::SimpleQuantity* UsCoreCareplan_Activity_Detail::mutable_quantity() {
  
  if (quantity_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::SimpleQuantity>(GetArenaNoVirtual());
    quantity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.quantity)
  return quantity_;
}
inline void UsCoreCareplan_Activity_Detail::set_allocated_quantity(::google::fhir::stu3::proto::SimpleQuantity* quantity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(quantity_);
  }
  if (quantity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quantity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quantity, submessage_arena);
    }
    
  } else {
    
  }
  quantity_ = quantity;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.quantity)
}

// .google.fhir.stu3.proto.String description = 19;
inline bool UsCoreCareplan_Activity_Detail::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCareplan_Activity_Detail::_internal_description() const {
  return *description_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCareplan_Activity_Detail::description() const {
  const ::google::fhir::stu3::proto::String* p = description_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.description)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreCareplan_Activity_Detail::release_description() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.description)
  
  ::google::fhir::stu3::proto::String* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreCareplan_Activity_Detail::mutable_description() {
  
  if (description_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    description_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.description)
  return description_;
}
inline void UsCoreCareplan_Activity_Detail::set_allocated_description(::google::fhir::stu3::proto::String* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(description_);
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.description)
}

// -------------------------------------------------------------------

// UsCoreCareplan_Activity

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreCareplan_Activity::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCareplan_Activity::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCareplan_Activity::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreCareplan_Activity::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreCareplan_Activity::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.id)
  return id_;
}
inline void UsCoreCareplan_Activity::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreCareplan_Activity::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareplan_Activity::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreCareplan_Activity::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreCareplan_Activity::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareplan_Activity::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.Activity.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreCareplan_Activity::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreCareplan_Activity::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareplan_Activity::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreCareplan_Activity::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreCareplan_Activity::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareplan_Activity::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.Activity.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreCareplan_Activity::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.CodeableConcept outcome_codeable_concept = 4;
inline int UsCoreCareplan_Activity::outcome_codeable_concept_size() const {
  return outcome_codeable_concept_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCareplan_Activity::mutable_outcome_codeable_concept(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.outcome_codeable_concept)
  return outcome_codeable_concept_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreCareplan_Activity::mutable_outcome_codeable_concept() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.outcome_codeable_concept)
  return &outcome_codeable_concept_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCareplan_Activity::outcome_codeable_concept(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.outcome_codeable_concept)
  return outcome_codeable_concept_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCareplan_Activity::add_outcome_codeable_concept() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.Activity.outcome_codeable_concept)
  return outcome_codeable_concept_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreCareplan_Activity::outcome_codeable_concept() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.outcome_codeable_concept)
  return outcome_codeable_concept_;
}

// repeated .google.fhir.stu3.proto.Reference outcome_reference = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
inline int UsCoreCareplan_Activity::outcome_reference_size() const {
  return outcome_reference_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan_Activity::mutable_outcome_reference(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.outcome_reference)
  return outcome_reference_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreCareplan_Activity::mutable_outcome_reference() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.outcome_reference)
  return &outcome_reference_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan_Activity::outcome_reference(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.outcome_reference)
  return outcome_reference_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan_Activity::add_outcome_reference() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.Activity.outcome_reference)
  return outcome_reference_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreCareplan_Activity::outcome_reference() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.outcome_reference)
  return outcome_reference_;
}

// repeated .google.fhir.stu3.proto.Annotation progress = 6;
inline int UsCoreCareplan_Activity::progress_size() const {
  return progress_.size();
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreCareplan_Activity::mutable_progress(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.progress)
  return progress_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
UsCoreCareplan_Activity::mutable_progress() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.progress)
  return &progress_;
}
inline const ::google::fhir::stu3::proto::Annotation& UsCoreCareplan_Activity::progress(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.progress)
  return progress_.Get(index);
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreCareplan_Activity::add_progress() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.Activity.progress)
  return progress_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
UsCoreCareplan_Activity::progress() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.Activity.progress)
  return progress_;
}

// .google.fhir.stu3.proto.Reference reference = 7 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Appointment", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CommunicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Task", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/VisionPrescription", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RequestGroup"];
inline bool UsCoreCareplan_Activity::has_reference() const {
  return this != internal_default_instance() && reference_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan_Activity::_internal_reference() const {
  return *reference_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan_Activity::reference() const {
  const ::google::fhir::stu3::proto::Reference* p = reference_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.reference)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan_Activity::release_reference() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.reference)
  
  ::google::fhir::stu3::proto::Reference* temp = reference_;
  reference_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan_Activity::mutable_reference() {
  
  if (reference_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    reference_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.reference)
  return reference_;
}
inline void UsCoreCareplan_Activity::set_allocated_reference(::google::fhir::stu3::proto::Reference* reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(reference_);
  }
  if (reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reference, submessage_arena);
    }
    
  } else {
    
  }
  reference_ = reference;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.reference)
}

// .google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail detail = 8;
inline bool UsCoreCareplan_Activity::has_detail() const {
  return this != internal_default_instance() && detail_ != NULL;
}
inline void UsCoreCareplan_Activity::clear_detail() {
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) {
    delete detail_;
  }
  detail_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail& UsCoreCareplan_Activity::_internal_detail() const {
  return *detail_;
}
inline const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail& UsCoreCareplan_Activity::detail() const {
  const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail* p = detail_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.Activity.detail)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail*>(
      &::google::fhir::stu3::uscore::_UsCoreCareplan_Activity_Detail_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail* UsCoreCareplan_Activity::release_detail() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.Activity.detail)
  
  ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail* UsCoreCareplan_Activity::mutable_detail() {
  
  if (detail_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail>(GetArenaNoVirtual());
    detail_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.Activity.detail)
  return detail_;
}
inline void UsCoreCareplan_Activity::set_allocated_detail(::google::fhir::stu3::uscore::UsCoreCareplan_Activity_Detail* detail) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete detail_;
  }
  if (detail) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      detail = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, detail, submessage_arena);
    }
    
  } else {
    
  }
  detail_ = detail;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.Activity.detail)
}

// -------------------------------------------------------------------

// UsCoreCareplan

// .google.fhir.stu3.proto.Id id = 1;
inline bool UsCoreCareplan::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreCareplan::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreCareplan::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* UsCoreCareplan::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* UsCoreCareplan::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.id)
  return id_;
}
inline void UsCoreCareplan::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool UsCoreCareplan::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreCareplan::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreCareplan::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* UsCoreCareplan::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* UsCoreCareplan::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.meta)
  return meta_;
}
inline void UsCoreCareplan::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool UsCoreCareplan::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreCareplan::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreCareplan::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreCareplan::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreCareplan::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.implicit_rules)
  return implicit_rules_;
}
inline void UsCoreCareplan::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool UsCoreCareplan::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreCareplan::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreCareplan::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreCareplan::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreCareplan::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.language)
  return language_;
}
inline void UsCoreCareplan::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.language)
}

// .google.fhir.stu3.proto.Narrative text = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreCareplan::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreCareplan::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreCareplan::text() const {
  const ::google::fhir::stu3::proto::Narrative* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Narrative*>(
      &::google::fhir::stu3::proto::_Narrative_default_instance_);
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreCareplan::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.text)
  
  ::google::fhir::stu3::proto::Narrative* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreCareplan::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.text)
  return text_;
}
inline void UsCoreCareplan::set_allocated_text(::google::fhir::stu3::proto::Narrative* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.text)
}

// repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
inline int UsCoreCareplan::contained_size() const {
  return contained_.size();
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreCareplan::mutable_contained(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.contained)
  return contained_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
UsCoreCareplan::mutable_contained() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.contained)
  return &contained_;
}
inline const ::google::fhir::stu3::proto::ContainedResource& UsCoreCareplan::contained(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.contained)
  return contained_.Get(index);
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreCareplan::add_contained() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.contained)
  return contained_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
UsCoreCareplan::contained() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.contained)
  return contained_;
}

// repeated .google.fhir.stu3.proto.Extension extension = 7;
inline int UsCoreCareplan::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareplan::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreCareplan::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreCareplan::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareplan::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreCareplan::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
inline int UsCoreCareplan::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareplan::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreCareplan::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreCareplan::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareplan::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreCareplan::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.Identifier identifier = 9;
inline int UsCoreCareplan::identifier_size() const {
  return identifier_.size();
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreCareplan::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.identifier)
  return identifier_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
UsCoreCareplan::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.identifier)
  return &identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCoreCareplan::identifier(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.identifier)
  return identifier_.Get(index);
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreCareplan::add_identifier() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.identifier)
  return identifier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
UsCoreCareplan::identifier() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.identifier)
  return identifier_;
}

// repeated .google.fhir.stu3.proto.Reference definition = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Questionnaire"];
inline int UsCoreCareplan::definition_size() const {
  return definition_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::mutable_definition(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.definition)
  return definition_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreCareplan::mutable_definition() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.definition)
  return &definition_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan::definition(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.definition)
  return definition_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::add_definition() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.definition)
  return definition_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreCareplan::definition() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.definition)
  return definition_;
}

// repeated .google.fhir.stu3.proto.Reference based_on = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan"];
inline int UsCoreCareplan::based_on_size() const {
  return based_on_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::mutable_based_on(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.based_on)
  return based_on_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreCareplan::mutable_based_on() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.based_on)
  return &based_on_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan::based_on(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.based_on)
  return based_on_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::add_based_on() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.based_on)
  return based_on_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreCareplan::based_on() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.based_on)
  return based_on_;
}

// repeated .google.fhir.stu3.proto.Reference replaces = 12 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan"];
inline int UsCoreCareplan::replaces_size() const {
  return replaces_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::mutable_replaces(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.replaces)
  return replaces_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreCareplan::mutable_replaces() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.replaces)
  return &replaces_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan::replaces(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.replaces)
  return replaces_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::add_replaces() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.replaces)
  return replaces_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreCareplan::replaces() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.replaces)
  return replaces_;
}

// repeated .google.fhir.stu3.proto.Reference part_of = 13 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan"];
inline int UsCoreCareplan::part_of_size() const {
  return part_of_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::mutable_part_of(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.part_of)
  return part_of_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreCareplan::mutable_part_of() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.part_of)
  return &part_of_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan::part_of(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.part_of)
  return part_of_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::add_part_of() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.part_of)
  return part_of_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreCareplan::part_of() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.part_of)
  return part_of_;
}

// .google.fhir.stu3.proto.CarePlanStatusCode status = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreCareplan::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::fhir::stu3::proto::CarePlanStatusCode& UsCoreCareplan::_internal_status() const {
  return *status_;
}
inline const ::google::fhir::stu3::proto::CarePlanStatusCode& UsCoreCareplan::status() const {
  const ::google::fhir::stu3::proto::CarePlanStatusCode* p = status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CarePlanStatusCode*>(
      &::google::fhir::stu3::proto::_CarePlanStatusCode_default_instance_);
}
inline ::google::fhir::stu3::proto::CarePlanStatusCode* UsCoreCareplan::release_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.status)
  
  ::google::fhir::stu3::proto::CarePlanStatusCode* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CarePlanStatusCode* UsCoreCareplan::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CarePlanStatusCode>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.status)
  return status_;
}
inline void UsCoreCareplan::set_allocated_status(::google::fhir::stu3::proto::CarePlanStatusCode* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.status)
}

// .google.fhir.stu3.proto.CarePlanIntentCode intent = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreCareplan::has_intent() const {
  return this != internal_default_instance() && intent_ != NULL;
}
inline const ::google::fhir::stu3::proto::CarePlanIntentCode& UsCoreCareplan::_internal_intent() const {
  return *intent_;
}
inline const ::google::fhir::stu3::proto::CarePlanIntentCode& UsCoreCareplan::intent() const {
  const ::google::fhir::stu3::proto::CarePlanIntentCode* p = intent_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.intent)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CarePlanIntentCode*>(
      &::google::fhir::stu3::proto::_CarePlanIntentCode_default_instance_);
}
inline ::google::fhir::stu3::proto::CarePlanIntentCode* UsCoreCareplan::release_intent() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.intent)
  
  ::google::fhir::stu3::proto::CarePlanIntentCode* temp = intent_;
  intent_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CarePlanIntentCode* UsCoreCareplan::mutable_intent() {
  
  if (intent_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CarePlanIntentCode>(GetArenaNoVirtual());
    intent_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.intent)
  return intent_;
}
inline void UsCoreCareplan::set_allocated_intent(::google::fhir::stu3::proto::CarePlanIntentCode* intent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(intent_);
  }
  if (intent) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      intent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, intent, submessage_arena);
    }
    
  } else {
    
  }
  intent_ = intent;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.intent)
}

// repeated .google.fhir.stu3.proto.CodeableConcept category = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline int UsCoreCareplan::category_size() const {
  return category_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCareplan::mutable_category(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.category)
  return category_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreCareplan::mutable_category() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.category)
  return &category_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCareplan::category(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.category)
  return category_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCareplan::add_category() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.category)
  return category_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreCareplan::category() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.category)
  return category_;
}

// .google.fhir.stu3.proto.String title = 17;
inline bool UsCoreCareplan::has_title() const {
  return this != internal_default_instance() && title_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCareplan::_internal_title() const {
  return *title_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCareplan::title() const {
  const ::google::fhir::stu3::proto::String* p = title_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.title)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreCareplan::release_title() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.title)
  
  ::google::fhir::stu3::proto::String* temp = title_;
  title_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreCareplan::mutable_title() {
  
  if (title_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    title_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.title)
  return title_;
}
inline void UsCoreCareplan::set_allocated_title(::google::fhir::stu3::proto::String* title) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(title_);
  }
  if (title) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      title = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, title, submessage_arena);
    }
    
  } else {
    
  }
  title_ = title;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.title)
}

// .google.fhir.stu3.proto.String description = 18;
inline bool UsCoreCareplan::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCareplan::_internal_description() const {
  return *description_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCareplan::description() const {
  const ::google::fhir::stu3::proto::String* p = description_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.description)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreCareplan::release_description() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.description)
  
  ::google::fhir::stu3::proto::String* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreCareplan::mutable_description() {
  
  if (description_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    description_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.description)
  return description_;
}
inline void UsCoreCareplan::set_allocated_description(::google::fhir::stu3::proto::String* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(description_);
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.description)
}

// .google.fhir.stu3.proto.Reference subject = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
inline bool UsCoreCareplan::has_subject() const {
  return this != internal_default_instance() && subject_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan::_internal_subject() const {
  return *subject_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan::subject() const {
  const ::google::fhir::stu3::proto::Reference* p = subject_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.subject)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::release_subject() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.subject)
  
  ::google::fhir::stu3::proto::Reference* temp = subject_;
  subject_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::mutable_subject() {
  
  if (subject_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    subject_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.subject)
  return subject_;
}
inline void UsCoreCareplan::set_allocated_subject(::google::fhir::stu3::proto::Reference* subject) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(subject_);
  }
  if (subject) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      subject = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, subject, submessage_arena);
    }
    
  } else {
    
  }
  subject_ = subject;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.subject)
}

// .google.fhir.stu3.proto.Reference context = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
inline bool UsCoreCareplan::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan::_internal_context() const {
  return *context_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan::context() const {
  const ::google::fhir::stu3::proto::Reference* p = context_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.context)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::release_context() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.context)
  
  ::google::fhir::stu3::proto::Reference* temp = context_;
  context_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::mutable_context() {
  
  if (context_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    context_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.context)
  return context_;
}
inline void UsCoreCareplan::set_allocated_context(::google::fhir::stu3::proto::Reference* context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(context_);
  }
  if (context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.context)
}

// .google.fhir.stu3.proto.Period period = 21;
inline bool UsCoreCareplan::has_period() const {
  return this != internal_default_instance() && period_ != NULL;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreCareplan::_internal_period() const {
  return *period_;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreCareplan::period() const {
  const ::google::fhir::stu3::proto::Period* p = period_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.period)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Period*>(
      &::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* UsCoreCareplan::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareplan.period)
  
  ::google::fhir::stu3::proto::Period* temp = period_;
  period_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Period* UsCoreCareplan::mutable_period() {
  
  if (period_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Period>(GetArenaNoVirtual());
    period_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.period)
  return period_;
}
inline void UsCoreCareplan::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(period_);
  }
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    
  } else {
    
  }
  period_ = period;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareplan.period)
}

// repeated .google.fhir.stu3.proto.Reference author = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CareTeam"];
inline int UsCoreCareplan::author_size() const {
  return author_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::mutable_author(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.author)
  return author_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreCareplan::mutable_author() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.author)
  return &author_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan::author(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.author)
  return author_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::add_author() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.author)
  return author_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreCareplan::author() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.author)
  return author_;
}

// repeated .google.fhir.stu3.proto.Reference care_team = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CareTeam"];
inline int UsCoreCareplan::care_team_size() const {
  return care_team_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::mutable_care_team(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.care_team)
  return care_team_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreCareplan::mutable_care_team() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.care_team)
  return &care_team_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan::care_team(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.care_team)
  return care_team_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::add_care_team() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.care_team)
  return care_team_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreCareplan::care_team() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.care_team)
  return care_team_;
}

// repeated .google.fhir.stu3.proto.Reference addresses = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
inline int UsCoreCareplan::addresses_size() const {
  return addresses_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::mutable_addresses(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.addresses)
  return addresses_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreCareplan::mutable_addresses() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.addresses)
  return &addresses_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan::addresses(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.addresses)
  return addresses_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::add_addresses() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.addresses)
  return addresses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreCareplan::addresses() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.addresses)
  return addresses_;
}

// repeated .google.fhir.stu3.proto.Reference supporting_info = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
inline int UsCoreCareplan::supporting_info_size() const {
  return supporting_info_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::mutable_supporting_info(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.supporting_info)
  return supporting_info_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreCareplan::mutable_supporting_info() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.supporting_info)
  return &supporting_info_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan::supporting_info(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.supporting_info)
  return supporting_info_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::add_supporting_info() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.supporting_info)
  return supporting_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreCareplan::supporting_info() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.supporting_info)
  return supporting_info_;
}

// repeated .google.fhir.stu3.proto.Reference goal = 26 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Goal"];
inline int UsCoreCareplan::goal_size() const {
  return goal_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::mutable_goal(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.goal)
  return goal_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreCareplan::mutable_goal() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.goal)
  return &goal_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareplan::goal(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.goal)
  return goal_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareplan::add_goal() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.goal)
  return goal_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreCareplan::goal() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.goal)
  return goal_;
}

// repeated .google.fhir.stu3.uscore.UsCoreCareplan.Activity activity = 27;
inline int UsCoreCareplan::activity_size() const {
  return activity_.size();
}
inline void UsCoreCareplan::clear_activity() {
  activity_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreCareplan_Activity* UsCoreCareplan::mutable_activity(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.activity)
  return activity_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreCareplan_Activity >*
UsCoreCareplan::mutable_activity() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.activity)
  return &activity_;
}
inline const ::google::fhir::stu3::uscore::UsCoreCareplan_Activity& UsCoreCareplan::activity(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.activity)
  return activity_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreCareplan_Activity* UsCoreCareplan::add_activity() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.activity)
  return activity_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreCareplan_Activity >&
UsCoreCareplan::activity() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.activity)
  return activity_;
}

// repeated .google.fhir.stu3.proto.Annotation note = 28;
inline int UsCoreCareplan::note_size() const {
  return note_.size();
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreCareplan::mutable_note(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareplan.note)
  return note_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
UsCoreCareplan::mutable_note() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareplan.note)
  return &note_;
}
inline const ::google::fhir::stu3::proto::Annotation& UsCoreCareplan::note(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareplan.note)
  return note_.Get(index);
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreCareplan::add_note() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareplan.note)
  return note_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
UsCoreCareplan::note() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareplan.note)
  return note_;
}

// -------------------------------------------------------------------

// UsCoreCareteam_Participant

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreCareteam_Participant::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCareteam_Participant::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCareteam_Participant::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.Participant.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreCareteam_Participant::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareteam.Participant.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreCareteam_Participant::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.Participant.id)
  return id_;
}
inline void UsCoreCareteam_Participant::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareteam.Participant.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreCareteam_Participant::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareteam_Participant::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.Participant.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreCareteam_Participant::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareteam.Participant.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreCareteam_Participant::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.Participant.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareteam_Participant::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareteam.Participant.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreCareteam_Participant::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareteam.Participant.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreCareteam_Participant::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareteam_Participant::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.Participant.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreCareteam_Participant::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareteam.Participant.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreCareteam_Participant::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.Participant.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareteam_Participant::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareteam.Participant.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreCareteam_Participant::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareteam.Participant.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.CodeableConcept role = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreCareteam_Participant::has_role() const {
  return this != internal_default_instance() && role_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCareteam_Participant::_internal_role() const {
  return *role_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCareteam_Participant::role() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = role_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.Participant.role)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCareteam_Participant::release_role() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareteam.Participant.role)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = role_;
  role_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCareteam_Participant::mutable_role() {
  
  if (role_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    role_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.Participant.role)
  return role_;
}
inline void UsCoreCareteam_Participant::set_allocated_role(::google::fhir::stu3::proto::CodeableConcept* role) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(role_);
  }
  if (role) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      role = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, role, submessage_arena);
    }
    
  } else {
    
  }
  role_ = role;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareteam.Participant.role)
}

// .google.fhir.stu3.proto.Reference member = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
inline bool UsCoreCareteam_Participant::has_member() const {
  return this != internal_default_instance() && member_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareteam_Participant::_internal_member() const {
  return *member_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareteam_Participant::member() const {
  const ::google::fhir::stu3::proto::Reference* p = member_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.Participant.member)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareteam_Participant::release_member() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareteam.Participant.member)
  
  ::google::fhir::stu3::proto::Reference* temp = member_;
  member_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareteam_Participant::mutable_member() {
  
  if (member_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    member_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.Participant.member)
  return member_;
}
inline void UsCoreCareteam_Participant::set_allocated_member(::google::fhir::stu3::proto::Reference* member) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(member_);
  }
  if (member) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      member = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, member, submessage_arena);
    }
    
  } else {
    
  }
  member_ = member;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareteam.Participant.member)
}

// .google.fhir.stu3.proto.Reference on_behalf_of = 6 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
inline bool UsCoreCareteam_Participant::has_on_behalf_of() const {
  return this != internal_default_instance() && on_behalf_of_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareteam_Participant::_internal_on_behalf_of() const {
  return *on_behalf_of_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareteam_Participant::on_behalf_of() const {
  const ::google::fhir::stu3::proto::Reference* p = on_behalf_of_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.Participant.on_behalf_of)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareteam_Participant::release_on_behalf_of() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareteam.Participant.on_behalf_of)
  
  ::google::fhir::stu3::proto::Reference* temp = on_behalf_of_;
  on_behalf_of_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareteam_Participant::mutable_on_behalf_of() {
  
  if (on_behalf_of_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    on_behalf_of_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.Participant.on_behalf_of)
  return on_behalf_of_;
}
inline void UsCoreCareteam_Participant::set_allocated_on_behalf_of(::google::fhir::stu3::proto::Reference* on_behalf_of) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(on_behalf_of_);
  }
  if (on_behalf_of) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      on_behalf_of = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, on_behalf_of, submessage_arena);
    }
    
  } else {
    
  }
  on_behalf_of_ = on_behalf_of;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareteam.Participant.on_behalf_of)
}

// .google.fhir.stu3.proto.Period period = 7;
inline bool UsCoreCareteam_Participant::has_period() const {
  return this != internal_default_instance() && period_ != NULL;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreCareteam_Participant::_internal_period() const {
  return *period_;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreCareteam_Participant::period() const {
  const ::google::fhir::stu3::proto::Period* p = period_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.Participant.period)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Period*>(
      &::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* UsCoreCareteam_Participant::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareteam.Participant.period)
  
  ::google::fhir::stu3::proto::Period* temp = period_;
  period_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Period* UsCoreCareteam_Participant::mutable_period() {
  
  if (period_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Period>(GetArenaNoVirtual());
    period_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.Participant.period)
  return period_;
}
inline void UsCoreCareteam_Participant::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(period_);
  }
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    
  } else {
    
  }
  period_ = period;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareteam.Participant.period)
}

// -------------------------------------------------------------------

// UsCoreCareteam

// .google.fhir.stu3.proto.Id id = 1;
inline bool UsCoreCareteam::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreCareteam::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreCareteam::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* UsCoreCareteam::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareteam.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* UsCoreCareteam::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.id)
  return id_;
}
inline void UsCoreCareteam::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareteam.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool UsCoreCareteam::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreCareteam::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreCareteam::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* UsCoreCareteam::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareteam.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* UsCoreCareteam::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.meta)
  return meta_;
}
inline void UsCoreCareteam::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareteam.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool UsCoreCareteam::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreCareteam::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreCareteam::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreCareteam::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareteam.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreCareteam::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.implicit_rules)
  return implicit_rules_;
}
inline void UsCoreCareteam::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareteam.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool UsCoreCareteam::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreCareteam::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreCareteam::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreCareteam::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareteam.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreCareteam::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.language)
  return language_;
}
inline void UsCoreCareteam::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareteam.language)
}

// .google.fhir.stu3.proto.Narrative text = 5;
inline bool UsCoreCareteam::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreCareteam::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreCareteam::text() const {
  const ::google::fhir::stu3::proto::Narrative* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Narrative*>(
      &::google::fhir::stu3::proto::_Narrative_default_instance_);
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreCareteam::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareteam.text)
  
  ::google::fhir::stu3::proto::Narrative* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreCareteam::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.text)
  return text_;
}
inline void UsCoreCareteam::set_allocated_text(::google::fhir::stu3::proto::Narrative* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareteam.text)
}

// repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
inline int UsCoreCareteam::contained_size() const {
  return contained_.size();
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreCareteam::mutable_contained(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.contained)
  return contained_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
UsCoreCareteam::mutable_contained() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareteam.contained)
  return &contained_;
}
inline const ::google::fhir::stu3::proto::ContainedResource& UsCoreCareteam::contained(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.contained)
  return contained_.Get(index);
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreCareteam::add_contained() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareteam.contained)
  return contained_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
UsCoreCareteam::contained() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareteam.contained)
  return contained_;
}

// repeated .google.fhir.stu3.proto.Extension extension = 7;
inline int UsCoreCareteam::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareteam::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreCareteam::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareteam.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreCareteam::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareteam::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareteam.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreCareteam::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareteam.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
inline int UsCoreCareteam::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareteam::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreCareteam::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareteam.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreCareteam::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCareteam::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareteam.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreCareteam::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareteam.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.Identifier identifier = 9;
inline int UsCoreCareteam::identifier_size() const {
  return identifier_.size();
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreCareteam::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.identifier)
  return identifier_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
UsCoreCareteam::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareteam.identifier)
  return &identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCoreCareteam::identifier(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.identifier)
  return identifier_.Get(index);
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreCareteam::add_identifier() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareteam.identifier)
  return identifier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
UsCoreCareteam::identifier() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareteam.identifier)
  return identifier_;
}

// .google.fhir.stu3.proto.CareTeamStatusCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreCareteam::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::fhir::stu3::proto::CareTeamStatusCode& UsCoreCareteam::_internal_status() const {
  return *status_;
}
inline const ::google::fhir::stu3::proto::CareTeamStatusCode& UsCoreCareteam::status() const {
  const ::google::fhir::stu3::proto::CareTeamStatusCode* p = status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CareTeamStatusCode*>(
      &::google::fhir::stu3::proto::_CareTeamStatusCode_default_instance_);
}
inline ::google::fhir::stu3::proto::CareTeamStatusCode* UsCoreCareteam::release_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareteam.status)
  
  ::google::fhir::stu3::proto::CareTeamStatusCode* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CareTeamStatusCode* UsCoreCareteam::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CareTeamStatusCode>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.status)
  return status_;
}
inline void UsCoreCareteam::set_allocated_status(::google::fhir::stu3::proto::CareTeamStatusCode* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareteam.status)
}

// repeated .google.fhir.stu3.proto.CodeableConcept category = 11;
inline int UsCoreCareteam::category_size() const {
  return category_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCareteam::mutable_category(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.category)
  return category_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreCareteam::mutable_category() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareteam.category)
  return &category_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCareteam::category(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.category)
  return category_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCareteam::add_category() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareteam.category)
  return category_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreCareteam::category() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareteam.category)
  return category_;
}

// .google.fhir.stu3.proto.String name = 12;
inline bool UsCoreCareteam::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCareteam::_internal_name() const {
  return *name_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCareteam::name() const {
  const ::google::fhir::stu3::proto::String* p = name_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.name)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreCareteam::release_name() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareteam.name)
  
  ::google::fhir::stu3::proto::String* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreCareteam::mutable_name() {
  
  if (name_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.name)
  return name_;
}
inline void UsCoreCareteam::set_allocated_name(::google::fhir::stu3::proto::String* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareteam.name)
}

// .google.fhir.stu3.proto.Reference subject = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
inline bool UsCoreCareteam::has_subject() const {
  return this != internal_default_instance() && subject_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareteam::_internal_subject() const {
  return *subject_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareteam::subject() const {
  const ::google::fhir::stu3::proto::Reference* p = subject_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.subject)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareteam::release_subject() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareteam.subject)
  
  ::google::fhir::stu3::proto::Reference* temp = subject_;
  subject_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareteam::mutable_subject() {
  
  if (subject_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    subject_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.subject)
  return subject_;
}
inline void UsCoreCareteam::set_allocated_subject(::google::fhir::stu3::proto::Reference* subject) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(subject_);
  }
  if (subject) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      subject = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, subject, submessage_arena);
    }
    
  } else {
    
  }
  subject_ = subject;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareteam.subject)
}

// .google.fhir.stu3.proto.Reference context = 14 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
inline bool UsCoreCareteam::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareteam::_internal_context() const {
  return *context_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareteam::context() const {
  const ::google::fhir::stu3::proto::Reference* p = context_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.context)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareteam::release_context() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareteam.context)
  
  ::google::fhir::stu3::proto::Reference* temp = context_;
  context_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareteam::mutable_context() {
  
  if (context_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    context_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.context)
  return context_;
}
inline void UsCoreCareteam::set_allocated_context(::google::fhir::stu3::proto::Reference* context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(context_);
  }
  if (context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareteam.context)
}

// .google.fhir.stu3.proto.Period period = 15;
inline bool UsCoreCareteam::has_period() const {
  return this != internal_default_instance() && period_ != NULL;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreCareteam::_internal_period() const {
  return *period_;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreCareteam::period() const {
  const ::google::fhir::stu3::proto::Period* p = period_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.period)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Period*>(
      &::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* UsCoreCareteam::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCareteam.period)
  
  ::google::fhir::stu3::proto::Period* temp = period_;
  period_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Period* UsCoreCareteam::mutable_period() {
  
  if (period_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Period>(GetArenaNoVirtual());
    period_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.period)
  return period_;
}
inline void UsCoreCareteam::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(period_);
  }
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    
  } else {
    
  }
  period_ = period;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCareteam.period)
}

// repeated .google.fhir.stu3.uscore.UsCoreCareteam.Participant participant = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline int UsCoreCareteam::participant_size() const {
  return participant_.size();
}
inline void UsCoreCareteam::clear_participant() {
  participant_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreCareteam_Participant* UsCoreCareteam::mutable_participant(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.participant)
  return participant_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreCareteam_Participant >*
UsCoreCareteam::mutable_participant() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareteam.participant)
  return &participant_;
}
inline const ::google::fhir::stu3::uscore::UsCoreCareteam_Participant& UsCoreCareteam::participant(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.participant)
  return participant_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreCareteam_Participant* UsCoreCareteam::add_participant() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareteam.participant)
  return participant_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreCareteam_Participant >&
UsCoreCareteam::participant() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareteam.participant)
  return participant_;
}

// repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 17;
inline int UsCoreCareteam::reason_code_size() const {
  return reason_code_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCareteam::mutable_reason_code(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.reason_code)
  return reason_code_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreCareteam::mutable_reason_code() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareteam.reason_code)
  return &reason_code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCareteam::reason_code(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.reason_code)
  return reason_code_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCareteam::add_reason_code() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareteam.reason_code)
  return reason_code_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreCareteam::reason_code() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareteam.reason_code)
  return reason_code_;
}

// repeated .google.fhir.stu3.proto.Reference reason_reference = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
inline int UsCoreCareteam::reason_reference_size() const {
  return reason_reference_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareteam::mutable_reason_reference(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.reason_reference)
  return reason_reference_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreCareteam::mutable_reason_reference() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareteam.reason_reference)
  return &reason_reference_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareteam::reason_reference(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.reason_reference)
  return reason_reference_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareteam::add_reason_reference() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareteam.reason_reference)
  return reason_reference_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreCareteam::reason_reference() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareteam.reason_reference)
  return reason_reference_;
}

// repeated .google.fhir.stu3.proto.Reference managing_organization = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
inline int UsCoreCareteam::managing_organization_size() const {
  return managing_organization_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareteam::mutable_managing_organization(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.managing_organization)
  return managing_organization_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreCareteam::mutable_managing_organization() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareteam.managing_organization)
  return &managing_organization_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCareteam::managing_organization(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.managing_organization)
  return managing_organization_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCareteam::add_managing_organization() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareteam.managing_organization)
  return managing_organization_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreCareteam::managing_organization() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareteam.managing_organization)
  return managing_organization_;
}

// repeated .google.fhir.stu3.proto.Annotation note = 20;
inline int UsCoreCareteam::note_size() const {
  return note_.size();
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreCareteam::mutable_note(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCareteam.note)
  return note_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
UsCoreCareteam::mutable_note() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCareteam.note)
  return &note_;
}
inline const ::google::fhir::stu3::proto::Annotation& UsCoreCareteam::note(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCareteam.note)
  return note_.Get(index);
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreCareteam::add_note() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCareteam.note)
  return note_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
UsCoreCareteam::note() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCareteam.note)
  return note_;
}

// -------------------------------------------------------------------

// UsCoreCondition_Onset

// .google.fhir.stu3.proto.DateTime date_time = 1;
inline bool UsCoreCondition_Onset::has_date_time() const {
  return onset_case() == kDateTime;
}
inline void UsCoreCondition_Onset::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreCondition_Onset::_internal_date_time() const {
  return *onset_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreCondition_Onset::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.Onset.date_time)
  if (has_date_time()) {
    clear_has_onset();
      ::google::fhir::stu3::proto::DateTime* temp = onset_.date_time_;
    onset_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreCondition_Onset::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Onset.date_time)
  return has_date_time()
      ? *onset_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreCondition_Onset::mutable_date_time() {
  if (!has_date_time()) {
    clear_onset();
    set_has_date_time();
    onset_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Onset.date_time)
  return onset_.date_time_;
}

// .google.fhir.stu3.proto.Age age = 2;
inline bool UsCoreCondition_Onset::has_age() const {
  return onset_case() == kAge;
}
inline void UsCoreCondition_Onset::set_has_age() {
  _oneof_case_[0] = kAge;
}
inline const ::google::fhir::stu3::proto::Age& UsCoreCondition_Onset::_internal_age() const {
  return *onset_.age_;
}
inline ::google::fhir::stu3::proto::Age* UsCoreCondition_Onset::release_age() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.Onset.age)
  if (has_age()) {
    clear_has_onset();
      ::google::fhir::stu3::proto::Age* temp = onset_.age_;
    onset_.age_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Age& UsCoreCondition_Onset::age() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Onset.age)
  return has_age()
      ? *onset_.age_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Age*>(&::google::fhir::stu3::proto::_Age_default_instance_);
}
inline ::google::fhir::stu3::proto::Age* UsCoreCondition_Onset::mutable_age() {
  if (!has_age()) {
    clear_onset();
    set_has_age();
    onset_.age_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Age >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Onset.age)
  return onset_.age_;
}

// .google.fhir.stu3.proto.Period period = 3;
inline bool UsCoreCondition_Onset::has_period() const {
  return onset_case() == kPeriod;
}
inline void UsCoreCondition_Onset::set_has_period() {
  _oneof_case_[0] = kPeriod;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreCondition_Onset::_internal_period() const {
  return *onset_.period_;
}
inline ::google::fhir::stu3::proto::Period* UsCoreCondition_Onset::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.Onset.period)
  if (has_period()) {
    clear_has_onset();
      ::google::fhir::stu3::proto::Period* temp = onset_.period_;
    onset_.period_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Period& UsCoreCondition_Onset::period() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Onset.period)
  return has_period()
      ? *onset_.period_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Period*>(&::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* UsCoreCondition_Onset::mutable_period() {
  if (!has_period()) {
    clear_onset();
    set_has_period();
    onset_.period_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Period >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Onset.period)
  return onset_.period_;
}

// .google.fhir.stu3.proto.Range range = 4;
inline bool UsCoreCondition_Onset::has_range() const {
  return onset_case() == kRange;
}
inline void UsCoreCondition_Onset::set_has_range() {
  _oneof_case_[0] = kRange;
}
inline const ::google::fhir::stu3::proto::Range& UsCoreCondition_Onset::_internal_range() const {
  return *onset_.range_;
}
inline ::google::fhir::stu3::proto::Range* UsCoreCondition_Onset::release_range() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.Onset.range)
  if (has_range()) {
    clear_has_onset();
      ::google::fhir::stu3::proto::Range* temp = onset_.range_;
    onset_.range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Range& UsCoreCondition_Onset::range() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Onset.range)
  return has_range()
      ? *onset_.range_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Range*>(&::google::fhir::stu3::proto::_Range_default_instance_);
}
inline ::google::fhir::stu3::proto::Range* UsCoreCondition_Onset::mutable_range() {
  if (!has_range()) {
    clear_onset();
    set_has_range();
    onset_.range_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Range >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Onset.range)
  return onset_.range_;
}

// .google.fhir.stu3.proto.String string_value = 5[json_name = "string"];
inline bool UsCoreCondition_Onset::has_string_value() const {
  return onset_case() == kStringValue;
}
inline void UsCoreCondition_Onset::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCondition_Onset::_internal_string_value() const {
  return *onset_.string_value_;
}
inline ::google::fhir::stu3::proto::String* UsCoreCondition_Onset::release_string_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.Onset.string_value)
  if (has_string_value()) {
    clear_has_onset();
      ::google::fhir::stu3::proto::String* temp = onset_.string_value_;
    onset_.string_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::String& UsCoreCondition_Onset::string_value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Onset.string_value)
  return has_string_value()
      ? *onset_.string_value_
      : *reinterpret_cast< ::google::fhir::stu3::proto::String*>(&::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreCondition_Onset::mutable_string_value() {
  if (!has_string_value()) {
    clear_onset();
    set_has_string_value();
    onset_.string_value_ = CreateMaybeMessage< ::google::fhir::stu3::proto::String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Onset.string_value)
  return onset_.string_value_;
}

inline bool UsCoreCondition_Onset::has_onset() const {
  return onset_case() != ONSET_NOT_SET;
}
inline void UsCoreCondition_Onset::clear_has_onset() {
  _oneof_case_[0] = ONSET_NOT_SET;
}
inline UsCoreCondition_Onset::OnsetCase UsCoreCondition_Onset::onset_case() const {
  return UsCoreCondition_Onset::OnsetCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreCondition_Abatement

// .google.fhir.stu3.proto.DateTime date_time = 1;
inline bool UsCoreCondition_Abatement::has_date_time() const {
  return abatement_case() == kDateTime;
}
inline void UsCoreCondition_Abatement::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreCondition_Abatement::_internal_date_time() const {
  return *abatement_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreCondition_Abatement::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.Abatement.date_time)
  if (has_date_time()) {
    clear_has_abatement();
      ::google::fhir::stu3::proto::DateTime* temp = abatement_.date_time_;
    abatement_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreCondition_Abatement::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Abatement.date_time)
  return has_date_time()
      ? *abatement_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreCondition_Abatement::mutable_date_time() {
  if (!has_date_time()) {
    clear_abatement();
    set_has_date_time();
    abatement_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Abatement.date_time)
  return abatement_.date_time_;
}

// .google.fhir.stu3.proto.Age age = 2;
inline bool UsCoreCondition_Abatement::has_age() const {
  return abatement_case() == kAge;
}
inline void UsCoreCondition_Abatement::set_has_age() {
  _oneof_case_[0] = kAge;
}
inline const ::google::fhir::stu3::proto::Age& UsCoreCondition_Abatement::_internal_age() const {
  return *abatement_.age_;
}
inline ::google::fhir::stu3::proto::Age* UsCoreCondition_Abatement::release_age() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.Abatement.age)
  if (has_age()) {
    clear_has_abatement();
      ::google::fhir::stu3::proto::Age* temp = abatement_.age_;
    abatement_.age_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Age& UsCoreCondition_Abatement::age() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Abatement.age)
  return has_age()
      ? *abatement_.age_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Age*>(&::google::fhir::stu3::proto::_Age_default_instance_);
}
inline ::google::fhir::stu3::proto::Age* UsCoreCondition_Abatement::mutable_age() {
  if (!has_age()) {
    clear_abatement();
    set_has_age();
    abatement_.age_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Age >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Abatement.age)
  return abatement_.age_;
}

// .google.fhir.stu3.proto.Boolean boolean = 3;
inline bool UsCoreCondition_Abatement::has_boolean() const {
  return abatement_case() == kBoolean;
}
inline void UsCoreCondition_Abatement::set_has_boolean() {
  _oneof_case_[0] = kBoolean;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreCondition_Abatement::_internal_boolean() const {
  return *abatement_.boolean_;
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreCondition_Abatement::release_boolean() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.Abatement.boolean)
  if (has_boolean()) {
    clear_has_abatement();
      ::google::fhir::stu3::proto::Boolean* temp = abatement_.boolean_;
    abatement_.boolean_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreCondition_Abatement::boolean() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Abatement.boolean)
  return has_boolean()
      ? *abatement_.boolean_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Boolean*>(&::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreCondition_Abatement::mutable_boolean() {
  if (!has_boolean()) {
    clear_abatement();
    set_has_boolean();
    abatement_.boolean_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Boolean >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Abatement.boolean)
  return abatement_.boolean_;
}

// .google.fhir.stu3.proto.Period period = 4;
inline bool UsCoreCondition_Abatement::has_period() const {
  return abatement_case() == kPeriod;
}
inline void UsCoreCondition_Abatement::set_has_period() {
  _oneof_case_[0] = kPeriod;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreCondition_Abatement::_internal_period() const {
  return *abatement_.period_;
}
inline ::google::fhir::stu3::proto::Period* UsCoreCondition_Abatement::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.Abatement.period)
  if (has_period()) {
    clear_has_abatement();
      ::google::fhir::stu3::proto::Period* temp = abatement_.period_;
    abatement_.period_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Period& UsCoreCondition_Abatement::period() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Abatement.period)
  return has_period()
      ? *abatement_.period_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Period*>(&::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* UsCoreCondition_Abatement::mutable_period() {
  if (!has_period()) {
    clear_abatement();
    set_has_period();
    abatement_.period_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Period >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Abatement.period)
  return abatement_.period_;
}

// .google.fhir.stu3.proto.Range range = 5;
inline bool UsCoreCondition_Abatement::has_range() const {
  return abatement_case() == kRange;
}
inline void UsCoreCondition_Abatement::set_has_range() {
  _oneof_case_[0] = kRange;
}
inline const ::google::fhir::stu3::proto::Range& UsCoreCondition_Abatement::_internal_range() const {
  return *abatement_.range_;
}
inline ::google::fhir::stu3::proto::Range* UsCoreCondition_Abatement::release_range() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.Abatement.range)
  if (has_range()) {
    clear_has_abatement();
      ::google::fhir::stu3::proto::Range* temp = abatement_.range_;
    abatement_.range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Range& UsCoreCondition_Abatement::range() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Abatement.range)
  return has_range()
      ? *abatement_.range_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Range*>(&::google::fhir::stu3::proto::_Range_default_instance_);
}
inline ::google::fhir::stu3::proto::Range* UsCoreCondition_Abatement::mutable_range() {
  if (!has_range()) {
    clear_abatement();
    set_has_range();
    abatement_.range_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Range >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Abatement.range)
  return abatement_.range_;
}

// .google.fhir.stu3.proto.String string_value = 6[json_name = "string"];
inline bool UsCoreCondition_Abatement::has_string_value() const {
  return abatement_case() == kStringValue;
}
inline void UsCoreCondition_Abatement::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCondition_Abatement::_internal_string_value() const {
  return *abatement_.string_value_;
}
inline ::google::fhir::stu3::proto::String* UsCoreCondition_Abatement::release_string_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.Abatement.string_value)
  if (has_string_value()) {
    clear_has_abatement();
      ::google::fhir::stu3::proto::String* temp = abatement_.string_value_;
    abatement_.string_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::String& UsCoreCondition_Abatement::string_value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Abatement.string_value)
  return has_string_value()
      ? *abatement_.string_value_
      : *reinterpret_cast< ::google::fhir::stu3::proto::String*>(&::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreCondition_Abatement::mutable_string_value() {
  if (!has_string_value()) {
    clear_abatement();
    set_has_string_value();
    abatement_.string_value_ = CreateMaybeMessage< ::google::fhir::stu3::proto::String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Abatement.string_value)
  return abatement_.string_value_;
}

inline bool UsCoreCondition_Abatement::has_abatement() const {
  return abatement_case() != ABATEMENT_NOT_SET;
}
inline void UsCoreCondition_Abatement::clear_has_abatement() {
  _oneof_case_[0] = ABATEMENT_NOT_SET;
}
inline UsCoreCondition_Abatement::AbatementCase UsCoreCondition_Abatement::abatement_case() const {
  return UsCoreCondition_Abatement::AbatementCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreCondition_Stage

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreCondition_Stage::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCondition_Stage::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCondition_Stage::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Stage.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreCondition_Stage::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.Stage.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreCondition_Stage::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Stage.id)
  return id_;
}
inline void UsCoreCondition_Stage::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.Stage.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreCondition_Stage::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCondition_Stage::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Stage.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreCondition_Stage::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCondition.Stage.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreCondition_Stage::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Stage.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCondition_Stage::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCondition.Stage.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreCondition_Stage::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCondition.Stage.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreCondition_Stage::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCondition_Stage::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Stage.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreCondition_Stage::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCondition.Stage.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreCondition_Stage::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Stage.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCondition_Stage::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCondition.Stage.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreCondition_Stage::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCondition.Stage.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.CodeableConcept summary = 4;
inline bool UsCoreCondition_Stage::has_summary() const {
  return this != internal_default_instance() && summary_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCondition_Stage::_internal_summary() const {
  return *summary_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCondition_Stage::summary() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = summary_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Stage.summary)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCondition_Stage::release_summary() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.Stage.summary)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = summary_;
  summary_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCondition_Stage::mutable_summary() {
  
  if (summary_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Stage.summary)
  return summary_;
}
inline void UsCoreCondition_Stage::set_allocated_summary(::google::fhir::stu3::proto::CodeableConcept* summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(summary_);
  }
  if (summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, summary, submessage_arena);
    }
    
  } else {
    
  }
  summary_ = summary;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.Stage.summary)
}

// repeated .google.fhir.stu3.proto.Reference assessment = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ClinicalImpression", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DiagnosticReport", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
inline int UsCoreCondition_Stage::assessment_size() const {
  return assessment_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCondition_Stage::mutable_assessment(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Stage.assessment)
  return assessment_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreCondition_Stage::mutable_assessment() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCondition.Stage.assessment)
  return &assessment_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCondition_Stage::assessment(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Stage.assessment)
  return assessment_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCondition_Stage::add_assessment() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCondition.Stage.assessment)
  return assessment_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreCondition_Stage::assessment() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCondition.Stage.assessment)
  return assessment_;
}

// -------------------------------------------------------------------

// UsCoreCondition_Evidence

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreCondition_Evidence::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCondition_Evidence::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreCondition_Evidence::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Evidence.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreCondition_Evidence::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.Evidence.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreCondition_Evidence::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Evidence.id)
  return id_;
}
inline void UsCoreCondition_Evidence::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.Evidence.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreCondition_Evidence::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCondition_Evidence::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Evidence.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreCondition_Evidence::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCondition.Evidence.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreCondition_Evidence::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Evidence.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCondition_Evidence::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCondition.Evidence.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreCondition_Evidence::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCondition.Evidence.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreCondition_Evidence::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCondition_Evidence::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Evidence.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreCondition_Evidence::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCondition.Evidence.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreCondition_Evidence::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Evidence.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCondition_Evidence::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCondition.Evidence.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreCondition_Evidence::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCondition.Evidence.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.CodeableConcept code = 4;
inline int UsCoreCondition_Evidence::code_size() const {
  return code_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCondition_Evidence::mutable_code(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Evidence.code)
  return code_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreCondition_Evidence::mutable_code() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCondition.Evidence.code)
  return &code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCondition_Evidence::code(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Evidence.code)
  return code_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCondition_Evidence::add_code() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCondition.Evidence.code)
  return code_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreCondition_Evidence::code() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCondition.Evidence.code)
  return code_;
}

// repeated .google.fhir.stu3.proto.Reference detail = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
inline int UsCoreCondition_Evidence::detail_size() const {
  return detail_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCondition_Evidence::mutable_detail(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.Evidence.detail)
  return detail_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreCondition_Evidence::mutable_detail() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCondition.Evidence.detail)
  return &detail_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCondition_Evidence::detail(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.Evidence.detail)
  return detail_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCondition_Evidence::add_detail() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCondition.Evidence.detail)
  return detail_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreCondition_Evidence::detail() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCondition.Evidence.detail)
  return detail_;
}

// -------------------------------------------------------------------

// UsCoreCondition

// .google.fhir.stu3.proto.Id id = 1;
inline bool UsCoreCondition::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreCondition::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreCondition::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* UsCoreCondition::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* UsCoreCondition::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.id)
  return id_;
}
inline void UsCoreCondition::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool UsCoreCondition::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreCondition::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreCondition::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* UsCoreCondition::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* UsCoreCondition::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.meta)
  return meta_;
}
inline void UsCoreCondition::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool UsCoreCondition::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreCondition::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreCondition::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreCondition::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreCondition::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.implicit_rules)
  return implicit_rules_;
}
inline void UsCoreCondition::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool UsCoreCondition::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreCondition::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreCondition::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreCondition::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreCondition::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.language)
  return language_;
}
inline void UsCoreCondition::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.language)
}

// .google.fhir.stu3.proto.Narrative text = 5;
inline bool UsCoreCondition::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreCondition::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreCondition::text() const {
  const ::google::fhir::stu3::proto::Narrative* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Narrative*>(
      &::google::fhir::stu3::proto::_Narrative_default_instance_);
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreCondition::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.text)
  
  ::google::fhir::stu3::proto::Narrative* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreCondition::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.text)
  return text_;
}
inline void UsCoreCondition::set_allocated_text(::google::fhir::stu3::proto::Narrative* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.text)
}

// repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
inline int UsCoreCondition::contained_size() const {
  return contained_.size();
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreCondition::mutable_contained(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.contained)
  return contained_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
UsCoreCondition::mutable_contained() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCondition.contained)
  return &contained_;
}
inline const ::google::fhir::stu3::proto::ContainedResource& UsCoreCondition::contained(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.contained)
  return contained_.Get(index);
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreCondition::add_contained() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCondition.contained)
  return contained_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
UsCoreCondition::contained() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCondition.contained)
  return contained_;
}

// repeated .google.fhir.stu3.proto.Extension extension = 7;
inline int UsCoreCondition::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCondition::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreCondition::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCondition.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreCondition::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCondition::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCondition.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreCondition::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCondition.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
inline int UsCoreCondition::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCondition::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreCondition::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCondition.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreCondition::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreCondition::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCondition.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreCondition::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCondition.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.Identifier identifier = 9;
inline int UsCoreCondition::identifier_size() const {
  return identifier_.size();
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreCondition::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.identifier)
  return identifier_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
UsCoreCondition::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCondition.identifier)
  return &identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCoreCondition::identifier(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.identifier)
  return identifier_.Get(index);
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreCondition::add_identifier() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCondition.identifier)
  return identifier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
UsCoreCondition::identifier() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCondition.identifier)
  return identifier_;
}

// .google.fhir.stu3.proto.ConditionClinicalStatusCodesCode clinical_status = 10;
inline bool UsCoreCondition::has_clinical_status() const {
  return this != internal_default_instance() && clinical_status_ != NULL;
}
inline const ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode& UsCoreCondition::_internal_clinical_status() const {
  return *clinical_status_;
}
inline const ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode& UsCoreCondition::clinical_status() const {
  const ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode* p = clinical_status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.clinical_status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode*>(
      &::google::fhir::stu3::proto::_ConditionClinicalStatusCodesCode_default_instance_);
}
inline ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode* UsCoreCondition::release_clinical_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.clinical_status)
  
  ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode* temp = clinical_status_;
  clinical_status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode* UsCoreCondition::mutable_clinical_status() {
  
  if (clinical_status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode>(GetArenaNoVirtual());
    clinical_status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.clinical_status)
  return clinical_status_;
}
inline void UsCoreCondition::set_allocated_clinical_status(::google::fhir::stu3::proto::ConditionClinicalStatusCodesCode* clinical_status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(clinical_status_);
  }
  if (clinical_status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      clinical_status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clinical_status, submessage_arena);
    }
    
  } else {
    
  }
  clinical_status_ = clinical_status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.clinical_status)
}

// .google.fhir.stu3.proto.ConditionVerificationStatusCode verification_status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreCondition::has_verification_status() const {
  return this != internal_default_instance() && verification_status_ != NULL;
}
inline const ::google::fhir::stu3::proto::ConditionVerificationStatusCode& UsCoreCondition::_internal_verification_status() const {
  return *verification_status_;
}
inline const ::google::fhir::stu3::proto::ConditionVerificationStatusCode& UsCoreCondition::verification_status() const {
  const ::google::fhir::stu3::proto::ConditionVerificationStatusCode* p = verification_status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.verification_status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ConditionVerificationStatusCode*>(
      &::google::fhir::stu3::proto::_ConditionVerificationStatusCode_default_instance_);
}
inline ::google::fhir::stu3::proto::ConditionVerificationStatusCode* UsCoreCondition::release_verification_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.verification_status)
  
  ::google::fhir::stu3::proto::ConditionVerificationStatusCode* temp = verification_status_;
  verification_status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ConditionVerificationStatusCode* UsCoreCondition::mutable_verification_status() {
  
  if (verification_status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ConditionVerificationStatusCode>(GetArenaNoVirtual());
    verification_status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.verification_status)
  return verification_status_;
}
inline void UsCoreCondition::set_allocated_verification_status(::google::fhir::stu3::proto::ConditionVerificationStatusCode* verification_status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(verification_status_);
  }
  if (verification_status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      verification_status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, verification_status, submessage_arena);
    }
    
  } else {
    
  }
  verification_status_ = verification_status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.verification_status)
}

// repeated .google.fhir.stu3.proto.CodeableConcept category = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline int UsCoreCondition::category_size() const {
  return category_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCondition::mutable_category(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.category)
  return category_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreCondition::mutable_category() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCondition.category)
  return &category_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCondition::category(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.category)
  return category_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCondition::add_category() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCondition.category)
  return category_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreCondition::category() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCondition.category)
  return category_;
}

// .google.fhir.stu3.proto.CodeableConcept severity = 13;
inline bool UsCoreCondition::has_severity() const {
  return this != internal_default_instance() && severity_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCondition::_internal_severity() const {
  return *severity_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCondition::severity() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = severity_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.severity)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCondition::release_severity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.severity)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = severity_;
  severity_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCondition::mutable_severity() {
  
  if (severity_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    severity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.severity)
  return severity_;
}
inline void UsCoreCondition::set_allocated_severity(::google::fhir::stu3::proto::CodeableConcept* severity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(severity_);
  }
  if (severity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      severity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, severity, submessage_arena);
    }
    
  } else {
    
  }
  severity_ = severity;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.severity)
}

// .google.fhir.stu3.proto.CodeableConcept code = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreCondition::has_code() const {
  return this != internal_default_instance() && code_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCondition::_internal_code() const {
  return *code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCondition::code() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = code_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.code)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCondition::release_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.code)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = code_;
  code_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCondition::mutable_code() {
  
  if (code_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    code_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.code)
  return code_;
}
inline void UsCoreCondition::set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(code_);
  }
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    
  } else {
    
  }
  code_ = code;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.code)
}

// repeated .google.fhir.stu3.proto.CodeableConcept body_site = 15;
inline int UsCoreCondition::body_site_size() const {
  return body_site_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCondition::mutable_body_site(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.body_site)
  return body_site_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreCondition::mutable_body_site() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCondition.body_site)
  return &body_site_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreCondition::body_site(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.body_site)
  return body_site_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreCondition::add_body_site() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCondition.body_site)
  return body_site_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreCondition::body_site() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCondition.body_site)
  return body_site_;
}

// .google.fhir.stu3.proto.Reference subject = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
inline bool UsCoreCondition::has_subject() const {
  return this != internal_default_instance() && subject_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCondition::_internal_subject() const {
  return *subject_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCondition::subject() const {
  const ::google::fhir::stu3::proto::Reference* p = subject_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.subject)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCondition::release_subject() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.subject)
  
  ::google::fhir::stu3::proto::Reference* temp = subject_;
  subject_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCondition::mutable_subject() {
  
  if (subject_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    subject_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.subject)
  return subject_;
}
inline void UsCoreCondition::set_allocated_subject(::google::fhir::stu3::proto::Reference* subject) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(subject_);
  }
  if (subject) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      subject = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, subject, submessage_arena);
    }
    
  } else {
    
  }
  subject_ = subject;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.subject)
}

// .google.fhir.stu3.proto.Reference context = 17 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
inline bool UsCoreCondition::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCondition::_internal_context() const {
  return *context_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCondition::context() const {
  const ::google::fhir::stu3::proto::Reference* p = context_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.context)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCondition::release_context() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.context)
  
  ::google::fhir::stu3::proto::Reference* temp = context_;
  context_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCondition::mutable_context() {
  
  if (context_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    context_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.context)
  return context_;
}
inline void UsCoreCondition::set_allocated_context(::google::fhir::stu3::proto::Reference* context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(context_);
  }
  if (context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.context)
}

// .google.fhir.stu3.uscore.UsCoreCondition.Onset onset = 18 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreCondition::has_onset() const {
  return this != internal_default_instance() && onset_ != NULL;
}
inline void UsCoreCondition::clear_onset() {
  if (GetArenaNoVirtual() == NULL && onset_ != NULL) {
    delete onset_;
  }
  onset_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreCondition_Onset& UsCoreCondition::_internal_onset() const {
  return *onset_;
}
inline const ::google::fhir::stu3::uscore::UsCoreCondition_Onset& UsCoreCondition::onset() const {
  const ::google::fhir::stu3::uscore::UsCoreCondition_Onset* p = onset_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.onset)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreCondition_Onset*>(
      &::google::fhir::stu3::uscore::_UsCoreCondition_Onset_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreCondition_Onset* UsCoreCondition::release_onset() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.onset)
  
  ::google::fhir::stu3::uscore::UsCoreCondition_Onset* temp = onset_;
  onset_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreCondition_Onset* UsCoreCondition::mutable_onset() {
  
  if (onset_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreCondition_Onset>(GetArenaNoVirtual());
    onset_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.onset)
  return onset_;
}
inline void UsCoreCondition::set_allocated_onset(::google::fhir::stu3::uscore::UsCoreCondition_Onset* onset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete onset_;
  }
  if (onset) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      onset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, onset, submessage_arena);
    }
    
  } else {
    
  }
  onset_ = onset;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.onset)
}

// .google.fhir.stu3.uscore.UsCoreCondition.Abatement abatement = 19 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreCondition::has_abatement() const {
  return this != internal_default_instance() && abatement_ != NULL;
}
inline void UsCoreCondition::clear_abatement() {
  if (GetArenaNoVirtual() == NULL && abatement_ != NULL) {
    delete abatement_;
  }
  abatement_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreCondition_Abatement& UsCoreCondition::_internal_abatement() const {
  return *abatement_;
}
inline const ::google::fhir::stu3::uscore::UsCoreCondition_Abatement& UsCoreCondition::abatement() const {
  const ::google::fhir::stu3::uscore::UsCoreCondition_Abatement* p = abatement_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.abatement)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreCondition_Abatement*>(
      &::google::fhir::stu3::uscore::_UsCoreCondition_Abatement_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreCondition_Abatement* UsCoreCondition::release_abatement() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.abatement)
  
  ::google::fhir::stu3::uscore::UsCoreCondition_Abatement* temp = abatement_;
  abatement_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreCondition_Abatement* UsCoreCondition::mutable_abatement() {
  
  if (abatement_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreCondition_Abatement>(GetArenaNoVirtual());
    abatement_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.abatement)
  return abatement_;
}
inline void UsCoreCondition::set_allocated_abatement(::google::fhir::stu3::uscore::UsCoreCondition_Abatement* abatement) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete abatement_;
  }
  if (abatement) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      abatement = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, abatement, submessage_arena);
    }
    
  } else {
    
  }
  abatement_ = abatement;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.abatement)
}

// .google.fhir.stu3.proto.DateTime asserted_date = 20;
inline bool UsCoreCondition::has_asserted_date() const {
  return this != internal_default_instance() && asserted_date_ != NULL;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreCondition::_internal_asserted_date() const {
  return *asserted_date_;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreCondition::asserted_date() const {
  const ::google::fhir::stu3::proto::DateTime* p = asserted_date_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.asserted_date)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::DateTime*>(
      &::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreCondition::release_asserted_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.asserted_date)
  
  ::google::fhir::stu3::proto::DateTime* temp = asserted_date_;
  asserted_date_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreCondition::mutable_asserted_date() {
  
  if (asserted_date_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::DateTime>(GetArenaNoVirtual());
    asserted_date_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.asserted_date)
  return asserted_date_;
}
inline void UsCoreCondition::set_allocated_asserted_date(::google::fhir::stu3::proto::DateTime* asserted_date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(asserted_date_);
  }
  if (asserted_date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      asserted_date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, asserted_date, submessage_arena);
    }
    
  } else {
    
  }
  asserted_date_ = asserted_date;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.asserted_date)
}

// .google.fhir.stu3.proto.Reference asserter = 21 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
inline bool UsCoreCondition::has_asserter() const {
  return this != internal_default_instance() && asserter_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCondition::_internal_asserter() const {
  return *asserter_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreCondition::asserter() const {
  const ::google::fhir::stu3::proto::Reference* p = asserter_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.asserter)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCondition::release_asserter() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.asserter)
  
  ::google::fhir::stu3::proto::Reference* temp = asserter_;
  asserter_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreCondition::mutable_asserter() {
  
  if (asserter_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    asserter_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.asserter)
  return asserter_;
}
inline void UsCoreCondition::set_allocated_asserter(::google::fhir::stu3::proto::Reference* asserter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(asserter_);
  }
  if (asserter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      asserter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, asserter, submessage_arena);
    }
    
  } else {
    
  }
  asserter_ = asserter;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.asserter)
}

// .google.fhir.stu3.uscore.UsCoreCondition.Stage stage = 22;
inline bool UsCoreCondition::has_stage() const {
  return this != internal_default_instance() && stage_ != NULL;
}
inline void UsCoreCondition::clear_stage() {
  if (GetArenaNoVirtual() == NULL && stage_ != NULL) {
    delete stage_;
  }
  stage_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreCondition_Stage& UsCoreCondition::_internal_stage() const {
  return *stage_;
}
inline const ::google::fhir::stu3::uscore::UsCoreCondition_Stage& UsCoreCondition::stage() const {
  const ::google::fhir::stu3::uscore::UsCoreCondition_Stage* p = stage_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.stage)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreCondition_Stage*>(
      &::google::fhir::stu3::uscore::_UsCoreCondition_Stage_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreCondition_Stage* UsCoreCondition::release_stage() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreCondition.stage)
  
  ::google::fhir::stu3::uscore::UsCoreCondition_Stage* temp = stage_;
  stage_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreCondition_Stage* UsCoreCondition::mutable_stage() {
  
  if (stage_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreCondition_Stage>(GetArenaNoVirtual());
    stage_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.stage)
  return stage_;
}
inline void UsCoreCondition::set_allocated_stage(::google::fhir::stu3::uscore::UsCoreCondition_Stage* stage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete stage_;
  }
  if (stage) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stage, submessage_arena);
    }
    
  } else {
    
  }
  stage_ = stage;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreCondition.stage)
}

// repeated .google.fhir.stu3.uscore.UsCoreCondition.Evidence evidence = 23;
inline int UsCoreCondition::evidence_size() const {
  return evidence_.size();
}
inline void UsCoreCondition::clear_evidence() {
  evidence_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreCondition_Evidence* UsCoreCondition::mutable_evidence(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.evidence)
  return evidence_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreCondition_Evidence >*
UsCoreCondition::mutable_evidence() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCondition.evidence)
  return &evidence_;
}
inline const ::google::fhir::stu3::uscore::UsCoreCondition_Evidence& UsCoreCondition::evidence(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.evidence)
  return evidence_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreCondition_Evidence* UsCoreCondition::add_evidence() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCondition.evidence)
  return evidence_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreCondition_Evidence >&
UsCoreCondition::evidence() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCondition.evidence)
  return evidence_;
}

// repeated .google.fhir.stu3.proto.Annotation note = 24;
inline int UsCoreCondition::note_size() const {
  return note_.size();
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreCondition::mutable_note(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreCondition.note)
  return note_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
UsCoreCondition::mutable_note() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreCondition.note)
  return &note_;
}
inline const ::google::fhir::stu3::proto::Annotation& UsCoreCondition::note(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreCondition.note)
  return note_.Get(index);
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreCondition::add_note() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreCondition.note)
  return note_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
UsCoreCondition::note() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreCondition.note)
  return note_;
}

// -------------------------------------------------------------------

// UsCoreDevice_Udi

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreDevice_Udi::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDevice_Udi::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDevice_Udi::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.Udi.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreDevice_Udi::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.Udi.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreDevice_Udi::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.Udi.id)
  return id_;
}
inline void UsCoreDevice_Udi::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.Udi.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreDevice_Udi::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDevice_Udi::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.Udi.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreDevice_Udi::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDevice.Udi.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreDevice_Udi::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.Udi.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDevice_Udi::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDevice.Udi.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreDevice_Udi::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDevice.Udi.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreDevice_Udi::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDevice_Udi::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.Udi.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreDevice_Udi::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDevice.Udi.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreDevice_Udi::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.Udi.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDevice_Udi::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDevice.Udi.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreDevice_Udi::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDevice.Udi.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.String device_identifier = 4;
inline bool UsCoreDevice_Udi::has_device_identifier() const {
  return this != internal_default_instance() && device_identifier_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDevice_Udi::_internal_device_identifier() const {
  return *device_identifier_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDevice_Udi::device_identifier() const {
  const ::google::fhir::stu3::proto::String* p = device_identifier_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.Udi.device_identifier)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreDevice_Udi::release_device_identifier() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.Udi.device_identifier)
  
  ::google::fhir::stu3::proto::String* temp = device_identifier_;
  device_identifier_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreDevice_Udi::mutable_device_identifier() {
  
  if (device_identifier_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    device_identifier_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.Udi.device_identifier)
  return device_identifier_;
}
inline void UsCoreDevice_Udi::set_allocated_device_identifier(::google::fhir::stu3::proto::String* device_identifier) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_identifier_);
  }
  if (device_identifier) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      device_identifier = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device_identifier, submessage_arena);
    }
    
  } else {
    
  }
  device_identifier_ = device_identifier;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.Udi.device_identifier)
}

// .google.fhir.stu3.proto.String name = 5;
inline bool UsCoreDevice_Udi::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDevice_Udi::_internal_name() const {
  return *name_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDevice_Udi::name() const {
  const ::google::fhir::stu3::proto::String* p = name_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.Udi.name)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreDevice_Udi::release_name() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.Udi.name)
  
  ::google::fhir::stu3::proto::String* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreDevice_Udi::mutable_name() {
  
  if (name_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.Udi.name)
  return name_;
}
inline void UsCoreDevice_Udi::set_allocated_name(::google::fhir::stu3::proto::String* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.Udi.name)
}

// .google.fhir.stu3.proto.Uri jurisdiction = 6;
inline bool UsCoreDevice_Udi::has_jurisdiction() const {
  return this != internal_default_instance() && jurisdiction_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreDevice_Udi::_internal_jurisdiction() const {
  return *jurisdiction_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreDevice_Udi::jurisdiction() const {
  const ::google::fhir::stu3::proto::Uri* p = jurisdiction_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.Udi.jurisdiction)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreDevice_Udi::release_jurisdiction() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.Udi.jurisdiction)
  
  ::google::fhir::stu3::proto::Uri* temp = jurisdiction_;
  jurisdiction_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreDevice_Udi::mutable_jurisdiction() {
  
  if (jurisdiction_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    jurisdiction_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.Udi.jurisdiction)
  return jurisdiction_;
}
inline void UsCoreDevice_Udi::set_allocated_jurisdiction(::google::fhir::stu3::proto::Uri* jurisdiction) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(jurisdiction_);
  }
  if (jurisdiction) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      jurisdiction = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, jurisdiction, submessage_arena);
    }
    
  } else {
    
  }
  jurisdiction_ = jurisdiction;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.Udi.jurisdiction)
}

// .google.fhir.stu3.proto.String carrier_h_r_f = 7;
inline bool UsCoreDevice_Udi::has_carrier_h_r_f() const {
  return this != internal_default_instance() && carrier_h_r_f_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDevice_Udi::_internal_carrier_h_r_f() const {
  return *carrier_h_r_f_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDevice_Udi::carrier_h_r_f() const {
  const ::google::fhir::stu3::proto::String* p = carrier_h_r_f_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.Udi.carrier_h_r_f)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreDevice_Udi::release_carrier_h_r_f() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.Udi.carrier_h_r_f)
  
  ::google::fhir::stu3::proto::String* temp = carrier_h_r_f_;
  carrier_h_r_f_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreDevice_Udi::mutable_carrier_h_r_f() {
  
  if (carrier_h_r_f_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    carrier_h_r_f_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.Udi.carrier_h_r_f)
  return carrier_h_r_f_;
}
inline void UsCoreDevice_Udi::set_allocated_carrier_h_r_f(::google::fhir::stu3::proto::String* carrier_h_r_f) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(carrier_h_r_f_);
  }
  if (carrier_h_r_f) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      carrier_h_r_f = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, carrier_h_r_f, submessage_arena);
    }
    
  } else {
    
  }
  carrier_h_r_f_ = carrier_h_r_f;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.Udi.carrier_h_r_f)
}

// .google.fhir.stu3.proto.Base64Binary carrier_a_i_d_c = 8;
inline bool UsCoreDevice_Udi::has_carrier_a_i_d_c() const {
  return this != internal_default_instance() && carrier_a_i_d_c_ != NULL;
}
inline const ::google::fhir::stu3::proto::Base64Binary& UsCoreDevice_Udi::_internal_carrier_a_i_d_c() const {
  return *carrier_a_i_d_c_;
}
inline const ::google::fhir::stu3::proto::Base64Binary& UsCoreDevice_Udi::carrier_a_i_d_c() const {
  const ::google::fhir::stu3::proto::Base64Binary* p = carrier_a_i_d_c_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.Udi.carrier_a_i_d_c)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Base64Binary*>(
      &::google::fhir::stu3::proto::_Base64Binary_default_instance_);
}
inline ::google::fhir::stu3::proto::Base64Binary* UsCoreDevice_Udi::release_carrier_a_i_d_c() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.Udi.carrier_a_i_d_c)
  
  ::google::fhir::stu3::proto::Base64Binary* temp = carrier_a_i_d_c_;
  carrier_a_i_d_c_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Base64Binary* UsCoreDevice_Udi::mutable_carrier_a_i_d_c() {
  
  if (carrier_a_i_d_c_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Base64Binary>(GetArenaNoVirtual());
    carrier_a_i_d_c_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.Udi.carrier_a_i_d_c)
  return carrier_a_i_d_c_;
}
inline void UsCoreDevice_Udi::set_allocated_carrier_a_i_d_c(::google::fhir::stu3::proto::Base64Binary* carrier_a_i_d_c) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(carrier_a_i_d_c_);
  }
  if (carrier_a_i_d_c) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      carrier_a_i_d_c = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, carrier_a_i_d_c, submessage_arena);
    }
    
  } else {
    
  }
  carrier_a_i_d_c_ = carrier_a_i_d_c;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.Udi.carrier_a_i_d_c)
}

// .google.fhir.stu3.proto.Uri issuer = 9;
inline bool UsCoreDevice_Udi::has_issuer() const {
  return this != internal_default_instance() && issuer_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreDevice_Udi::_internal_issuer() const {
  return *issuer_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreDevice_Udi::issuer() const {
  const ::google::fhir::stu3::proto::Uri* p = issuer_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.Udi.issuer)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreDevice_Udi::release_issuer() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.Udi.issuer)
  
  ::google::fhir::stu3::proto::Uri* temp = issuer_;
  issuer_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreDevice_Udi::mutable_issuer() {
  
  if (issuer_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    issuer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.Udi.issuer)
  return issuer_;
}
inline void UsCoreDevice_Udi::set_allocated_issuer(::google::fhir::stu3::proto::Uri* issuer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(issuer_);
  }
  if (issuer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      issuer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, issuer, submessage_arena);
    }
    
  } else {
    
  }
  issuer_ = issuer;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.Udi.issuer)
}

// .google.fhir.stu3.proto.UDIEntryTypeCode entry_type = 10;
inline bool UsCoreDevice_Udi::has_entry_type() const {
  return this != internal_default_instance() && entry_type_ != NULL;
}
inline const ::google::fhir::stu3::proto::UDIEntryTypeCode& UsCoreDevice_Udi::_internal_entry_type() const {
  return *entry_type_;
}
inline const ::google::fhir::stu3::proto::UDIEntryTypeCode& UsCoreDevice_Udi::entry_type() const {
  const ::google::fhir::stu3::proto::UDIEntryTypeCode* p = entry_type_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.Udi.entry_type)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::UDIEntryTypeCode*>(
      &::google::fhir::stu3::proto::_UDIEntryTypeCode_default_instance_);
}
inline ::google::fhir::stu3::proto::UDIEntryTypeCode* UsCoreDevice_Udi::release_entry_type() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.Udi.entry_type)
  
  ::google::fhir::stu3::proto::UDIEntryTypeCode* temp = entry_type_;
  entry_type_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::UDIEntryTypeCode* UsCoreDevice_Udi::mutable_entry_type() {
  
  if (entry_type_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::UDIEntryTypeCode>(GetArenaNoVirtual());
    entry_type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.Udi.entry_type)
  return entry_type_;
}
inline void UsCoreDevice_Udi::set_allocated_entry_type(::google::fhir::stu3::proto::UDIEntryTypeCode* entry_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(entry_type_);
  }
  if (entry_type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      entry_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, entry_type, submessage_arena);
    }
    
  } else {
    
  }
  entry_type_ = entry_type;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.Udi.entry_type)
}

// -------------------------------------------------------------------

// UsCoreDevice

// .google.fhir.stu3.proto.Id id = 1;
inline bool UsCoreDevice::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreDevice::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreDevice::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* UsCoreDevice::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* UsCoreDevice::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.id)
  return id_;
}
inline void UsCoreDevice::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool UsCoreDevice::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreDevice::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreDevice::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* UsCoreDevice::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* UsCoreDevice::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.meta)
  return meta_;
}
inline void UsCoreDevice::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool UsCoreDevice::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreDevice::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreDevice::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreDevice::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreDevice::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.implicit_rules)
  return implicit_rules_;
}
inline void UsCoreDevice::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool UsCoreDevice::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreDevice::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreDevice::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreDevice::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreDevice::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.language)
  return language_;
}
inline void UsCoreDevice::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.language)
}

// .google.fhir.stu3.proto.Narrative text = 5;
inline bool UsCoreDevice::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreDevice::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreDevice::text() const {
  const ::google::fhir::stu3::proto::Narrative* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Narrative*>(
      &::google::fhir::stu3::proto::_Narrative_default_instance_);
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreDevice::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.text)
  
  ::google::fhir::stu3::proto::Narrative* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreDevice::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.text)
  return text_;
}
inline void UsCoreDevice::set_allocated_text(::google::fhir::stu3::proto::Narrative* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.text)
}

// repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
inline int UsCoreDevice::contained_size() const {
  return contained_.size();
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreDevice::mutable_contained(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.contained)
  return contained_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
UsCoreDevice::mutable_contained() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDevice.contained)
  return &contained_;
}
inline const ::google::fhir::stu3::proto::ContainedResource& UsCoreDevice::contained(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.contained)
  return contained_.Get(index);
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreDevice::add_contained() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDevice.contained)
  return contained_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
UsCoreDevice::contained() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDevice.contained)
  return contained_;
}

// repeated .google.fhir.stu3.proto.Extension extension = 7;
inline int UsCoreDevice::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDevice::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreDevice::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDevice.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreDevice::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDevice::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDevice.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreDevice::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDevice.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
inline int UsCoreDevice::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDevice::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreDevice::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDevice.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreDevice::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDevice::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDevice.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreDevice::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDevice.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.Identifier identifier = 9;
inline int UsCoreDevice::identifier_size() const {
  return identifier_.size();
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreDevice::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.identifier)
  return identifier_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
UsCoreDevice::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDevice.identifier)
  return &identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCoreDevice::identifier(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.identifier)
  return identifier_.Get(index);
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreDevice::add_identifier() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDevice.identifier)
  return identifier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
UsCoreDevice::identifier() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDevice.identifier)
  return identifier_;
}

// .google.fhir.stu3.uscore.UsCoreDevice.Udi udi = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreDevice::has_udi() const {
  return this != internal_default_instance() && udi_ != NULL;
}
inline void UsCoreDevice::clear_udi() {
  if (GetArenaNoVirtual() == NULL && udi_ != NULL) {
    delete udi_;
  }
  udi_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreDevice_Udi& UsCoreDevice::_internal_udi() const {
  return *udi_;
}
inline const ::google::fhir::stu3::uscore::UsCoreDevice_Udi& UsCoreDevice::udi() const {
  const ::google::fhir::stu3::uscore::UsCoreDevice_Udi* p = udi_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.udi)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreDevice_Udi*>(
      &::google::fhir::stu3::uscore::_UsCoreDevice_Udi_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreDevice_Udi* UsCoreDevice::release_udi() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.udi)
  
  ::google::fhir::stu3::uscore::UsCoreDevice_Udi* temp = udi_;
  udi_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreDevice_Udi* UsCoreDevice::mutable_udi() {
  
  if (udi_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreDevice_Udi>(GetArenaNoVirtual());
    udi_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.udi)
  return udi_;
}
inline void UsCoreDevice::set_allocated_udi(::google::fhir::stu3::uscore::UsCoreDevice_Udi* udi) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete udi_;
  }
  if (udi) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      udi = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, udi, submessage_arena);
    }
    
  } else {
    
  }
  udi_ = udi;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.udi)
}

// .google.fhir.stu3.proto.FHIRDeviceStatusCode status = 11;
inline bool UsCoreDevice::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::fhir::stu3::proto::FHIRDeviceStatusCode& UsCoreDevice::_internal_status() const {
  return *status_;
}
inline const ::google::fhir::stu3::proto::FHIRDeviceStatusCode& UsCoreDevice::status() const {
  const ::google::fhir::stu3::proto::FHIRDeviceStatusCode* p = status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::FHIRDeviceStatusCode*>(
      &::google::fhir::stu3::proto::_FHIRDeviceStatusCode_default_instance_);
}
inline ::google::fhir::stu3::proto::FHIRDeviceStatusCode* UsCoreDevice::release_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.status)
  
  ::google::fhir::stu3::proto::FHIRDeviceStatusCode* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::FHIRDeviceStatusCode* UsCoreDevice::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::FHIRDeviceStatusCode>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.status)
  return status_;
}
inline void UsCoreDevice::set_allocated_status(::google::fhir::stu3::proto::FHIRDeviceStatusCode* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.status)
}

// .google.fhir.stu3.proto.CodeableConcept type = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreDevice::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreDevice::_internal_type() const {
  return *type_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreDevice::type() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = type_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.type)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreDevice::release_type() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.type)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreDevice::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.type)
  return type_;
}
inline void UsCoreDevice::set_allocated_type(::google::fhir::stu3::proto::CodeableConcept* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(type_);
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.type)
}

// .google.fhir.stu3.proto.String lot_number = 13;
inline bool UsCoreDevice::has_lot_number() const {
  return this != internal_default_instance() && lot_number_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDevice::_internal_lot_number() const {
  return *lot_number_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDevice::lot_number() const {
  const ::google::fhir::stu3::proto::String* p = lot_number_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.lot_number)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreDevice::release_lot_number() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.lot_number)
  
  ::google::fhir::stu3::proto::String* temp = lot_number_;
  lot_number_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreDevice::mutable_lot_number() {
  
  if (lot_number_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    lot_number_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.lot_number)
  return lot_number_;
}
inline void UsCoreDevice::set_allocated_lot_number(::google::fhir::stu3::proto::String* lot_number) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(lot_number_);
  }
  if (lot_number) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      lot_number = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lot_number, submessage_arena);
    }
    
  } else {
    
  }
  lot_number_ = lot_number;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.lot_number)
}

// .google.fhir.stu3.proto.String manufacturer = 14;
inline bool UsCoreDevice::has_manufacturer() const {
  return this != internal_default_instance() && manufacturer_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDevice::_internal_manufacturer() const {
  return *manufacturer_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDevice::manufacturer() const {
  const ::google::fhir::stu3::proto::String* p = manufacturer_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.manufacturer)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreDevice::release_manufacturer() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.manufacturer)
  
  ::google::fhir::stu3::proto::String* temp = manufacturer_;
  manufacturer_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreDevice::mutable_manufacturer() {
  
  if (manufacturer_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    manufacturer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.manufacturer)
  return manufacturer_;
}
inline void UsCoreDevice::set_allocated_manufacturer(::google::fhir::stu3::proto::String* manufacturer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(manufacturer_);
  }
  if (manufacturer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      manufacturer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, manufacturer, submessage_arena);
    }
    
  } else {
    
  }
  manufacturer_ = manufacturer;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.manufacturer)
}

// .google.fhir.stu3.proto.DateTime manufacture_date = 15;
inline bool UsCoreDevice::has_manufacture_date() const {
  return this != internal_default_instance() && manufacture_date_ != NULL;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreDevice::_internal_manufacture_date() const {
  return *manufacture_date_;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreDevice::manufacture_date() const {
  const ::google::fhir::stu3::proto::DateTime* p = manufacture_date_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.manufacture_date)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::DateTime*>(
      &::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreDevice::release_manufacture_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.manufacture_date)
  
  ::google::fhir::stu3::proto::DateTime* temp = manufacture_date_;
  manufacture_date_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreDevice::mutable_manufacture_date() {
  
  if (manufacture_date_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::DateTime>(GetArenaNoVirtual());
    manufacture_date_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.manufacture_date)
  return manufacture_date_;
}
inline void UsCoreDevice::set_allocated_manufacture_date(::google::fhir::stu3::proto::DateTime* manufacture_date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(manufacture_date_);
  }
  if (manufacture_date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      manufacture_date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, manufacture_date, submessage_arena);
    }
    
  } else {
    
  }
  manufacture_date_ = manufacture_date;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.manufacture_date)
}

// .google.fhir.stu3.proto.DateTime expiration_date = 16;
inline bool UsCoreDevice::has_expiration_date() const {
  return this != internal_default_instance() && expiration_date_ != NULL;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreDevice::_internal_expiration_date() const {
  return *expiration_date_;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreDevice::expiration_date() const {
  const ::google::fhir::stu3::proto::DateTime* p = expiration_date_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.expiration_date)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::DateTime*>(
      &::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreDevice::release_expiration_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.expiration_date)
  
  ::google::fhir::stu3::proto::DateTime* temp = expiration_date_;
  expiration_date_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreDevice::mutable_expiration_date() {
  
  if (expiration_date_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::DateTime>(GetArenaNoVirtual());
    expiration_date_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.expiration_date)
  return expiration_date_;
}
inline void UsCoreDevice::set_allocated_expiration_date(::google::fhir::stu3::proto::DateTime* expiration_date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(expiration_date_);
  }
  if (expiration_date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      expiration_date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, expiration_date, submessage_arena);
    }
    
  } else {
    
  }
  expiration_date_ = expiration_date;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.expiration_date)
}

// .google.fhir.stu3.proto.String model = 17;
inline bool UsCoreDevice::has_model() const {
  return this != internal_default_instance() && model_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDevice::_internal_model() const {
  return *model_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDevice::model() const {
  const ::google::fhir::stu3::proto::String* p = model_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.model)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreDevice::release_model() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.model)
  
  ::google::fhir::stu3::proto::String* temp = model_;
  model_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreDevice::mutable_model() {
  
  if (model_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    model_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.model)
  return model_;
}
inline void UsCoreDevice::set_allocated_model(::google::fhir::stu3::proto::String* model) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(model_);
  }
  if (model) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      model = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, model, submessage_arena);
    }
    
  } else {
    
  }
  model_ = model;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.model)
}

// .google.fhir.stu3.proto.String version = 18;
inline bool UsCoreDevice::has_version() const {
  return this != internal_default_instance() && version_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDevice::_internal_version() const {
  return *version_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDevice::version() const {
  const ::google::fhir::stu3::proto::String* p = version_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.version)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreDevice::release_version() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.version)
  
  ::google::fhir::stu3::proto::String* temp = version_;
  version_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreDevice::mutable_version() {
  
  if (version_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    version_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.version)
  return version_;
}
inline void UsCoreDevice::set_allocated_version(::google::fhir::stu3::proto::String* version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(version_);
  }
  if (version) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, version, submessage_arena);
    }
    
  } else {
    
  }
  version_ = version;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.version)
}

// .google.fhir.stu3.proto.Reference patient = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
inline bool UsCoreDevice::has_patient() const {
  return this != internal_default_instance() && patient_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreDevice::_internal_patient() const {
  return *patient_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreDevice::patient() const {
  const ::google::fhir::stu3::proto::Reference* p = patient_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.patient)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDevice::release_patient() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.patient)
  
  ::google::fhir::stu3::proto::Reference* temp = patient_;
  patient_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDevice::mutable_patient() {
  
  if (patient_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    patient_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.patient)
  return patient_;
}
inline void UsCoreDevice::set_allocated_patient(::google::fhir::stu3::proto::Reference* patient) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(patient_);
  }
  if (patient) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      patient = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, patient, submessage_arena);
    }
    
  } else {
    
  }
  patient_ = patient;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.patient)
}

// .google.fhir.stu3.proto.Reference owner = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
inline bool UsCoreDevice::has_owner() const {
  return this != internal_default_instance() && owner_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreDevice::_internal_owner() const {
  return *owner_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreDevice::owner() const {
  const ::google::fhir::stu3::proto::Reference* p = owner_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.owner)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDevice::release_owner() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.owner)
  
  ::google::fhir::stu3::proto::Reference* temp = owner_;
  owner_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDevice::mutable_owner() {
  
  if (owner_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    owner_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.owner)
  return owner_;
}
inline void UsCoreDevice::set_allocated_owner(::google::fhir::stu3::proto::Reference* owner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(owner_);
  }
  if (owner) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      owner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, owner, submessage_arena);
    }
    
  } else {
    
  }
  owner_ = owner;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.owner)
}

// repeated .google.fhir.stu3.proto.ContactPoint contact = 21;
inline int UsCoreDevice::contact_size() const {
  return contact_.size();
}
inline ::google::fhir::stu3::proto::ContactPoint* UsCoreDevice::mutable_contact(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.contact)
  return contact_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >*
UsCoreDevice::mutable_contact() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDevice.contact)
  return &contact_;
}
inline const ::google::fhir::stu3::proto::ContactPoint& UsCoreDevice::contact(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.contact)
  return contact_.Get(index);
}
inline ::google::fhir::stu3::proto::ContactPoint* UsCoreDevice::add_contact() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDevice.contact)
  return contact_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >&
UsCoreDevice::contact() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDevice.contact)
  return contact_;
}

// .google.fhir.stu3.proto.Reference location = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
inline bool UsCoreDevice::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreDevice::_internal_location() const {
  return *location_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreDevice::location() const {
  const ::google::fhir::stu3::proto::Reference* p = location_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.location)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDevice::release_location() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.location)
  
  ::google::fhir::stu3::proto::Reference* temp = location_;
  location_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDevice::mutable_location() {
  
  if (location_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    location_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.location)
  return location_;
}
inline void UsCoreDevice::set_allocated_location(::google::fhir::stu3::proto::Reference* location) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(location_);
  }
  if (location) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      location = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    
  } else {
    
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.location)
}

// .google.fhir.stu3.proto.Uri url = 23;
inline bool UsCoreDevice::has_url() const {
  return this != internal_default_instance() && url_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreDevice::_internal_url() const {
  return *url_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreDevice::url() const {
  const ::google::fhir::stu3::proto::Uri* p = url_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.url)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreDevice::release_url() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDevice.url)
  
  ::google::fhir::stu3::proto::Uri* temp = url_;
  url_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreDevice::mutable_url() {
  
  if (url_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    url_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.url)
  return url_;
}
inline void UsCoreDevice::set_allocated_url(::google::fhir::stu3::proto::Uri* url) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(url_);
  }
  if (url) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      url = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, url, submessage_arena);
    }
    
  } else {
    
  }
  url_ = url;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDevice.url)
}

// repeated .google.fhir.stu3.proto.Annotation note = 24;
inline int UsCoreDevice::note_size() const {
  return note_.size();
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreDevice::mutable_note(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.note)
  return note_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
UsCoreDevice::mutable_note() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDevice.note)
  return &note_;
}
inline const ::google::fhir::stu3::proto::Annotation& UsCoreDevice::note(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.note)
  return note_.Get(index);
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreDevice::add_note() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDevice.note)
  return note_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
UsCoreDevice::note() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDevice.note)
  return note_;
}

// repeated .google.fhir.stu3.proto.CodeableConcept safety = 25;
inline int UsCoreDevice::safety_size() const {
  return safety_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreDevice::mutable_safety(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDevice.safety)
  return safety_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreDevice::mutable_safety() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDevice.safety)
  return &safety_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreDevice::safety(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDevice.safety)
  return safety_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreDevice::add_safety() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDevice.safety)
  return safety_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreDevice::safety() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDevice.safety)
  return safety_;
}

// -------------------------------------------------------------------

// UsCoreDiagnosticreport_Effective

// .google.fhir.stu3.proto.DateTime date_time = 1;
inline bool UsCoreDiagnosticreport_Effective::has_date_time() const {
  return effective_case() == kDateTime;
}
inline void UsCoreDiagnosticreport_Effective::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreDiagnosticreport_Effective::_internal_date_time() const {
  return *effective_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreDiagnosticreport_Effective::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective.date_time)
  if (has_date_time()) {
    clear_has_effective();
      ::google::fhir::stu3::proto::DateTime* temp = effective_.date_time_;
    effective_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreDiagnosticreport_Effective::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective.date_time)
  return has_date_time()
      ? *effective_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreDiagnosticreport_Effective::mutable_date_time() {
  if (!has_date_time()) {
    clear_effective();
    set_has_date_time();
    effective_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective.date_time)
  return effective_.date_time_;
}

// .google.fhir.stu3.proto.Period period = 2;
inline bool UsCoreDiagnosticreport_Effective::has_period() const {
  return effective_case() == kPeriod;
}
inline void UsCoreDiagnosticreport_Effective::set_has_period() {
  _oneof_case_[0] = kPeriod;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreDiagnosticreport_Effective::_internal_period() const {
  return *effective_.period_;
}
inline ::google::fhir::stu3::proto::Period* UsCoreDiagnosticreport_Effective::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective.period)
  if (has_period()) {
    clear_has_effective();
      ::google::fhir::stu3::proto::Period* temp = effective_.period_;
    effective_.period_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Period& UsCoreDiagnosticreport_Effective::period() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective.period)
  return has_period()
      ? *effective_.period_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Period*>(&::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* UsCoreDiagnosticreport_Effective::mutable_period() {
  if (!has_period()) {
    clear_effective();
    set_has_period();
    effective_.period_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Period >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective.period)
  return effective_.period_;
}

inline bool UsCoreDiagnosticreport_Effective::has_effective() const {
  return effective_case() != EFFECTIVE_NOT_SET;
}
inline void UsCoreDiagnosticreport_Effective::clear_has_effective() {
  _oneof_case_[0] = EFFECTIVE_NOT_SET;
}
inline UsCoreDiagnosticreport_Effective::EffectiveCase UsCoreDiagnosticreport_Effective::effective_case() const {
  return UsCoreDiagnosticreport_Effective::EffectiveCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreDiagnosticreport_Performer

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreDiagnosticreport_Performer::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDiagnosticreport_Performer::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDiagnosticreport_Performer::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreDiagnosticreport_Performer::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreDiagnosticreport_Performer::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.id)
  return id_;
}
inline void UsCoreDiagnosticreport_Performer::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreDiagnosticreport_Performer::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDiagnosticreport_Performer::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreDiagnosticreport_Performer::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreDiagnosticreport_Performer::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDiagnosticreport_Performer::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreDiagnosticreport_Performer::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreDiagnosticreport_Performer::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDiagnosticreport_Performer::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreDiagnosticreport_Performer::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreDiagnosticreport_Performer::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDiagnosticreport_Performer::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreDiagnosticreport_Performer::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.CodeableConcept role = 4;
inline bool UsCoreDiagnosticreport_Performer::has_role() const {
  return this != internal_default_instance() && role_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreDiagnosticreport_Performer::_internal_role() const {
  return *role_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreDiagnosticreport_Performer::role() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = role_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.role)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreDiagnosticreport_Performer::release_role() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.role)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = role_;
  role_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreDiagnosticreport_Performer::mutable_role() {
  
  if (role_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    role_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.role)
  return role_;
}
inline void UsCoreDiagnosticreport_Performer::set_allocated_role(::google::fhir::stu3::proto::CodeableConcept* role) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(role_);
  }
  if (role) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      role = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, role, submessage_arena);
    }
    
  } else {
    
  }
  role_ = role;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.role)
}

// .google.fhir.stu3.proto.Reference actor = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization"];
inline bool UsCoreDiagnosticreport_Performer::has_actor() const {
  return this != internal_default_instance() && actor_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreDiagnosticreport_Performer::_internal_actor() const {
  return *actor_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreDiagnosticreport_Performer::actor() const {
  const ::google::fhir::stu3::proto::Reference* p = actor_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.actor)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDiagnosticreport_Performer::release_actor() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.actor)
  
  ::google::fhir::stu3::proto::Reference* temp = actor_;
  actor_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDiagnosticreport_Performer::mutable_actor() {
  
  if (actor_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    actor_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.actor)
  return actor_;
}
inline void UsCoreDiagnosticreport_Performer::set_allocated_actor(::google::fhir::stu3::proto::Reference* actor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(actor_);
  }
  if (actor) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      actor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, actor, submessage_arena);
    }
    
  } else {
    
  }
  actor_ = actor;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer.actor)
}

// -------------------------------------------------------------------

// UsCoreDiagnosticreport_Image

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreDiagnosticreport_Image::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDiagnosticreport_Image::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDiagnosticreport_Image::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreDiagnosticreport_Image::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreDiagnosticreport_Image::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.id)
  return id_;
}
inline void UsCoreDiagnosticreport_Image::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreDiagnosticreport_Image::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDiagnosticreport_Image::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreDiagnosticreport_Image::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreDiagnosticreport_Image::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDiagnosticreport_Image::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreDiagnosticreport_Image::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreDiagnosticreport_Image::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDiagnosticreport_Image::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreDiagnosticreport_Image::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreDiagnosticreport_Image::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDiagnosticreport_Image::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreDiagnosticreport_Image::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.String comment = 4;
inline bool UsCoreDiagnosticreport_Image::has_comment() const {
  return this != internal_default_instance() && comment_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDiagnosticreport_Image::_internal_comment() const {
  return *comment_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDiagnosticreport_Image::comment() const {
  const ::google::fhir::stu3::proto::String* p = comment_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.comment)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreDiagnosticreport_Image::release_comment() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.comment)
  
  ::google::fhir::stu3::proto::String* temp = comment_;
  comment_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreDiagnosticreport_Image::mutable_comment() {
  
  if (comment_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    comment_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.comment)
  return comment_;
}
inline void UsCoreDiagnosticreport_Image::set_allocated_comment(::google::fhir::stu3::proto::String* comment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(comment_);
  }
  if (comment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comment, submessage_arena);
    }
    
  } else {
    
  }
  comment_ = comment;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.comment)
}

// .google.fhir.stu3.proto.Reference link = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Media"];
inline bool UsCoreDiagnosticreport_Image::has_link() const {
  return this != internal_default_instance() && link_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreDiagnosticreport_Image::_internal_link() const {
  return *link_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreDiagnosticreport_Image::link() const {
  const ::google::fhir::stu3::proto::Reference* p = link_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.link)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDiagnosticreport_Image::release_link() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.link)
  
  ::google::fhir::stu3::proto::Reference* temp = link_;
  link_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDiagnosticreport_Image::mutable_link() {
  
  if (link_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    link_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.link)
  return link_;
}
inline void UsCoreDiagnosticreport_Image::set_allocated_link(::google::fhir::stu3::proto::Reference* link) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(link_);
  }
  if (link) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      link = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, link, submessage_arena);
    }
    
  } else {
    
  }
  link_ = link;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image.link)
}

// -------------------------------------------------------------------

// UsCoreDiagnosticreport

// .google.fhir.stu3.proto.Id id = 1;
inline bool UsCoreDiagnosticreport::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreDiagnosticreport::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreDiagnosticreport::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* UsCoreDiagnosticreport::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* UsCoreDiagnosticreport::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.id)
  return id_;
}
inline void UsCoreDiagnosticreport::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool UsCoreDiagnosticreport::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreDiagnosticreport::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreDiagnosticreport::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* UsCoreDiagnosticreport::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* UsCoreDiagnosticreport::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.meta)
  return meta_;
}
inline void UsCoreDiagnosticreport::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool UsCoreDiagnosticreport::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreDiagnosticreport::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreDiagnosticreport::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreDiagnosticreport::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreDiagnosticreport::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.implicit_rules)
  return implicit_rules_;
}
inline void UsCoreDiagnosticreport::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool UsCoreDiagnosticreport::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreDiagnosticreport::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreDiagnosticreport::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreDiagnosticreport::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreDiagnosticreport::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.language)
  return language_;
}
inline void UsCoreDiagnosticreport::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.language)
}

// .google.fhir.stu3.proto.Narrative text = 5;
inline bool UsCoreDiagnosticreport::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreDiagnosticreport::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreDiagnosticreport::text() const {
  const ::google::fhir::stu3::proto::Narrative* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Narrative*>(
      &::google::fhir::stu3::proto::_Narrative_default_instance_);
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreDiagnosticreport::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.text)
  
  ::google::fhir::stu3::proto::Narrative* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreDiagnosticreport::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.text)
  return text_;
}
inline void UsCoreDiagnosticreport::set_allocated_text(::google::fhir::stu3::proto::Narrative* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.text)
}

// repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
inline int UsCoreDiagnosticreport::contained_size() const {
  return contained_.size();
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreDiagnosticreport::mutable_contained(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.contained)
  return contained_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
UsCoreDiagnosticreport::mutable_contained() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.contained)
  return &contained_;
}
inline const ::google::fhir::stu3::proto::ContainedResource& UsCoreDiagnosticreport::contained(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.contained)
  return contained_.Get(index);
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreDiagnosticreport::add_contained() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDiagnosticreport.contained)
  return contained_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
UsCoreDiagnosticreport::contained() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.contained)
  return contained_;
}

// repeated .google.fhir.stu3.proto.Extension extension = 7;
inline int UsCoreDiagnosticreport::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDiagnosticreport::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreDiagnosticreport::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreDiagnosticreport::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDiagnosticreport::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDiagnosticreport.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreDiagnosticreport::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
inline int UsCoreDiagnosticreport::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDiagnosticreport::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreDiagnosticreport::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreDiagnosticreport::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreDiagnosticreport::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDiagnosticreport.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreDiagnosticreport::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.Identifier identifier = 9;
inline int UsCoreDiagnosticreport::identifier_size() const {
  return identifier_.size();
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreDiagnosticreport::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.identifier)
  return identifier_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
UsCoreDiagnosticreport::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.identifier)
  return &identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCoreDiagnosticreport::identifier(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.identifier)
  return identifier_.Get(index);
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreDiagnosticreport::add_identifier() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDiagnosticreport.identifier)
  return identifier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
UsCoreDiagnosticreport::identifier() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.identifier)
  return identifier_;
}

// repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
inline int UsCoreDiagnosticreport::based_on_size() const {
  return based_on_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDiagnosticreport::mutable_based_on(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.based_on)
  return based_on_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreDiagnosticreport::mutable_based_on() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.based_on)
  return &based_on_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreDiagnosticreport::based_on(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.based_on)
  return based_on_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDiagnosticreport::add_based_on() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDiagnosticreport.based_on)
  return based_on_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreDiagnosticreport::based_on() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.based_on)
  return based_on_;
}

// .google.fhir.stu3.proto.DiagnosticReportStatusCode status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreDiagnosticreport::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::fhir::stu3::proto::DiagnosticReportStatusCode& UsCoreDiagnosticreport::_internal_status() const {
  return *status_;
}
inline const ::google::fhir::stu3::proto::DiagnosticReportStatusCode& UsCoreDiagnosticreport::status() const {
  const ::google::fhir::stu3::proto::DiagnosticReportStatusCode* p = status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::DiagnosticReportStatusCode*>(
      &::google::fhir::stu3::proto::_DiagnosticReportStatusCode_default_instance_);
}
inline ::google::fhir::stu3::proto::DiagnosticReportStatusCode* UsCoreDiagnosticreport::release_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.status)
  
  ::google::fhir::stu3::proto::DiagnosticReportStatusCode* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::DiagnosticReportStatusCode* UsCoreDiagnosticreport::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::DiagnosticReportStatusCode>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.status)
  return status_;
}
inline void UsCoreDiagnosticreport::set_allocated_status(::google::fhir::stu3::proto::DiagnosticReportStatusCode* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.status)
}

// .google.fhir.stu3.proto.CodeableConcept category = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreDiagnosticreport::has_category() const {
  return this != internal_default_instance() && category_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreDiagnosticreport::_internal_category() const {
  return *category_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreDiagnosticreport::category() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = category_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.category)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreDiagnosticreport::release_category() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.category)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = category_;
  category_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreDiagnosticreport::mutable_category() {
  
  if (category_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.category)
  return category_;
}
inline void UsCoreDiagnosticreport::set_allocated_category(::google::fhir::stu3::proto::CodeableConcept* category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(category_);
  }
  if (category) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, category, submessage_arena);
    }
    
  } else {
    
  }
  category_ = category;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.category)
}

// .google.fhir.stu3.proto.CodeableConcept code = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreDiagnosticreport::has_code() const {
  return this != internal_default_instance() && code_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreDiagnosticreport::_internal_code() const {
  return *code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreDiagnosticreport::code() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = code_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.code)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreDiagnosticreport::release_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.code)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = code_;
  code_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreDiagnosticreport::mutable_code() {
  
  if (code_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    code_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.code)
  return code_;
}
inline void UsCoreDiagnosticreport::set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(code_);
  }
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    
  } else {
    
  }
  code_ = code;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.code)
}

// .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
inline bool UsCoreDiagnosticreport::has_subject() const {
  return this != internal_default_instance() && subject_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreDiagnosticreport::_internal_subject() const {
  return *subject_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreDiagnosticreport::subject() const {
  const ::google::fhir::stu3::proto::Reference* p = subject_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.subject)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDiagnosticreport::release_subject() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.subject)
  
  ::google::fhir::stu3::proto::Reference* temp = subject_;
  subject_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDiagnosticreport::mutable_subject() {
  
  if (subject_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    subject_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.subject)
  return subject_;
}
inline void UsCoreDiagnosticreport::set_allocated_subject(::google::fhir::stu3::proto::Reference* subject) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(subject_);
  }
  if (subject) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      subject = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, subject, submessage_arena);
    }
    
  } else {
    
  }
  subject_ = subject;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.subject)
}

// .google.fhir.stu3.proto.Reference context = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
inline bool UsCoreDiagnosticreport::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreDiagnosticreport::_internal_context() const {
  return *context_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreDiagnosticreport::context() const {
  const ::google::fhir::stu3::proto::Reference* p = context_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.context)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDiagnosticreport::release_context() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.context)
  
  ::google::fhir::stu3::proto::Reference* temp = context_;
  context_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDiagnosticreport::mutable_context() {
  
  if (context_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    context_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.context)
  return context_;
}
inline void UsCoreDiagnosticreport::set_allocated_context(::google::fhir::stu3::proto::Reference* context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(context_);
  }
  if (context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.context)
}

// .google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective effective = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreDiagnosticreport::has_effective() const {
  return this != internal_default_instance() && effective_ != NULL;
}
inline void UsCoreDiagnosticreport::clear_effective() {
  if (GetArenaNoVirtual() == NULL && effective_ != NULL) {
    delete effective_;
  }
  effective_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective& UsCoreDiagnosticreport::_internal_effective() const {
  return *effective_;
}
inline const ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective& UsCoreDiagnosticreport::effective() const {
  const ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective* p = effective_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.effective)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective*>(
      &::google::fhir::stu3::uscore::_UsCoreDiagnosticreport_Effective_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective* UsCoreDiagnosticreport::release_effective() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.effective)
  
  ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective* temp = effective_;
  effective_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective* UsCoreDiagnosticreport::mutable_effective() {
  
  if (effective_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective>(GetArenaNoVirtual());
    effective_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.effective)
  return effective_;
}
inline void UsCoreDiagnosticreport::set_allocated_effective(::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Effective* effective) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete effective_;
  }
  if (effective) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      effective = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, effective, submessage_arena);
    }
    
  } else {
    
  }
  effective_ = effective;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.effective)
}

// .google.fhir.stu3.proto.Instant issued = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreDiagnosticreport::has_issued() const {
  return this != internal_default_instance() && issued_ != NULL;
}
inline const ::google::fhir::stu3::proto::Instant& UsCoreDiagnosticreport::_internal_issued() const {
  return *issued_;
}
inline const ::google::fhir::stu3::proto::Instant& UsCoreDiagnosticreport::issued() const {
  const ::google::fhir::stu3::proto::Instant* p = issued_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.issued)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Instant*>(
      &::google::fhir::stu3::proto::_Instant_default_instance_);
}
inline ::google::fhir::stu3::proto::Instant* UsCoreDiagnosticreport::release_issued() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.issued)
  
  ::google::fhir::stu3::proto::Instant* temp = issued_;
  issued_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Instant* UsCoreDiagnosticreport::mutable_issued() {
  
  if (issued_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Instant>(GetArenaNoVirtual());
    issued_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.issued)
  return issued_;
}
inline void UsCoreDiagnosticreport::set_allocated_issued(::google::fhir::stu3::proto::Instant* issued) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(issued_);
  }
  if (issued) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      issued = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, issued, submessage_arena);
    }
    
  } else {
    
  }
  issued_ = issued;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.issued)
}

// repeated .google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer performer = 18;
inline int UsCoreDiagnosticreport::performer_size() const {
  return performer_.size();
}
inline void UsCoreDiagnosticreport::clear_performer() {
  performer_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer* UsCoreDiagnosticreport::mutable_performer(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.performer)
  return performer_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer >*
UsCoreDiagnosticreport::mutable_performer() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.performer)
  return &performer_;
}
inline const ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer& UsCoreDiagnosticreport::performer(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.performer)
  return performer_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer* UsCoreDiagnosticreport::add_performer() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDiagnosticreport.performer)
  return performer_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Performer >&
UsCoreDiagnosticreport::performer() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.performer)
  return performer_;
}

// repeated .google.fhir.stu3.proto.Reference specimen = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Specimen"];
inline int UsCoreDiagnosticreport::specimen_size() const {
  return specimen_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDiagnosticreport::mutable_specimen(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.specimen)
  return specimen_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreDiagnosticreport::mutable_specimen() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.specimen)
  return &specimen_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreDiagnosticreport::specimen(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.specimen)
  return specimen_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDiagnosticreport::add_specimen() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDiagnosticreport.specimen)
  return specimen_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreDiagnosticreport::specimen() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.specimen)
  return specimen_;
}

// repeated .google.fhir.stu3.proto.Reference result = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-observationresults"];
inline int UsCoreDiagnosticreport::result_size() const {
  return result_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDiagnosticreport::mutable_result(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.result)
  return result_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreDiagnosticreport::mutable_result() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.result)
  return &result_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreDiagnosticreport::result(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.result)
  return result_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDiagnosticreport::add_result() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDiagnosticreport.result)
  return result_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreDiagnosticreport::result() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.result)
  return result_;
}

// repeated .google.fhir.stu3.proto.Reference imaging_study = 21 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImagingStudy", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImagingManifest"];
inline int UsCoreDiagnosticreport::imaging_study_size() const {
  return imaging_study_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDiagnosticreport::mutable_imaging_study(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.imaging_study)
  return imaging_study_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreDiagnosticreport::mutable_imaging_study() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.imaging_study)
  return &imaging_study_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreDiagnosticreport::imaging_study(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.imaging_study)
  return imaging_study_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreDiagnosticreport::add_imaging_study() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDiagnosticreport.imaging_study)
  return imaging_study_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreDiagnosticreport::imaging_study() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.imaging_study)
  return imaging_study_;
}

// repeated .google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image image = 22;
inline int UsCoreDiagnosticreport::image_size() const {
  return image_.size();
}
inline void UsCoreDiagnosticreport::clear_image() {
  image_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image* UsCoreDiagnosticreport::mutable_image(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.image)
  return image_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image >*
UsCoreDiagnosticreport::mutable_image() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.image)
  return &image_;
}
inline const ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image& UsCoreDiagnosticreport::image(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.image)
  return image_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image* UsCoreDiagnosticreport::add_image() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDiagnosticreport.image)
  return image_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreDiagnosticreport_Image >&
UsCoreDiagnosticreport::image() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.image)
  return image_;
}

// .google.fhir.stu3.proto.String conclusion = 23;
inline bool UsCoreDiagnosticreport::has_conclusion() const {
  return this != internal_default_instance() && conclusion_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDiagnosticreport::_internal_conclusion() const {
  return *conclusion_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreDiagnosticreport::conclusion() const {
  const ::google::fhir::stu3::proto::String* p = conclusion_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.conclusion)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreDiagnosticreport::release_conclusion() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreDiagnosticreport.conclusion)
  
  ::google::fhir::stu3::proto::String* temp = conclusion_;
  conclusion_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreDiagnosticreport::mutable_conclusion() {
  
  if (conclusion_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    conclusion_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.conclusion)
  return conclusion_;
}
inline void UsCoreDiagnosticreport::set_allocated_conclusion(::google::fhir::stu3::proto::String* conclusion) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(conclusion_);
  }
  if (conclusion) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      conclusion = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, conclusion, submessage_arena);
    }
    
  } else {
    
  }
  conclusion_ = conclusion;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreDiagnosticreport.conclusion)
}

// repeated .google.fhir.stu3.proto.CodeableConcept coded_diagnosis = 24;
inline int UsCoreDiagnosticreport::coded_diagnosis_size() const {
  return coded_diagnosis_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreDiagnosticreport::mutable_coded_diagnosis(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.coded_diagnosis)
  return coded_diagnosis_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreDiagnosticreport::mutable_coded_diagnosis() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.coded_diagnosis)
  return &coded_diagnosis_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreDiagnosticreport::coded_diagnosis(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.coded_diagnosis)
  return coded_diagnosis_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreDiagnosticreport::add_coded_diagnosis() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDiagnosticreport.coded_diagnosis)
  return coded_diagnosis_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreDiagnosticreport::coded_diagnosis() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.coded_diagnosis)
  return coded_diagnosis_;
}

// repeated .google.fhir.stu3.proto.Attachment presented_form = 25;
inline int UsCoreDiagnosticreport::presented_form_size() const {
  return presented_form_.size();
}
inline ::google::fhir::stu3::proto::Attachment* UsCoreDiagnosticreport::mutable_presented_form(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreDiagnosticreport.presented_form)
  return presented_form_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment >*
UsCoreDiagnosticreport::mutable_presented_form() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.presented_form)
  return &presented_form_;
}
inline const ::google::fhir::stu3::proto::Attachment& UsCoreDiagnosticreport::presented_form(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreDiagnosticreport.presented_form)
  return presented_form_.Get(index);
}
inline ::google::fhir::stu3::proto::Attachment* UsCoreDiagnosticreport::add_presented_form() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreDiagnosticreport.presented_form)
  return presented_form_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment >&
UsCoreDiagnosticreport::presented_form() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreDiagnosticreport.presented_form)
  return presented_form_;
}

// -------------------------------------------------------------------

// ContactPointUsCoreDirect

// .google.fhir.stu3.proto.String id = 1;
inline bool ContactPointUsCoreDirect::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& ContactPointUsCoreDirect::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& ContactPointUsCoreDirect::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.ContactPointUsCoreDirect.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* ContactPointUsCoreDirect::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.ContactPointUsCoreDirect.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* ContactPointUsCoreDirect::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.ContactPointUsCoreDirect.id)
  return id_;
}
inline void ContactPointUsCoreDirect::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.ContactPointUsCoreDirect.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int ContactPointUsCoreDirect::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* ContactPointUsCoreDirect::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.ContactPointUsCoreDirect.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
ContactPointUsCoreDirect::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.ContactPointUsCoreDirect.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& ContactPointUsCoreDirect::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.ContactPointUsCoreDirect.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* ContactPointUsCoreDirect::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.ContactPointUsCoreDirect.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
ContactPointUsCoreDirect::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.ContactPointUsCoreDirect.extension)
  return extension_;
}

// .google.fhir.stu3.proto.Boolean value_boolean = 3;
inline bool ContactPointUsCoreDirect::has_value_boolean() const {
  return this != internal_default_instance() && value_boolean_ != NULL;
}
inline const ::google::fhir::stu3::proto::Boolean& ContactPointUsCoreDirect::_internal_value_boolean() const {
  return *value_boolean_;
}
inline const ::google::fhir::stu3::proto::Boolean& ContactPointUsCoreDirect::value_boolean() const {
  const ::google::fhir::stu3::proto::Boolean* p = value_boolean_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.ContactPointUsCoreDirect.value_boolean)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Boolean*>(
      &::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* ContactPointUsCoreDirect::release_value_boolean() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.ContactPointUsCoreDirect.value_boolean)
  
  ::google::fhir::stu3::proto::Boolean* temp = value_boolean_;
  value_boolean_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Boolean* ContactPointUsCoreDirect::mutable_value_boolean() {
  
  if (value_boolean_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Boolean>(GetArenaNoVirtual());
    value_boolean_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.ContactPointUsCoreDirect.value_boolean)
  return value_boolean_;
}
inline void ContactPointUsCoreDirect::set_allocated_value_boolean(::google::fhir::stu3::proto::Boolean* value_boolean) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(value_boolean_);
  }
  if (value_boolean) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value_boolean = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value_boolean, submessage_arena);
    }
    
  } else {
    
  }
  value_boolean_ = value_boolean;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.ContactPointUsCoreDirect.value_boolean)
}

// -------------------------------------------------------------------

// PatientUSCoreEthnicityExtension

// .google.fhir.stu3.proto.String id = 1;
inline bool PatientUSCoreEthnicityExtension::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& PatientUSCoreEthnicityExtension::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& PatientUSCoreEthnicityExtension::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* PatientUSCoreEthnicityExtension::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* PatientUSCoreEthnicityExtension::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.id)
  return id_;
}
inline void PatientUSCoreEthnicityExtension::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int PatientUSCoreEthnicityExtension::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* PatientUSCoreEthnicityExtension::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
PatientUSCoreEthnicityExtension::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& PatientUSCoreEthnicityExtension::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* PatientUSCoreEthnicityExtension::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
PatientUSCoreEthnicityExtension::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.extension)
  return extension_;
}

// .google.fhir.stu3.proto.Coding omb_category = 4;
inline bool PatientUSCoreEthnicityExtension::has_omb_category() const {
  return this != internal_default_instance() && omb_category_ != NULL;
}
inline const ::google::fhir::stu3::proto::Coding& PatientUSCoreEthnicityExtension::_internal_omb_category() const {
  return *omb_category_;
}
inline const ::google::fhir::stu3::proto::Coding& PatientUSCoreEthnicityExtension::omb_category() const {
  const ::google::fhir::stu3::proto::Coding* p = omb_category_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.omb_category)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Coding*>(
      &::google::fhir::stu3::proto::_Coding_default_instance_);
}
inline ::google::fhir::stu3::proto::Coding* PatientUSCoreEthnicityExtension::release_omb_category() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.omb_category)
  
  ::google::fhir::stu3::proto::Coding* temp = omb_category_;
  omb_category_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Coding* PatientUSCoreEthnicityExtension::mutable_omb_category() {
  
  if (omb_category_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Coding>(GetArenaNoVirtual());
    omb_category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.omb_category)
  return omb_category_;
}
inline void PatientUSCoreEthnicityExtension::set_allocated_omb_category(::google::fhir::stu3::proto::Coding* omb_category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(omb_category_);
  }
  if (omb_category) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      omb_category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, omb_category, submessage_arena);
    }
    
  } else {
    
  }
  omb_category_ = omb_category;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.omb_category)
}

// repeated .google.fhir.stu3.proto.Coding detailed = 5;
inline int PatientUSCoreEthnicityExtension::detailed_size() const {
  return detailed_.size();
}
inline ::google::fhir::stu3::proto::Coding* PatientUSCoreEthnicityExtension::mutable_detailed(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.detailed)
  return detailed_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >*
PatientUSCoreEthnicityExtension::mutable_detailed() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.detailed)
  return &detailed_;
}
inline const ::google::fhir::stu3::proto::Coding& PatientUSCoreEthnicityExtension::detailed(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.detailed)
  return detailed_.Get(index);
}
inline ::google::fhir::stu3::proto::Coding* PatientUSCoreEthnicityExtension::add_detailed() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.detailed)
  return detailed_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >&
PatientUSCoreEthnicityExtension::detailed() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.detailed)
  return detailed_;
}

// .google.fhir.stu3.proto.String text = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool PatientUSCoreEthnicityExtension::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& PatientUSCoreEthnicityExtension::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::String& PatientUSCoreEthnicityExtension::text() const {
  const ::google::fhir::stu3::proto::String* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* PatientUSCoreEthnicityExtension::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.text)
  
  ::google::fhir::stu3::proto::String* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* PatientUSCoreEthnicityExtension::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.text)
  return text_;
}
inline void PatientUSCoreEthnicityExtension::set_allocated_text(::google::fhir::stu3::proto::String* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension.text)
}

// -------------------------------------------------------------------

// UsCoreGoal_Start

// .google.fhir.stu3.proto.Date date = 1;
inline bool UsCoreGoal_Start::has_date() const {
  return start_case() == kDate;
}
inline void UsCoreGoal_Start::set_has_date() {
  _oneof_case_[0] = kDate;
}
inline const ::google::fhir::stu3::proto::Date& UsCoreGoal_Start::_internal_date() const {
  return *start_.date_;
}
inline ::google::fhir::stu3::proto::Date* UsCoreGoal_Start::release_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.Start.date)
  if (has_date()) {
    clear_has_start();
      ::google::fhir::stu3::proto::Date* temp = start_.date_;
    start_.date_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Date& UsCoreGoal_Start::date() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.Start.date)
  return has_date()
      ? *start_.date_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Date*>(&::google::fhir::stu3::proto::_Date_default_instance_);
}
inline ::google::fhir::stu3::proto::Date* UsCoreGoal_Start::mutable_date() {
  if (!has_date()) {
    clear_start();
    set_has_date();
    start_.date_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Date >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.Start.date)
  return start_.date_;
}

// .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
inline bool UsCoreGoal_Start::has_codeable_concept() const {
  return start_case() == kCodeableConcept;
}
inline void UsCoreGoal_Start::set_has_codeable_concept() {
  _oneof_case_[0] = kCodeableConcept;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreGoal_Start::_internal_codeable_concept() const {
  return *start_.codeable_concept_;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreGoal_Start::release_codeable_concept() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.Start.codeable_concept)
  if (has_codeable_concept()) {
    clear_has_start();
      ::google::fhir::stu3::proto::CodeableConcept* temp = start_.codeable_concept_;
    start_.codeable_concept_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreGoal_Start::codeable_concept() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.Start.codeable_concept)
  return has_codeable_concept()
      ? *start_.codeable_concept_
      : *reinterpret_cast< ::google::fhir::stu3::proto::CodeableConcept*>(&::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreGoal_Start::mutable_codeable_concept() {
  if (!has_codeable_concept()) {
    clear_start();
    set_has_codeable_concept();
    start_.codeable_concept_ = CreateMaybeMessage< ::google::fhir::stu3::proto::CodeableConcept >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.Start.codeable_concept)
  return start_.codeable_concept_;
}

inline bool UsCoreGoal_Start::has_start() const {
  return start_case() != START_NOT_SET;
}
inline void UsCoreGoal_Start::clear_has_start() {
  _oneof_case_[0] = START_NOT_SET;
}
inline UsCoreGoal_Start::StartCase UsCoreGoal_Start::start_case() const {
  return UsCoreGoal_Start::StartCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreGoal_Target_Detail

// .google.fhir.stu3.proto.Quantity quantity = 1;
inline bool UsCoreGoal_Target_Detail::has_quantity() const {
  return detail_case() == kQuantity;
}
inline void UsCoreGoal_Target_Detail::set_has_quantity() {
  _oneof_case_[0] = kQuantity;
}
inline const ::google::fhir::stu3::proto::Quantity& UsCoreGoal_Target_Detail::_internal_quantity() const {
  return *detail_.quantity_;
}
inline ::google::fhir::stu3::proto::Quantity* UsCoreGoal_Target_Detail::release_quantity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail.quantity)
  if (has_quantity()) {
    clear_has_detail();
      ::google::fhir::stu3::proto::Quantity* temp = detail_.quantity_;
    detail_.quantity_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Quantity& UsCoreGoal_Target_Detail::quantity() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail.quantity)
  return has_quantity()
      ? *detail_.quantity_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Quantity*>(&::google::fhir::stu3::proto::_Quantity_default_instance_);
}
inline ::google::fhir::stu3::proto::Quantity* UsCoreGoal_Target_Detail::mutable_quantity() {
  if (!has_quantity()) {
    clear_detail();
    set_has_quantity();
    detail_.quantity_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Quantity >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail.quantity)
  return detail_.quantity_;
}

// .google.fhir.stu3.proto.Range range = 2;
inline bool UsCoreGoal_Target_Detail::has_range() const {
  return detail_case() == kRange;
}
inline void UsCoreGoal_Target_Detail::set_has_range() {
  _oneof_case_[0] = kRange;
}
inline const ::google::fhir::stu3::proto::Range& UsCoreGoal_Target_Detail::_internal_range() const {
  return *detail_.range_;
}
inline ::google::fhir::stu3::proto::Range* UsCoreGoal_Target_Detail::release_range() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail.range)
  if (has_range()) {
    clear_has_detail();
      ::google::fhir::stu3::proto::Range* temp = detail_.range_;
    detail_.range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Range& UsCoreGoal_Target_Detail::range() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail.range)
  return has_range()
      ? *detail_.range_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Range*>(&::google::fhir::stu3::proto::_Range_default_instance_);
}
inline ::google::fhir::stu3::proto::Range* UsCoreGoal_Target_Detail::mutable_range() {
  if (!has_range()) {
    clear_detail();
    set_has_range();
    detail_.range_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Range >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail.range)
  return detail_.range_;
}

// .google.fhir.stu3.proto.CodeableConcept codeable_concept = 3;
inline bool UsCoreGoal_Target_Detail::has_codeable_concept() const {
  return detail_case() == kCodeableConcept;
}
inline void UsCoreGoal_Target_Detail::set_has_codeable_concept() {
  _oneof_case_[0] = kCodeableConcept;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreGoal_Target_Detail::_internal_codeable_concept() const {
  return *detail_.codeable_concept_;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreGoal_Target_Detail::release_codeable_concept() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail.codeable_concept)
  if (has_codeable_concept()) {
    clear_has_detail();
      ::google::fhir::stu3::proto::CodeableConcept* temp = detail_.codeable_concept_;
    detail_.codeable_concept_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreGoal_Target_Detail::codeable_concept() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail.codeable_concept)
  return has_codeable_concept()
      ? *detail_.codeable_concept_
      : *reinterpret_cast< ::google::fhir::stu3::proto::CodeableConcept*>(&::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreGoal_Target_Detail::mutable_codeable_concept() {
  if (!has_codeable_concept()) {
    clear_detail();
    set_has_codeable_concept();
    detail_.codeable_concept_ = CreateMaybeMessage< ::google::fhir::stu3::proto::CodeableConcept >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.Target.Detail.codeable_concept)
  return detail_.codeable_concept_;
}

inline bool UsCoreGoal_Target_Detail::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void UsCoreGoal_Target_Detail::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline UsCoreGoal_Target_Detail::DetailCase UsCoreGoal_Target_Detail::detail_case() const {
  return UsCoreGoal_Target_Detail::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreGoal_Target_Due

// .google.fhir.stu3.proto.Date date = 1;
inline bool UsCoreGoal_Target_Due::has_date() const {
  return due_case() == kDate;
}
inline void UsCoreGoal_Target_Due::set_has_date() {
  _oneof_case_[0] = kDate;
}
inline const ::google::fhir::stu3::proto::Date& UsCoreGoal_Target_Due::_internal_date() const {
  return *due_.date_;
}
inline ::google::fhir::stu3::proto::Date* UsCoreGoal_Target_Due::release_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.Target.Due.date)
  if (has_date()) {
    clear_has_due();
      ::google::fhir::stu3::proto::Date* temp = due_.date_;
    due_.date_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Date& UsCoreGoal_Target_Due::date() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.Target.Due.date)
  return has_date()
      ? *due_.date_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Date*>(&::google::fhir::stu3::proto::_Date_default_instance_);
}
inline ::google::fhir::stu3::proto::Date* UsCoreGoal_Target_Due::mutable_date() {
  if (!has_date()) {
    clear_due();
    set_has_date();
    due_.date_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Date >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.Target.Due.date)
  return due_.date_;
}

// .google.fhir.stu3.proto.Duration duration = 2;
inline bool UsCoreGoal_Target_Due::has_duration() const {
  return due_case() == kDuration;
}
inline void UsCoreGoal_Target_Due::set_has_duration() {
  _oneof_case_[0] = kDuration;
}
inline const ::google::fhir::stu3::proto::Duration& UsCoreGoal_Target_Due::_internal_duration() const {
  return *due_.duration_;
}
inline ::google::fhir::stu3::proto::Duration* UsCoreGoal_Target_Due::release_duration() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.Target.Due.duration)
  if (has_duration()) {
    clear_has_due();
      ::google::fhir::stu3::proto::Duration* temp = due_.duration_;
    due_.duration_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Duration& UsCoreGoal_Target_Due::duration() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.Target.Due.duration)
  return has_duration()
      ? *due_.duration_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Duration*>(&::google::fhir::stu3::proto::_Duration_default_instance_);
}
inline ::google::fhir::stu3::proto::Duration* UsCoreGoal_Target_Due::mutable_duration() {
  if (!has_duration()) {
    clear_due();
    set_has_duration();
    due_.duration_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Duration >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.Target.Due.duration)
  return due_.duration_;
}

inline bool UsCoreGoal_Target_Due::has_due() const {
  return due_case() != DUE_NOT_SET;
}
inline void UsCoreGoal_Target_Due::clear_has_due() {
  _oneof_case_[0] = DUE_NOT_SET;
}
inline UsCoreGoal_Target_Due::DueCase UsCoreGoal_Target_Due::due_case() const {
  return UsCoreGoal_Target_Due::DueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreGoal_Target

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreGoal_Target::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreGoal_Target::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreGoal_Target::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.Target.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreGoal_Target::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.Target.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreGoal_Target::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.Target.id)
  return id_;
}
inline void UsCoreGoal_Target::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.Target.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreGoal_Target::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreGoal_Target::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.Target.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreGoal_Target::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreGoal.Target.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreGoal_Target::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.Target.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreGoal_Target::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreGoal.Target.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreGoal_Target::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreGoal.Target.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreGoal_Target::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreGoal_Target::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.Target.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreGoal_Target::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreGoal.Target.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreGoal_Target::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.Target.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreGoal_Target::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreGoal.Target.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreGoal_Target::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreGoal.Target.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.CodeableConcept measure = 4;
inline bool UsCoreGoal_Target::has_measure() const {
  return this != internal_default_instance() && measure_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreGoal_Target::_internal_measure() const {
  return *measure_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreGoal_Target::measure() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = measure_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.Target.measure)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreGoal_Target::release_measure() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.Target.measure)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = measure_;
  measure_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreGoal_Target::mutable_measure() {
  
  if (measure_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    measure_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.Target.measure)
  return measure_;
}
inline void UsCoreGoal_Target::set_allocated_measure(::google::fhir::stu3::proto::CodeableConcept* measure) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(measure_);
  }
  if (measure) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      measure = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, measure, submessage_arena);
    }
    
  } else {
    
  }
  measure_ = measure;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.Target.measure)
}

// .google.fhir.stu3.uscore.UsCoreGoal.Target.Detail detail = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreGoal_Target::has_detail() const {
  return this != internal_default_instance() && detail_ != NULL;
}
inline void UsCoreGoal_Target::clear_detail() {
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) {
    delete detail_;
  }
  detail_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail& UsCoreGoal_Target::_internal_detail() const {
  return *detail_;
}
inline const ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail& UsCoreGoal_Target::detail() const {
  const ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail* p = detail_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.Target.detail)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail*>(
      &::google::fhir::stu3::uscore::_UsCoreGoal_Target_Detail_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail* UsCoreGoal_Target::release_detail() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.Target.detail)
  
  ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail* UsCoreGoal_Target::mutable_detail() {
  
  if (detail_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail>(GetArenaNoVirtual());
    detail_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.Target.detail)
  return detail_;
}
inline void UsCoreGoal_Target::set_allocated_detail(::google::fhir::stu3::uscore::UsCoreGoal_Target_Detail* detail) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete detail_;
  }
  if (detail) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      detail = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, detail, submessage_arena);
    }
    
  } else {
    
  }
  detail_ = detail;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.Target.detail)
}

// .google.fhir.stu3.uscore.UsCoreGoal.Target.Due due = 6 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreGoal_Target::has_due() const {
  return this != internal_default_instance() && due_ != NULL;
}
inline void UsCoreGoal_Target::clear_due() {
  if (GetArenaNoVirtual() == NULL && due_ != NULL) {
    delete due_;
  }
  due_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due& UsCoreGoal_Target::_internal_due() const {
  return *due_;
}
inline const ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due& UsCoreGoal_Target::due() const {
  const ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due* p = due_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.Target.due)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due*>(
      &::google::fhir::stu3::uscore::_UsCoreGoal_Target_Due_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due* UsCoreGoal_Target::release_due() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.Target.due)
  
  ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due* temp = due_;
  due_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreGoal_Target_Due* UsCoreGoal_Target::mutable_due() {
  
  if (due_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreGoal_Target_Due>(GetArenaNoVirtual());
    due_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.Target.due)
  return due_;
}
inline void UsCoreGoal_Target::set_allocated_due(::google::fhir::stu3::uscore::UsCoreGoal_Target_Due* due) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete due_;
  }
  if (due) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      due = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, due, submessage_arena);
    }
    
  } else {
    
  }
  due_ = due;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.Target.due)
}

// -------------------------------------------------------------------

// UsCoreGoal

// .google.fhir.stu3.proto.Id id = 1;
inline bool UsCoreGoal::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreGoal::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreGoal::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* UsCoreGoal::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* UsCoreGoal::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.id)
  return id_;
}
inline void UsCoreGoal::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool UsCoreGoal::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreGoal::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreGoal::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* UsCoreGoal::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* UsCoreGoal::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.meta)
  return meta_;
}
inline void UsCoreGoal::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool UsCoreGoal::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreGoal::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreGoal::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreGoal::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreGoal::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.implicit_rules)
  return implicit_rules_;
}
inline void UsCoreGoal::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool UsCoreGoal::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreGoal::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreGoal::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreGoal::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreGoal::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.language)
  return language_;
}
inline void UsCoreGoal::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.language)
}

// .google.fhir.stu3.proto.Narrative text = 5;
inline bool UsCoreGoal::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreGoal::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreGoal::text() const {
  const ::google::fhir::stu3::proto::Narrative* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Narrative*>(
      &::google::fhir::stu3::proto::_Narrative_default_instance_);
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreGoal::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.text)
  
  ::google::fhir::stu3::proto::Narrative* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreGoal::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.text)
  return text_;
}
inline void UsCoreGoal::set_allocated_text(::google::fhir::stu3::proto::Narrative* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.text)
}

// repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
inline int UsCoreGoal::contained_size() const {
  return contained_.size();
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreGoal::mutable_contained(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.contained)
  return contained_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
UsCoreGoal::mutable_contained() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreGoal.contained)
  return &contained_;
}
inline const ::google::fhir::stu3::proto::ContainedResource& UsCoreGoal::contained(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.contained)
  return contained_.Get(index);
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreGoal::add_contained() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreGoal.contained)
  return contained_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
UsCoreGoal::contained() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreGoal.contained)
  return contained_;
}

// repeated .google.fhir.stu3.proto.Extension extension = 7;
inline int UsCoreGoal::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreGoal::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreGoal::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreGoal.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreGoal::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreGoal::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreGoal.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreGoal::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreGoal.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
inline int UsCoreGoal::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreGoal::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreGoal::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreGoal.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreGoal::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreGoal::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreGoal.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreGoal::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreGoal.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.Identifier identifier = 9;
inline int UsCoreGoal::identifier_size() const {
  return identifier_.size();
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreGoal::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.identifier)
  return identifier_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
UsCoreGoal::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreGoal.identifier)
  return &identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCoreGoal::identifier(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.identifier)
  return identifier_.Get(index);
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreGoal::add_identifier() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreGoal.identifier)
  return identifier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
UsCoreGoal::identifier() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreGoal.identifier)
  return identifier_;
}

// .google.fhir.stu3.proto.GoalStatusCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreGoal::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::fhir::stu3::proto::GoalStatusCode& UsCoreGoal::_internal_status() const {
  return *status_;
}
inline const ::google::fhir::stu3::proto::GoalStatusCode& UsCoreGoal::status() const {
  const ::google::fhir::stu3::proto::GoalStatusCode* p = status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::GoalStatusCode*>(
      &::google::fhir::stu3::proto::_GoalStatusCode_default_instance_);
}
inline ::google::fhir::stu3::proto::GoalStatusCode* UsCoreGoal::release_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.status)
  
  ::google::fhir::stu3::proto::GoalStatusCode* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::GoalStatusCode* UsCoreGoal::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::GoalStatusCode>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.status)
  return status_;
}
inline void UsCoreGoal::set_allocated_status(::google::fhir::stu3::proto::GoalStatusCode* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.status)
}

// repeated .google.fhir.stu3.proto.CodeableConcept category = 11;
inline int UsCoreGoal::category_size() const {
  return category_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreGoal::mutable_category(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.category)
  return category_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreGoal::mutable_category() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreGoal.category)
  return &category_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreGoal::category(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.category)
  return category_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreGoal::add_category() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreGoal.category)
  return category_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreGoal::category() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreGoal.category)
  return category_;
}

// .google.fhir.stu3.proto.CodeableConcept priority = 12;
inline bool UsCoreGoal::has_priority() const {
  return this != internal_default_instance() && priority_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreGoal::_internal_priority() const {
  return *priority_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreGoal::priority() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = priority_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.priority)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreGoal::release_priority() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.priority)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = priority_;
  priority_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreGoal::mutable_priority() {
  
  if (priority_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    priority_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.priority)
  return priority_;
}
inline void UsCoreGoal::set_allocated_priority(::google::fhir::stu3::proto::CodeableConcept* priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(priority_);
  }
  if (priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, priority, submessage_arena);
    }
    
  } else {
    
  }
  priority_ = priority;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.priority)
}

// .google.fhir.stu3.proto.CodeableConcept description = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreGoal::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreGoal::_internal_description() const {
  return *description_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreGoal::description() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = description_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.description)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreGoal::release_description() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.description)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreGoal::mutable_description() {
  
  if (description_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    description_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.description)
  return description_;
}
inline void UsCoreGoal::set_allocated_description(::google::fhir::stu3::proto::CodeableConcept* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(description_);
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.description)
}

// .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
inline bool UsCoreGoal::has_subject() const {
  return this != internal_default_instance() && subject_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreGoal::_internal_subject() const {
  return *subject_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreGoal::subject() const {
  const ::google::fhir::stu3::proto::Reference* p = subject_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.subject)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreGoal::release_subject() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.subject)
  
  ::google::fhir::stu3::proto::Reference* temp = subject_;
  subject_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreGoal::mutable_subject() {
  
  if (subject_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    subject_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.subject)
  return subject_;
}
inline void UsCoreGoal::set_allocated_subject(::google::fhir::stu3::proto::Reference* subject) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(subject_);
  }
  if (subject) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      subject = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, subject, submessage_arena);
    }
    
  } else {
    
  }
  subject_ = subject;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.subject)
}

// .google.fhir.stu3.uscore.UsCoreGoal.Start start = 15 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreGoal::has_start() const {
  return this != internal_default_instance() && start_ != NULL;
}
inline void UsCoreGoal::clear_start() {
  if (GetArenaNoVirtual() == NULL && start_ != NULL) {
    delete start_;
  }
  start_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreGoal_Start& UsCoreGoal::_internal_start() const {
  return *start_;
}
inline const ::google::fhir::stu3::uscore::UsCoreGoal_Start& UsCoreGoal::start() const {
  const ::google::fhir::stu3::uscore::UsCoreGoal_Start* p = start_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.start)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreGoal_Start*>(
      &::google::fhir::stu3::uscore::_UsCoreGoal_Start_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreGoal_Start* UsCoreGoal::release_start() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.start)
  
  ::google::fhir::stu3::uscore::UsCoreGoal_Start* temp = start_;
  start_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreGoal_Start* UsCoreGoal::mutable_start() {
  
  if (start_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreGoal_Start>(GetArenaNoVirtual());
    start_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.start)
  return start_;
}
inline void UsCoreGoal::set_allocated_start(::google::fhir::stu3::uscore::UsCoreGoal_Start* start) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete start_;
  }
  if (start) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      start = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start, submessage_arena);
    }
    
  } else {
    
  }
  start_ = start;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.start)
}

// .google.fhir.stu3.uscore.UsCoreGoal.Target target = 16;
inline bool UsCoreGoal::has_target() const {
  return this != internal_default_instance() && target_ != NULL;
}
inline void UsCoreGoal::clear_target() {
  if (GetArenaNoVirtual() == NULL && target_ != NULL) {
    delete target_;
  }
  target_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreGoal_Target& UsCoreGoal::_internal_target() const {
  return *target_;
}
inline const ::google::fhir::stu3::uscore::UsCoreGoal_Target& UsCoreGoal::target() const {
  const ::google::fhir::stu3::uscore::UsCoreGoal_Target* p = target_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.target)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreGoal_Target*>(
      &::google::fhir::stu3::uscore::_UsCoreGoal_Target_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreGoal_Target* UsCoreGoal::release_target() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.target)
  
  ::google::fhir::stu3::uscore::UsCoreGoal_Target* temp = target_;
  target_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreGoal_Target* UsCoreGoal::mutable_target() {
  
  if (target_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreGoal_Target>(GetArenaNoVirtual());
    target_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.target)
  return target_;
}
inline void UsCoreGoal::set_allocated_target(::google::fhir::stu3::uscore::UsCoreGoal_Target* target) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete target_;
  }
  if (target) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target, submessage_arena);
    }
    
  } else {
    
  }
  target_ = target;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.target)
}

// .google.fhir.stu3.proto.Date status_date = 17;
inline bool UsCoreGoal::has_status_date() const {
  return this != internal_default_instance() && status_date_ != NULL;
}
inline const ::google::fhir::stu3::proto::Date& UsCoreGoal::_internal_status_date() const {
  return *status_date_;
}
inline const ::google::fhir::stu3::proto::Date& UsCoreGoal::status_date() const {
  const ::google::fhir::stu3::proto::Date* p = status_date_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.status_date)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Date*>(
      &::google::fhir::stu3::proto::_Date_default_instance_);
}
inline ::google::fhir::stu3::proto::Date* UsCoreGoal::release_status_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.status_date)
  
  ::google::fhir::stu3::proto::Date* temp = status_date_;
  status_date_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Date* UsCoreGoal::mutable_status_date() {
  
  if (status_date_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Date>(GetArenaNoVirtual());
    status_date_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.status_date)
  return status_date_;
}
inline void UsCoreGoal::set_allocated_status_date(::google::fhir::stu3::proto::Date* status_date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_date_);
  }
  if (status_date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status_date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status_date, submessage_arena);
    }
    
  } else {
    
  }
  status_date_ = status_date;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.status_date)
}

// .google.fhir.stu3.proto.String status_reason = 18;
inline bool UsCoreGoal::has_status_reason() const {
  return this != internal_default_instance() && status_reason_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreGoal::_internal_status_reason() const {
  return *status_reason_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreGoal::status_reason() const {
  const ::google::fhir::stu3::proto::String* p = status_reason_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.status_reason)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreGoal::release_status_reason() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.status_reason)
  
  ::google::fhir::stu3::proto::String* temp = status_reason_;
  status_reason_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreGoal::mutable_status_reason() {
  
  if (status_reason_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    status_reason_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.status_reason)
  return status_reason_;
}
inline void UsCoreGoal::set_allocated_status_reason(::google::fhir::stu3::proto::String* status_reason) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_reason_);
  }
  if (status_reason) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status_reason = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status_reason, submessage_arena);
    }
    
  } else {
    
  }
  status_reason_ = status_reason;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.status_reason)
}

// .google.fhir.stu3.proto.Reference expressed_by = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
inline bool UsCoreGoal::has_expressed_by() const {
  return this != internal_default_instance() && expressed_by_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreGoal::_internal_expressed_by() const {
  return *expressed_by_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreGoal::expressed_by() const {
  const ::google::fhir::stu3::proto::Reference* p = expressed_by_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.expressed_by)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreGoal::release_expressed_by() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreGoal.expressed_by)
  
  ::google::fhir::stu3::proto::Reference* temp = expressed_by_;
  expressed_by_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreGoal::mutable_expressed_by() {
  
  if (expressed_by_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    expressed_by_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.expressed_by)
  return expressed_by_;
}
inline void UsCoreGoal::set_allocated_expressed_by(::google::fhir::stu3::proto::Reference* expressed_by) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(expressed_by_);
  }
  if (expressed_by) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      expressed_by = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, expressed_by, submessage_arena);
    }
    
  } else {
    
  }
  expressed_by_ = expressed_by;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreGoal.expressed_by)
}

// repeated .google.fhir.stu3.proto.Reference addresses = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationStatement", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RiskAssessment"];
inline int UsCoreGoal::addresses_size() const {
  return addresses_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreGoal::mutable_addresses(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.addresses)
  return addresses_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreGoal::mutable_addresses() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreGoal.addresses)
  return &addresses_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreGoal::addresses(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.addresses)
  return addresses_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreGoal::add_addresses() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreGoal.addresses)
  return addresses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreGoal::addresses() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreGoal.addresses)
  return addresses_;
}

// repeated .google.fhir.stu3.proto.Annotation note = 21;
inline int UsCoreGoal::note_size() const {
  return note_.size();
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreGoal::mutable_note(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.note)
  return note_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
UsCoreGoal::mutable_note() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreGoal.note)
  return &note_;
}
inline const ::google::fhir::stu3::proto::Annotation& UsCoreGoal::note(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.note)
  return note_.Get(index);
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreGoal::add_note() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreGoal.note)
  return note_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
UsCoreGoal::note() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreGoal.note)
  return note_;
}

// repeated .google.fhir.stu3.proto.CodeableConcept outcome_code = 22;
inline int UsCoreGoal::outcome_code_size() const {
  return outcome_code_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreGoal::mutable_outcome_code(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.outcome_code)
  return outcome_code_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreGoal::mutable_outcome_code() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreGoal.outcome_code)
  return &outcome_code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreGoal::outcome_code(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.outcome_code)
  return outcome_code_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreGoal::add_outcome_code() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreGoal.outcome_code)
  return outcome_code_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreGoal::outcome_code() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreGoal.outcome_code)
  return outcome_code_;
}

// repeated .google.fhir.stu3.proto.Reference outcome_reference = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
inline int UsCoreGoal::outcome_reference_size() const {
  return outcome_reference_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreGoal::mutable_outcome_reference(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreGoal.outcome_reference)
  return outcome_reference_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreGoal::mutable_outcome_reference() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreGoal.outcome_reference)
  return &outcome_reference_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreGoal::outcome_reference(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreGoal.outcome_reference)
  return outcome_reference_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreGoal::add_outcome_reference() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreGoal.outcome_reference)
  return outcome_reference_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreGoal::outcome_reference() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreGoal.outcome_reference)
  return outcome_reference_;
}

// -------------------------------------------------------------------

// UsCoreImmunization_Practitioner

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreImmunization_Practitioner::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreImmunization_Practitioner::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreImmunization_Practitioner::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreImmunization_Practitioner::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreImmunization_Practitioner::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.id)
  return id_;
}
inline void UsCoreImmunization_Practitioner::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreImmunization_Practitioner::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization_Practitioner::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreImmunization_Practitioner::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreImmunization_Practitioner::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization_Practitioner::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreImmunization_Practitioner::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreImmunization_Practitioner::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization_Practitioner::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreImmunization_Practitioner::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreImmunization_Practitioner::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization_Practitioner::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreImmunization_Practitioner::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.CodeableConcept role = 4;
inline bool UsCoreImmunization_Practitioner::has_role() const {
  return this != internal_default_instance() && role_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreImmunization_Practitioner::_internal_role() const {
  return *role_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreImmunization_Practitioner::role() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = role_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.role)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization_Practitioner::release_role() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.role)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = role_;
  role_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization_Practitioner::mutable_role() {
  
  if (role_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    role_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.role)
  return role_;
}
inline void UsCoreImmunization_Practitioner::set_allocated_role(::google::fhir::stu3::proto::CodeableConcept* role) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(role_);
  }
  if (role) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      role = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, role, submessage_arena);
    }
    
  } else {
    
  }
  role_ = role;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.role)
}

// .google.fhir.stu3.proto.Reference actor = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
inline bool UsCoreImmunization_Practitioner::has_actor() const {
  return this != internal_default_instance() && actor_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreImmunization_Practitioner::_internal_actor() const {
  return *actor_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreImmunization_Practitioner::actor() const {
  const ::google::fhir::stu3::proto::Reference* p = actor_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.actor)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreImmunization_Practitioner::release_actor() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.actor)
  
  ::google::fhir::stu3::proto::Reference* temp = actor_;
  actor_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreImmunization_Practitioner::mutable_actor() {
  
  if (actor_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    actor_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.actor)
  return actor_;
}
inline void UsCoreImmunization_Practitioner::set_allocated_actor(::google::fhir::stu3::proto::Reference* actor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(actor_);
  }
  if (actor) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      actor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, actor, submessage_arena);
    }
    
  } else {
    
  }
  actor_ = actor;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.Practitioner.actor)
}

// -------------------------------------------------------------------

// UsCoreImmunization_Explanation

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreImmunization_Explanation::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreImmunization_Explanation::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreImmunization_Explanation::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreImmunization_Explanation::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreImmunization_Explanation::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.id)
  return id_;
}
inline void UsCoreImmunization_Explanation::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreImmunization_Explanation::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization_Explanation::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreImmunization_Explanation::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreImmunization_Explanation::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization_Explanation::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreImmunization_Explanation::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreImmunization_Explanation::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization_Explanation::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreImmunization_Explanation::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreImmunization_Explanation::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization_Explanation::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreImmunization_Explanation::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.CodeableConcept reason = 4;
inline int UsCoreImmunization_Explanation::reason_size() const {
  return reason_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization_Explanation::mutable_reason(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.reason)
  return reason_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreImmunization_Explanation::mutable_reason() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.reason)
  return &reason_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreImmunization_Explanation::reason(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.reason)
  return reason_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization_Explanation::add_reason() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.reason)
  return reason_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreImmunization_Explanation::reason() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.reason)
  return reason_;
}

// repeated .google.fhir.stu3.proto.CodeableConcept reason_not_given = 5;
inline int UsCoreImmunization_Explanation::reason_not_given_size() const {
  return reason_not_given_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization_Explanation::mutable_reason_not_given(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.reason_not_given)
  return reason_not_given_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreImmunization_Explanation::mutable_reason_not_given() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.reason_not_given)
  return &reason_not_given_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreImmunization_Explanation::reason_not_given(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.reason_not_given)
  return reason_not_given_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization_Explanation::add_reason_not_given() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.reason_not_given)
  return reason_not_given_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreImmunization_Explanation::reason_not_given() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.Explanation.reason_not_given)
  return reason_not_given_;
}

// -------------------------------------------------------------------

// UsCoreImmunization_Reaction

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreImmunization_Reaction::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreImmunization_Reaction::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreImmunization_Reaction::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreImmunization_Reaction::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreImmunization_Reaction::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.id)
  return id_;
}
inline void UsCoreImmunization_Reaction::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreImmunization_Reaction::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization_Reaction::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreImmunization_Reaction::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreImmunization_Reaction::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization_Reaction::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreImmunization_Reaction::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreImmunization_Reaction::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization_Reaction::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreImmunization_Reaction::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreImmunization_Reaction::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization_Reaction::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreImmunization_Reaction::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.DateTime date = 4;
inline bool UsCoreImmunization_Reaction::has_date() const {
  return this != internal_default_instance() && date_ != NULL;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreImmunization_Reaction::_internal_date() const {
  return *date_;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreImmunization_Reaction::date() const {
  const ::google::fhir::stu3::proto::DateTime* p = date_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.date)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::DateTime*>(
      &::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreImmunization_Reaction::release_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.date)
  
  ::google::fhir::stu3::proto::DateTime* temp = date_;
  date_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreImmunization_Reaction::mutable_date() {
  
  if (date_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::DateTime>(GetArenaNoVirtual());
    date_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.date)
  return date_;
}
inline void UsCoreImmunization_Reaction::set_allocated_date(::google::fhir::stu3::proto::DateTime* date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(date_);
  }
  if (date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date, submessage_arena);
    }
    
  } else {
    
  }
  date_ = date;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.date)
}

// .google.fhir.stu3.proto.Reference detail = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
inline bool UsCoreImmunization_Reaction::has_detail() const {
  return this != internal_default_instance() && detail_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreImmunization_Reaction::_internal_detail() const {
  return *detail_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreImmunization_Reaction::detail() const {
  const ::google::fhir::stu3::proto::Reference* p = detail_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.detail)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreImmunization_Reaction::release_detail() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.detail)
  
  ::google::fhir::stu3::proto::Reference* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreImmunization_Reaction::mutable_detail() {
  
  if (detail_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    detail_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.detail)
  return detail_;
}
inline void UsCoreImmunization_Reaction::set_allocated_detail(::google::fhir::stu3::proto::Reference* detail) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(detail_);
  }
  if (detail) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      detail = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, detail, submessage_arena);
    }
    
  } else {
    
  }
  detail_ = detail;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.detail)
}

// .google.fhir.stu3.proto.Boolean reported = 6;
inline bool UsCoreImmunization_Reaction::has_reported() const {
  return this != internal_default_instance() && reported_ != NULL;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreImmunization_Reaction::_internal_reported() const {
  return *reported_;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreImmunization_Reaction::reported() const {
  const ::google::fhir::stu3::proto::Boolean* p = reported_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.reported)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Boolean*>(
      &::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreImmunization_Reaction::release_reported() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.reported)
  
  ::google::fhir::stu3::proto::Boolean* temp = reported_;
  reported_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreImmunization_Reaction::mutable_reported() {
  
  if (reported_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Boolean>(GetArenaNoVirtual());
    reported_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.reported)
  return reported_;
}
inline void UsCoreImmunization_Reaction::set_allocated_reported(::google::fhir::stu3::proto::Boolean* reported) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(reported_);
  }
  if (reported) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reported = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reported, submessage_arena);
    }
    
  } else {
    
  }
  reported_ = reported;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.Reaction.reported)
}

// -------------------------------------------------------------------

// UsCoreImmunization_VaccinationProtocol

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreImmunization_VaccinationProtocol::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreImmunization_VaccinationProtocol::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreImmunization_VaccinationProtocol::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreImmunization_VaccinationProtocol::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreImmunization_VaccinationProtocol::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.id)
  return id_;
}
inline void UsCoreImmunization_VaccinationProtocol::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreImmunization_VaccinationProtocol::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization_VaccinationProtocol::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreImmunization_VaccinationProtocol::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreImmunization_VaccinationProtocol::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization_VaccinationProtocol::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreImmunization_VaccinationProtocol::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreImmunization_VaccinationProtocol::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization_VaccinationProtocol::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreImmunization_VaccinationProtocol::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreImmunization_VaccinationProtocol::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization_VaccinationProtocol::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreImmunization_VaccinationProtocol::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.PositiveInt dose_sequence = 4;
inline bool UsCoreImmunization_VaccinationProtocol::has_dose_sequence() const {
  return this != internal_default_instance() && dose_sequence_ != NULL;
}
inline const ::google::fhir::stu3::proto::PositiveInt& UsCoreImmunization_VaccinationProtocol::_internal_dose_sequence() const {
  return *dose_sequence_;
}
inline const ::google::fhir::stu3::proto::PositiveInt& UsCoreImmunization_VaccinationProtocol::dose_sequence() const {
  const ::google::fhir::stu3::proto::PositiveInt* p = dose_sequence_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.dose_sequence)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::PositiveInt*>(
      &::google::fhir::stu3::proto::_PositiveInt_default_instance_);
}
inline ::google::fhir::stu3::proto::PositiveInt* UsCoreImmunization_VaccinationProtocol::release_dose_sequence() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.dose_sequence)
  
  ::google::fhir::stu3::proto::PositiveInt* temp = dose_sequence_;
  dose_sequence_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::PositiveInt* UsCoreImmunization_VaccinationProtocol::mutable_dose_sequence() {
  
  if (dose_sequence_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::PositiveInt>(GetArenaNoVirtual());
    dose_sequence_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.dose_sequence)
  return dose_sequence_;
}
inline void UsCoreImmunization_VaccinationProtocol::set_allocated_dose_sequence(::google::fhir::stu3::proto::PositiveInt* dose_sequence) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dose_sequence_);
  }
  if (dose_sequence) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dose_sequence = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dose_sequence, submessage_arena);
    }
    
  } else {
    
  }
  dose_sequence_ = dose_sequence;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.dose_sequence)
}

// .google.fhir.stu3.proto.String description = 5;
inline bool UsCoreImmunization_VaccinationProtocol::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreImmunization_VaccinationProtocol::_internal_description() const {
  return *description_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreImmunization_VaccinationProtocol::description() const {
  const ::google::fhir::stu3::proto::String* p = description_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.description)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreImmunization_VaccinationProtocol::release_description() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.description)
  
  ::google::fhir::stu3::proto::String* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreImmunization_VaccinationProtocol::mutable_description() {
  
  if (description_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    description_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.description)
  return description_;
}
inline void UsCoreImmunization_VaccinationProtocol::set_allocated_description(::google::fhir::stu3::proto::String* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(description_);
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.description)
}

// .google.fhir.stu3.proto.Reference authority = 6 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
inline bool UsCoreImmunization_VaccinationProtocol::has_authority() const {
  return this != internal_default_instance() && authority_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreImmunization_VaccinationProtocol::_internal_authority() const {
  return *authority_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreImmunization_VaccinationProtocol::authority() const {
  const ::google::fhir::stu3::proto::Reference* p = authority_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.authority)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreImmunization_VaccinationProtocol::release_authority() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.authority)
  
  ::google::fhir::stu3::proto::Reference* temp = authority_;
  authority_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreImmunization_VaccinationProtocol::mutable_authority() {
  
  if (authority_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    authority_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.authority)
  return authority_;
}
inline void UsCoreImmunization_VaccinationProtocol::set_allocated_authority(::google::fhir::stu3::proto::Reference* authority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(authority_);
  }
  if (authority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      authority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, authority, submessage_arena);
    }
    
  } else {
    
  }
  authority_ = authority;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.authority)
}

// .google.fhir.stu3.proto.String series = 7;
inline bool UsCoreImmunization_VaccinationProtocol::has_series() const {
  return this != internal_default_instance() && series_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreImmunization_VaccinationProtocol::_internal_series() const {
  return *series_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreImmunization_VaccinationProtocol::series() const {
  const ::google::fhir::stu3::proto::String* p = series_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.series)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreImmunization_VaccinationProtocol::release_series() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.series)
  
  ::google::fhir::stu3::proto::String* temp = series_;
  series_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreImmunization_VaccinationProtocol::mutable_series() {
  
  if (series_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    series_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.series)
  return series_;
}
inline void UsCoreImmunization_VaccinationProtocol::set_allocated_series(::google::fhir::stu3::proto::String* series) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(series_);
  }
  if (series) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      series = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, series, submessage_arena);
    }
    
  } else {
    
  }
  series_ = series;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.series)
}

// .google.fhir.stu3.proto.PositiveInt series_doses = 8;
inline bool UsCoreImmunization_VaccinationProtocol::has_series_doses() const {
  return this != internal_default_instance() && series_doses_ != NULL;
}
inline const ::google::fhir::stu3::proto::PositiveInt& UsCoreImmunization_VaccinationProtocol::_internal_series_doses() const {
  return *series_doses_;
}
inline const ::google::fhir::stu3::proto::PositiveInt& UsCoreImmunization_VaccinationProtocol::series_doses() const {
  const ::google::fhir::stu3::proto::PositiveInt* p = series_doses_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.series_doses)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::PositiveInt*>(
      &::google::fhir::stu3::proto::_PositiveInt_default_instance_);
}
inline ::google::fhir::stu3::proto::PositiveInt* UsCoreImmunization_VaccinationProtocol::release_series_doses() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.series_doses)
  
  ::google::fhir::stu3::proto::PositiveInt* temp = series_doses_;
  series_doses_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::PositiveInt* UsCoreImmunization_VaccinationProtocol::mutable_series_doses() {
  
  if (series_doses_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::PositiveInt>(GetArenaNoVirtual());
    series_doses_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.series_doses)
  return series_doses_;
}
inline void UsCoreImmunization_VaccinationProtocol::set_allocated_series_doses(::google::fhir::stu3::proto::PositiveInt* series_doses) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(series_doses_);
  }
  if (series_doses) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      series_doses = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, series_doses, submessage_arena);
    }
    
  } else {
    
  }
  series_doses_ = series_doses;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.series_doses)
}

// repeated .google.fhir.stu3.proto.CodeableConcept target_disease = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline int UsCoreImmunization_VaccinationProtocol::target_disease_size() const {
  return target_disease_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization_VaccinationProtocol::mutable_target_disease(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.target_disease)
  return target_disease_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreImmunization_VaccinationProtocol::mutable_target_disease() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.target_disease)
  return &target_disease_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreImmunization_VaccinationProtocol::target_disease(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.target_disease)
  return target_disease_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization_VaccinationProtocol::add_target_disease() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.target_disease)
  return target_disease_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreImmunization_VaccinationProtocol::target_disease() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.target_disease)
  return target_disease_;
}

// .google.fhir.stu3.proto.CodeableConcept dose_status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreImmunization_VaccinationProtocol::has_dose_status() const {
  return this != internal_default_instance() && dose_status_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreImmunization_VaccinationProtocol::_internal_dose_status() const {
  return *dose_status_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreImmunization_VaccinationProtocol::dose_status() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = dose_status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.dose_status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization_VaccinationProtocol::release_dose_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.dose_status)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = dose_status_;
  dose_status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization_VaccinationProtocol::mutable_dose_status() {
  
  if (dose_status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    dose_status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.dose_status)
  return dose_status_;
}
inline void UsCoreImmunization_VaccinationProtocol::set_allocated_dose_status(::google::fhir::stu3::proto::CodeableConcept* dose_status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dose_status_);
  }
  if (dose_status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dose_status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dose_status, submessage_arena);
    }
    
  } else {
    
  }
  dose_status_ = dose_status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.dose_status)
}

// .google.fhir.stu3.proto.CodeableConcept dose_status_reason = 11;
inline bool UsCoreImmunization_VaccinationProtocol::has_dose_status_reason() const {
  return this != internal_default_instance() && dose_status_reason_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreImmunization_VaccinationProtocol::_internal_dose_status_reason() const {
  return *dose_status_reason_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreImmunization_VaccinationProtocol::dose_status_reason() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = dose_status_reason_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.dose_status_reason)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization_VaccinationProtocol::release_dose_status_reason() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.dose_status_reason)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = dose_status_reason_;
  dose_status_reason_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization_VaccinationProtocol::mutable_dose_status_reason() {
  
  if (dose_status_reason_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    dose_status_reason_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.dose_status_reason)
  return dose_status_reason_;
}
inline void UsCoreImmunization_VaccinationProtocol::set_allocated_dose_status_reason(::google::fhir::stu3::proto::CodeableConcept* dose_status_reason) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dose_status_reason_);
  }
  if (dose_status_reason) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dose_status_reason = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dose_status_reason, submessage_arena);
    }
    
  } else {
    
  }
  dose_status_reason_ = dose_status_reason;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol.dose_status_reason)
}

// -------------------------------------------------------------------

// UsCoreImmunization

// .google.fhir.stu3.proto.Id id = 1;
inline bool UsCoreImmunization::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreImmunization::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreImmunization::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* UsCoreImmunization::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* UsCoreImmunization::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.id)
  return id_;
}
inline void UsCoreImmunization::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool UsCoreImmunization::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreImmunization::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreImmunization::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* UsCoreImmunization::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* UsCoreImmunization::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.meta)
  return meta_;
}
inline void UsCoreImmunization::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool UsCoreImmunization::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreImmunization::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreImmunization::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreImmunization::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreImmunization::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.implicit_rules)
  return implicit_rules_;
}
inline void UsCoreImmunization::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool UsCoreImmunization::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreImmunization::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreImmunization::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreImmunization::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreImmunization::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.language)
  return language_;
}
inline void UsCoreImmunization::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.language)
}

// .google.fhir.stu3.proto.Narrative text = 5;
inline bool UsCoreImmunization::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreImmunization::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreImmunization::text() const {
  const ::google::fhir::stu3::proto::Narrative* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Narrative*>(
      &::google::fhir::stu3::proto::_Narrative_default_instance_);
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreImmunization::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.text)
  
  ::google::fhir::stu3::proto::Narrative* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreImmunization::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.text)
  return text_;
}
inline void UsCoreImmunization::set_allocated_text(::google::fhir::stu3::proto::Narrative* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.text)
}

// repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
inline int UsCoreImmunization::contained_size() const {
  return contained_.size();
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreImmunization::mutable_contained(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.contained)
  return contained_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
UsCoreImmunization::mutable_contained() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.contained)
  return &contained_;
}
inline const ::google::fhir::stu3::proto::ContainedResource& UsCoreImmunization::contained(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.contained)
  return contained_.Get(index);
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreImmunization::add_contained() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.contained)
  return contained_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
UsCoreImmunization::contained() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.contained)
  return contained_;
}

// repeated .google.fhir.stu3.proto.Extension extension = 7;
inline int UsCoreImmunization::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreImmunization::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreImmunization::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreImmunization::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
inline int UsCoreImmunization::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreImmunization::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreImmunization::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreImmunization::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreImmunization::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.Identifier identifier = 9;
inline int UsCoreImmunization::identifier_size() const {
  return identifier_.size();
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreImmunization::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.identifier)
  return identifier_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
UsCoreImmunization::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.identifier)
  return &identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCoreImmunization::identifier(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.identifier)
  return identifier_.Get(index);
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreImmunization::add_identifier() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.identifier)
  return identifier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
UsCoreImmunization::identifier() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.identifier)
  return identifier_;
}

// .google.fhir.stu3.proto.ImmunizationStatusCodesCode status = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreImmunization::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::fhir::stu3::proto::ImmunizationStatusCodesCode& UsCoreImmunization::_internal_status() const {
  return *status_;
}
inline const ::google::fhir::stu3::proto::ImmunizationStatusCodesCode& UsCoreImmunization::status() const {
  const ::google::fhir::stu3::proto::ImmunizationStatusCodesCode* p = status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ImmunizationStatusCodesCode*>(
      &::google::fhir::stu3::proto::_ImmunizationStatusCodesCode_default_instance_);
}
inline ::google::fhir::stu3::proto::ImmunizationStatusCodesCode* UsCoreImmunization::release_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.status)
  
  ::google::fhir::stu3::proto::ImmunizationStatusCodesCode* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ImmunizationStatusCodesCode* UsCoreImmunization::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ImmunizationStatusCodesCode>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.status)
  return status_;
}
inline void UsCoreImmunization::set_allocated_status(::google::fhir::stu3::proto::ImmunizationStatusCodesCode* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.status)
}

// .google.fhir.stu3.proto.Boolean not_given = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreImmunization::has_not_given() const {
  return this != internal_default_instance() && not_given_ != NULL;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreImmunization::_internal_not_given() const {
  return *not_given_;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreImmunization::not_given() const {
  const ::google::fhir::stu3::proto::Boolean* p = not_given_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.not_given)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Boolean*>(
      &::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreImmunization::release_not_given() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.not_given)
  
  ::google::fhir::stu3::proto::Boolean* temp = not_given_;
  not_given_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreImmunization::mutable_not_given() {
  
  if (not_given_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Boolean>(GetArenaNoVirtual());
    not_given_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.not_given)
  return not_given_;
}
inline void UsCoreImmunization::set_allocated_not_given(::google::fhir::stu3::proto::Boolean* not_given) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(not_given_);
  }
  if (not_given) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      not_given = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, not_given, submessage_arena);
    }
    
  } else {
    
  }
  not_given_ = not_given;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.not_given)
}

// .google.fhir.stu3.proto.CodeableConcept vaccine_code = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreImmunization::has_vaccine_code() const {
  return this != internal_default_instance() && vaccine_code_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreImmunization::_internal_vaccine_code() const {
  return *vaccine_code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreImmunization::vaccine_code() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = vaccine_code_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.vaccine_code)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization::release_vaccine_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.vaccine_code)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = vaccine_code_;
  vaccine_code_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization::mutable_vaccine_code() {
  
  if (vaccine_code_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    vaccine_code_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.vaccine_code)
  return vaccine_code_;
}
inline void UsCoreImmunization::set_allocated_vaccine_code(::google::fhir::stu3::proto::CodeableConcept* vaccine_code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vaccine_code_);
  }
  if (vaccine_code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vaccine_code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vaccine_code, submessage_arena);
    }
    
  } else {
    
  }
  vaccine_code_ = vaccine_code;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.vaccine_code)
}

// .google.fhir.stu3.proto.Reference patient = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
inline bool UsCoreImmunization::has_patient() const {
  return this != internal_default_instance() && patient_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreImmunization::_internal_patient() const {
  return *patient_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreImmunization::patient() const {
  const ::google::fhir::stu3::proto::Reference* p = patient_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.patient)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreImmunization::release_patient() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.patient)
  
  ::google::fhir::stu3::proto::Reference* temp = patient_;
  patient_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreImmunization::mutable_patient() {
  
  if (patient_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    patient_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.patient)
  return patient_;
}
inline void UsCoreImmunization::set_allocated_patient(::google::fhir::stu3::proto::Reference* patient) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(patient_);
  }
  if (patient) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      patient = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, patient, submessage_arena);
    }
    
  } else {
    
  }
  patient_ = patient;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.patient)
}

// .google.fhir.stu3.proto.Reference encounter = 14 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter"];
inline bool UsCoreImmunization::has_encounter() const {
  return this != internal_default_instance() && encounter_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreImmunization::_internal_encounter() const {
  return *encounter_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreImmunization::encounter() const {
  const ::google::fhir::stu3::proto::Reference* p = encounter_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.encounter)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreImmunization::release_encounter() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.encounter)
  
  ::google::fhir::stu3::proto::Reference* temp = encounter_;
  encounter_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreImmunization::mutable_encounter() {
  
  if (encounter_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    encounter_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.encounter)
  return encounter_;
}
inline void UsCoreImmunization::set_allocated_encounter(::google::fhir::stu3::proto::Reference* encounter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(encounter_);
  }
  if (encounter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      encounter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, encounter, submessage_arena);
    }
    
  } else {
    
  }
  encounter_ = encounter;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.encounter)
}

// .google.fhir.stu3.proto.DateTime date = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreImmunization::has_date() const {
  return this != internal_default_instance() && date_ != NULL;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreImmunization::_internal_date() const {
  return *date_;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreImmunization::date() const {
  const ::google::fhir::stu3::proto::DateTime* p = date_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.date)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::DateTime*>(
      &::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreImmunization::release_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.date)
  
  ::google::fhir::stu3::proto::DateTime* temp = date_;
  date_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreImmunization::mutable_date() {
  
  if (date_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::DateTime>(GetArenaNoVirtual());
    date_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.date)
  return date_;
}
inline void UsCoreImmunization::set_allocated_date(::google::fhir::stu3::proto::DateTime* date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(date_);
  }
  if (date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date, submessage_arena);
    }
    
  } else {
    
  }
  date_ = date;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.date)
}

// .google.fhir.stu3.proto.Boolean primary_source = 16 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreImmunization::has_primary_source() const {
  return this != internal_default_instance() && primary_source_ != NULL;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreImmunization::_internal_primary_source() const {
  return *primary_source_;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreImmunization::primary_source() const {
  const ::google::fhir::stu3::proto::Boolean* p = primary_source_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.primary_source)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Boolean*>(
      &::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreImmunization::release_primary_source() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.primary_source)
  
  ::google::fhir::stu3::proto::Boolean* temp = primary_source_;
  primary_source_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreImmunization::mutable_primary_source() {
  
  if (primary_source_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Boolean>(GetArenaNoVirtual());
    primary_source_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.primary_source)
  return primary_source_;
}
inline void UsCoreImmunization::set_allocated_primary_source(::google::fhir::stu3::proto::Boolean* primary_source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(primary_source_);
  }
  if (primary_source) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      primary_source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, primary_source, submessage_arena);
    }
    
  } else {
    
  }
  primary_source_ = primary_source;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.primary_source)
}

// .google.fhir.stu3.proto.CodeableConcept report_origin = 17;
inline bool UsCoreImmunization::has_report_origin() const {
  return this != internal_default_instance() && report_origin_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreImmunization::_internal_report_origin() const {
  return *report_origin_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreImmunization::report_origin() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = report_origin_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.report_origin)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization::release_report_origin() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.report_origin)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = report_origin_;
  report_origin_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization::mutable_report_origin() {
  
  if (report_origin_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    report_origin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.report_origin)
  return report_origin_;
}
inline void UsCoreImmunization::set_allocated_report_origin(::google::fhir::stu3::proto::CodeableConcept* report_origin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(report_origin_);
  }
  if (report_origin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      report_origin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, report_origin, submessage_arena);
    }
    
  } else {
    
  }
  report_origin_ = report_origin;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.report_origin)
}

// .google.fhir.stu3.proto.Reference location = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
inline bool UsCoreImmunization::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreImmunization::_internal_location() const {
  return *location_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreImmunization::location() const {
  const ::google::fhir::stu3::proto::Reference* p = location_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.location)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreImmunization::release_location() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.location)
  
  ::google::fhir::stu3::proto::Reference* temp = location_;
  location_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreImmunization::mutable_location() {
  
  if (location_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    location_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.location)
  return location_;
}
inline void UsCoreImmunization::set_allocated_location(::google::fhir::stu3::proto::Reference* location) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(location_);
  }
  if (location) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      location = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    
  } else {
    
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.location)
}

// .google.fhir.stu3.proto.Reference manufacturer = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
inline bool UsCoreImmunization::has_manufacturer() const {
  return this != internal_default_instance() && manufacturer_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreImmunization::_internal_manufacturer() const {
  return *manufacturer_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreImmunization::manufacturer() const {
  const ::google::fhir::stu3::proto::Reference* p = manufacturer_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.manufacturer)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreImmunization::release_manufacturer() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.manufacturer)
  
  ::google::fhir::stu3::proto::Reference* temp = manufacturer_;
  manufacturer_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreImmunization::mutable_manufacturer() {
  
  if (manufacturer_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    manufacturer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.manufacturer)
  return manufacturer_;
}
inline void UsCoreImmunization::set_allocated_manufacturer(::google::fhir::stu3::proto::Reference* manufacturer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(manufacturer_);
  }
  if (manufacturer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      manufacturer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, manufacturer, submessage_arena);
    }
    
  } else {
    
  }
  manufacturer_ = manufacturer;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.manufacturer)
}

// .google.fhir.stu3.proto.String lot_number = 20;
inline bool UsCoreImmunization::has_lot_number() const {
  return this != internal_default_instance() && lot_number_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreImmunization::_internal_lot_number() const {
  return *lot_number_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreImmunization::lot_number() const {
  const ::google::fhir::stu3::proto::String* p = lot_number_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.lot_number)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreImmunization::release_lot_number() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.lot_number)
  
  ::google::fhir::stu3::proto::String* temp = lot_number_;
  lot_number_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreImmunization::mutable_lot_number() {
  
  if (lot_number_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    lot_number_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.lot_number)
  return lot_number_;
}
inline void UsCoreImmunization::set_allocated_lot_number(::google::fhir::stu3::proto::String* lot_number) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(lot_number_);
  }
  if (lot_number) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      lot_number = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lot_number, submessage_arena);
    }
    
  } else {
    
  }
  lot_number_ = lot_number;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.lot_number)
}

// .google.fhir.stu3.proto.Date expiration_date = 21;
inline bool UsCoreImmunization::has_expiration_date() const {
  return this != internal_default_instance() && expiration_date_ != NULL;
}
inline const ::google::fhir::stu3::proto::Date& UsCoreImmunization::_internal_expiration_date() const {
  return *expiration_date_;
}
inline const ::google::fhir::stu3::proto::Date& UsCoreImmunization::expiration_date() const {
  const ::google::fhir::stu3::proto::Date* p = expiration_date_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.expiration_date)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Date*>(
      &::google::fhir::stu3::proto::_Date_default_instance_);
}
inline ::google::fhir::stu3::proto::Date* UsCoreImmunization::release_expiration_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.expiration_date)
  
  ::google::fhir::stu3::proto::Date* temp = expiration_date_;
  expiration_date_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Date* UsCoreImmunization::mutable_expiration_date() {
  
  if (expiration_date_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Date>(GetArenaNoVirtual());
    expiration_date_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.expiration_date)
  return expiration_date_;
}
inline void UsCoreImmunization::set_allocated_expiration_date(::google::fhir::stu3::proto::Date* expiration_date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(expiration_date_);
  }
  if (expiration_date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      expiration_date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, expiration_date, submessage_arena);
    }
    
  } else {
    
  }
  expiration_date_ = expiration_date;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.expiration_date)
}

// .google.fhir.stu3.proto.CodeableConcept site = 22;
inline bool UsCoreImmunization::has_site() const {
  return this != internal_default_instance() && site_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreImmunization::_internal_site() const {
  return *site_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreImmunization::site() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = site_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.site)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization::release_site() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.site)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = site_;
  site_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization::mutable_site() {
  
  if (site_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    site_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.site)
  return site_;
}
inline void UsCoreImmunization::set_allocated_site(::google::fhir::stu3::proto::CodeableConcept* site) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(site_);
  }
  if (site) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      site = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, site, submessage_arena);
    }
    
  } else {
    
  }
  site_ = site;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.site)
}

// .google.fhir.stu3.proto.CodeableConcept route = 23;
inline bool UsCoreImmunization::has_route() const {
  return this != internal_default_instance() && route_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreImmunization::_internal_route() const {
  return *route_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreImmunization::route() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = route_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.route)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization::release_route() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.route)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = route_;
  route_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreImmunization::mutable_route() {
  
  if (route_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    route_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.route)
  return route_;
}
inline void UsCoreImmunization::set_allocated_route(::google::fhir::stu3::proto::CodeableConcept* route) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(route_);
  }
  if (route) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      route = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, route, submessage_arena);
    }
    
  } else {
    
  }
  route_ = route;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.route)
}

// .google.fhir.stu3.proto.SimpleQuantity dose_quantity = 24;
inline bool UsCoreImmunization::has_dose_quantity() const {
  return this != internal_default_instance() && dose_quantity_ != NULL;
}
inline const ::google::fhir::stu3::proto::SimpleQuantity& UsCoreImmunization::_internal_dose_quantity() const {
  return *dose_quantity_;
}
inline const ::google::fhir::stu3::proto::SimpleQuantity& UsCoreImmunization::dose_quantity() const {
  const ::google::fhir::stu3::proto::SimpleQuantity* p = dose_quantity_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.dose_quantity)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::SimpleQuantity*>(
      &::google::fhir::stu3::proto::_SimpleQuantity_default_instance_);
}
inline ::google::fhir::stu3::proto::SimpleQuantity* UsCoreImmunization::release_dose_quantity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.dose_quantity)
  
  ::google::fhir::stu3::proto::SimpleQuantity* temp = dose_quantity_;
  dose_quantity_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::SimpleQuantity* UsCoreImmunization::mutable_dose_quantity() {
  
  if (dose_quantity_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::SimpleQuantity>(GetArenaNoVirtual());
    dose_quantity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.dose_quantity)
  return dose_quantity_;
}
inline void UsCoreImmunization::set_allocated_dose_quantity(::google::fhir::stu3::proto::SimpleQuantity* dose_quantity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dose_quantity_);
  }
  if (dose_quantity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dose_quantity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dose_quantity, submessage_arena);
    }
    
  } else {
    
  }
  dose_quantity_ = dose_quantity;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.dose_quantity)
}

// repeated .google.fhir.stu3.uscore.UsCoreImmunization.Practitioner practitioner = 25;
inline int UsCoreImmunization::practitioner_size() const {
  return practitioner_.size();
}
inline void UsCoreImmunization::clear_practitioner() {
  practitioner_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner* UsCoreImmunization::mutable_practitioner(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.practitioner)
  return practitioner_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner >*
UsCoreImmunization::mutable_practitioner() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.practitioner)
  return &practitioner_;
}
inline const ::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner& UsCoreImmunization::practitioner(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.practitioner)
  return practitioner_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner* UsCoreImmunization::add_practitioner() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.practitioner)
  return practitioner_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreImmunization_Practitioner >&
UsCoreImmunization::practitioner() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.practitioner)
  return practitioner_;
}

// repeated .google.fhir.stu3.proto.Annotation note = 26;
inline int UsCoreImmunization::note_size() const {
  return note_.size();
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreImmunization::mutable_note(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.note)
  return note_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
UsCoreImmunization::mutable_note() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.note)
  return &note_;
}
inline const ::google::fhir::stu3::proto::Annotation& UsCoreImmunization::note(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.note)
  return note_.Get(index);
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreImmunization::add_note() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.note)
  return note_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
UsCoreImmunization::note() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.note)
  return note_;
}

// .google.fhir.stu3.uscore.UsCoreImmunization.Explanation explanation = 27;
inline bool UsCoreImmunization::has_explanation() const {
  return this != internal_default_instance() && explanation_ != NULL;
}
inline void UsCoreImmunization::clear_explanation() {
  if (GetArenaNoVirtual() == NULL && explanation_ != NULL) {
    delete explanation_;
  }
  explanation_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation& UsCoreImmunization::_internal_explanation() const {
  return *explanation_;
}
inline const ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation& UsCoreImmunization::explanation() const {
  const ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation* p = explanation_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.explanation)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation*>(
      &::google::fhir::stu3::uscore::_UsCoreImmunization_Explanation_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation* UsCoreImmunization::release_explanation() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreImmunization.explanation)
  
  ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation* temp = explanation_;
  explanation_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreImmunization_Explanation* UsCoreImmunization::mutable_explanation() {
  
  if (explanation_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreImmunization_Explanation>(GetArenaNoVirtual());
    explanation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.explanation)
  return explanation_;
}
inline void UsCoreImmunization::set_allocated_explanation(::google::fhir::stu3::uscore::UsCoreImmunization_Explanation* explanation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete explanation_;
  }
  if (explanation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      explanation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, explanation, submessage_arena);
    }
    
  } else {
    
  }
  explanation_ = explanation;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreImmunization.explanation)
}

// repeated .google.fhir.stu3.uscore.UsCoreImmunization.Reaction reaction = 28;
inline int UsCoreImmunization::reaction_size() const {
  return reaction_.size();
}
inline void UsCoreImmunization::clear_reaction() {
  reaction_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreImmunization_Reaction* UsCoreImmunization::mutable_reaction(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.reaction)
  return reaction_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreImmunization_Reaction >*
UsCoreImmunization::mutable_reaction() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.reaction)
  return &reaction_;
}
inline const ::google::fhir::stu3::uscore::UsCoreImmunization_Reaction& UsCoreImmunization::reaction(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.reaction)
  return reaction_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreImmunization_Reaction* UsCoreImmunization::add_reaction() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.reaction)
  return reaction_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreImmunization_Reaction >&
UsCoreImmunization::reaction() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.reaction)
  return reaction_;
}

// repeated .google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol vaccination_protocol = 29;
inline int UsCoreImmunization::vaccination_protocol_size() const {
  return vaccination_protocol_.size();
}
inline void UsCoreImmunization::clear_vaccination_protocol() {
  vaccination_protocol_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol* UsCoreImmunization::mutable_vaccination_protocol(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreImmunization.vaccination_protocol)
  return vaccination_protocol_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol >*
UsCoreImmunization::mutable_vaccination_protocol() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreImmunization.vaccination_protocol)
  return &vaccination_protocol_;
}
inline const ::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol& UsCoreImmunization::vaccination_protocol(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreImmunization.vaccination_protocol)
  return vaccination_protocol_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol* UsCoreImmunization::add_vaccination_protocol() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreImmunization.vaccination_protocol)
  return vaccination_protocol_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreImmunization_VaccinationProtocol >&
UsCoreImmunization::vaccination_protocol() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreImmunization.vaccination_protocol)
  return vaccination_protocol_;
}

// -------------------------------------------------------------------

// UsCoreLocation_Position

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreLocation_Position::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreLocation_Position::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreLocation_Position::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.Position.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreLocation_Position::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.Position.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreLocation_Position::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.Position.id)
  return id_;
}
inline void UsCoreLocation_Position::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.Position.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreLocation_Position::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreLocation_Position::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.Position.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreLocation_Position::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreLocation.Position.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreLocation_Position::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.Position.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreLocation_Position::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreLocation.Position.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreLocation_Position::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreLocation.Position.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreLocation_Position::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreLocation_Position::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.Position.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreLocation_Position::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreLocation.Position.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreLocation_Position::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.Position.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreLocation_Position::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreLocation.Position.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreLocation_Position::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreLocation.Position.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.Decimal longitude = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreLocation_Position::has_longitude() const {
  return this != internal_default_instance() && longitude_ != NULL;
}
inline const ::google::fhir::stu3::proto::Decimal& UsCoreLocation_Position::_internal_longitude() const {
  return *longitude_;
}
inline const ::google::fhir::stu3::proto::Decimal& UsCoreLocation_Position::longitude() const {
  const ::google::fhir::stu3::proto::Decimal* p = longitude_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.Position.longitude)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Decimal*>(
      &::google::fhir::stu3::proto::_Decimal_default_instance_);
}
inline ::google::fhir::stu3::proto::Decimal* UsCoreLocation_Position::release_longitude() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.Position.longitude)
  
  ::google::fhir::stu3::proto::Decimal* temp = longitude_;
  longitude_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Decimal* UsCoreLocation_Position::mutable_longitude() {
  
  if (longitude_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Decimal>(GetArenaNoVirtual());
    longitude_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.Position.longitude)
  return longitude_;
}
inline void UsCoreLocation_Position::set_allocated_longitude(::google::fhir::stu3::proto::Decimal* longitude) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(longitude_);
  }
  if (longitude) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      longitude = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, longitude, submessage_arena);
    }
    
  } else {
    
  }
  longitude_ = longitude;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.Position.longitude)
}

// .google.fhir.stu3.proto.Decimal latitude = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreLocation_Position::has_latitude() const {
  return this != internal_default_instance() && latitude_ != NULL;
}
inline const ::google::fhir::stu3::proto::Decimal& UsCoreLocation_Position::_internal_latitude() const {
  return *latitude_;
}
inline const ::google::fhir::stu3::proto::Decimal& UsCoreLocation_Position::latitude() const {
  const ::google::fhir::stu3::proto::Decimal* p = latitude_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.Position.latitude)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Decimal*>(
      &::google::fhir::stu3::proto::_Decimal_default_instance_);
}
inline ::google::fhir::stu3::proto::Decimal* UsCoreLocation_Position::release_latitude() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.Position.latitude)
  
  ::google::fhir::stu3::proto::Decimal* temp = latitude_;
  latitude_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Decimal* UsCoreLocation_Position::mutable_latitude() {
  
  if (latitude_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Decimal>(GetArenaNoVirtual());
    latitude_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.Position.latitude)
  return latitude_;
}
inline void UsCoreLocation_Position::set_allocated_latitude(::google::fhir::stu3::proto::Decimal* latitude) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(latitude_);
  }
  if (latitude) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      latitude = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, latitude, submessage_arena);
    }
    
  } else {
    
  }
  latitude_ = latitude;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.Position.latitude)
}

// .google.fhir.stu3.proto.Decimal altitude = 6;
inline bool UsCoreLocation_Position::has_altitude() const {
  return this != internal_default_instance() && altitude_ != NULL;
}
inline const ::google::fhir::stu3::proto::Decimal& UsCoreLocation_Position::_internal_altitude() const {
  return *altitude_;
}
inline const ::google::fhir::stu3::proto::Decimal& UsCoreLocation_Position::altitude() const {
  const ::google::fhir::stu3::proto::Decimal* p = altitude_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.Position.altitude)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Decimal*>(
      &::google::fhir::stu3::proto::_Decimal_default_instance_);
}
inline ::google::fhir::stu3::proto::Decimal* UsCoreLocation_Position::release_altitude() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.Position.altitude)
  
  ::google::fhir::stu3::proto::Decimal* temp = altitude_;
  altitude_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Decimal* UsCoreLocation_Position::mutable_altitude() {
  
  if (altitude_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Decimal>(GetArenaNoVirtual());
    altitude_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.Position.altitude)
  return altitude_;
}
inline void UsCoreLocation_Position::set_allocated_altitude(::google::fhir::stu3::proto::Decimal* altitude) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(altitude_);
  }
  if (altitude) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      altitude = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, altitude, submessage_arena);
    }
    
  } else {
    
  }
  altitude_ = altitude;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.Position.altitude)
}

// -------------------------------------------------------------------

// UsCoreLocation

// .google.fhir.stu3.proto.Id id = 1;
inline bool UsCoreLocation::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreLocation::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreLocation::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* UsCoreLocation::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* UsCoreLocation::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.id)
  return id_;
}
inline void UsCoreLocation::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool UsCoreLocation::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreLocation::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreLocation::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* UsCoreLocation::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* UsCoreLocation::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.meta)
  return meta_;
}
inline void UsCoreLocation::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool UsCoreLocation::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreLocation::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreLocation::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreLocation::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreLocation::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.implicit_rules)
  return implicit_rules_;
}
inline void UsCoreLocation::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool UsCoreLocation::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreLocation::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreLocation::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreLocation::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreLocation::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.language)
  return language_;
}
inline void UsCoreLocation::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.language)
}

// .google.fhir.stu3.proto.Narrative text = 5;
inline bool UsCoreLocation::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreLocation::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreLocation::text() const {
  const ::google::fhir::stu3::proto::Narrative* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Narrative*>(
      &::google::fhir::stu3::proto::_Narrative_default_instance_);
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreLocation::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.text)
  
  ::google::fhir::stu3::proto::Narrative* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreLocation::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.text)
  return text_;
}
inline void UsCoreLocation::set_allocated_text(::google::fhir::stu3::proto::Narrative* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.text)
}

// repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
inline int UsCoreLocation::contained_size() const {
  return contained_.size();
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreLocation::mutable_contained(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.contained)
  return contained_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
UsCoreLocation::mutable_contained() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreLocation.contained)
  return &contained_;
}
inline const ::google::fhir::stu3::proto::ContainedResource& UsCoreLocation::contained(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.contained)
  return contained_.Get(index);
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreLocation::add_contained() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreLocation.contained)
  return contained_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
UsCoreLocation::contained() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreLocation.contained)
  return contained_;
}

// repeated .google.fhir.stu3.proto.Extension extension = 7;
inline int UsCoreLocation::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreLocation::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreLocation::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreLocation.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreLocation::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreLocation::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreLocation.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreLocation::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreLocation.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
inline int UsCoreLocation::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreLocation::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreLocation::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreLocation.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreLocation::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreLocation::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreLocation.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreLocation::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreLocation.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.Identifier identifier = 9;
inline int UsCoreLocation::identifier_size() const {
  return identifier_.size();
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreLocation::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.identifier)
  return identifier_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
UsCoreLocation::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreLocation.identifier)
  return &identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCoreLocation::identifier(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.identifier)
  return identifier_.Get(index);
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreLocation::add_identifier() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreLocation.identifier)
  return identifier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
UsCoreLocation::identifier() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreLocation.identifier)
  return identifier_;
}

// .google.fhir.stu3.proto.LocationStatusCode status = 10;
inline bool UsCoreLocation::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::fhir::stu3::proto::LocationStatusCode& UsCoreLocation::_internal_status() const {
  return *status_;
}
inline const ::google::fhir::stu3::proto::LocationStatusCode& UsCoreLocation::status() const {
  const ::google::fhir::stu3::proto::LocationStatusCode* p = status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LocationStatusCode*>(
      &::google::fhir::stu3::proto::_LocationStatusCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LocationStatusCode* UsCoreLocation::release_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.status)
  
  ::google::fhir::stu3::proto::LocationStatusCode* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LocationStatusCode* UsCoreLocation::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LocationStatusCode>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.status)
  return status_;
}
inline void UsCoreLocation::set_allocated_status(::google::fhir::stu3::proto::LocationStatusCode* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.status)
}

// .google.fhir.stu3.proto.Coding operational_status = 11;
inline bool UsCoreLocation::has_operational_status() const {
  return this != internal_default_instance() && operational_status_ != NULL;
}
inline const ::google::fhir::stu3::proto::Coding& UsCoreLocation::_internal_operational_status() const {
  return *operational_status_;
}
inline const ::google::fhir::stu3::proto::Coding& UsCoreLocation::operational_status() const {
  const ::google::fhir::stu3::proto::Coding* p = operational_status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.operational_status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Coding*>(
      &::google::fhir::stu3::proto::_Coding_default_instance_);
}
inline ::google::fhir::stu3::proto::Coding* UsCoreLocation::release_operational_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.operational_status)
  
  ::google::fhir::stu3::proto::Coding* temp = operational_status_;
  operational_status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Coding* UsCoreLocation::mutable_operational_status() {
  
  if (operational_status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Coding>(GetArenaNoVirtual());
    operational_status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.operational_status)
  return operational_status_;
}
inline void UsCoreLocation::set_allocated_operational_status(::google::fhir::stu3::proto::Coding* operational_status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(operational_status_);
  }
  if (operational_status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      operational_status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, operational_status, submessage_arena);
    }
    
  } else {
    
  }
  operational_status_ = operational_status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.operational_status)
}

// .google.fhir.stu3.proto.String name = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreLocation::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreLocation::_internal_name() const {
  return *name_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreLocation::name() const {
  const ::google::fhir::stu3::proto::String* p = name_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.name)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreLocation::release_name() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.name)
  
  ::google::fhir::stu3::proto::String* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreLocation::mutable_name() {
  
  if (name_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.name)
  return name_;
}
inline void UsCoreLocation::set_allocated_name(::google::fhir::stu3::proto::String* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.name)
}

// repeated .google.fhir.stu3.proto.String alias = 13;
inline int UsCoreLocation::alias_size() const {
  return alias_.size();
}
inline ::google::fhir::stu3::proto::String* UsCoreLocation::mutable_alias(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.alias)
  return alias_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String >*
UsCoreLocation::mutable_alias() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreLocation.alias)
  return &alias_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreLocation::alias(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.alias)
  return alias_.Get(index);
}
inline ::google::fhir::stu3::proto::String* UsCoreLocation::add_alias() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreLocation.alias)
  return alias_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String >&
UsCoreLocation::alias() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreLocation.alias)
  return alias_;
}

// .google.fhir.stu3.proto.String description = 14;
inline bool UsCoreLocation::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreLocation::_internal_description() const {
  return *description_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreLocation::description() const {
  const ::google::fhir::stu3::proto::String* p = description_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.description)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreLocation::release_description() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.description)
  
  ::google::fhir::stu3::proto::String* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreLocation::mutable_description() {
  
  if (description_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    description_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.description)
  return description_;
}
inline void UsCoreLocation::set_allocated_description(::google::fhir::stu3::proto::String* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(description_);
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.description)
}

// .google.fhir.stu3.proto.LocationModeCode mode = 15;
inline bool UsCoreLocation::has_mode() const {
  return this != internal_default_instance() && mode_ != NULL;
}
inline const ::google::fhir::stu3::proto::LocationModeCode& UsCoreLocation::_internal_mode() const {
  return *mode_;
}
inline const ::google::fhir::stu3::proto::LocationModeCode& UsCoreLocation::mode() const {
  const ::google::fhir::stu3::proto::LocationModeCode* p = mode_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.mode)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LocationModeCode*>(
      &::google::fhir::stu3::proto::_LocationModeCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LocationModeCode* UsCoreLocation::release_mode() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.mode)
  
  ::google::fhir::stu3::proto::LocationModeCode* temp = mode_;
  mode_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LocationModeCode* UsCoreLocation::mutable_mode() {
  
  if (mode_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LocationModeCode>(GetArenaNoVirtual());
    mode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.mode)
  return mode_;
}
inline void UsCoreLocation::set_allocated_mode(::google::fhir::stu3::proto::LocationModeCode* mode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mode_);
  }
  if (mode) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mode, submessage_arena);
    }
    
  } else {
    
  }
  mode_ = mode;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.mode)
}

// .google.fhir.stu3.proto.CodeableConcept type = 16;
inline bool UsCoreLocation::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreLocation::_internal_type() const {
  return *type_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreLocation::type() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = type_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.type)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreLocation::release_type() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.type)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreLocation::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.type)
  return type_;
}
inline void UsCoreLocation::set_allocated_type(::google::fhir::stu3::proto::CodeableConcept* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(type_);
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.type)
}

// repeated .google.fhir.stu3.proto.ContactPoint telecom = 17;
inline int UsCoreLocation::telecom_size() const {
  return telecom_.size();
}
inline ::google::fhir::stu3::proto::ContactPoint* UsCoreLocation::mutable_telecom(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.telecom)
  return telecom_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >*
UsCoreLocation::mutable_telecom() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreLocation.telecom)
  return &telecom_;
}
inline const ::google::fhir::stu3::proto::ContactPoint& UsCoreLocation::telecom(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.telecom)
  return telecom_.Get(index);
}
inline ::google::fhir::stu3::proto::ContactPoint* UsCoreLocation::add_telecom() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreLocation.telecom)
  return telecom_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >&
UsCoreLocation::telecom() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreLocation.telecom)
  return telecom_;
}

// .google.fhir.stu3.proto.Address address = 18;
inline bool UsCoreLocation::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::google::fhir::stu3::proto::Address& UsCoreLocation::_internal_address() const {
  return *address_;
}
inline const ::google::fhir::stu3::proto::Address& UsCoreLocation::address() const {
  const ::google::fhir::stu3::proto::Address* p = address_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.address)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Address*>(
      &::google::fhir::stu3::proto::_Address_default_instance_);
}
inline ::google::fhir::stu3::proto::Address* UsCoreLocation::release_address() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.address)
  
  ::google::fhir::stu3::proto::Address* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Address* UsCoreLocation::mutable_address() {
  
  if (address_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Address>(GetArenaNoVirtual());
    address_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.address)
  return address_;
}
inline void UsCoreLocation::set_allocated_address(::google::fhir::stu3::proto::Address* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.address)
}

// .google.fhir.stu3.proto.CodeableConcept physical_type = 19;
inline bool UsCoreLocation::has_physical_type() const {
  return this != internal_default_instance() && physical_type_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreLocation::_internal_physical_type() const {
  return *physical_type_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreLocation::physical_type() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = physical_type_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.physical_type)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreLocation::release_physical_type() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.physical_type)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = physical_type_;
  physical_type_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreLocation::mutable_physical_type() {
  
  if (physical_type_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    physical_type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.physical_type)
  return physical_type_;
}
inline void UsCoreLocation::set_allocated_physical_type(::google::fhir::stu3::proto::CodeableConcept* physical_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(physical_type_);
  }
  if (physical_type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      physical_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, physical_type, submessage_arena);
    }
    
  } else {
    
  }
  physical_type_ = physical_type;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.physical_type)
}

// .google.fhir.stu3.uscore.UsCoreLocation.Position position = 20;
inline bool UsCoreLocation::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void UsCoreLocation::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreLocation_Position& UsCoreLocation::_internal_position() const {
  return *position_;
}
inline const ::google::fhir::stu3::uscore::UsCoreLocation_Position& UsCoreLocation::position() const {
  const ::google::fhir::stu3::uscore::UsCoreLocation_Position* p = position_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.position)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreLocation_Position*>(
      &::google::fhir::stu3::uscore::_UsCoreLocation_Position_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreLocation_Position* UsCoreLocation::release_position() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.position)
  
  ::google::fhir::stu3::uscore::UsCoreLocation_Position* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreLocation_Position* UsCoreLocation::mutable_position() {
  
  if (position_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreLocation_Position>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.position)
  return position_;
}
inline void UsCoreLocation::set_allocated_position(::google::fhir::stu3::uscore::UsCoreLocation_Position* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.position)
}

// .google.fhir.stu3.proto.Reference managing_organization = 21 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization"];
inline bool UsCoreLocation::has_managing_organization() const {
  return this != internal_default_instance() && managing_organization_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreLocation::_internal_managing_organization() const {
  return *managing_organization_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreLocation::managing_organization() const {
  const ::google::fhir::stu3::proto::Reference* p = managing_organization_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.managing_organization)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreLocation::release_managing_organization() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.managing_organization)
  
  ::google::fhir::stu3::proto::Reference* temp = managing_organization_;
  managing_organization_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreLocation::mutable_managing_organization() {
  
  if (managing_organization_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    managing_organization_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.managing_organization)
  return managing_organization_;
}
inline void UsCoreLocation::set_allocated_managing_organization(::google::fhir::stu3::proto::Reference* managing_organization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(managing_organization_);
  }
  if (managing_organization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      managing_organization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, managing_organization, submessage_arena);
    }
    
  } else {
    
  }
  managing_organization_ = managing_organization;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.managing_organization)
}

// .google.fhir.stu3.proto.Reference part_of = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
inline bool UsCoreLocation::has_part_of() const {
  return this != internal_default_instance() && part_of_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreLocation::_internal_part_of() const {
  return *part_of_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreLocation::part_of() const {
  const ::google::fhir::stu3::proto::Reference* p = part_of_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.part_of)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreLocation::release_part_of() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreLocation.part_of)
  
  ::google::fhir::stu3::proto::Reference* temp = part_of_;
  part_of_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreLocation::mutable_part_of() {
  
  if (part_of_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    part_of_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.part_of)
  return part_of_;
}
inline void UsCoreLocation::set_allocated_part_of(::google::fhir::stu3::proto::Reference* part_of) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(part_of_);
  }
  if (part_of) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      part_of = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, part_of, submessage_arena);
    }
    
  } else {
    
  }
  part_of_ = part_of;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreLocation.part_of)
}

// repeated .google.fhir.stu3.proto.Reference endpoint = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Endpoint"];
inline int UsCoreLocation::endpoint_size() const {
  return endpoint_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreLocation::mutable_endpoint(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreLocation.endpoint)
  return endpoint_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreLocation::mutable_endpoint() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreLocation.endpoint)
  return &endpoint_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreLocation::endpoint(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreLocation.endpoint)
  return endpoint_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreLocation::add_endpoint() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreLocation.endpoint)
  return endpoint_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreLocation::endpoint() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreLocation.endpoint)
  return endpoint_;
}

// -------------------------------------------------------------------

// UsCoreMedication_Ingredient_Item

// .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
inline bool UsCoreMedication_Ingredient_Item::has_codeable_concept() const {
  return item_case() == kCodeableConcept;
}
inline void UsCoreMedication_Ingredient_Item::set_has_codeable_concept() {
  _oneof_case_[0] = kCodeableConcept;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedication_Ingredient_Item::_internal_codeable_concept() const {
  return *item_.codeable_concept_;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedication_Ingredient_Item::release_codeable_concept() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item.codeable_concept)
  if (has_codeable_concept()) {
    clear_has_item();
      ::google::fhir::stu3::proto::CodeableConcept* temp = item_.codeable_concept_;
    item_.codeable_concept_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedication_Ingredient_Item::codeable_concept() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item.codeable_concept)
  return has_codeable_concept()
      ? *item_.codeable_concept_
      : *reinterpret_cast< ::google::fhir::stu3::proto::CodeableConcept*>(&::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedication_Ingredient_Item::mutable_codeable_concept() {
  if (!has_codeable_concept()) {
    clear_item();
    set_has_codeable_concept();
    item_.codeable_concept_ = CreateMaybeMessage< ::google::fhir::stu3::proto::CodeableConcept >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item.codeable_concept)
  return item_.codeable_concept_;
}

// .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Substance", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
inline bool UsCoreMedication_Ingredient_Item::has_reference() const {
  return item_case() == kReference;
}
inline void UsCoreMedication_Ingredient_Item::set_has_reference() {
  _oneof_case_[0] = kReference;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedication_Ingredient_Item::_internal_reference() const {
  return *item_.reference_;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedication_Ingredient_Item::release_reference() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item.reference)
  if (has_reference()) {
    clear_has_item();
      ::google::fhir::stu3::proto::Reference* temp = item_.reference_;
    item_.reference_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedication_Ingredient_Item::reference() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item.reference)
  return has_reference()
      ? *item_.reference_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Reference*>(&::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedication_Ingredient_Item::mutable_reference() {
  if (!has_reference()) {
    clear_item();
    set_has_reference();
    item_.reference_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Reference >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item.reference)
  return item_.reference_;
}

inline bool UsCoreMedication_Ingredient_Item::has_item() const {
  return item_case() != ITEM_NOT_SET;
}
inline void UsCoreMedication_Ingredient_Item::clear_has_item() {
  _oneof_case_[0] = ITEM_NOT_SET;
}
inline UsCoreMedication_Ingredient_Item::ItemCase UsCoreMedication_Ingredient_Item::item_case() const {
  return UsCoreMedication_Ingredient_Item::ItemCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreMedication_Ingredient

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreMedication_Ingredient::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreMedication_Ingredient::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreMedication_Ingredient::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreMedication_Ingredient::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreMedication_Ingredient::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.id)
  return id_;
}
inline void UsCoreMedication_Ingredient::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreMedication_Ingredient::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication_Ingredient::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedication_Ingredient::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedication_Ingredient::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication_Ingredient::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedication_Ingredient::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreMedication_Ingredient::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication_Ingredient::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedication_Ingredient::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedication_Ingredient::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication_Ingredient::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedication_Ingredient::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item item = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreMedication_Ingredient::has_item() const {
  return this != internal_default_instance() && item_ != NULL;
}
inline void UsCoreMedication_Ingredient::clear_item() {
  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item& UsCoreMedication_Ingredient::_internal_item() const {
  return *item_;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item& UsCoreMedication_Ingredient::item() const {
  const ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item* p = item_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.item)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item*>(
      &::google::fhir::stu3::uscore::_UsCoreMedication_Ingredient_Item_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item* UsCoreMedication_Ingredient::release_item() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.item)
  
  ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item* temp = item_;
  item_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item* UsCoreMedication_Ingredient::mutable_item() {
  
  if (item_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item>(GetArenaNoVirtual());
    item_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.item)
  return item_;
}
inline void UsCoreMedication_Ingredient::set_allocated_item(::google::fhir::stu3::uscore::UsCoreMedication_Ingredient_Item* item) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete item_;
  }
  if (item) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      item = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    
  } else {
    
  }
  item_ = item;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.item)
}

// .google.fhir.stu3.proto.Boolean is_active = 5;
inline bool UsCoreMedication_Ingredient::has_is_active() const {
  return this != internal_default_instance() && is_active_ != NULL;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreMedication_Ingredient::_internal_is_active() const {
  return *is_active_;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreMedication_Ingredient::is_active() const {
  const ::google::fhir::stu3::proto::Boolean* p = is_active_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.is_active)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Boolean*>(
      &::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreMedication_Ingredient::release_is_active() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.is_active)
  
  ::google::fhir::stu3::proto::Boolean* temp = is_active_;
  is_active_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreMedication_Ingredient::mutable_is_active() {
  
  if (is_active_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Boolean>(GetArenaNoVirtual());
    is_active_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.is_active)
  return is_active_;
}
inline void UsCoreMedication_Ingredient::set_allocated_is_active(::google::fhir::stu3::proto::Boolean* is_active) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(is_active_);
  }
  if (is_active) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      is_active = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, is_active, submessage_arena);
    }
    
  } else {
    
  }
  is_active_ = is_active;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.is_active)
}

// .google.fhir.stu3.proto.Ratio amount = 6;
inline bool UsCoreMedication_Ingredient::has_amount() const {
  return this != internal_default_instance() && amount_ != NULL;
}
inline const ::google::fhir::stu3::proto::Ratio& UsCoreMedication_Ingredient::_internal_amount() const {
  return *amount_;
}
inline const ::google::fhir::stu3::proto::Ratio& UsCoreMedication_Ingredient::amount() const {
  const ::google::fhir::stu3::proto::Ratio* p = amount_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.amount)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Ratio*>(
      &::google::fhir::stu3::proto::_Ratio_default_instance_);
}
inline ::google::fhir::stu3::proto::Ratio* UsCoreMedication_Ingredient::release_amount() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.amount)
  
  ::google::fhir::stu3::proto::Ratio* temp = amount_;
  amount_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Ratio* UsCoreMedication_Ingredient::mutable_amount() {
  
  if (amount_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Ratio>(GetArenaNoVirtual());
    amount_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.amount)
  return amount_;
}
inline void UsCoreMedication_Ingredient::set_allocated_amount(::google::fhir::stu3::proto::Ratio* amount) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(amount_);
  }
  if (amount) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      amount = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, amount, submessage_arena);
    }
    
  } else {
    
  }
  amount_ = amount;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.Ingredient.amount)
}

// -------------------------------------------------------------------

// UsCoreMedication_Package_Content_Item

// .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
inline bool UsCoreMedication_Package_Content_Item::has_codeable_concept() const {
  return item_case() == kCodeableConcept;
}
inline void UsCoreMedication_Package_Content_Item::set_has_codeable_concept() {
  _oneof_case_[0] = kCodeableConcept;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedication_Package_Content_Item::_internal_codeable_concept() const {
  return *item_.codeable_concept_;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedication_Package_Content_Item::release_codeable_concept() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item.codeable_concept)
  if (has_codeable_concept()) {
    clear_has_item();
      ::google::fhir::stu3::proto::CodeableConcept* temp = item_.codeable_concept_;
    item_.codeable_concept_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedication_Package_Content_Item::codeable_concept() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item.codeable_concept)
  return has_codeable_concept()
      ? *item_.codeable_concept_
      : *reinterpret_cast< ::google::fhir::stu3::proto::CodeableConcept*>(&::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedication_Package_Content_Item::mutable_codeable_concept() {
  if (!has_codeable_concept()) {
    clear_item();
    set_has_codeable_concept();
    item_.codeable_concept_ = CreateMaybeMessage< ::google::fhir::stu3::proto::CodeableConcept >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item.codeable_concept)
  return item_.codeable_concept_;
}

// .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
inline bool UsCoreMedication_Package_Content_Item::has_reference() const {
  return item_case() == kReference;
}
inline void UsCoreMedication_Package_Content_Item::set_has_reference() {
  _oneof_case_[0] = kReference;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedication_Package_Content_Item::_internal_reference() const {
  return *item_.reference_;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedication_Package_Content_Item::release_reference() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item.reference)
  if (has_reference()) {
    clear_has_item();
      ::google::fhir::stu3::proto::Reference* temp = item_.reference_;
    item_.reference_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedication_Package_Content_Item::reference() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item.reference)
  return has_reference()
      ? *item_.reference_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Reference*>(&::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedication_Package_Content_Item::mutable_reference() {
  if (!has_reference()) {
    clear_item();
    set_has_reference();
    item_.reference_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Reference >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item.reference)
  return item_.reference_;
}

inline bool UsCoreMedication_Package_Content_Item::has_item() const {
  return item_case() != ITEM_NOT_SET;
}
inline void UsCoreMedication_Package_Content_Item::clear_has_item() {
  _oneof_case_[0] = ITEM_NOT_SET;
}
inline UsCoreMedication_Package_Content_Item::ItemCase UsCoreMedication_Package_Content_Item::item_case() const {
  return UsCoreMedication_Package_Content_Item::ItemCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreMedication_Package_Content

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreMedication_Package_Content::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreMedication_Package_Content::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreMedication_Package_Content::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreMedication_Package_Content::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreMedication_Package_Content::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.id)
  return id_;
}
inline void UsCoreMedication_Package_Content::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreMedication_Package_Content::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication_Package_Content::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedication_Package_Content::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedication_Package_Content::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication_Package_Content::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedication_Package_Content::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreMedication_Package_Content::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication_Package_Content::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedication_Package_Content::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedication_Package_Content::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication_Package_Content::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedication_Package_Content::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item item = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreMedication_Package_Content::has_item() const {
  return this != internal_default_instance() && item_ != NULL;
}
inline void UsCoreMedication_Package_Content::clear_item() {
  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item& UsCoreMedication_Package_Content::_internal_item() const {
  return *item_;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item& UsCoreMedication_Package_Content::item() const {
  const ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item* p = item_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.item)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item*>(
      &::google::fhir::stu3::uscore::_UsCoreMedication_Package_Content_Item_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item* UsCoreMedication_Package_Content::release_item() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.item)
  
  ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item* temp = item_;
  item_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item* UsCoreMedication_Package_Content::mutable_item() {
  
  if (item_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item>(GetArenaNoVirtual());
    item_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.item)
  return item_;
}
inline void UsCoreMedication_Package_Content::set_allocated_item(::google::fhir::stu3::uscore::UsCoreMedication_Package_Content_Item* item) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete item_;
  }
  if (item) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      item = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    
  } else {
    
  }
  item_ = item;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.item)
}

// .google.fhir.stu3.proto.SimpleQuantity amount = 5;
inline bool UsCoreMedication_Package_Content::has_amount() const {
  return this != internal_default_instance() && amount_ != NULL;
}
inline const ::google::fhir::stu3::proto::SimpleQuantity& UsCoreMedication_Package_Content::_internal_amount() const {
  return *amount_;
}
inline const ::google::fhir::stu3::proto::SimpleQuantity& UsCoreMedication_Package_Content::amount() const {
  const ::google::fhir::stu3::proto::SimpleQuantity* p = amount_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.amount)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::SimpleQuantity*>(
      &::google::fhir::stu3::proto::_SimpleQuantity_default_instance_);
}
inline ::google::fhir::stu3::proto::SimpleQuantity* UsCoreMedication_Package_Content::release_amount() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.amount)
  
  ::google::fhir::stu3::proto::SimpleQuantity* temp = amount_;
  amount_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::SimpleQuantity* UsCoreMedication_Package_Content::mutable_amount() {
  
  if (amount_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::SimpleQuantity>(GetArenaNoVirtual());
    amount_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.amount)
  return amount_;
}
inline void UsCoreMedication_Package_Content::set_allocated_amount(::google::fhir::stu3::proto::SimpleQuantity* amount) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(amount_);
  }
  if (amount) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      amount = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, amount, submessage_arena);
    }
    
  } else {
    
  }
  amount_ = amount;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.Package.Content.amount)
}

// -------------------------------------------------------------------

// UsCoreMedication_Package_Batch

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreMedication_Package_Batch::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreMedication_Package_Batch::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreMedication_Package_Batch::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreMedication_Package_Batch::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreMedication_Package_Batch::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.id)
  return id_;
}
inline void UsCoreMedication_Package_Batch::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreMedication_Package_Batch::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication_Package_Batch::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedication_Package_Batch::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedication_Package_Batch::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication_Package_Batch::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedication_Package_Batch::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreMedication_Package_Batch::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication_Package_Batch::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedication_Package_Batch::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedication_Package_Batch::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication_Package_Batch::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedication_Package_Batch::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.String lot_number = 4;
inline bool UsCoreMedication_Package_Batch::has_lot_number() const {
  return this != internal_default_instance() && lot_number_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreMedication_Package_Batch::_internal_lot_number() const {
  return *lot_number_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreMedication_Package_Batch::lot_number() const {
  const ::google::fhir::stu3::proto::String* p = lot_number_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.lot_number)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreMedication_Package_Batch::release_lot_number() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.lot_number)
  
  ::google::fhir::stu3::proto::String* temp = lot_number_;
  lot_number_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreMedication_Package_Batch::mutable_lot_number() {
  
  if (lot_number_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    lot_number_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.lot_number)
  return lot_number_;
}
inline void UsCoreMedication_Package_Batch::set_allocated_lot_number(::google::fhir::stu3::proto::String* lot_number) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(lot_number_);
  }
  if (lot_number) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      lot_number = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lot_number, submessage_arena);
    }
    
  } else {
    
  }
  lot_number_ = lot_number;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.lot_number)
}

// .google.fhir.stu3.proto.DateTime expiration_date = 5;
inline bool UsCoreMedication_Package_Batch::has_expiration_date() const {
  return this != internal_default_instance() && expiration_date_ != NULL;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreMedication_Package_Batch::_internal_expiration_date() const {
  return *expiration_date_;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreMedication_Package_Batch::expiration_date() const {
  const ::google::fhir::stu3::proto::DateTime* p = expiration_date_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.expiration_date)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::DateTime*>(
      &::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreMedication_Package_Batch::release_expiration_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.expiration_date)
  
  ::google::fhir::stu3::proto::DateTime* temp = expiration_date_;
  expiration_date_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreMedication_Package_Batch::mutable_expiration_date() {
  
  if (expiration_date_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::DateTime>(GetArenaNoVirtual());
    expiration_date_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.expiration_date)
  return expiration_date_;
}
inline void UsCoreMedication_Package_Batch::set_allocated_expiration_date(::google::fhir::stu3::proto::DateTime* expiration_date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(expiration_date_);
  }
  if (expiration_date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      expiration_date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, expiration_date, submessage_arena);
    }
    
  } else {
    
  }
  expiration_date_ = expiration_date;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.Package.Batch.expiration_date)
}

// -------------------------------------------------------------------

// UsCoreMedication_Package

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreMedication_Package::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreMedication_Package::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreMedication_Package::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Package.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreMedication_Package::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.Package.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreMedication_Package::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Package.id)
  return id_;
}
inline void UsCoreMedication_Package::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.Package.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreMedication_Package::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication_Package::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Package.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedication_Package::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedication.Package.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedication_Package::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Package.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication_Package::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedication.Package.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedication_Package::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedication.Package.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreMedication_Package::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication_Package::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Package.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedication_Package::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedication.Package.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedication_Package::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Package.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication_Package::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedication.Package.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedication_Package::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedication.Package.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.CodeableConcept container = 4;
inline bool UsCoreMedication_Package::has_container() const {
  return this != internal_default_instance() && container_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedication_Package::_internal_container() const {
  return *container_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedication_Package::container() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = container_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Package.container)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedication_Package::release_container() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.Package.container)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = container_;
  container_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedication_Package::mutable_container() {
  
  if (container_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    container_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Package.container)
  return container_;
}
inline void UsCoreMedication_Package::set_allocated_container(::google::fhir::stu3::proto::CodeableConcept* container) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(container_);
  }
  if (container) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      container = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, container, submessage_arena);
    }
    
  } else {
    
  }
  container_ = container;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.Package.container)
}

// repeated .google.fhir.stu3.uscore.UsCoreMedication.Package.Content content = 5;
inline int UsCoreMedication_Package::content_size() const {
  return content_.size();
}
inline void UsCoreMedication_Package::clear_content() {
  content_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content* UsCoreMedication_Package::mutable_content(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Package.content)
  return content_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content >*
UsCoreMedication_Package::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedication.Package.content)
  return &content_;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content& UsCoreMedication_Package::content(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Package.content)
  return content_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content* UsCoreMedication_Package::add_content() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedication.Package.content)
  return content_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreMedication_Package_Content >&
UsCoreMedication_Package::content() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedication.Package.content)
  return content_;
}

// repeated .google.fhir.stu3.uscore.UsCoreMedication.Package.Batch batch = 6;
inline int UsCoreMedication_Package::batch_size() const {
  return batch_.size();
}
inline void UsCoreMedication_Package::clear_batch() {
  batch_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch* UsCoreMedication_Package::mutable_batch(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.Package.batch)
  return batch_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch >*
UsCoreMedication_Package::mutable_batch() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedication.Package.batch)
  return &batch_;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch& UsCoreMedication_Package::batch(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.Package.batch)
  return batch_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch* UsCoreMedication_Package::add_batch() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedication.Package.batch)
  return batch_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreMedication_Package_Batch >&
UsCoreMedication_Package::batch() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedication.Package.batch)
  return batch_;
}

// -------------------------------------------------------------------

// UsCoreMedication

// .google.fhir.stu3.proto.Id id = 1;
inline bool UsCoreMedication::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreMedication::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreMedication::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* UsCoreMedication::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* UsCoreMedication::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.id)
  return id_;
}
inline void UsCoreMedication::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool UsCoreMedication::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreMedication::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreMedication::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* UsCoreMedication::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* UsCoreMedication::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.meta)
  return meta_;
}
inline void UsCoreMedication::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool UsCoreMedication::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreMedication::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreMedication::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreMedication::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreMedication::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.implicit_rules)
  return implicit_rules_;
}
inline void UsCoreMedication::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool UsCoreMedication::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreMedication::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreMedication::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreMedication::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreMedication::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.language)
  return language_;
}
inline void UsCoreMedication::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.language)
}

// .google.fhir.stu3.proto.Narrative text = 5;
inline bool UsCoreMedication::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreMedication::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreMedication::text() const {
  const ::google::fhir::stu3::proto::Narrative* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Narrative*>(
      &::google::fhir::stu3::proto::_Narrative_default_instance_);
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreMedication::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.text)
  
  ::google::fhir::stu3::proto::Narrative* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreMedication::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.text)
  return text_;
}
inline void UsCoreMedication::set_allocated_text(::google::fhir::stu3::proto::Narrative* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.text)
}

// repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
inline int UsCoreMedication::contained_size() const {
  return contained_.size();
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreMedication::mutable_contained(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.contained)
  return contained_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
UsCoreMedication::mutable_contained() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedication.contained)
  return &contained_;
}
inline const ::google::fhir::stu3::proto::ContainedResource& UsCoreMedication::contained(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.contained)
  return contained_.Get(index);
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreMedication::add_contained() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedication.contained)
  return contained_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
UsCoreMedication::contained() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedication.contained)
  return contained_;
}

// repeated .google.fhir.stu3.proto.Extension extension = 7;
inline int UsCoreMedication::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedication::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedication.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedication::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedication.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedication::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedication.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
inline int UsCoreMedication::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedication::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedication.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedication::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedication::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedication.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedication::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedication.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.CodeableConcept code = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreMedication::has_code() const {
  return this != internal_default_instance() && code_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedication::_internal_code() const {
  return *code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedication::code() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = code_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.code)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedication::release_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.code)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = code_;
  code_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedication::mutable_code() {
  
  if (code_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    code_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.code)
  return code_;
}
inline void UsCoreMedication::set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(code_);
  }
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    
  } else {
    
  }
  code_ = code;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.code)
}

// .google.fhir.stu3.proto.MedicationStatusCode status = 10;
inline bool UsCoreMedication::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::fhir::stu3::proto::MedicationStatusCode& UsCoreMedication::_internal_status() const {
  return *status_;
}
inline const ::google::fhir::stu3::proto::MedicationStatusCode& UsCoreMedication::status() const {
  const ::google::fhir::stu3::proto::MedicationStatusCode* p = status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::MedicationStatusCode*>(
      &::google::fhir::stu3::proto::_MedicationStatusCode_default_instance_);
}
inline ::google::fhir::stu3::proto::MedicationStatusCode* UsCoreMedication::release_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.status)
  
  ::google::fhir::stu3::proto::MedicationStatusCode* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::MedicationStatusCode* UsCoreMedication::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::MedicationStatusCode>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.status)
  return status_;
}
inline void UsCoreMedication::set_allocated_status(::google::fhir::stu3::proto::MedicationStatusCode* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.status)
}

// .google.fhir.stu3.proto.Boolean is_brand = 11;
inline bool UsCoreMedication::has_is_brand() const {
  return this != internal_default_instance() && is_brand_ != NULL;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreMedication::_internal_is_brand() const {
  return *is_brand_;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreMedication::is_brand() const {
  const ::google::fhir::stu3::proto::Boolean* p = is_brand_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.is_brand)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Boolean*>(
      &::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreMedication::release_is_brand() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.is_brand)
  
  ::google::fhir::stu3::proto::Boolean* temp = is_brand_;
  is_brand_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreMedication::mutable_is_brand() {
  
  if (is_brand_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Boolean>(GetArenaNoVirtual());
    is_brand_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.is_brand)
  return is_brand_;
}
inline void UsCoreMedication::set_allocated_is_brand(::google::fhir::stu3::proto::Boolean* is_brand) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(is_brand_);
  }
  if (is_brand) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      is_brand = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, is_brand, submessage_arena);
    }
    
  } else {
    
  }
  is_brand_ = is_brand;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.is_brand)
}

// .google.fhir.stu3.proto.Boolean is_over_the_counter = 12;
inline bool UsCoreMedication::has_is_over_the_counter() const {
  return this != internal_default_instance() && is_over_the_counter_ != NULL;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreMedication::_internal_is_over_the_counter() const {
  return *is_over_the_counter_;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreMedication::is_over_the_counter() const {
  const ::google::fhir::stu3::proto::Boolean* p = is_over_the_counter_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.is_over_the_counter)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Boolean*>(
      &::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreMedication::release_is_over_the_counter() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.is_over_the_counter)
  
  ::google::fhir::stu3::proto::Boolean* temp = is_over_the_counter_;
  is_over_the_counter_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreMedication::mutable_is_over_the_counter() {
  
  if (is_over_the_counter_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Boolean>(GetArenaNoVirtual());
    is_over_the_counter_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.is_over_the_counter)
  return is_over_the_counter_;
}
inline void UsCoreMedication::set_allocated_is_over_the_counter(::google::fhir::stu3::proto::Boolean* is_over_the_counter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(is_over_the_counter_);
  }
  if (is_over_the_counter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      is_over_the_counter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, is_over_the_counter, submessage_arena);
    }
    
  } else {
    
  }
  is_over_the_counter_ = is_over_the_counter;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.is_over_the_counter)
}

// .google.fhir.stu3.proto.Reference manufacturer = 13 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
inline bool UsCoreMedication::has_manufacturer() const {
  return this != internal_default_instance() && manufacturer_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedication::_internal_manufacturer() const {
  return *manufacturer_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedication::manufacturer() const {
  const ::google::fhir::stu3::proto::Reference* p = manufacturer_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.manufacturer)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedication::release_manufacturer() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.manufacturer)
  
  ::google::fhir::stu3::proto::Reference* temp = manufacturer_;
  manufacturer_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedication::mutable_manufacturer() {
  
  if (manufacturer_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    manufacturer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.manufacturer)
  return manufacturer_;
}
inline void UsCoreMedication::set_allocated_manufacturer(::google::fhir::stu3::proto::Reference* manufacturer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(manufacturer_);
  }
  if (manufacturer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      manufacturer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, manufacturer, submessage_arena);
    }
    
  } else {
    
  }
  manufacturer_ = manufacturer;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.manufacturer)
}

// .google.fhir.stu3.proto.CodeableConcept form = 14;
inline bool UsCoreMedication::has_form() const {
  return this != internal_default_instance() && form_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedication::_internal_form() const {
  return *form_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedication::form() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = form_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.form)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedication::release_form() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.form)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = form_;
  form_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedication::mutable_form() {
  
  if (form_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    form_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.form)
  return form_;
}
inline void UsCoreMedication::set_allocated_form(::google::fhir::stu3::proto::CodeableConcept* form) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(form_);
  }
  if (form) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      form = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, form, submessage_arena);
    }
    
  } else {
    
  }
  form_ = form;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.form)
}

// repeated .google.fhir.stu3.uscore.UsCoreMedication.Ingredient ingredient = 15;
inline int UsCoreMedication::ingredient_size() const {
  return ingredient_.size();
}
inline void UsCoreMedication::clear_ingredient() {
  ingredient_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient* UsCoreMedication::mutable_ingredient(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.ingredient)
  return ingredient_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient >*
UsCoreMedication::mutable_ingredient() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedication.ingredient)
  return &ingredient_;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient& UsCoreMedication::ingredient(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.ingredient)
  return ingredient_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient* UsCoreMedication::add_ingredient() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedication.ingredient)
  return ingredient_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreMedication_Ingredient >&
UsCoreMedication::ingredient() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedication.ingredient)
  return ingredient_;
}

// .google.fhir.stu3.uscore.UsCoreMedication.Package package_value = 16[json_name = "package"];
inline bool UsCoreMedication::has_package_value() const {
  return this != internal_default_instance() && package_value_ != NULL;
}
inline void UsCoreMedication::clear_package_value() {
  if (GetArenaNoVirtual() == NULL && package_value_ != NULL) {
    delete package_value_;
  }
  package_value_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedication_Package& UsCoreMedication::_internal_package_value() const {
  return *package_value_;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedication_Package& UsCoreMedication::package_value() const {
  const ::google::fhir::stu3::uscore::UsCoreMedication_Package* p = package_value_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.package_value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreMedication_Package*>(
      &::google::fhir::stu3::uscore::_UsCoreMedication_Package_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreMedication_Package* UsCoreMedication::release_package_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedication.package_value)
  
  ::google::fhir::stu3::uscore::UsCoreMedication_Package* temp = package_value_;
  package_value_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreMedication_Package* UsCoreMedication::mutable_package_value() {
  
  if (package_value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedication_Package>(GetArenaNoVirtual());
    package_value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.package_value)
  return package_value_;
}
inline void UsCoreMedication::set_allocated_package_value(::google::fhir::stu3::uscore::UsCoreMedication_Package* package_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete package_value_;
  }
  if (package_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      package_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, package_value, submessage_arena);
    }
    
  } else {
    
  }
  package_value_ = package_value;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedication.package_value)
}

// repeated .google.fhir.stu3.proto.Attachment image = 17;
inline int UsCoreMedication::image_size() const {
  return image_.size();
}
inline ::google::fhir::stu3::proto::Attachment* UsCoreMedication::mutable_image(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedication.image)
  return image_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment >*
UsCoreMedication::mutable_image() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedication.image)
  return &image_;
}
inline const ::google::fhir::stu3::proto::Attachment& UsCoreMedication::image(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedication.image)
  return image_.Get(index);
}
inline ::google::fhir::stu3::proto::Attachment* UsCoreMedication::add_image() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedication.image)
  return image_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment >&
UsCoreMedication::image() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedication.image)
  return image_;
}

// -------------------------------------------------------------------

// UsCoreMedicationrequest_Medication

// .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
inline bool UsCoreMedicationrequest_Medication::has_codeable_concept() const {
  return medication_case() == kCodeableConcept;
}
inline void UsCoreMedicationrequest_Medication::set_has_codeable_concept() {
  _oneof_case_[0] = kCodeableConcept;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedicationrequest_Medication::_internal_codeable_concept() const {
  return *medication_.codeable_concept_;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedicationrequest_Medication::release_codeable_concept() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication.codeable_concept)
  if (has_codeable_concept()) {
    clear_has_medication();
      ::google::fhir::stu3::proto::CodeableConcept* temp = medication_.codeable_concept_;
    medication_.codeable_concept_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedicationrequest_Medication::codeable_concept() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication.codeable_concept)
  return has_codeable_concept()
      ? *medication_.codeable_concept_
      : *reinterpret_cast< ::google::fhir::stu3::proto::CodeableConcept*>(&::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedicationrequest_Medication::mutable_codeable_concept() {
  if (!has_codeable_concept()) {
    clear_medication();
    set_has_codeable_concept();
    medication_.codeable_concept_ = CreateMaybeMessage< ::google::fhir::stu3::proto::CodeableConcept >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication.codeable_concept)
  return medication_.codeable_concept_;
}

// .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
inline bool UsCoreMedicationrequest_Medication::has_reference() const {
  return medication_case() == kReference;
}
inline void UsCoreMedicationrequest_Medication::set_has_reference() {
  _oneof_case_[0] = kReference;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest_Medication::_internal_reference() const {
  return *medication_.reference_;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest_Medication::release_reference() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication.reference)
  if (has_reference()) {
    clear_has_medication();
      ::google::fhir::stu3::proto::Reference* temp = medication_.reference_;
    medication_.reference_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest_Medication::reference() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication.reference)
  return has_reference()
      ? *medication_.reference_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Reference*>(&::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest_Medication::mutable_reference() {
  if (!has_reference()) {
    clear_medication();
    set_has_reference();
    medication_.reference_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Reference >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication.reference)
  return medication_.reference_;
}

inline bool UsCoreMedicationrequest_Medication::has_medication() const {
  return medication_case() != MEDICATION_NOT_SET;
}
inline void UsCoreMedicationrequest_Medication::clear_has_medication() {
  _oneof_case_[0] = MEDICATION_NOT_SET;
}
inline UsCoreMedicationrequest_Medication::MedicationCase UsCoreMedicationrequest_Medication::medication_case() const {
  return UsCoreMedicationrequest_Medication::MedicationCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreMedicationrequest_Requester

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreMedicationrequest_Requester::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreMedicationrequest_Requester::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreMedicationrequest_Requester::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreMedicationrequest_Requester::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreMedicationrequest_Requester::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.id)
  return id_;
}
inline void UsCoreMedicationrequest_Requester::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreMedicationrequest_Requester::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationrequest_Requester::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedicationrequest_Requester::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedicationrequest_Requester::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationrequest_Requester::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedicationrequest_Requester::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreMedicationrequest_Requester::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationrequest_Requester::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedicationrequest_Requester::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedicationrequest_Requester::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationrequest_Requester::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedicationrequest_Requester::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.Reference agent = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner"];
inline bool UsCoreMedicationrequest_Requester::has_agent() const {
  return this != internal_default_instance() && agent_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest_Requester::_internal_agent() const {
  return *agent_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest_Requester::agent() const {
  const ::google::fhir::stu3::proto::Reference* p = agent_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.agent)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest_Requester::release_agent() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.agent)
  
  ::google::fhir::stu3::proto::Reference* temp = agent_;
  agent_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest_Requester::mutable_agent() {
  
  if (agent_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    agent_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.agent)
  return agent_;
}
inline void UsCoreMedicationrequest_Requester::set_allocated_agent(::google::fhir::stu3::proto::Reference* agent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(agent_);
  }
  if (agent) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      agent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, agent, submessage_arena);
    }
    
  } else {
    
  }
  agent_ = agent;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.agent)
}

// .google.fhir.stu3.proto.Reference on_behalf_of = 5 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
inline bool UsCoreMedicationrequest_Requester::has_on_behalf_of() const {
  return this != internal_default_instance() && on_behalf_of_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest_Requester::_internal_on_behalf_of() const {
  return *on_behalf_of_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest_Requester::on_behalf_of() const {
  const ::google::fhir::stu3::proto::Reference* p = on_behalf_of_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.on_behalf_of)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest_Requester::release_on_behalf_of() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.on_behalf_of)
  
  ::google::fhir::stu3::proto::Reference* temp = on_behalf_of_;
  on_behalf_of_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest_Requester::mutable_on_behalf_of() {
  
  if (on_behalf_of_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    on_behalf_of_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.on_behalf_of)
  return on_behalf_of_;
}
inline void UsCoreMedicationrequest_Requester::set_allocated_on_behalf_of(::google::fhir::stu3::proto::Reference* on_behalf_of) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(on_behalf_of_);
  }
  if (on_behalf_of) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      on_behalf_of = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, on_behalf_of, submessage_arena);
    }
    
  } else {
    
  }
  on_behalf_of_ = on_behalf_of;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester.on_behalf_of)
}

// -------------------------------------------------------------------

// UsCoreMedicationrequest_DispenseRequest

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreMedicationrequest_DispenseRequest::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreMedicationrequest_DispenseRequest::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreMedicationrequest_DispenseRequest::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreMedicationrequest_DispenseRequest::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreMedicationrequest_DispenseRequest::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.id)
  return id_;
}
inline void UsCoreMedicationrequest_DispenseRequest::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreMedicationrequest_DispenseRequest::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationrequest_DispenseRequest::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedicationrequest_DispenseRequest::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedicationrequest_DispenseRequest::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationrequest_DispenseRequest::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedicationrequest_DispenseRequest::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreMedicationrequest_DispenseRequest::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationrequest_DispenseRequest::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedicationrequest_DispenseRequest::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedicationrequest_DispenseRequest::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationrequest_DispenseRequest::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedicationrequest_DispenseRequest::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.Period validity_period = 4;
inline bool UsCoreMedicationrequest_DispenseRequest::has_validity_period() const {
  return this != internal_default_instance() && validity_period_ != NULL;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreMedicationrequest_DispenseRequest::_internal_validity_period() const {
  return *validity_period_;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreMedicationrequest_DispenseRequest::validity_period() const {
  const ::google::fhir::stu3::proto::Period* p = validity_period_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.validity_period)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Period*>(
      &::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* UsCoreMedicationrequest_DispenseRequest::release_validity_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.validity_period)
  
  ::google::fhir::stu3::proto::Period* temp = validity_period_;
  validity_period_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Period* UsCoreMedicationrequest_DispenseRequest::mutable_validity_period() {
  
  if (validity_period_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Period>(GetArenaNoVirtual());
    validity_period_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.validity_period)
  return validity_period_;
}
inline void UsCoreMedicationrequest_DispenseRequest::set_allocated_validity_period(::google::fhir::stu3::proto::Period* validity_period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(validity_period_);
  }
  if (validity_period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      validity_period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, validity_period, submessage_arena);
    }
    
  } else {
    
  }
  validity_period_ = validity_period;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.validity_period)
}

// .google.fhir.stu3.proto.PositiveInt number_of_repeats_allowed = 5;
inline bool UsCoreMedicationrequest_DispenseRequest::has_number_of_repeats_allowed() const {
  return this != internal_default_instance() && number_of_repeats_allowed_ != NULL;
}
inline const ::google::fhir::stu3::proto::PositiveInt& UsCoreMedicationrequest_DispenseRequest::_internal_number_of_repeats_allowed() const {
  return *number_of_repeats_allowed_;
}
inline const ::google::fhir::stu3::proto::PositiveInt& UsCoreMedicationrequest_DispenseRequest::number_of_repeats_allowed() const {
  const ::google::fhir::stu3::proto::PositiveInt* p = number_of_repeats_allowed_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.number_of_repeats_allowed)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::PositiveInt*>(
      &::google::fhir::stu3::proto::_PositiveInt_default_instance_);
}
inline ::google::fhir::stu3::proto::PositiveInt* UsCoreMedicationrequest_DispenseRequest::release_number_of_repeats_allowed() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.number_of_repeats_allowed)
  
  ::google::fhir::stu3::proto::PositiveInt* temp = number_of_repeats_allowed_;
  number_of_repeats_allowed_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::PositiveInt* UsCoreMedicationrequest_DispenseRequest::mutable_number_of_repeats_allowed() {
  
  if (number_of_repeats_allowed_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::PositiveInt>(GetArenaNoVirtual());
    number_of_repeats_allowed_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.number_of_repeats_allowed)
  return number_of_repeats_allowed_;
}
inline void UsCoreMedicationrequest_DispenseRequest::set_allocated_number_of_repeats_allowed(::google::fhir::stu3::proto::PositiveInt* number_of_repeats_allowed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(number_of_repeats_allowed_);
  }
  if (number_of_repeats_allowed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      number_of_repeats_allowed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, number_of_repeats_allowed, submessage_arena);
    }
    
  } else {
    
  }
  number_of_repeats_allowed_ = number_of_repeats_allowed;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.number_of_repeats_allowed)
}

// .google.fhir.stu3.proto.SimpleQuantity quantity = 6;
inline bool UsCoreMedicationrequest_DispenseRequest::has_quantity() const {
  return this != internal_default_instance() && quantity_ != NULL;
}
inline const ::google::fhir::stu3::proto::SimpleQuantity& UsCoreMedicationrequest_DispenseRequest::_internal_quantity() const {
  return *quantity_;
}
inline const ::google::fhir::stu3::proto::SimpleQuantity& UsCoreMedicationrequest_DispenseRequest::quantity() const {
  const ::google::fhir::stu3::proto::SimpleQuantity* p = quantity_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.quantity)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::SimpleQuantity*>(
      &::google::fhir::stu3::proto::_SimpleQuantity_default_instance_);
}
inline ::google::fhir::stu3::proto::SimpleQuantity* UsCoreMedicationrequest_DispenseRequest::release_quantity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.quantity)
  
  ::google::fhir::stu3::proto::SimpleQuantity* temp = quantity_;
  quantity_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::SimpleQuantity* UsCoreMedicationrequest_DispenseRequest::mutable_quantity() {
  
  if (quantity_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::SimpleQuantity>(GetArenaNoVirtual());
    quantity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.quantity)
  return quantity_;
}
inline void UsCoreMedicationrequest_DispenseRequest::set_allocated_quantity(::google::fhir::stu3::proto::SimpleQuantity* quantity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(quantity_);
  }
  if (quantity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quantity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quantity, submessage_arena);
    }
    
  } else {
    
  }
  quantity_ = quantity;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.quantity)
}

// .google.fhir.stu3.proto.Duration expected_supply_duration = 7;
inline bool UsCoreMedicationrequest_DispenseRequest::has_expected_supply_duration() const {
  return this != internal_default_instance() && expected_supply_duration_ != NULL;
}
inline const ::google::fhir::stu3::proto::Duration& UsCoreMedicationrequest_DispenseRequest::_internal_expected_supply_duration() const {
  return *expected_supply_duration_;
}
inline const ::google::fhir::stu3::proto::Duration& UsCoreMedicationrequest_DispenseRequest::expected_supply_duration() const {
  const ::google::fhir::stu3::proto::Duration* p = expected_supply_duration_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.expected_supply_duration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Duration*>(
      &::google::fhir::stu3::proto::_Duration_default_instance_);
}
inline ::google::fhir::stu3::proto::Duration* UsCoreMedicationrequest_DispenseRequest::release_expected_supply_duration() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.expected_supply_duration)
  
  ::google::fhir::stu3::proto::Duration* temp = expected_supply_duration_;
  expected_supply_duration_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Duration* UsCoreMedicationrequest_DispenseRequest::mutable_expected_supply_duration() {
  
  if (expected_supply_duration_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Duration>(GetArenaNoVirtual());
    expected_supply_duration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.expected_supply_duration)
  return expected_supply_duration_;
}
inline void UsCoreMedicationrequest_DispenseRequest::set_allocated_expected_supply_duration(::google::fhir::stu3::proto::Duration* expected_supply_duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(expected_supply_duration_);
  }
  if (expected_supply_duration) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      expected_supply_duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, expected_supply_duration, submessage_arena);
    }
    
  } else {
    
  }
  expected_supply_duration_ = expected_supply_duration;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.expected_supply_duration)
}

// .google.fhir.stu3.proto.Reference performer = 8 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
inline bool UsCoreMedicationrequest_DispenseRequest::has_performer() const {
  return this != internal_default_instance() && performer_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest_DispenseRequest::_internal_performer() const {
  return *performer_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest_DispenseRequest::performer() const {
  const ::google::fhir::stu3::proto::Reference* p = performer_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.performer)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest_DispenseRequest::release_performer() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.performer)
  
  ::google::fhir::stu3::proto::Reference* temp = performer_;
  performer_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest_DispenseRequest::mutable_performer() {
  
  if (performer_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    performer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.performer)
  return performer_;
}
inline void UsCoreMedicationrequest_DispenseRequest::set_allocated_performer(::google::fhir::stu3::proto::Reference* performer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(performer_);
  }
  if (performer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      performer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, performer, submessage_arena);
    }
    
  } else {
    
  }
  performer_ = performer;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest.performer)
}

// -------------------------------------------------------------------

// UsCoreMedicationrequest_Substitution

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreMedicationrequest_Substitution::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreMedicationrequest_Substitution::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreMedicationrequest_Substitution::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreMedicationrequest_Substitution::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreMedicationrequest_Substitution::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.id)
  return id_;
}
inline void UsCoreMedicationrequest_Substitution::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreMedicationrequest_Substitution::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationrequest_Substitution::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedicationrequest_Substitution::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedicationrequest_Substitution::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationrequest_Substitution::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedicationrequest_Substitution::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreMedicationrequest_Substitution::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationrequest_Substitution::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedicationrequest_Substitution::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedicationrequest_Substitution::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationrequest_Substitution::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedicationrequest_Substitution::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.Boolean allowed = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreMedicationrequest_Substitution::has_allowed() const {
  return this != internal_default_instance() && allowed_ != NULL;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreMedicationrequest_Substitution::_internal_allowed() const {
  return *allowed_;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreMedicationrequest_Substitution::allowed() const {
  const ::google::fhir::stu3::proto::Boolean* p = allowed_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.allowed)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Boolean*>(
      &::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreMedicationrequest_Substitution::release_allowed() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.allowed)
  
  ::google::fhir::stu3::proto::Boolean* temp = allowed_;
  allowed_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreMedicationrequest_Substitution::mutable_allowed() {
  
  if (allowed_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Boolean>(GetArenaNoVirtual());
    allowed_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.allowed)
  return allowed_;
}
inline void UsCoreMedicationrequest_Substitution::set_allocated_allowed(::google::fhir::stu3::proto::Boolean* allowed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(allowed_);
  }
  if (allowed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      allowed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, allowed, submessage_arena);
    }
    
  } else {
    
  }
  allowed_ = allowed;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.allowed)
}

// .google.fhir.stu3.proto.CodeableConcept reason = 5;
inline bool UsCoreMedicationrequest_Substitution::has_reason() const {
  return this != internal_default_instance() && reason_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedicationrequest_Substitution::_internal_reason() const {
  return *reason_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedicationrequest_Substitution::reason() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = reason_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.reason)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedicationrequest_Substitution::release_reason() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.reason)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = reason_;
  reason_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedicationrequest_Substitution::mutable_reason() {
  
  if (reason_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    reason_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.reason)
  return reason_;
}
inline void UsCoreMedicationrequest_Substitution::set_allocated_reason(::google::fhir::stu3::proto::CodeableConcept* reason) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(reason_);
  }
  if (reason) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reason = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reason, submessage_arena);
    }
    
  } else {
    
  }
  reason_ = reason;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution.reason)
}

// -------------------------------------------------------------------

// UsCoreMedicationrequest

// .google.fhir.stu3.proto.Id id = 1;
inline bool UsCoreMedicationrequest::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreMedicationrequest::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreMedicationrequest::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* UsCoreMedicationrequest::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* UsCoreMedicationrequest::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.id)
  return id_;
}
inline void UsCoreMedicationrequest::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool UsCoreMedicationrequest::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreMedicationrequest::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreMedicationrequest::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* UsCoreMedicationrequest::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* UsCoreMedicationrequest::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.meta)
  return meta_;
}
inline void UsCoreMedicationrequest::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool UsCoreMedicationrequest::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreMedicationrequest::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreMedicationrequest::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreMedicationrequest::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreMedicationrequest::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.implicit_rules)
  return implicit_rules_;
}
inline void UsCoreMedicationrequest::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool UsCoreMedicationrequest::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreMedicationrequest::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreMedicationrequest::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreMedicationrequest::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreMedicationrequest::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.language)
  return language_;
}
inline void UsCoreMedicationrequest::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.language)
}

// .google.fhir.stu3.proto.Narrative text = 5;
inline bool UsCoreMedicationrequest::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreMedicationrequest::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreMedicationrequest::text() const {
  const ::google::fhir::stu3::proto::Narrative* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Narrative*>(
      &::google::fhir::stu3::proto::_Narrative_default_instance_);
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreMedicationrequest::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.text)
  
  ::google::fhir::stu3::proto::Narrative* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreMedicationrequest::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.text)
  return text_;
}
inline void UsCoreMedicationrequest::set_allocated_text(::google::fhir::stu3::proto::Narrative* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.text)
}

// repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
inline int UsCoreMedicationrequest::contained_size() const {
  return contained_.size();
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreMedicationrequest::mutable_contained(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.contained)
  return contained_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
UsCoreMedicationrequest::mutable_contained() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.contained)
  return &contained_;
}
inline const ::google::fhir::stu3::proto::ContainedResource& UsCoreMedicationrequest::contained(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.contained)
  return contained_.Get(index);
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreMedicationrequest::add_contained() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.contained)
  return contained_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
UsCoreMedicationrequest::contained() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.contained)
  return contained_;
}

// repeated .google.fhir.stu3.proto.Extension extension = 7;
inline int UsCoreMedicationrequest::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationrequest::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedicationrequest::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedicationrequest::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationrequest::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedicationrequest::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
inline int UsCoreMedicationrequest::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationrequest::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedicationrequest::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedicationrequest::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationrequest::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedicationrequest::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.Identifier identifier = 9;
inline int UsCoreMedicationrequest::identifier_size() const {
  return identifier_.size();
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreMedicationrequest::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.identifier)
  return identifier_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
UsCoreMedicationrequest::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.identifier)
  return &identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCoreMedicationrequest::identifier(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.identifier)
  return identifier_.Get(index);
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreMedicationrequest::add_identifier() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.identifier)
  return identifier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
UsCoreMedicationrequest::identifier() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.identifier)
  return identifier_;
}

// repeated .google.fhir.stu3.proto.Reference definition = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ActivityDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition"];
inline int UsCoreMedicationrequest::definition_size() const {
  return definition_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::mutable_definition(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.definition)
  return definition_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreMedicationrequest::mutable_definition() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.definition)
  return &definition_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest::definition(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.definition)
  return definition_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::add_definition() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.definition)
  return definition_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreMedicationrequest::definition() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.definition)
  return definition_;
}

// repeated .google.fhir.stu3.proto.Reference based_on = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
inline int UsCoreMedicationrequest::based_on_size() const {
  return based_on_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::mutable_based_on(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.based_on)
  return based_on_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreMedicationrequest::mutable_based_on() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.based_on)
  return &based_on_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest::based_on(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.based_on)
  return based_on_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::add_based_on() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.based_on)
  return based_on_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreMedicationrequest::based_on() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.based_on)
  return based_on_;
}

// .google.fhir.stu3.proto.Identifier group_identifier = 12;
inline bool UsCoreMedicationrequest::has_group_identifier() const {
  return this != internal_default_instance() && group_identifier_ != NULL;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCoreMedicationrequest::_internal_group_identifier() const {
  return *group_identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCoreMedicationrequest::group_identifier() const {
  const ::google::fhir::stu3::proto::Identifier* p = group_identifier_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.group_identifier)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Identifier*>(
      &::google::fhir::stu3::proto::_Identifier_default_instance_);
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreMedicationrequest::release_group_identifier() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.group_identifier)
  
  ::google::fhir::stu3::proto::Identifier* temp = group_identifier_;
  group_identifier_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreMedicationrequest::mutable_group_identifier() {
  
  if (group_identifier_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Identifier>(GetArenaNoVirtual());
    group_identifier_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.group_identifier)
  return group_identifier_;
}
inline void UsCoreMedicationrequest::set_allocated_group_identifier(::google::fhir::stu3::proto::Identifier* group_identifier) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(group_identifier_);
  }
  if (group_identifier) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      group_identifier = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group_identifier, submessage_arena);
    }
    
  } else {
    
  }
  group_identifier_ = group_identifier;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.group_identifier)
}

// .google.fhir.stu3.proto.MedicationRequestStatusCode status = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreMedicationrequest::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::fhir::stu3::proto::MedicationRequestStatusCode& UsCoreMedicationrequest::_internal_status() const {
  return *status_;
}
inline const ::google::fhir::stu3::proto::MedicationRequestStatusCode& UsCoreMedicationrequest::status() const {
  const ::google::fhir::stu3::proto::MedicationRequestStatusCode* p = status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::MedicationRequestStatusCode*>(
      &::google::fhir::stu3::proto::_MedicationRequestStatusCode_default_instance_);
}
inline ::google::fhir::stu3::proto::MedicationRequestStatusCode* UsCoreMedicationrequest::release_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.status)
  
  ::google::fhir::stu3::proto::MedicationRequestStatusCode* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::MedicationRequestStatusCode* UsCoreMedicationrequest::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::MedicationRequestStatusCode>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.status)
  return status_;
}
inline void UsCoreMedicationrequest::set_allocated_status(::google::fhir::stu3::proto::MedicationRequestStatusCode* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.status)
}

// .google.fhir.stu3.proto.MedicationRequestIntentCode intent = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreMedicationrequest::has_intent() const {
  return this != internal_default_instance() && intent_ != NULL;
}
inline const ::google::fhir::stu3::proto::MedicationRequestIntentCode& UsCoreMedicationrequest::_internal_intent() const {
  return *intent_;
}
inline const ::google::fhir::stu3::proto::MedicationRequestIntentCode& UsCoreMedicationrequest::intent() const {
  const ::google::fhir::stu3::proto::MedicationRequestIntentCode* p = intent_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.intent)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::MedicationRequestIntentCode*>(
      &::google::fhir::stu3::proto::_MedicationRequestIntentCode_default_instance_);
}
inline ::google::fhir::stu3::proto::MedicationRequestIntentCode* UsCoreMedicationrequest::release_intent() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.intent)
  
  ::google::fhir::stu3::proto::MedicationRequestIntentCode* temp = intent_;
  intent_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::MedicationRequestIntentCode* UsCoreMedicationrequest::mutable_intent() {
  
  if (intent_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::MedicationRequestIntentCode>(GetArenaNoVirtual());
    intent_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.intent)
  return intent_;
}
inline void UsCoreMedicationrequest::set_allocated_intent(::google::fhir::stu3::proto::MedicationRequestIntentCode* intent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(intent_);
  }
  if (intent) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      intent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, intent, submessage_arena);
    }
    
  } else {
    
  }
  intent_ = intent;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.intent)
}

// .google.fhir.stu3.proto.CodeableConcept category = 15;
inline bool UsCoreMedicationrequest::has_category() const {
  return this != internal_default_instance() && category_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedicationrequest::_internal_category() const {
  return *category_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedicationrequest::category() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = category_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.category)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedicationrequest::release_category() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.category)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = category_;
  category_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedicationrequest::mutable_category() {
  
  if (category_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.category)
  return category_;
}
inline void UsCoreMedicationrequest::set_allocated_category(::google::fhir::stu3::proto::CodeableConcept* category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(category_);
  }
  if (category) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, category, submessage_arena);
    }
    
  } else {
    
  }
  category_ = category;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.category)
}

// .google.fhir.stu3.proto.MedicationRequestPriorityCode priority = 16;
inline bool UsCoreMedicationrequest::has_priority() const {
  return this != internal_default_instance() && priority_ != NULL;
}
inline const ::google::fhir::stu3::proto::MedicationRequestPriorityCode& UsCoreMedicationrequest::_internal_priority() const {
  return *priority_;
}
inline const ::google::fhir::stu3::proto::MedicationRequestPriorityCode& UsCoreMedicationrequest::priority() const {
  const ::google::fhir::stu3::proto::MedicationRequestPriorityCode* p = priority_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.priority)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::MedicationRequestPriorityCode*>(
      &::google::fhir::stu3::proto::_MedicationRequestPriorityCode_default_instance_);
}
inline ::google::fhir::stu3::proto::MedicationRequestPriorityCode* UsCoreMedicationrequest::release_priority() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.priority)
  
  ::google::fhir::stu3::proto::MedicationRequestPriorityCode* temp = priority_;
  priority_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::MedicationRequestPriorityCode* UsCoreMedicationrequest::mutable_priority() {
  
  if (priority_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::MedicationRequestPriorityCode>(GetArenaNoVirtual());
    priority_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.priority)
  return priority_;
}
inline void UsCoreMedicationrequest::set_allocated_priority(::google::fhir::stu3::proto::MedicationRequestPriorityCode* priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(priority_);
  }
  if (priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, priority, submessage_arena);
    }
    
  } else {
    
  }
  priority_ = priority;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.priority)
}

// .google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication medication = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreMedicationrequest::has_medication() const {
  return this != internal_default_instance() && medication_ != NULL;
}
inline void UsCoreMedicationrequest::clear_medication() {
  if (GetArenaNoVirtual() == NULL && medication_ != NULL) {
    delete medication_;
  }
  medication_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication& UsCoreMedicationrequest::_internal_medication() const {
  return *medication_;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication& UsCoreMedicationrequest::medication() const {
  const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication* p = medication_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.medication)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication*>(
      &::google::fhir::stu3::uscore::_UsCoreMedicationrequest_Medication_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication* UsCoreMedicationrequest::release_medication() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.medication)
  
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication* temp = medication_;
  medication_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication* UsCoreMedicationrequest::mutable_medication() {
  
  if (medication_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication>(GetArenaNoVirtual());
    medication_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.medication)
  return medication_;
}
inline void UsCoreMedicationrequest::set_allocated_medication(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Medication* medication) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete medication_;
  }
  if (medication) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      medication = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, medication, submessage_arena);
    }
    
  } else {
    
  }
  medication_ = medication;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.medication)
}

// .google.fhir.stu3.proto.Reference subject = 18 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
inline bool UsCoreMedicationrequest::has_subject() const {
  return this != internal_default_instance() && subject_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest::_internal_subject() const {
  return *subject_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest::subject() const {
  const ::google::fhir::stu3::proto::Reference* p = subject_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.subject)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::release_subject() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.subject)
  
  ::google::fhir::stu3::proto::Reference* temp = subject_;
  subject_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::mutable_subject() {
  
  if (subject_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    subject_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.subject)
  return subject_;
}
inline void UsCoreMedicationrequest::set_allocated_subject(::google::fhir::stu3::proto::Reference* subject) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(subject_);
  }
  if (subject) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      subject = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, subject, submessage_arena);
    }
    
  } else {
    
  }
  subject_ = subject;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.subject)
}

// .google.fhir.stu3.proto.Reference context = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
inline bool UsCoreMedicationrequest::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest::_internal_context() const {
  return *context_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest::context() const {
  const ::google::fhir::stu3::proto::Reference* p = context_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.context)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::release_context() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.context)
  
  ::google::fhir::stu3::proto::Reference* temp = context_;
  context_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::mutable_context() {
  
  if (context_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    context_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.context)
  return context_;
}
inline void UsCoreMedicationrequest::set_allocated_context(::google::fhir::stu3::proto::Reference* context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(context_);
  }
  if (context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.context)
}

// repeated .google.fhir.stu3.proto.Reference supporting_information = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
inline int UsCoreMedicationrequest::supporting_information_size() const {
  return supporting_information_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::mutable_supporting_information(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.supporting_information)
  return supporting_information_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreMedicationrequest::mutable_supporting_information() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.supporting_information)
  return &supporting_information_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest::supporting_information(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.supporting_information)
  return supporting_information_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::add_supporting_information() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.supporting_information)
  return supporting_information_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreMedicationrequest::supporting_information() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.supporting_information)
  return supporting_information_;
}

// .google.fhir.stu3.proto.DateTime authored_on = 21 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreMedicationrequest::has_authored_on() const {
  return this != internal_default_instance() && authored_on_ != NULL;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreMedicationrequest::_internal_authored_on() const {
  return *authored_on_;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreMedicationrequest::authored_on() const {
  const ::google::fhir::stu3::proto::DateTime* p = authored_on_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.authored_on)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::DateTime*>(
      &::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreMedicationrequest::release_authored_on() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.authored_on)
  
  ::google::fhir::stu3::proto::DateTime* temp = authored_on_;
  authored_on_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreMedicationrequest::mutable_authored_on() {
  
  if (authored_on_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::DateTime>(GetArenaNoVirtual());
    authored_on_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.authored_on)
  return authored_on_;
}
inline void UsCoreMedicationrequest::set_allocated_authored_on(::google::fhir::stu3::proto::DateTime* authored_on) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(authored_on_);
  }
  if (authored_on) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      authored_on = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, authored_on, submessage_arena);
    }
    
  } else {
    
  }
  authored_on_ = authored_on;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.authored_on)
}

// .google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester requester = 22 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreMedicationrequest::has_requester() const {
  return this != internal_default_instance() && requester_ != NULL;
}
inline void UsCoreMedicationrequest::clear_requester() {
  if (GetArenaNoVirtual() == NULL && requester_ != NULL) {
    delete requester_;
  }
  requester_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester& UsCoreMedicationrequest::_internal_requester() const {
  return *requester_;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester& UsCoreMedicationrequest::requester() const {
  const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester* p = requester_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.requester)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester*>(
      &::google::fhir::stu3::uscore::_UsCoreMedicationrequest_Requester_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester* UsCoreMedicationrequest::release_requester() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.requester)
  
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester* temp = requester_;
  requester_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester* UsCoreMedicationrequest::mutable_requester() {
  
  if (requester_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester>(GetArenaNoVirtual());
    requester_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.requester)
  return requester_;
}
inline void UsCoreMedicationrequest::set_allocated_requester(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Requester* requester) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete requester_;
  }
  if (requester) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      requester = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, requester, submessage_arena);
    }
    
  } else {
    
  }
  requester_ = requester;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.requester)
}

// .google.fhir.stu3.proto.Reference recorder = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
inline bool UsCoreMedicationrequest::has_recorder() const {
  return this != internal_default_instance() && recorder_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest::_internal_recorder() const {
  return *recorder_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest::recorder() const {
  const ::google::fhir::stu3::proto::Reference* p = recorder_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.recorder)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::release_recorder() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.recorder)
  
  ::google::fhir::stu3::proto::Reference* temp = recorder_;
  recorder_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::mutable_recorder() {
  
  if (recorder_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    recorder_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.recorder)
  return recorder_;
}
inline void UsCoreMedicationrequest::set_allocated_recorder(::google::fhir::stu3::proto::Reference* recorder) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(recorder_);
  }
  if (recorder) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      recorder = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, recorder, submessage_arena);
    }
    
  } else {
    
  }
  recorder_ = recorder;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.recorder)
}

// repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 24;
inline int UsCoreMedicationrequest::reason_code_size() const {
  return reason_code_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedicationrequest::mutable_reason_code(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.reason_code)
  return reason_code_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreMedicationrequest::mutable_reason_code() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.reason_code)
  return &reason_code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedicationrequest::reason_code(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.reason_code)
  return reason_code_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedicationrequest::add_reason_code() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.reason_code)
  return reason_code_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreMedicationrequest::reason_code() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.reason_code)
  return reason_code_;
}

// repeated .google.fhir.stu3.proto.Reference reason_reference = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
inline int UsCoreMedicationrequest::reason_reference_size() const {
  return reason_reference_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::mutable_reason_reference(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.reason_reference)
  return reason_reference_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreMedicationrequest::mutable_reason_reference() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.reason_reference)
  return &reason_reference_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest::reason_reference(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.reason_reference)
  return reason_reference_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::add_reason_reference() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.reason_reference)
  return reason_reference_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreMedicationrequest::reason_reference() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.reason_reference)
  return reason_reference_;
}

// repeated .google.fhir.stu3.proto.Annotation note = 26;
inline int UsCoreMedicationrequest::note_size() const {
  return note_.size();
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreMedicationrequest::mutable_note(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.note)
  return note_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
UsCoreMedicationrequest::mutable_note() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.note)
  return &note_;
}
inline const ::google::fhir::stu3::proto::Annotation& UsCoreMedicationrequest::note(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.note)
  return note_.Get(index);
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreMedicationrequest::add_note() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.note)
  return note_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
UsCoreMedicationrequest::note() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.note)
  return note_;
}

// repeated .google.fhir.stu3.proto.Dosage dosage_instruction = 27;
inline int UsCoreMedicationrequest::dosage_instruction_size() const {
  return dosage_instruction_.size();
}
inline ::google::fhir::stu3::proto::Dosage* UsCoreMedicationrequest::mutable_dosage_instruction(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.dosage_instruction)
  return dosage_instruction_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Dosage >*
UsCoreMedicationrequest::mutable_dosage_instruction() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.dosage_instruction)
  return &dosage_instruction_;
}
inline const ::google::fhir::stu3::proto::Dosage& UsCoreMedicationrequest::dosage_instruction(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.dosage_instruction)
  return dosage_instruction_.Get(index);
}
inline ::google::fhir::stu3::proto::Dosage* UsCoreMedicationrequest::add_dosage_instruction() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.dosage_instruction)
  return dosage_instruction_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Dosage >&
UsCoreMedicationrequest::dosage_instruction() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.dosage_instruction)
  return dosage_instruction_;
}

// .google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest dispense_request = 28;
inline bool UsCoreMedicationrequest::has_dispense_request() const {
  return this != internal_default_instance() && dispense_request_ != NULL;
}
inline void UsCoreMedicationrequest::clear_dispense_request() {
  if (GetArenaNoVirtual() == NULL && dispense_request_ != NULL) {
    delete dispense_request_;
  }
  dispense_request_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest& UsCoreMedicationrequest::_internal_dispense_request() const {
  return *dispense_request_;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest& UsCoreMedicationrequest::dispense_request() const {
  const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest* p = dispense_request_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.dispense_request)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest*>(
      &::google::fhir::stu3::uscore::_UsCoreMedicationrequest_DispenseRequest_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest* UsCoreMedicationrequest::release_dispense_request() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.dispense_request)
  
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest* temp = dispense_request_;
  dispense_request_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest* UsCoreMedicationrequest::mutable_dispense_request() {
  
  if (dispense_request_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest>(GetArenaNoVirtual());
    dispense_request_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.dispense_request)
  return dispense_request_;
}
inline void UsCoreMedicationrequest::set_allocated_dispense_request(::google::fhir::stu3::uscore::UsCoreMedicationrequest_DispenseRequest* dispense_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dispense_request_;
  }
  if (dispense_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dispense_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dispense_request, submessage_arena);
    }
    
  } else {
    
  }
  dispense_request_ = dispense_request;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.dispense_request)
}

// .google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution substitution = 29;
inline bool UsCoreMedicationrequest::has_substitution() const {
  return this != internal_default_instance() && substitution_ != NULL;
}
inline void UsCoreMedicationrequest::clear_substitution() {
  if (GetArenaNoVirtual() == NULL && substitution_ != NULL) {
    delete substitution_;
  }
  substitution_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution& UsCoreMedicationrequest::_internal_substitution() const {
  return *substitution_;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution& UsCoreMedicationrequest::substitution() const {
  const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution* p = substitution_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.substitution)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution*>(
      &::google::fhir::stu3::uscore::_UsCoreMedicationrequest_Substitution_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution* UsCoreMedicationrequest::release_substitution() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.substitution)
  
  ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution* temp = substitution_;
  substitution_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution* UsCoreMedicationrequest::mutable_substitution() {
  
  if (substitution_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution>(GetArenaNoVirtual());
    substitution_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.substitution)
  return substitution_;
}
inline void UsCoreMedicationrequest::set_allocated_substitution(::google::fhir::stu3::uscore::UsCoreMedicationrequest_Substitution* substitution) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete substitution_;
  }
  if (substitution) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      substitution = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, substitution, submessage_arena);
    }
    
  } else {
    
  }
  substitution_ = substitution;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.substitution)
}

// .google.fhir.stu3.proto.Reference prior_prescription = 30 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest"];
inline bool UsCoreMedicationrequest::has_prior_prescription() const {
  return this != internal_default_instance() && prior_prescription_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest::_internal_prior_prescription() const {
  return *prior_prescription_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest::prior_prescription() const {
  const ::google::fhir::stu3::proto::Reference* p = prior_prescription_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.prior_prescription)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::release_prior_prescription() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationrequest.prior_prescription)
  
  ::google::fhir::stu3::proto::Reference* temp = prior_prescription_;
  prior_prescription_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::mutable_prior_prescription() {
  
  if (prior_prescription_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    prior_prescription_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.prior_prescription)
  return prior_prescription_;
}
inline void UsCoreMedicationrequest::set_allocated_prior_prescription(::google::fhir::stu3::proto::Reference* prior_prescription) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(prior_prescription_);
  }
  if (prior_prescription) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      prior_prescription = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, prior_prescription, submessage_arena);
    }
    
  } else {
    
  }
  prior_prescription_ = prior_prescription;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationrequest.prior_prescription)
}

// repeated .google.fhir.stu3.proto.Reference detected_issue = 31 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DetectedIssue"];
inline int UsCoreMedicationrequest::detected_issue_size() const {
  return detected_issue_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::mutable_detected_issue(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.detected_issue)
  return detected_issue_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreMedicationrequest::mutable_detected_issue() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.detected_issue)
  return &detected_issue_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest::detected_issue(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.detected_issue)
  return detected_issue_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::add_detected_issue() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.detected_issue)
  return detected_issue_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreMedicationrequest::detected_issue() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.detected_issue)
  return detected_issue_;
}

// repeated .google.fhir.stu3.proto.Reference event_history = 32 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Provenance"];
inline int UsCoreMedicationrequest::event_history_size() const {
  return event_history_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::mutable_event_history(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationrequest.event_history)
  return event_history_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreMedicationrequest::mutable_event_history() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.event_history)
  return &event_history_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationrequest::event_history(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationrequest.event_history)
  return event_history_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationrequest::add_event_history() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationrequest.event_history)
  return event_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreMedicationrequest::event_history() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationrequest.event_history)
  return event_history_;
}

// -------------------------------------------------------------------

// UsCoreMedicationstatement_Medication

// .google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
inline bool UsCoreMedicationstatement_Medication::has_codeable_concept() const {
  return medication_case() == kCodeableConcept;
}
inline void UsCoreMedicationstatement_Medication::set_has_codeable_concept() {
  _oneof_case_[0] = kCodeableConcept;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedicationstatement_Medication::_internal_codeable_concept() const {
  return *medication_.codeable_concept_;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedicationstatement_Medication::release_codeable_concept() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication.codeable_concept)
  if (has_codeable_concept()) {
    clear_has_medication();
      ::google::fhir::stu3::proto::CodeableConcept* temp = medication_.codeable_concept_;
    medication_.codeable_concept_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedicationstatement_Medication::codeable_concept() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication.codeable_concept)
  return has_codeable_concept()
      ? *medication_.codeable_concept_
      : *reinterpret_cast< ::google::fhir::stu3::proto::CodeableConcept*>(&::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedicationstatement_Medication::mutable_codeable_concept() {
  if (!has_codeable_concept()) {
    clear_medication();
    set_has_codeable_concept();
    medication_.codeable_concept_ = CreateMaybeMessage< ::google::fhir::stu3::proto::CodeableConcept >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication.codeable_concept)
  return medication_.codeable_concept_;
}

// .google.fhir.stu3.proto.Reference reference = 2 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication"];
inline bool UsCoreMedicationstatement_Medication::has_reference() const {
  return medication_case() == kReference;
}
inline void UsCoreMedicationstatement_Medication::set_has_reference() {
  _oneof_case_[0] = kReference;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationstatement_Medication::_internal_reference() const {
  return *medication_.reference_;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationstatement_Medication::release_reference() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication.reference)
  if (has_reference()) {
    clear_has_medication();
      ::google::fhir::stu3::proto::Reference* temp = medication_.reference_;
    medication_.reference_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationstatement_Medication::reference() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication.reference)
  return has_reference()
      ? *medication_.reference_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Reference*>(&::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationstatement_Medication::mutable_reference() {
  if (!has_reference()) {
    clear_medication();
    set_has_reference();
    medication_.reference_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Reference >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication.reference)
  return medication_.reference_;
}

inline bool UsCoreMedicationstatement_Medication::has_medication() const {
  return medication_case() != MEDICATION_NOT_SET;
}
inline void UsCoreMedicationstatement_Medication::clear_has_medication() {
  _oneof_case_[0] = MEDICATION_NOT_SET;
}
inline UsCoreMedicationstatement_Medication::MedicationCase UsCoreMedicationstatement_Medication::medication_case() const {
  return UsCoreMedicationstatement_Medication::MedicationCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreMedicationstatement_Effective

// .google.fhir.stu3.proto.DateTime date_time = 1;
inline bool UsCoreMedicationstatement_Effective::has_date_time() const {
  return effective_case() == kDateTime;
}
inline void UsCoreMedicationstatement_Effective::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreMedicationstatement_Effective::_internal_date_time() const {
  return *effective_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreMedicationstatement_Effective::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective.date_time)
  if (has_date_time()) {
    clear_has_effective();
      ::google::fhir::stu3::proto::DateTime* temp = effective_.date_time_;
    effective_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreMedicationstatement_Effective::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective.date_time)
  return has_date_time()
      ? *effective_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreMedicationstatement_Effective::mutable_date_time() {
  if (!has_date_time()) {
    clear_effective();
    set_has_date_time();
    effective_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective.date_time)
  return effective_.date_time_;
}

// .google.fhir.stu3.proto.Period period = 2;
inline bool UsCoreMedicationstatement_Effective::has_period() const {
  return effective_case() == kPeriod;
}
inline void UsCoreMedicationstatement_Effective::set_has_period() {
  _oneof_case_[0] = kPeriod;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreMedicationstatement_Effective::_internal_period() const {
  return *effective_.period_;
}
inline ::google::fhir::stu3::proto::Period* UsCoreMedicationstatement_Effective::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective.period)
  if (has_period()) {
    clear_has_effective();
      ::google::fhir::stu3::proto::Period* temp = effective_.period_;
    effective_.period_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Period& UsCoreMedicationstatement_Effective::period() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective.period)
  return has_period()
      ? *effective_.period_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Period*>(&::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* UsCoreMedicationstatement_Effective::mutable_period() {
  if (!has_period()) {
    clear_effective();
    set_has_period();
    effective_.period_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Period >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective.period)
  return effective_.period_;
}

inline bool UsCoreMedicationstatement_Effective::has_effective() const {
  return effective_case() != EFFECTIVE_NOT_SET;
}
inline void UsCoreMedicationstatement_Effective::clear_has_effective() {
  _oneof_case_[0] = EFFECTIVE_NOT_SET;
}
inline UsCoreMedicationstatement_Effective::EffectiveCase UsCoreMedicationstatement_Effective::effective_case() const {
  return UsCoreMedicationstatement_Effective::EffectiveCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreMedicationstatement

// .google.fhir.stu3.proto.Id id = 1;
inline bool UsCoreMedicationstatement::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreMedicationstatement::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreMedicationstatement::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* UsCoreMedicationstatement::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationstatement.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* UsCoreMedicationstatement::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.id)
  return id_;
}
inline void UsCoreMedicationstatement::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationstatement.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool UsCoreMedicationstatement::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreMedicationstatement::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreMedicationstatement::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* UsCoreMedicationstatement::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationstatement.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* UsCoreMedicationstatement::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.meta)
  return meta_;
}
inline void UsCoreMedicationstatement::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationstatement.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool UsCoreMedicationstatement::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreMedicationstatement::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreMedicationstatement::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreMedicationstatement::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationstatement.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreMedicationstatement::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.implicit_rules)
  return implicit_rules_;
}
inline void UsCoreMedicationstatement::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationstatement.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool UsCoreMedicationstatement::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreMedicationstatement::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreMedicationstatement::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreMedicationstatement::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationstatement.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreMedicationstatement::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.language)
  return language_;
}
inline void UsCoreMedicationstatement::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationstatement.language)
}

// .google.fhir.stu3.proto.Narrative text = 5;
inline bool UsCoreMedicationstatement::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreMedicationstatement::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreMedicationstatement::text() const {
  const ::google::fhir::stu3::proto::Narrative* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Narrative*>(
      &::google::fhir::stu3::proto::_Narrative_default_instance_);
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreMedicationstatement::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationstatement.text)
  
  ::google::fhir::stu3::proto::Narrative* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreMedicationstatement::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.text)
  return text_;
}
inline void UsCoreMedicationstatement::set_allocated_text(::google::fhir::stu3::proto::Narrative* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationstatement.text)
}

// repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
inline int UsCoreMedicationstatement::contained_size() const {
  return contained_.size();
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreMedicationstatement::mutable_contained(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.contained)
  return contained_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
UsCoreMedicationstatement::mutable_contained() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.contained)
  return &contained_;
}
inline const ::google::fhir::stu3::proto::ContainedResource& UsCoreMedicationstatement::contained(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.contained)
  return contained_.Get(index);
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreMedicationstatement::add_contained() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationstatement.contained)
  return contained_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
UsCoreMedicationstatement::contained() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.contained)
  return contained_;
}

// repeated .google.fhir.stu3.proto.Extension extension = 7;
inline int UsCoreMedicationstatement::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationstatement::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedicationstatement::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedicationstatement::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationstatement::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationstatement.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedicationstatement::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
inline int UsCoreMedicationstatement::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationstatement::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreMedicationstatement::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreMedicationstatement::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreMedicationstatement::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationstatement.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreMedicationstatement::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.Identifier identifier = 9;
inline int UsCoreMedicationstatement::identifier_size() const {
  return identifier_.size();
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreMedicationstatement::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.identifier)
  return identifier_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
UsCoreMedicationstatement::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.identifier)
  return &identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCoreMedicationstatement::identifier(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.identifier)
  return identifier_.Get(index);
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreMedicationstatement::add_identifier() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationstatement.identifier)
  return identifier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
UsCoreMedicationstatement::identifier() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.identifier)
  return identifier_;
}

// repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
inline int UsCoreMedicationstatement::based_on_size() const {
  return based_on_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationstatement::mutable_based_on(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.based_on)
  return based_on_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreMedicationstatement::mutable_based_on() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.based_on)
  return &based_on_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationstatement::based_on(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.based_on)
  return based_on_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationstatement::add_based_on() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationstatement.based_on)
  return based_on_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreMedicationstatement::based_on() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.based_on)
  return based_on_;
}

// repeated .google.fhir.stu3.proto.Reference part_of = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationAdministration", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationDispense", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationStatement", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Procedure", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
inline int UsCoreMedicationstatement::part_of_size() const {
  return part_of_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationstatement::mutable_part_of(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.part_of)
  return part_of_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreMedicationstatement::mutable_part_of() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.part_of)
  return &part_of_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationstatement::part_of(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.part_of)
  return part_of_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationstatement::add_part_of() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationstatement.part_of)
  return part_of_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreMedicationstatement::part_of() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.part_of)
  return part_of_;
}

// .google.fhir.stu3.proto.Reference context = 12 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
inline bool UsCoreMedicationstatement::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationstatement::_internal_context() const {
  return *context_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationstatement::context() const {
  const ::google::fhir::stu3::proto::Reference* p = context_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.context)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationstatement::release_context() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationstatement.context)
  
  ::google::fhir::stu3::proto::Reference* temp = context_;
  context_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationstatement::mutable_context() {
  
  if (context_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    context_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.context)
  return context_;
}
inline void UsCoreMedicationstatement::set_allocated_context(::google::fhir::stu3::proto::Reference* context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(context_);
  }
  if (context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationstatement.context)
}

// .google.fhir.stu3.proto.MedicationStatementStatusCode status = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreMedicationstatement::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::fhir::stu3::proto::MedicationStatementStatusCode& UsCoreMedicationstatement::_internal_status() const {
  return *status_;
}
inline const ::google::fhir::stu3::proto::MedicationStatementStatusCode& UsCoreMedicationstatement::status() const {
  const ::google::fhir::stu3::proto::MedicationStatementStatusCode* p = status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::MedicationStatementStatusCode*>(
      &::google::fhir::stu3::proto::_MedicationStatementStatusCode_default_instance_);
}
inline ::google::fhir::stu3::proto::MedicationStatementStatusCode* UsCoreMedicationstatement::release_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationstatement.status)
  
  ::google::fhir::stu3::proto::MedicationStatementStatusCode* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::MedicationStatementStatusCode* UsCoreMedicationstatement::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::MedicationStatementStatusCode>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.status)
  return status_;
}
inline void UsCoreMedicationstatement::set_allocated_status(::google::fhir::stu3::proto::MedicationStatementStatusCode* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationstatement.status)
}

// .google.fhir.stu3.proto.CodeableConcept category = 14;
inline bool UsCoreMedicationstatement::has_category() const {
  return this != internal_default_instance() && category_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedicationstatement::_internal_category() const {
  return *category_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedicationstatement::category() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = category_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.category)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedicationstatement::release_category() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationstatement.category)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = category_;
  category_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedicationstatement::mutable_category() {
  
  if (category_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.category)
  return category_;
}
inline void UsCoreMedicationstatement::set_allocated_category(::google::fhir::stu3::proto::CodeableConcept* category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(category_);
  }
  if (category) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, category, submessage_arena);
    }
    
  } else {
    
  }
  category_ = category;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationstatement.category)
}

// .google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication medication = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreMedicationstatement::has_medication() const {
  return this != internal_default_instance() && medication_ != NULL;
}
inline void UsCoreMedicationstatement::clear_medication() {
  if (GetArenaNoVirtual() == NULL && medication_ != NULL) {
    delete medication_;
  }
  medication_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication& UsCoreMedicationstatement::_internal_medication() const {
  return *medication_;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication& UsCoreMedicationstatement::medication() const {
  const ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication* p = medication_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.medication)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication*>(
      &::google::fhir::stu3::uscore::_UsCoreMedicationstatement_Medication_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication* UsCoreMedicationstatement::release_medication() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationstatement.medication)
  
  ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication* temp = medication_;
  medication_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication* UsCoreMedicationstatement::mutable_medication() {
  
  if (medication_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication>(GetArenaNoVirtual());
    medication_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.medication)
  return medication_;
}
inline void UsCoreMedicationstatement::set_allocated_medication(::google::fhir::stu3::uscore::UsCoreMedicationstatement_Medication* medication) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete medication_;
  }
  if (medication) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      medication = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, medication, submessage_arena);
    }
    
  } else {
    
  }
  medication_ = medication;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationstatement.medication)
}

// .google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective effective = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreMedicationstatement::has_effective() const {
  return this != internal_default_instance() && effective_ != NULL;
}
inline void UsCoreMedicationstatement::clear_effective() {
  if (GetArenaNoVirtual() == NULL && effective_ != NULL) {
    delete effective_;
  }
  effective_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective& UsCoreMedicationstatement::_internal_effective() const {
  return *effective_;
}
inline const ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective& UsCoreMedicationstatement::effective() const {
  const ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective* p = effective_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.effective)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective*>(
      &::google::fhir::stu3::uscore::_UsCoreMedicationstatement_Effective_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective* UsCoreMedicationstatement::release_effective() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationstatement.effective)
  
  ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective* temp = effective_;
  effective_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective* UsCoreMedicationstatement::mutable_effective() {
  
  if (effective_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective>(GetArenaNoVirtual());
    effective_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.effective)
  return effective_;
}
inline void UsCoreMedicationstatement::set_allocated_effective(::google::fhir::stu3::uscore::UsCoreMedicationstatement_Effective* effective) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete effective_;
  }
  if (effective) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      effective = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, effective, submessage_arena);
    }
    
  } else {
    
  }
  effective_ = effective;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationstatement.effective)
}

// .google.fhir.stu3.proto.DateTime date_asserted = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreMedicationstatement::has_date_asserted() const {
  return this != internal_default_instance() && date_asserted_ != NULL;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreMedicationstatement::_internal_date_asserted() const {
  return *date_asserted_;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreMedicationstatement::date_asserted() const {
  const ::google::fhir::stu3::proto::DateTime* p = date_asserted_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.date_asserted)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::DateTime*>(
      &::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreMedicationstatement::release_date_asserted() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationstatement.date_asserted)
  
  ::google::fhir::stu3::proto::DateTime* temp = date_asserted_;
  date_asserted_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreMedicationstatement::mutable_date_asserted() {
  
  if (date_asserted_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::DateTime>(GetArenaNoVirtual());
    date_asserted_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.date_asserted)
  return date_asserted_;
}
inline void UsCoreMedicationstatement::set_allocated_date_asserted(::google::fhir::stu3::proto::DateTime* date_asserted) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(date_asserted_);
  }
  if (date_asserted) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_asserted = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_asserted, submessage_arena);
    }
    
  } else {
    
  }
  date_asserted_ = date_asserted;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationstatement.date_asserted)
}

// .google.fhir.stu3.proto.Reference information_source = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
inline bool UsCoreMedicationstatement::has_information_source() const {
  return this != internal_default_instance() && information_source_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationstatement::_internal_information_source() const {
  return *information_source_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationstatement::information_source() const {
  const ::google::fhir::stu3::proto::Reference* p = information_source_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.information_source)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationstatement::release_information_source() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationstatement.information_source)
  
  ::google::fhir::stu3::proto::Reference* temp = information_source_;
  information_source_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationstatement::mutable_information_source() {
  
  if (information_source_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    information_source_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.information_source)
  return information_source_;
}
inline void UsCoreMedicationstatement::set_allocated_information_source(::google::fhir::stu3::proto::Reference* information_source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(information_source_);
  }
  if (information_source) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      information_source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, information_source, submessage_arena);
    }
    
  } else {
    
  }
  information_source_ = information_source;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationstatement.information_source)
}

// .google.fhir.stu3.proto.Reference subject = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
inline bool UsCoreMedicationstatement::has_subject() const {
  return this != internal_default_instance() && subject_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationstatement::_internal_subject() const {
  return *subject_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationstatement::subject() const {
  const ::google::fhir::stu3::proto::Reference* p = subject_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.subject)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationstatement::release_subject() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationstatement.subject)
  
  ::google::fhir::stu3::proto::Reference* temp = subject_;
  subject_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationstatement::mutable_subject() {
  
  if (subject_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    subject_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.subject)
  return subject_;
}
inline void UsCoreMedicationstatement::set_allocated_subject(::google::fhir::stu3::proto::Reference* subject) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(subject_);
  }
  if (subject) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      subject = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, subject, submessage_arena);
    }
    
  } else {
    
  }
  subject_ = subject;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationstatement.subject)
}

// repeated .google.fhir.stu3.proto.Reference derived_from = 20 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Resource"];
inline int UsCoreMedicationstatement::derived_from_size() const {
  return derived_from_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationstatement::mutable_derived_from(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.derived_from)
  return derived_from_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreMedicationstatement::mutable_derived_from() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.derived_from)
  return &derived_from_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationstatement::derived_from(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.derived_from)
  return derived_from_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationstatement::add_derived_from() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationstatement.derived_from)
  return derived_from_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreMedicationstatement::derived_from() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.derived_from)
  return derived_from_;
}

// .google.fhir.stu3.proto.MedicationStatementTakenCode taken = 21 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreMedicationstatement::has_taken() const {
  return this != internal_default_instance() && taken_ != NULL;
}
inline const ::google::fhir::stu3::proto::MedicationStatementTakenCode& UsCoreMedicationstatement::_internal_taken() const {
  return *taken_;
}
inline const ::google::fhir::stu3::proto::MedicationStatementTakenCode& UsCoreMedicationstatement::taken() const {
  const ::google::fhir::stu3::proto::MedicationStatementTakenCode* p = taken_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.taken)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::MedicationStatementTakenCode*>(
      &::google::fhir::stu3::proto::_MedicationStatementTakenCode_default_instance_);
}
inline ::google::fhir::stu3::proto::MedicationStatementTakenCode* UsCoreMedicationstatement::release_taken() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreMedicationstatement.taken)
  
  ::google::fhir::stu3::proto::MedicationStatementTakenCode* temp = taken_;
  taken_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::MedicationStatementTakenCode* UsCoreMedicationstatement::mutable_taken() {
  
  if (taken_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::MedicationStatementTakenCode>(GetArenaNoVirtual());
    taken_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.taken)
  return taken_;
}
inline void UsCoreMedicationstatement::set_allocated_taken(::google::fhir::stu3::proto::MedicationStatementTakenCode* taken) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(taken_);
  }
  if (taken) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      taken = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, taken, submessage_arena);
    }
    
  } else {
    
  }
  taken_ = taken;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreMedicationstatement.taken)
}

// repeated .google.fhir.stu3.proto.CodeableConcept reason_not_taken = 22;
inline int UsCoreMedicationstatement::reason_not_taken_size() const {
  return reason_not_taken_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedicationstatement::mutable_reason_not_taken(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.reason_not_taken)
  return reason_not_taken_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreMedicationstatement::mutable_reason_not_taken() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.reason_not_taken)
  return &reason_not_taken_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedicationstatement::reason_not_taken(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.reason_not_taken)
  return reason_not_taken_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedicationstatement::add_reason_not_taken() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationstatement.reason_not_taken)
  return reason_not_taken_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreMedicationstatement::reason_not_taken() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.reason_not_taken)
  return reason_not_taken_;
}

// repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 23;
inline int UsCoreMedicationstatement::reason_code_size() const {
  return reason_code_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedicationstatement::mutable_reason_code(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.reason_code)
  return reason_code_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreMedicationstatement::mutable_reason_code() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.reason_code)
  return &reason_code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreMedicationstatement::reason_code(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.reason_code)
  return reason_code_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreMedicationstatement::add_reason_code() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationstatement.reason_code)
  return reason_code_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreMedicationstatement::reason_code() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.reason_code)
  return reason_code_;
}

// repeated .google.fhir.stu3.proto.Reference reason_reference = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
inline int UsCoreMedicationstatement::reason_reference_size() const {
  return reason_reference_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationstatement::mutable_reason_reference(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.reason_reference)
  return reason_reference_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreMedicationstatement::mutable_reason_reference() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.reason_reference)
  return &reason_reference_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreMedicationstatement::reason_reference(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.reason_reference)
  return reason_reference_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreMedicationstatement::add_reason_reference() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationstatement.reason_reference)
  return reason_reference_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreMedicationstatement::reason_reference() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.reason_reference)
  return reason_reference_;
}

// repeated .google.fhir.stu3.proto.Annotation note = 25;
inline int UsCoreMedicationstatement::note_size() const {
  return note_.size();
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreMedicationstatement::mutable_note(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.note)
  return note_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
UsCoreMedicationstatement::mutable_note() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.note)
  return &note_;
}
inline const ::google::fhir::stu3::proto::Annotation& UsCoreMedicationstatement::note(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.note)
  return note_.Get(index);
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreMedicationstatement::add_note() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationstatement.note)
  return note_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
UsCoreMedicationstatement::note() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.note)
  return note_;
}

// repeated .google.fhir.stu3.proto.Dosage dosage = 26;
inline int UsCoreMedicationstatement::dosage_size() const {
  return dosage_.size();
}
inline ::google::fhir::stu3::proto::Dosage* UsCoreMedicationstatement::mutable_dosage(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreMedicationstatement.dosage)
  return dosage_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Dosage >*
UsCoreMedicationstatement::mutable_dosage() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.dosage)
  return &dosage_;
}
inline const ::google::fhir::stu3::proto::Dosage& UsCoreMedicationstatement::dosage(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreMedicationstatement.dosage)
  return dosage_.Get(index);
}
inline ::google::fhir::stu3::proto::Dosage* UsCoreMedicationstatement::add_dosage() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreMedicationstatement.dosage)
  return dosage_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Dosage >&
UsCoreMedicationstatement::dosage() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreMedicationstatement.dosage)
  return dosage_;
}

// -------------------------------------------------------------------

// UsCoreObservationresults_Effective

// .google.fhir.stu3.proto.DateTime date_time = 1;
inline bool UsCoreObservationresults_Effective::has_date_time() const {
  return effective_case() == kDateTime;
}
inline void UsCoreObservationresults_Effective::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreObservationresults_Effective::_internal_date_time() const {
  return *effective_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreObservationresults_Effective::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Effective.date_time)
  if (has_date_time()) {
    clear_has_effective();
      ::google::fhir::stu3::proto::DateTime* temp = effective_.date_time_;
    effective_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreObservationresults_Effective::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Effective.date_time)
  return has_date_time()
      ? *effective_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreObservationresults_Effective::mutable_date_time() {
  if (!has_date_time()) {
    clear_effective();
    set_has_date_time();
    effective_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Effective.date_time)
  return effective_.date_time_;
}

// .google.fhir.stu3.proto.Period period = 2;
inline bool UsCoreObservationresults_Effective::has_period() const {
  return effective_case() == kPeriod;
}
inline void UsCoreObservationresults_Effective::set_has_period() {
  _oneof_case_[0] = kPeriod;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreObservationresults_Effective::_internal_period() const {
  return *effective_.period_;
}
inline ::google::fhir::stu3::proto::Period* UsCoreObservationresults_Effective::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Effective.period)
  if (has_period()) {
    clear_has_effective();
      ::google::fhir::stu3::proto::Period* temp = effective_.period_;
    effective_.period_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Period& UsCoreObservationresults_Effective::period() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Effective.period)
  return has_period()
      ? *effective_.period_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Period*>(&::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* UsCoreObservationresults_Effective::mutable_period() {
  if (!has_period()) {
    clear_effective();
    set_has_period();
    effective_.period_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Period >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Effective.period)
  return effective_.period_;
}

inline bool UsCoreObservationresults_Effective::has_effective() const {
  return effective_case() != EFFECTIVE_NOT_SET;
}
inline void UsCoreObservationresults_Effective::clear_has_effective() {
  _oneof_case_[0] = EFFECTIVE_NOT_SET;
}
inline UsCoreObservationresults_Effective::EffectiveCase UsCoreObservationresults_Effective::effective_case() const {
  return UsCoreObservationresults_Effective::EffectiveCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreObservationresults_Value

// .google.fhir.stu3.proto.Quantity quantity = 1;
inline bool UsCoreObservationresults_Value::has_quantity() const {
  return value_case() == kQuantity;
}
inline void UsCoreObservationresults_Value::set_has_quantity() {
  _oneof_case_[0] = kQuantity;
}
inline const ::google::fhir::stu3::proto::Quantity& UsCoreObservationresults_Value::_internal_quantity() const {
  return *value_.quantity_;
}
inline ::google::fhir::stu3::proto::Quantity* UsCoreObservationresults_Value::release_quantity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Value.quantity)
  if (has_quantity()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Quantity* temp = value_.quantity_;
    value_.quantity_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Quantity& UsCoreObservationresults_Value::quantity() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Value.quantity)
  return has_quantity()
      ? *value_.quantity_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Quantity*>(&::google::fhir::stu3::proto::_Quantity_default_instance_);
}
inline ::google::fhir::stu3::proto::Quantity* UsCoreObservationresults_Value::mutable_quantity() {
  if (!has_quantity()) {
    clear_value();
    set_has_quantity();
    value_.quantity_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Quantity >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Value.quantity)
  return value_.quantity_;
}

// .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
inline bool UsCoreObservationresults_Value::has_codeable_concept() const {
  return value_case() == kCodeableConcept;
}
inline void UsCoreObservationresults_Value::set_has_codeable_concept() {
  _oneof_case_[0] = kCodeableConcept;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults_Value::_internal_codeable_concept() const {
  return *value_.codeable_concept_;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults_Value::release_codeable_concept() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Value.codeable_concept)
  if (has_codeable_concept()) {
    clear_has_value();
      ::google::fhir::stu3::proto::CodeableConcept* temp = value_.codeable_concept_;
    value_.codeable_concept_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults_Value::codeable_concept() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Value.codeable_concept)
  return has_codeable_concept()
      ? *value_.codeable_concept_
      : *reinterpret_cast< ::google::fhir::stu3::proto::CodeableConcept*>(&::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults_Value::mutable_codeable_concept() {
  if (!has_codeable_concept()) {
    clear_value();
    set_has_codeable_concept();
    value_.codeable_concept_ = CreateMaybeMessage< ::google::fhir::stu3::proto::CodeableConcept >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Value.codeable_concept)
  return value_.codeable_concept_;
}

// .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
inline bool UsCoreObservationresults_Value::has_string_value() const {
  return value_case() == kStringValue;
}
inline void UsCoreObservationresults_Value::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline const ::google::fhir::stu3::proto::String& UsCoreObservationresults_Value::_internal_string_value() const {
  return *value_.string_value_;
}
inline ::google::fhir::stu3::proto::String* UsCoreObservationresults_Value::release_string_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Value.string_value)
  if (has_string_value()) {
    clear_has_value();
      ::google::fhir::stu3::proto::String* temp = value_.string_value_;
    value_.string_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::String& UsCoreObservationresults_Value::string_value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Value.string_value)
  return has_string_value()
      ? *value_.string_value_
      : *reinterpret_cast< ::google::fhir::stu3::proto::String*>(&::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreObservationresults_Value::mutable_string_value() {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_ = CreateMaybeMessage< ::google::fhir::stu3::proto::String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Value.string_value)
  return value_.string_value_;
}

// .google.fhir.stu3.proto.Boolean boolean = 4;
inline bool UsCoreObservationresults_Value::has_boolean() const {
  return value_case() == kBoolean;
}
inline void UsCoreObservationresults_Value::set_has_boolean() {
  _oneof_case_[0] = kBoolean;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreObservationresults_Value::_internal_boolean() const {
  return *value_.boolean_;
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreObservationresults_Value::release_boolean() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Value.boolean)
  if (has_boolean()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Boolean* temp = value_.boolean_;
    value_.boolean_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreObservationresults_Value::boolean() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Value.boolean)
  return has_boolean()
      ? *value_.boolean_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Boolean*>(&::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreObservationresults_Value::mutable_boolean() {
  if (!has_boolean()) {
    clear_value();
    set_has_boolean();
    value_.boolean_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Boolean >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Value.boolean)
  return value_.boolean_;
}

// .google.fhir.stu3.proto.Range range = 5;
inline bool UsCoreObservationresults_Value::has_range() const {
  return value_case() == kRange;
}
inline void UsCoreObservationresults_Value::set_has_range() {
  _oneof_case_[0] = kRange;
}
inline const ::google::fhir::stu3::proto::Range& UsCoreObservationresults_Value::_internal_range() const {
  return *value_.range_;
}
inline ::google::fhir::stu3::proto::Range* UsCoreObservationresults_Value::release_range() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Value.range)
  if (has_range()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Range* temp = value_.range_;
    value_.range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Range& UsCoreObservationresults_Value::range() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Value.range)
  return has_range()
      ? *value_.range_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Range*>(&::google::fhir::stu3::proto::_Range_default_instance_);
}
inline ::google::fhir::stu3::proto::Range* UsCoreObservationresults_Value::mutable_range() {
  if (!has_range()) {
    clear_value();
    set_has_range();
    value_.range_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Range >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Value.range)
  return value_.range_;
}

// .google.fhir.stu3.proto.Ratio ratio = 6;
inline bool UsCoreObservationresults_Value::has_ratio() const {
  return value_case() == kRatio;
}
inline void UsCoreObservationresults_Value::set_has_ratio() {
  _oneof_case_[0] = kRatio;
}
inline const ::google::fhir::stu3::proto::Ratio& UsCoreObservationresults_Value::_internal_ratio() const {
  return *value_.ratio_;
}
inline ::google::fhir::stu3::proto::Ratio* UsCoreObservationresults_Value::release_ratio() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Value.ratio)
  if (has_ratio()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Ratio* temp = value_.ratio_;
    value_.ratio_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Ratio& UsCoreObservationresults_Value::ratio() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Value.ratio)
  return has_ratio()
      ? *value_.ratio_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Ratio*>(&::google::fhir::stu3::proto::_Ratio_default_instance_);
}
inline ::google::fhir::stu3::proto::Ratio* UsCoreObservationresults_Value::mutable_ratio() {
  if (!has_ratio()) {
    clear_value();
    set_has_ratio();
    value_.ratio_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Ratio >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Value.ratio)
  return value_.ratio_;
}

// .google.fhir.stu3.proto.SampledData sampled_data = 7;
inline bool UsCoreObservationresults_Value::has_sampled_data() const {
  return value_case() == kSampledData;
}
inline void UsCoreObservationresults_Value::set_has_sampled_data() {
  _oneof_case_[0] = kSampledData;
}
inline const ::google::fhir::stu3::proto::SampledData& UsCoreObservationresults_Value::_internal_sampled_data() const {
  return *value_.sampled_data_;
}
inline ::google::fhir::stu3::proto::SampledData* UsCoreObservationresults_Value::release_sampled_data() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Value.sampled_data)
  if (has_sampled_data()) {
    clear_has_value();
      ::google::fhir::stu3::proto::SampledData* temp = value_.sampled_data_;
    value_.sampled_data_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::SampledData& UsCoreObservationresults_Value::sampled_data() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Value.sampled_data)
  return has_sampled_data()
      ? *value_.sampled_data_
      : *reinterpret_cast< ::google::fhir::stu3::proto::SampledData*>(&::google::fhir::stu3::proto::_SampledData_default_instance_);
}
inline ::google::fhir::stu3::proto::SampledData* UsCoreObservationresults_Value::mutable_sampled_data() {
  if (!has_sampled_data()) {
    clear_value();
    set_has_sampled_data();
    value_.sampled_data_ = CreateMaybeMessage< ::google::fhir::stu3::proto::SampledData >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Value.sampled_data)
  return value_.sampled_data_;
}

// .google.fhir.stu3.proto.Attachment attachment = 8;
inline bool UsCoreObservationresults_Value::has_attachment() const {
  return value_case() == kAttachment;
}
inline void UsCoreObservationresults_Value::set_has_attachment() {
  _oneof_case_[0] = kAttachment;
}
inline const ::google::fhir::stu3::proto::Attachment& UsCoreObservationresults_Value::_internal_attachment() const {
  return *value_.attachment_;
}
inline ::google::fhir::stu3::proto::Attachment* UsCoreObservationresults_Value::release_attachment() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Value.attachment)
  if (has_attachment()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Attachment* temp = value_.attachment_;
    value_.attachment_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Attachment& UsCoreObservationresults_Value::attachment() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Value.attachment)
  return has_attachment()
      ? *value_.attachment_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Attachment*>(&::google::fhir::stu3::proto::_Attachment_default_instance_);
}
inline ::google::fhir::stu3::proto::Attachment* UsCoreObservationresults_Value::mutable_attachment() {
  if (!has_attachment()) {
    clear_value();
    set_has_attachment();
    value_.attachment_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Attachment >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Value.attachment)
  return value_.attachment_;
}

// .google.fhir.stu3.proto.Time time = 9;
inline bool UsCoreObservationresults_Value::has_time() const {
  return value_case() == kTime;
}
inline void UsCoreObservationresults_Value::set_has_time() {
  _oneof_case_[0] = kTime;
}
inline const ::google::fhir::stu3::proto::Time& UsCoreObservationresults_Value::_internal_time() const {
  return *value_.time_;
}
inline ::google::fhir::stu3::proto::Time* UsCoreObservationresults_Value::release_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Value.time)
  if (has_time()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Time* temp = value_.time_;
    value_.time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Time& UsCoreObservationresults_Value::time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Value.time)
  return has_time()
      ? *value_.time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Time*>(&::google::fhir::stu3::proto::_Time_default_instance_);
}
inline ::google::fhir::stu3::proto::Time* UsCoreObservationresults_Value::mutable_time() {
  if (!has_time()) {
    clear_value();
    set_has_time();
    value_.time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Time >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Value.time)
  return value_.time_;
}

// .google.fhir.stu3.proto.DateTime date_time = 10;
inline bool UsCoreObservationresults_Value::has_date_time() const {
  return value_case() == kDateTime;
}
inline void UsCoreObservationresults_Value::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreObservationresults_Value::_internal_date_time() const {
  return *value_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreObservationresults_Value::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Value.date_time)
  if (has_date_time()) {
    clear_has_value();
      ::google::fhir::stu3::proto::DateTime* temp = value_.date_time_;
    value_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreObservationresults_Value::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Value.date_time)
  return has_date_time()
      ? *value_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreObservationresults_Value::mutable_date_time() {
  if (!has_date_time()) {
    clear_value();
    set_has_date_time();
    value_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Value.date_time)
  return value_.date_time_;
}

// .google.fhir.stu3.proto.Period period = 11;
inline bool UsCoreObservationresults_Value::has_period() const {
  return value_case() == kPeriod;
}
inline void UsCoreObservationresults_Value::set_has_period() {
  _oneof_case_[0] = kPeriod;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreObservationresults_Value::_internal_period() const {
  return *value_.period_;
}
inline ::google::fhir::stu3::proto::Period* UsCoreObservationresults_Value::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Value.period)
  if (has_period()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Period* temp = value_.period_;
    value_.period_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Period& UsCoreObservationresults_Value::period() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Value.period)
  return has_period()
      ? *value_.period_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Period*>(&::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* UsCoreObservationresults_Value::mutable_period() {
  if (!has_period()) {
    clear_value();
    set_has_period();
    value_.period_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Period >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Value.period)
  return value_.period_;
}

inline bool UsCoreObservationresults_Value::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void UsCoreObservationresults_Value::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline UsCoreObservationresults_Value::ValueCase UsCoreObservationresults_Value::value_case() const {
  return UsCoreObservationresults_Value::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreObservationresults_ReferenceRange

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreObservationresults_ReferenceRange::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreObservationresults_ReferenceRange::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreObservationresults_ReferenceRange::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreObservationresults_ReferenceRange::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreObservationresults_ReferenceRange::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.id)
  return id_;
}
inline void UsCoreObservationresults_ReferenceRange::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreObservationresults_ReferenceRange::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreObservationresults_ReferenceRange::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreObservationresults_ReferenceRange::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreObservationresults_ReferenceRange::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreObservationresults_ReferenceRange::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreObservationresults_ReferenceRange::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreObservationresults_ReferenceRange::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreObservationresults_ReferenceRange::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreObservationresults_ReferenceRange::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreObservationresults_ReferenceRange::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreObservationresults_ReferenceRange::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreObservationresults_ReferenceRange::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.SimpleQuantity low = 4;
inline bool UsCoreObservationresults_ReferenceRange::has_low() const {
  return this != internal_default_instance() && low_ != NULL;
}
inline const ::google::fhir::stu3::proto::SimpleQuantity& UsCoreObservationresults_ReferenceRange::_internal_low() const {
  return *low_;
}
inline const ::google::fhir::stu3::proto::SimpleQuantity& UsCoreObservationresults_ReferenceRange::low() const {
  const ::google::fhir::stu3::proto::SimpleQuantity* p = low_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.low)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::SimpleQuantity*>(
      &::google::fhir::stu3::proto::_SimpleQuantity_default_instance_);
}
inline ::google::fhir::stu3::proto::SimpleQuantity* UsCoreObservationresults_ReferenceRange::release_low() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.low)
  
  ::google::fhir::stu3::proto::SimpleQuantity* temp = low_;
  low_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::SimpleQuantity* UsCoreObservationresults_ReferenceRange::mutable_low() {
  
  if (low_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::SimpleQuantity>(GetArenaNoVirtual());
    low_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.low)
  return low_;
}
inline void UsCoreObservationresults_ReferenceRange::set_allocated_low(::google::fhir::stu3::proto::SimpleQuantity* low) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(low_);
  }
  if (low) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      low = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, low, submessage_arena);
    }
    
  } else {
    
  }
  low_ = low;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.low)
}

// .google.fhir.stu3.proto.SimpleQuantity high = 5;
inline bool UsCoreObservationresults_ReferenceRange::has_high() const {
  return this != internal_default_instance() && high_ != NULL;
}
inline const ::google::fhir::stu3::proto::SimpleQuantity& UsCoreObservationresults_ReferenceRange::_internal_high() const {
  return *high_;
}
inline const ::google::fhir::stu3::proto::SimpleQuantity& UsCoreObservationresults_ReferenceRange::high() const {
  const ::google::fhir::stu3::proto::SimpleQuantity* p = high_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.high)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::SimpleQuantity*>(
      &::google::fhir::stu3::proto::_SimpleQuantity_default_instance_);
}
inline ::google::fhir::stu3::proto::SimpleQuantity* UsCoreObservationresults_ReferenceRange::release_high() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.high)
  
  ::google::fhir::stu3::proto::SimpleQuantity* temp = high_;
  high_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::SimpleQuantity* UsCoreObservationresults_ReferenceRange::mutable_high() {
  
  if (high_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::SimpleQuantity>(GetArenaNoVirtual());
    high_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.high)
  return high_;
}
inline void UsCoreObservationresults_ReferenceRange::set_allocated_high(::google::fhir::stu3::proto::SimpleQuantity* high) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(high_);
  }
  if (high) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      high = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, high, submessage_arena);
    }
    
  } else {
    
  }
  high_ = high;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.high)
}

// .google.fhir.stu3.proto.CodeableConcept type = 6;
inline bool UsCoreObservationresults_ReferenceRange::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults_ReferenceRange::_internal_type() const {
  return *type_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults_ReferenceRange::type() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = type_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.type)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults_ReferenceRange::release_type() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.type)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults_ReferenceRange::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.type)
  return type_;
}
inline void UsCoreObservationresults_ReferenceRange::set_allocated_type(::google::fhir::stu3::proto::CodeableConcept* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(type_);
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.type)
}

// repeated .google.fhir.stu3.proto.CodeableConcept applies_to = 7;
inline int UsCoreObservationresults_ReferenceRange::applies_to_size() const {
  return applies_to_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults_ReferenceRange::mutable_applies_to(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.applies_to)
  return applies_to_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreObservationresults_ReferenceRange::mutable_applies_to() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.applies_to)
  return &applies_to_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults_ReferenceRange::applies_to(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.applies_to)
  return applies_to_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults_ReferenceRange::add_applies_to() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.applies_to)
  return applies_to_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreObservationresults_ReferenceRange::applies_to() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.applies_to)
  return applies_to_;
}

// .google.fhir.stu3.proto.Range age = 8;
inline bool UsCoreObservationresults_ReferenceRange::has_age() const {
  return this != internal_default_instance() && age_ != NULL;
}
inline const ::google::fhir::stu3::proto::Range& UsCoreObservationresults_ReferenceRange::_internal_age() const {
  return *age_;
}
inline const ::google::fhir::stu3::proto::Range& UsCoreObservationresults_ReferenceRange::age() const {
  const ::google::fhir::stu3::proto::Range* p = age_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.age)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Range*>(
      &::google::fhir::stu3::proto::_Range_default_instance_);
}
inline ::google::fhir::stu3::proto::Range* UsCoreObservationresults_ReferenceRange::release_age() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.age)
  
  ::google::fhir::stu3::proto::Range* temp = age_;
  age_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Range* UsCoreObservationresults_ReferenceRange::mutable_age() {
  
  if (age_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Range>(GetArenaNoVirtual());
    age_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.age)
  return age_;
}
inline void UsCoreObservationresults_ReferenceRange::set_allocated_age(::google::fhir::stu3::proto::Range* age) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(age_);
  }
  if (age) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      age = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, age, submessage_arena);
    }
    
  } else {
    
  }
  age_ = age;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.age)
}

// .google.fhir.stu3.proto.String text = 9;
inline bool UsCoreObservationresults_ReferenceRange::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreObservationresults_ReferenceRange::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreObservationresults_ReferenceRange::text() const {
  const ::google::fhir::stu3::proto::String* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreObservationresults_ReferenceRange::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.text)
  
  ::google::fhir::stu3::proto::String* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreObservationresults_ReferenceRange::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.text)
  return text_;
}
inline void UsCoreObservationresults_ReferenceRange::set_allocated_text(::google::fhir::stu3::proto::String* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange.text)
}

// -------------------------------------------------------------------

// UsCoreObservationresults_Related

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreObservationresults_Related::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreObservationresults_Related::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreObservationresults_Related::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Related.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreObservationresults_Related::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Related.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreObservationresults_Related::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Related.id)
  return id_;
}
inline void UsCoreObservationresults_Related::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Related.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreObservationresults_Related::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreObservationresults_Related::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Related.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreObservationresults_Related::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreObservationresults.Related.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreObservationresults_Related::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Related.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreObservationresults_Related::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreObservationresults.Related.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreObservationresults_Related::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreObservationresults.Related.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreObservationresults_Related::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreObservationresults_Related::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Related.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreObservationresults_Related::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreObservationresults.Related.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreObservationresults_Related::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Related.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreObservationresults_Related::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreObservationresults.Related.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreObservationresults_Related::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreObservationresults.Related.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
inline bool UsCoreObservationresults_Related::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline const ::google::fhir::stu3::proto::ObservationRelationshipTypeCode& UsCoreObservationresults_Related::_internal_type() const {
  return *type_;
}
inline const ::google::fhir::stu3::proto::ObservationRelationshipTypeCode& UsCoreObservationresults_Related::type() const {
  const ::google::fhir::stu3::proto::ObservationRelationshipTypeCode* p = type_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Related.type)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ObservationRelationshipTypeCode*>(
      &::google::fhir::stu3::proto::_ObservationRelationshipTypeCode_default_instance_);
}
inline ::google::fhir::stu3::proto::ObservationRelationshipTypeCode* UsCoreObservationresults_Related::release_type() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Related.type)
  
  ::google::fhir::stu3::proto::ObservationRelationshipTypeCode* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ObservationRelationshipTypeCode* UsCoreObservationresults_Related::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ObservationRelationshipTypeCode>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Related.type)
  return type_;
}
inline void UsCoreObservationresults_Related::set_allocated_type(::google::fhir::stu3::proto::ObservationRelationshipTypeCode* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(type_);
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Related.type)
}

// .google.fhir.stu3.proto.Reference target = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Sequence"];
inline bool UsCoreObservationresults_Related::has_target() const {
  return this != internal_default_instance() && target_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreObservationresults_Related::_internal_target() const {
  return *target_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreObservationresults_Related::target() const {
  const ::google::fhir::stu3::proto::Reference* p = target_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Related.target)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreObservationresults_Related::release_target() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Related.target)
  
  ::google::fhir::stu3::proto::Reference* temp = target_;
  target_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreObservationresults_Related::mutable_target() {
  
  if (target_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    target_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Related.target)
  return target_;
}
inline void UsCoreObservationresults_Related::set_allocated_target(::google::fhir::stu3::proto::Reference* target) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_);
  }
  if (target) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target, submessage_arena);
    }
    
  } else {
    
  }
  target_ = target;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Related.target)
}

// -------------------------------------------------------------------

// UsCoreObservationresults_Component_Value

// .google.fhir.stu3.proto.Quantity quantity = 1;
inline bool UsCoreObservationresults_Component_Value::has_quantity() const {
  return value_case() == kQuantity;
}
inline void UsCoreObservationresults_Component_Value::set_has_quantity() {
  _oneof_case_[0] = kQuantity;
}
inline const ::google::fhir::stu3::proto::Quantity& UsCoreObservationresults_Component_Value::_internal_quantity() const {
  return *value_.quantity_;
}
inline ::google::fhir::stu3::proto::Quantity* UsCoreObservationresults_Component_Value::release_quantity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.quantity)
  if (has_quantity()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Quantity* temp = value_.quantity_;
    value_.quantity_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Quantity& UsCoreObservationresults_Component_Value::quantity() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.quantity)
  return has_quantity()
      ? *value_.quantity_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Quantity*>(&::google::fhir::stu3::proto::_Quantity_default_instance_);
}
inline ::google::fhir::stu3::proto::Quantity* UsCoreObservationresults_Component_Value::mutable_quantity() {
  if (!has_quantity()) {
    clear_value();
    set_has_quantity();
    value_.quantity_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Quantity >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.quantity)
  return value_.quantity_;
}

// .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
inline bool UsCoreObservationresults_Component_Value::has_codeable_concept() const {
  return value_case() == kCodeableConcept;
}
inline void UsCoreObservationresults_Component_Value::set_has_codeable_concept() {
  _oneof_case_[0] = kCodeableConcept;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults_Component_Value::_internal_codeable_concept() const {
  return *value_.codeable_concept_;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults_Component_Value::release_codeable_concept() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.codeable_concept)
  if (has_codeable_concept()) {
    clear_has_value();
      ::google::fhir::stu3::proto::CodeableConcept* temp = value_.codeable_concept_;
    value_.codeable_concept_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults_Component_Value::codeable_concept() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.codeable_concept)
  return has_codeable_concept()
      ? *value_.codeable_concept_
      : *reinterpret_cast< ::google::fhir::stu3::proto::CodeableConcept*>(&::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults_Component_Value::mutable_codeable_concept() {
  if (!has_codeable_concept()) {
    clear_value();
    set_has_codeable_concept();
    value_.codeable_concept_ = CreateMaybeMessage< ::google::fhir::stu3::proto::CodeableConcept >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.codeable_concept)
  return value_.codeable_concept_;
}

// .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
inline bool UsCoreObservationresults_Component_Value::has_string_value() const {
  return value_case() == kStringValue;
}
inline void UsCoreObservationresults_Component_Value::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline const ::google::fhir::stu3::proto::String& UsCoreObservationresults_Component_Value::_internal_string_value() const {
  return *value_.string_value_;
}
inline ::google::fhir::stu3::proto::String* UsCoreObservationresults_Component_Value::release_string_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.string_value)
  if (has_string_value()) {
    clear_has_value();
      ::google::fhir::stu3::proto::String* temp = value_.string_value_;
    value_.string_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::String& UsCoreObservationresults_Component_Value::string_value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.string_value)
  return has_string_value()
      ? *value_.string_value_
      : *reinterpret_cast< ::google::fhir::stu3::proto::String*>(&::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreObservationresults_Component_Value::mutable_string_value() {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_ = CreateMaybeMessage< ::google::fhir::stu3::proto::String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.string_value)
  return value_.string_value_;
}

// .google.fhir.stu3.proto.Range range = 4;
inline bool UsCoreObservationresults_Component_Value::has_range() const {
  return value_case() == kRange;
}
inline void UsCoreObservationresults_Component_Value::set_has_range() {
  _oneof_case_[0] = kRange;
}
inline const ::google::fhir::stu3::proto::Range& UsCoreObservationresults_Component_Value::_internal_range() const {
  return *value_.range_;
}
inline ::google::fhir::stu3::proto::Range* UsCoreObservationresults_Component_Value::release_range() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.range)
  if (has_range()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Range* temp = value_.range_;
    value_.range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Range& UsCoreObservationresults_Component_Value::range() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.range)
  return has_range()
      ? *value_.range_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Range*>(&::google::fhir::stu3::proto::_Range_default_instance_);
}
inline ::google::fhir::stu3::proto::Range* UsCoreObservationresults_Component_Value::mutable_range() {
  if (!has_range()) {
    clear_value();
    set_has_range();
    value_.range_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Range >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.range)
  return value_.range_;
}

// .google.fhir.stu3.proto.Ratio ratio = 5;
inline bool UsCoreObservationresults_Component_Value::has_ratio() const {
  return value_case() == kRatio;
}
inline void UsCoreObservationresults_Component_Value::set_has_ratio() {
  _oneof_case_[0] = kRatio;
}
inline const ::google::fhir::stu3::proto::Ratio& UsCoreObservationresults_Component_Value::_internal_ratio() const {
  return *value_.ratio_;
}
inline ::google::fhir::stu3::proto::Ratio* UsCoreObservationresults_Component_Value::release_ratio() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.ratio)
  if (has_ratio()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Ratio* temp = value_.ratio_;
    value_.ratio_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Ratio& UsCoreObservationresults_Component_Value::ratio() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.ratio)
  return has_ratio()
      ? *value_.ratio_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Ratio*>(&::google::fhir::stu3::proto::_Ratio_default_instance_);
}
inline ::google::fhir::stu3::proto::Ratio* UsCoreObservationresults_Component_Value::mutable_ratio() {
  if (!has_ratio()) {
    clear_value();
    set_has_ratio();
    value_.ratio_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Ratio >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.ratio)
  return value_.ratio_;
}

// .google.fhir.stu3.proto.SampledData sampled_data = 6;
inline bool UsCoreObservationresults_Component_Value::has_sampled_data() const {
  return value_case() == kSampledData;
}
inline void UsCoreObservationresults_Component_Value::set_has_sampled_data() {
  _oneof_case_[0] = kSampledData;
}
inline const ::google::fhir::stu3::proto::SampledData& UsCoreObservationresults_Component_Value::_internal_sampled_data() const {
  return *value_.sampled_data_;
}
inline ::google::fhir::stu3::proto::SampledData* UsCoreObservationresults_Component_Value::release_sampled_data() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.sampled_data)
  if (has_sampled_data()) {
    clear_has_value();
      ::google::fhir::stu3::proto::SampledData* temp = value_.sampled_data_;
    value_.sampled_data_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::SampledData& UsCoreObservationresults_Component_Value::sampled_data() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.sampled_data)
  return has_sampled_data()
      ? *value_.sampled_data_
      : *reinterpret_cast< ::google::fhir::stu3::proto::SampledData*>(&::google::fhir::stu3::proto::_SampledData_default_instance_);
}
inline ::google::fhir::stu3::proto::SampledData* UsCoreObservationresults_Component_Value::mutable_sampled_data() {
  if (!has_sampled_data()) {
    clear_value();
    set_has_sampled_data();
    value_.sampled_data_ = CreateMaybeMessage< ::google::fhir::stu3::proto::SampledData >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.sampled_data)
  return value_.sampled_data_;
}

// .google.fhir.stu3.proto.Attachment attachment = 7;
inline bool UsCoreObservationresults_Component_Value::has_attachment() const {
  return value_case() == kAttachment;
}
inline void UsCoreObservationresults_Component_Value::set_has_attachment() {
  _oneof_case_[0] = kAttachment;
}
inline const ::google::fhir::stu3::proto::Attachment& UsCoreObservationresults_Component_Value::_internal_attachment() const {
  return *value_.attachment_;
}
inline ::google::fhir::stu3::proto::Attachment* UsCoreObservationresults_Component_Value::release_attachment() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.attachment)
  if (has_attachment()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Attachment* temp = value_.attachment_;
    value_.attachment_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Attachment& UsCoreObservationresults_Component_Value::attachment() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.attachment)
  return has_attachment()
      ? *value_.attachment_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Attachment*>(&::google::fhir::stu3::proto::_Attachment_default_instance_);
}
inline ::google::fhir::stu3::proto::Attachment* UsCoreObservationresults_Component_Value::mutable_attachment() {
  if (!has_attachment()) {
    clear_value();
    set_has_attachment();
    value_.attachment_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Attachment >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.attachment)
  return value_.attachment_;
}

// .google.fhir.stu3.proto.Time time = 8;
inline bool UsCoreObservationresults_Component_Value::has_time() const {
  return value_case() == kTime;
}
inline void UsCoreObservationresults_Component_Value::set_has_time() {
  _oneof_case_[0] = kTime;
}
inline const ::google::fhir::stu3::proto::Time& UsCoreObservationresults_Component_Value::_internal_time() const {
  return *value_.time_;
}
inline ::google::fhir::stu3::proto::Time* UsCoreObservationresults_Component_Value::release_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.time)
  if (has_time()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Time* temp = value_.time_;
    value_.time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Time& UsCoreObservationresults_Component_Value::time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.time)
  return has_time()
      ? *value_.time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Time*>(&::google::fhir::stu3::proto::_Time_default_instance_);
}
inline ::google::fhir::stu3::proto::Time* UsCoreObservationresults_Component_Value::mutable_time() {
  if (!has_time()) {
    clear_value();
    set_has_time();
    value_.time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Time >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.time)
  return value_.time_;
}

// .google.fhir.stu3.proto.DateTime date_time = 9;
inline bool UsCoreObservationresults_Component_Value::has_date_time() const {
  return value_case() == kDateTime;
}
inline void UsCoreObservationresults_Component_Value::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreObservationresults_Component_Value::_internal_date_time() const {
  return *value_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreObservationresults_Component_Value::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.date_time)
  if (has_date_time()) {
    clear_has_value();
      ::google::fhir::stu3::proto::DateTime* temp = value_.date_time_;
    value_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreObservationresults_Component_Value::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.date_time)
  return has_date_time()
      ? *value_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreObservationresults_Component_Value::mutable_date_time() {
  if (!has_date_time()) {
    clear_value();
    set_has_date_time();
    value_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.date_time)
  return value_.date_time_;
}

// .google.fhir.stu3.proto.Period period = 10;
inline bool UsCoreObservationresults_Component_Value::has_period() const {
  return value_case() == kPeriod;
}
inline void UsCoreObservationresults_Component_Value::set_has_period() {
  _oneof_case_[0] = kPeriod;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreObservationresults_Component_Value::_internal_period() const {
  return *value_.period_;
}
inline ::google::fhir::stu3::proto::Period* UsCoreObservationresults_Component_Value::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.period)
  if (has_period()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Period* temp = value_.period_;
    value_.period_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Period& UsCoreObservationresults_Component_Value::period() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.period)
  return has_period()
      ? *value_.period_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Period*>(&::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* UsCoreObservationresults_Component_Value::mutable_period() {
  if (!has_period()) {
    clear_value();
    set_has_period();
    value_.period_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Period >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.period)
  return value_.period_;
}

inline bool UsCoreObservationresults_Component_Value::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void UsCoreObservationresults_Component_Value::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline UsCoreObservationresults_Component_Value::ValueCase UsCoreObservationresults_Component_Value::value_case() const {
  return UsCoreObservationresults_Component_Value::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreObservationresults_Component

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreObservationresults_Component::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreObservationresults_Component::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreObservationresults_Component::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Component.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreObservationresults_Component::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Component.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreObservationresults_Component::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Component.id)
  return id_;
}
inline void UsCoreObservationresults_Component::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Component.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreObservationresults_Component::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreObservationresults_Component::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Component.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreObservationresults_Component::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreObservationresults.Component.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreObservationresults_Component::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Component.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreObservationresults_Component::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreObservationresults.Component.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreObservationresults_Component::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreObservationresults.Component.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreObservationresults_Component::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreObservationresults_Component::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Component.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreObservationresults_Component::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreObservationresults.Component.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreObservationresults_Component::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Component.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreObservationresults_Component::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreObservationresults.Component.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreObservationresults_Component::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreObservationresults.Component.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.CodeableConcept code = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreObservationresults_Component::has_code() const {
  return this != internal_default_instance() && code_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults_Component::_internal_code() const {
  return *code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults_Component::code() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = code_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Component.code)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults_Component::release_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Component.code)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = code_;
  code_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults_Component::mutable_code() {
  
  if (code_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    code_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Component.code)
  return code_;
}
inline void UsCoreObservationresults_Component::set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(code_);
  }
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    
  } else {
    
  }
  code_ = code;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Component.code)
}

// .google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value value = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreObservationresults_Component::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline void UsCoreObservationresults_Component::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value& UsCoreObservationresults_Component::_internal_value() const {
  return *value_;
}
inline const ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value& UsCoreObservationresults_Component::value() const {
  const ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value* p = value_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Component.value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value*>(
      &::google::fhir::stu3::uscore::_UsCoreObservationresults_Component_Value_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value* UsCoreObservationresults_Component::release_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Component.value)
  
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value* UsCoreObservationresults_Component::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Component.value)
  return value_;
}
inline void UsCoreObservationresults_Component::set_allocated_value(::google::fhir::stu3::uscore::UsCoreObservationresults_Component_Value* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete value_;
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Component.value)
}

// .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
inline bool UsCoreObservationresults_Component::has_data_absent_reason() const {
  return this != internal_default_instance() && data_absent_reason_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults_Component::_internal_data_absent_reason() const {
  return *data_absent_reason_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults_Component::data_absent_reason() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = data_absent_reason_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Component.data_absent_reason)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults_Component::release_data_absent_reason() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Component.data_absent_reason)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = data_absent_reason_;
  data_absent_reason_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults_Component::mutable_data_absent_reason() {
  
  if (data_absent_reason_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    data_absent_reason_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Component.data_absent_reason)
  return data_absent_reason_;
}
inline void UsCoreObservationresults_Component::set_allocated_data_absent_reason(::google::fhir::stu3::proto::CodeableConcept* data_absent_reason) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_absent_reason_);
  }
  if (data_absent_reason) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data_absent_reason = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data_absent_reason, submessage_arena);
    }
    
  } else {
    
  }
  data_absent_reason_ = data_absent_reason;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Component.data_absent_reason)
}

// .google.fhir.stu3.proto.CodeableConcept interpretation = 7;
inline bool UsCoreObservationresults_Component::has_interpretation() const {
  return this != internal_default_instance() && interpretation_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults_Component::_internal_interpretation() const {
  return *interpretation_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults_Component::interpretation() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = interpretation_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Component.interpretation)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults_Component::release_interpretation() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.Component.interpretation)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = interpretation_;
  interpretation_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults_Component::mutable_interpretation() {
  
  if (interpretation_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    interpretation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Component.interpretation)
  return interpretation_;
}
inline void UsCoreObservationresults_Component::set_allocated_interpretation(::google::fhir::stu3::proto::CodeableConcept* interpretation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interpretation_);
  }
  if (interpretation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interpretation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interpretation, submessage_arena);
    }
    
  } else {
    
  }
  interpretation_ = interpretation;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.Component.interpretation)
}

// repeated .google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange reference_range = 8;
inline int UsCoreObservationresults_Component::reference_range_size() const {
  return reference_range_.size();
}
inline void UsCoreObservationresults_Component::clear_reference_range() {
  reference_range_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange* UsCoreObservationresults_Component::mutable_reference_range(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.Component.reference_range)
  return reference_range_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange >*
UsCoreObservationresults_Component::mutable_reference_range() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreObservationresults.Component.reference_range)
  return &reference_range_;
}
inline const ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange& UsCoreObservationresults_Component::reference_range(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.Component.reference_range)
  return reference_range_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange* UsCoreObservationresults_Component::add_reference_range() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreObservationresults.Component.reference_range)
  return reference_range_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange >&
UsCoreObservationresults_Component::reference_range() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreObservationresults.Component.reference_range)
  return reference_range_;
}

// -------------------------------------------------------------------

// UsCoreObservationresults

// .google.fhir.stu3.proto.Id id = 1;
inline bool UsCoreObservationresults::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreObservationresults::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreObservationresults::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* UsCoreObservationresults::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* UsCoreObservationresults::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.id)
  return id_;
}
inline void UsCoreObservationresults::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool UsCoreObservationresults::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreObservationresults::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreObservationresults::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* UsCoreObservationresults::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* UsCoreObservationresults::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.meta)
  return meta_;
}
inline void UsCoreObservationresults::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool UsCoreObservationresults::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreObservationresults::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreObservationresults::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreObservationresults::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreObservationresults::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.implicit_rules)
  return implicit_rules_;
}
inline void UsCoreObservationresults::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool UsCoreObservationresults::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreObservationresults::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreObservationresults::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreObservationresults::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreObservationresults::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.language)
  return language_;
}
inline void UsCoreObservationresults::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.language)
}

// .google.fhir.stu3.proto.Narrative text = 5;
inline bool UsCoreObservationresults::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreObservationresults::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreObservationresults::text() const {
  const ::google::fhir::stu3::proto::Narrative* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Narrative*>(
      &::google::fhir::stu3::proto::_Narrative_default_instance_);
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreObservationresults::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.text)
  
  ::google::fhir::stu3::proto::Narrative* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreObservationresults::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.text)
  return text_;
}
inline void UsCoreObservationresults::set_allocated_text(::google::fhir::stu3::proto::Narrative* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.text)
}

// repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
inline int UsCoreObservationresults::contained_size() const {
  return contained_.size();
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreObservationresults::mutable_contained(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.contained)
  return contained_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
UsCoreObservationresults::mutable_contained() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreObservationresults.contained)
  return &contained_;
}
inline const ::google::fhir::stu3::proto::ContainedResource& UsCoreObservationresults::contained(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.contained)
  return contained_.Get(index);
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreObservationresults::add_contained() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreObservationresults.contained)
  return contained_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
UsCoreObservationresults::contained() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreObservationresults.contained)
  return contained_;
}

// repeated .google.fhir.stu3.proto.Extension extension = 7;
inline int UsCoreObservationresults::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreObservationresults::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreObservationresults::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreObservationresults.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreObservationresults::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreObservationresults::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreObservationresults.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreObservationresults::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreObservationresults.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
inline int UsCoreObservationresults::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreObservationresults::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreObservationresults::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreObservationresults.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreObservationresults::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreObservationresults::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreObservationresults.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreObservationresults::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreObservationresults.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.Identifier identifier = 9;
inline int UsCoreObservationresults::identifier_size() const {
  return identifier_.size();
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreObservationresults::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.identifier)
  return identifier_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
UsCoreObservationresults::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreObservationresults.identifier)
  return &identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCoreObservationresults::identifier(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.identifier)
  return identifier_.Get(index);
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreObservationresults::add_identifier() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreObservationresults.identifier)
  return identifier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
UsCoreObservationresults::identifier() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreObservationresults.identifier)
  return identifier_;
}

// repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
inline int UsCoreObservationresults::based_on_size() const {
  return based_on_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreObservationresults::mutable_based_on(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.based_on)
  return based_on_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreObservationresults::mutable_based_on() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreObservationresults.based_on)
  return &based_on_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreObservationresults::based_on(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.based_on)
  return based_on_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreObservationresults::add_based_on() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreObservationresults.based_on)
  return based_on_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreObservationresults::based_on() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreObservationresults.based_on)
  return based_on_;
}

// .google.fhir.stu3.proto.ObservationStatusCode status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreObservationresults::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::fhir::stu3::proto::ObservationStatusCode& UsCoreObservationresults::_internal_status() const {
  return *status_;
}
inline const ::google::fhir::stu3::proto::ObservationStatusCode& UsCoreObservationresults::status() const {
  const ::google::fhir::stu3::proto::ObservationStatusCode* p = status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ObservationStatusCode*>(
      &::google::fhir::stu3::proto::_ObservationStatusCode_default_instance_);
}
inline ::google::fhir::stu3::proto::ObservationStatusCode* UsCoreObservationresults::release_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.status)
  
  ::google::fhir::stu3::proto::ObservationStatusCode* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ObservationStatusCode* UsCoreObservationresults::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ObservationStatusCode>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.status)
  return status_;
}
inline void UsCoreObservationresults::set_allocated_status(::google::fhir::stu3::proto::ObservationStatusCode* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.status)
}

// repeated .google.fhir.stu3.proto.CodeableConcept category = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline int UsCoreObservationresults::category_size() const {
  return category_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults::mutable_category(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.category)
  return category_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreObservationresults::mutable_category() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreObservationresults.category)
  return &category_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults::category(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.category)
  return category_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults::add_category() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreObservationresults.category)
  return category_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreObservationresults::category() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreObservationresults.category)
  return category_;
}

// .google.fhir.stu3.proto.CodeableConcept code = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreObservationresults::has_code() const {
  return this != internal_default_instance() && code_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults::_internal_code() const {
  return *code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults::code() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = code_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.code)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults::release_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.code)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = code_;
  code_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults::mutable_code() {
  
  if (code_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    code_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.code)
  return code_;
}
inline void UsCoreObservationresults::set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(code_);
  }
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    
  } else {
    
  }
  code_ = code;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.code)
}

// .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
inline bool UsCoreObservationresults::has_subject() const {
  return this != internal_default_instance() && subject_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreObservationresults::_internal_subject() const {
  return *subject_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreObservationresults::subject() const {
  const ::google::fhir::stu3::proto::Reference* p = subject_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.subject)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreObservationresults::release_subject() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.subject)
  
  ::google::fhir::stu3::proto::Reference* temp = subject_;
  subject_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreObservationresults::mutable_subject() {
  
  if (subject_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    subject_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.subject)
  return subject_;
}
inline void UsCoreObservationresults::set_allocated_subject(::google::fhir::stu3::proto::Reference* subject) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(subject_);
  }
  if (subject) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      subject = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, subject, submessage_arena);
    }
    
  } else {
    
  }
  subject_ = subject;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.subject)
}

// .google.fhir.stu3.proto.Reference context = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
inline bool UsCoreObservationresults::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreObservationresults::_internal_context() const {
  return *context_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreObservationresults::context() const {
  const ::google::fhir::stu3::proto::Reference* p = context_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.context)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreObservationresults::release_context() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.context)
  
  ::google::fhir::stu3::proto::Reference* temp = context_;
  context_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreObservationresults::mutable_context() {
  
  if (context_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    context_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.context)
  return context_;
}
inline void UsCoreObservationresults::set_allocated_context(::google::fhir::stu3::proto::Reference* context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(context_);
  }
  if (context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.context)
}

// .google.fhir.stu3.uscore.UsCoreObservationresults.Effective effective = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreObservationresults::has_effective() const {
  return this != internal_default_instance() && effective_ != NULL;
}
inline void UsCoreObservationresults::clear_effective() {
  if (GetArenaNoVirtual() == NULL && effective_ != NULL) {
    delete effective_;
  }
  effective_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective& UsCoreObservationresults::_internal_effective() const {
  return *effective_;
}
inline const ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective& UsCoreObservationresults::effective() const {
  const ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective* p = effective_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.effective)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective*>(
      &::google::fhir::stu3::uscore::_UsCoreObservationresults_Effective_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective* UsCoreObservationresults::release_effective() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.effective)
  
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective* temp = effective_;
  effective_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreObservationresults_Effective* UsCoreObservationresults::mutable_effective() {
  
  if (effective_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreObservationresults_Effective>(GetArenaNoVirtual());
    effective_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.effective)
  return effective_;
}
inline void UsCoreObservationresults::set_allocated_effective(::google::fhir::stu3::uscore::UsCoreObservationresults_Effective* effective) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete effective_;
  }
  if (effective) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      effective = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, effective, submessage_arena);
    }
    
  } else {
    
  }
  effective_ = effective;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.effective)
}

// .google.fhir.stu3.proto.Instant issued = 17;
inline bool UsCoreObservationresults::has_issued() const {
  return this != internal_default_instance() && issued_ != NULL;
}
inline const ::google::fhir::stu3::proto::Instant& UsCoreObservationresults::_internal_issued() const {
  return *issued_;
}
inline const ::google::fhir::stu3::proto::Instant& UsCoreObservationresults::issued() const {
  const ::google::fhir::stu3::proto::Instant* p = issued_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.issued)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Instant*>(
      &::google::fhir::stu3::proto::_Instant_default_instance_);
}
inline ::google::fhir::stu3::proto::Instant* UsCoreObservationresults::release_issued() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.issued)
  
  ::google::fhir::stu3::proto::Instant* temp = issued_;
  issued_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Instant* UsCoreObservationresults::mutable_issued() {
  
  if (issued_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Instant>(GetArenaNoVirtual());
    issued_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.issued)
  return issued_;
}
inline void UsCoreObservationresults::set_allocated_issued(::google::fhir::stu3::proto::Instant* issued) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(issued_);
  }
  if (issued) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      issued = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, issued, submessage_arena);
    }
    
  } else {
    
  }
  issued_ = issued;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.issued)
}

// repeated .google.fhir.stu3.proto.Reference performer = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
inline int UsCoreObservationresults::performer_size() const {
  return performer_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreObservationresults::mutable_performer(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.performer)
  return performer_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreObservationresults::mutable_performer() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreObservationresults.performer)
  return &performer_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreObservationresults::performer(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.performer)
  return performer_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreObservationresults::add_performer() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreObservationresults.performer)
  return performer_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreObservationresults::performer() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreObservationresults.performer)
  return performer_;
}

// .google.fhir.stu3.uscore.UsCoreObservationresults.Value value = 19 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreObservationresults::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline void UsCoreObservationresults::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreObservationresults_Value& UsCoreObservationresults::_internal_value() const {
  return *value_;
}
inline const ::google::fhir::stu3::uscore::UsCoreObservationresults_Value& UsCoreObservationresults::value() const {
  const ::google::fhir::stu3::uscore::UsCoreObservationresults_Value* p = value_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreObservationresults_Value*>(
      &::google::fhir::stu3::uscore::_UsCoreObservationresults_Value_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreObservationresults_Value* UsCoreObservationresults::release_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.value)
  
  ::google::fhir::stu3::uscore::UsCoreObservationresults_Value* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreObservationresults_Value* UsCoreObservationresults::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreObservationresults_Value>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.value)
  return value_;
}
inline void UsCoreObservationresults::set_allocated_value(::google::fhir::stu3::uscore::UsCoreObservationresults_Value* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete value_;
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.value)
}

// .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
inline bool UsCoreObservationresults::has_data_absent_reason() const {
  return this != internal_default_instance() && data_absent_reason_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults::_internal_data_absent_reason() const {
  return *data_absent_reason_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults::data_absent_reason() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = data_absent_reason_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.data_absent_reason)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults::release_data_absent_reason() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.data_absent_reason)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = data_absent_reason_;
  data_absent_reason_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults::mutable_data_absent_reason() {
  
  if (data_absent_reason_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    data_absent_reason_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.data_absent_reason)
  return data_absent_reason_;
}
inline void UsCoreObservationresults::set_allocated_data_absent_reason(::google::fhir::stu3::proto::CodeableConcept* data_absent_reason) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_absent_reason_);
  }
  if (data_absent_reason) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data_absent_reason = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data_absent_reason, submessage_arena);
    }
    
  } else {
    
  }
  data_absent_reason_ = data_absent_reason;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.data_absent_reason)
}

// .google.fhir.stu3.proto.CodeableConcept interpretation = 21;
inline bool UsCoreObservationresults::has_interpretation() const {
  return this != internal_default_instance() && interpretation_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults::_internal_interpretation() const {
  return *interpretation_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults::interpretation() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = interpretation_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.interpretation)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults::release_interpretation() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.interpretation)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = interpretation_;
  interpretation_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults::mutable_interpretation() {
  
  if (interpretation_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    interpretation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.interpretation)
  return interpretation_;
}
inline void UsCoreObservationresults::set_allocated_interpretation(::google::fhir::stu3::proto::CodeableConcept* interpretation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interpretation_);
  }
  if (interpretation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interpretation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interpretation, submessage_arena);
    }
    
  } else {
    
  }
  interpretation_ = interpretation;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.interpretation)
}

// .google.fhir.stu3.proto.String comment = 22;
inline bool UsCoreObservationresults::has_comment() const {
  return this != internal_default_instance() && comment_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreObservationresults::_internal_comment() const {
  return *comment_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreObservationresults::comment() const {
  const ::google::fhir::stu3::proto::String* p = comment_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.comment)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreObservationresults::release_comment() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.comment)
  
  ::google::fhir::stu3::proto::String* temp = comment_;
  comment_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreObservationresults::mutable_comment() {
  
  if (comment_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    comment_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.comment)
  return comment_;
}
inline void UsCoreObservationresults::set_allocated_comment(::google::fhir::stu3::proto::String* comment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(comment_);
  }
  if (comment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comment, submessage_arena);
    }
    
  } else {
    
  }
  comment_ = comment;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.comment)
}

// .google.fhir.stu3.proto.CodeableConcept body_site = 23;
inline bool UsCoreObservationresults::has_body_site() const {
  return this != internal_default_instance() && body_site_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults::_internal_body_site() const {
  return *body_site_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults::body_site() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = body_site_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.body_site)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults::release_body_site() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.body_site)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = body_site_;
  body_site_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults::mutable_body_site() {
  
  if (body_site_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    body_site_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.body_site)
  return body_site_;
}
inline void UsCoreObservationresults::set_allocated_body_site(::google::fhir::stu3::proto::CodeableConcept* body_site) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(body_site_);
  }
  if (body_site) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      body_site = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, body_site, submessage_arena);
    }
    
  } else {
    
  }
  body_site_ = body_site;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.body_site)
}

// .google.fhir.stu3.proto.CodeableConcept method = 24;
inline bool UsCoreObservationresults::has_method() const {
  return this != internal_default_instance() && method_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults::_internal_method() const {
  return *method_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreObservationresults::method() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = method_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.method)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults::release_method() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.method)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = method_;
  method_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreObservationresults::mutable_method() {
  
  if (method_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    method_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.method)
  return method_;
}
inline void UsCoreObservationresults::set_allocated_method(::google::fhir::stu3::proto::CodeableConcept* method) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(method_);
  }
  if (method) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      method = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, method, submessage_arena);
    }
    
  } else {
    
  }
  method_ = method;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.method)
}

// .google.fhir.stu3.proto.Reference specimen = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Specimen"];
inline bool UsCoreObservationresults::has_specimen() const {
  return this != internal_default_instance() && specimen_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreObservationresults::_internal_specimen() const {
  return *specimen_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreObservationresults::specimen() const {
  const ::google::fhir::stu3::proto::Reference* p = specimen_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.specimen)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreObservationresults::release_specimen() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.specimen)
  
  ::google::fhir::stu3::proto::Reference* temp = specimen_;
  specimen_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreObservationresults::mutable_specimen() {
  
  if (specimen_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    specimen_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.specimen)
  return specimen_;
}
inline void UsCoreObservationresults::set_allocated_specimen(::google::fhir::stu3::proto::Reference* specimen) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(specimen_);
  }
  if (specimen) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      specimen = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, specimen, submessage_arena);
    }
    
  } else {
    
  }
  specimen_ = specimen;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.specimen)
}

// .google.fhir.stu3.proto.Reference device = 26 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceMetric"];
inline bool UsCoreObservationresults::has_device() const {
  return this != internal_default_instance() && device_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreObservationresults::_internal_device() const {
  return *device_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreObservationresults::device() const {
  const ::google::fhir::stu3::proto::Reference* p = device_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.device)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreObservationresults::release_device() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreObservationresults.device)
  
  ::google::fhir::stu3::proto::Reference* temp = device_;
  device_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreObservationresults::mutable_device() {
  
  if (device_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    device_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.device)
  return device_;
}
inline void UsCoreObservationresults::set_allocated_device(::google::fhir::stu3::proto::Reference* device) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_);
  }
  if (device) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      device = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device, submessage_arena);
    }
    
  } else {
    
  }
  device_ = device;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreObservationresults.device)
}

// repeated .google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange reference_range = 27;
inline int UsCoreObservationresults::reference_range_size() const {
  return reference_range_.size();
}
inline void UsCoreObservationresults::clear_reference_range() {
  reference_range_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange* UsCoreObservationresults::mutable_reference_range(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.reference_range)
  return reference_range_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange >*
UsCoreObservationresults::mutable_reference_range() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreObservationresults.reference_range)
  return &reference_range_;
}
inline const ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange& UsCoreObservationresults::reference_range(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.reference_range)
  return reference_range_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange* UsCoreObservationresults::add_reference_range() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreObservationresults.reference_range)
  return reference_range_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_ReferenceRange >&
UsCoreObservationresults::reference_range() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreObservationresults.reference_range)
  return reference_range_;
}

// repeated .google.fhir.stu3.uscore.UsCoreObservationresults.Related related = 28;
inline int UsCoreObservationresults::related_size() const {
  return related_.size();
}
inline void UsCoreObservationresults::clear_related() {
  related_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreObservationresults_Related* UsCoreObservationresults::mutable_related(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.related)
  return related_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_Related >*
UsCoreObservationresults::mutable_related() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreObservationresults.related)
  return &related_;
}
inline const ::google::fhir::stu3::uscore::UsCoreObservationresults_Related& UsCoreObservationresults::related(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.related)
  return related_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreObservationresults_Related* UsCoreObservationresults::add_related() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreObservationresults.related)
  return related_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_Related >&
UsCoreObservationresults::related() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreObservationresults.related)
  return related_;
}

// repeated .google.fhir.stu3.uscore.UsCoreObservationresults.Component component = 29;
inline int UsCoreObservationresults::component_size() const {
  return component_.size();
}
inline void UsCoreObservationresults::clear_component() {
  component_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreObservationresults_Component* UsCoreObservationresults::mutable_component(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreObservationresults.component)
  return component_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_Component >*
UsCoreObservationresults::mutable_component() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreObservationresults.component)
  return &component_;
}
inline const ::google::fhir::stu3::uscore::UsCoreObservationresults_Component& UsCoreObservationresults::component(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreObservationresults.component)
  return component_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreObservationresults_Component* UsCoreObservationresults::add_component() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreObservationresults.component)
  return component_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreObservationresults_Component >&
UsCoreObservationresults::component() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreObservationresults.component)
  return component_;
}

// -------------------------------------------------------------------

// UsCoreOrganization_Contact

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreOrganization_Contact::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreOrganization_Contact::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreOrganization_Contact::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.Contact.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreOrganization_Contact::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreOrganization.Contact.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreOrganization_Contact::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.Contact.id)
  return id_;
}
inline void UsCoreOrganization_Contact::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreOrganization.Contact.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreOrganization_Contact::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreOrganization_Contact::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.Contact.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreOrganization_Contact::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreOrganization.Contact.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreOrganization_Contact::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.Contact.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreOrganization_Contact::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreOrganization.Contact.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreOrganization_Contact::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreOrganization.Contact.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreOrganization_Contact::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreOrganization_Contact::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.Contact.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreOrganization_Contact::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreOrganization.Contact.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreOrganization_Contact::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.Contact.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreOrganization_Contact::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreOrganization.Contact.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreOrganization_Contact::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreOrganization.Contact.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.CodeableConcept purpose = 4;
inline bool UsCoreOrganization_Contact::has_purpose() const {
  return this != internal_default_instance() && purpose_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreOrganization_Contact::_internal_purpose() const {
  return *purpose_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreOrganization_Contact::purpose() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = purpose_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.Contact.purpose)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreOrganization_Contact::release_purpose() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreOrganization.Contact.purpose)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = purpose_;
  purpose_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreOrganization_Contact::mutable_purpose() {
  
  if (purpose_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    purpose_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.Contact.purpose)
  return purpose_;
}
inline void UsCoreOrganization_Contact::set_allocated_purpose(::google::fhir::stu3::proto::CodeableConcept* purpose) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(purpose_);
  }
  if (purpose) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      purpose = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, purpose, submessage_arena);
    }
    
  } else {
    
  }
  purpose_ = purpose;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreOrganization.Contact.purpose)
}

// .google.fhir.stu3.proto.HumanName name = 5;
inline bool UsCoreOrganization_Contact::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::google::fhir::stu3::proto::HumanName& UsCoreOrganization_Contact::_internal_name() const {
  return *name_;
}
inline const ::google::fhir::stu3::proto::HumanName& UsCoreOrganization_Contact::name() const {
  const ::google::fhir::stu3::proto::HumanName* p = name_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.Contact.name)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::HumanName*>(
      &::google::fhir::stu3::proto::_HumanName_default_instance_);
}
inline ::google::fhir::stu3::proto::HumanName* UsCoreOrganization_Contact::release_name() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreOrganization.Contact.name)
  
  ::google::fhir::stu3::proto::HumanName* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::HumanName* UsCoreOrganization_Contact::mutable_name() {
  
  if (name_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::HumanName>(GetArenaNoVirtual());
    name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.Contact.name)
  return name_;
}
inline void UsCoreOrganization_Contact::set_allocated_name(::google::fhir::stu3::proto::HumanName* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreOrganization.Contact.name)
}

// repeated .google.fhir.stu3.proto.ContactPoint telecom = 6;
inline int UsCoreOrganization_Contact::telecom_size() const {
  return telecom_.size();
}
inline ::google::fhir::stu3::proto::ContactPoint* UsCoreOrganization_Contact::mutable_telecom(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.Contact.telecom)
  return telecom_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >*
UsCoreOrganization_Contact::mutable_telecom() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreOrganization.Contact.telecom)
  return &telecom_;
}
inline const ::google::fhir::stu3::proto::ContactPoint& UsCoreOrganization_Contact::telecom(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.Contact.telecom)
  return telecom_.Get(index);
}
inline ::google::fhir::stu3::proto::ContactPoint* UsCoreOrganization_Contact::add_telecom() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreOrganization.Contact.telecom)
  return telecom_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >&
UsCoreOrganization_Contact::telecom() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreOrganization.Contact.telecom)
  return telecom_;
}

// .google.fhir.stu3.proto.Address address = 7;
inline bool UsCoreOrganization_Contact::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::google::fhir::stu3::proto::Address& UsCoreOrganization_Contact::_internal_address() const {
  return *address_;
}
inline const ::google::fhir::stu3::proto::Address& UsCoreOrganization_Contact::address() const {
  const ::google::fhir::stu3::proto::Address* p = address_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.Contact.address)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Address*>(
      &::google::fhir::stu3::proto::_Address_default_instance_);
}
inline ::google::fhir::stu3::proto::Address* UsCoreOrganization_Contact::release_address() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreOrganization.Contact.address)
  
  ::google::fhir::stu3::proto::Address* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Address* UsCoreOrganization_Contact::mutable_address() {
  
  if (address_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Address>(GetArenaNoVirtual());
    address_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.Contact.address)
  return address_;
}
inline void UsCoreOrganization_Contact::set_allocated_address(::google::fhir::stu3::proto::Address* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreOrganization.Contact.address)
}

// -------------------------------------------------------------------

// UsCoreOrganization

// .google.fhir.stu3.proto.Id id = 1;
inline bool UsCoreOrganization::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreOrganization::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreOrganization::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* UsCoreOrganization::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreOrganization.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* UsCoreOrganization::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.id)
  return id_;
}
inline void UsCoreOrganization::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreOrganization.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool UsCoreOrganization::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreOrganization::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreOrganization::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* UsCoreOrganization::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreOrganization.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* UsCoreOrganization::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.meta)
  return meta_;
}
inline void UsCoreOrganization::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreOrganization.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool UsCoreOrganization::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreOrganization::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreOrganization::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreOrganization::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreOrganization.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreOrganization::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.implicit_rules)
  return implicit_rules_;
}
inline void UsCoreOrganization::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreOrganization.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool UsCoreOrganization::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreOrganization::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreOrganization::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreOrganization::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreOrganization.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreOrganization::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.language)
  return language_;
}
inline void UsCoreOrganization::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreOrganization.language)
}

// .google.fhir.stu3.proto.Narrative text = 5;
inline bool UsCoreOrganization::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreOrganization::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreOrganization::text() const {
  const ::google::fhir::stu3::proto::Narrative* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Narrative*>(
      &::google::fhir::stu3::proto::_Narrative_default_instance_);
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreOrganization::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreOrganization.text)
  
  ::google::fhir::stu3::proto::Narrative* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreOrganization::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.text)
  return text_;
}
inline void UsCoreOrganization::set_allocated_text(::google::fhir::stu3::proto::Narrative* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreOrganization.text)
}

// repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
inline int UsCoreOrganization::contained_size() const {
  return contained_.size();
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreOrganization::mutable_contained(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.contained)
  return contained_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
UsCoreOrganization::mutable_contained() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreOrganization.contained)
  return &contained_;
}
inline const ::google::fhir::stu3::proto::ContainedResource& UsCoreOrganization::contained(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.contained)
  return contained_.Get(index);
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreOrganization::add_contained() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreOrganization.contained)
  return contained_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
UsCoreOrganization::contained() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreOrganization.contained)
  return contained_;
}

// repeated .google.fhir.stu3.proto.Extension extension = 7;
inline int UsCoreOrganization::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreOrganization::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreOrganization::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreOrganization.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreOrganization::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreOrganization::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreOrganization.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreOrganization::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreOrganization.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
inline int UsCoreOrganization::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreOrganization::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreOrganization::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreOrganization.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreOrganization::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreOrganization::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreOrganization.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreOrganization::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreOrganization.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.Identifier identifier = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline int UsCoreOrganization::identifier_size() const {
  return identifier_.size();
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreOrganization::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.identifier)
  return identifier_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
UsCoreOrganization::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreOrganization.identifier)
  return &identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCoreOrganization::identifier(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.identifier)
  return identifier_.Get(index);
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreOrganization::add_identifier() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreOrganization.identifier)
  return identifier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
UsCoreOrganization::identifier() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreOrganization.identifier)
  return identifier_;
}

// .google.fhir.stu3.proto.Boolean active = 10 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreOrganization::has_active() const {
  return this != internal_default_instance() && active_ != NULL;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreOrganization::_internal_active() const {
  return *active_;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreOrganization::active() const {
  const ::google::fhir::stu3::proto::Boolean* p = active_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.active)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Boolean*>(
      &::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreOrganization::release_active() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreOrganization.active)
  
  ::google::fhir::stu3::proto::Boolean* temp = active_;
  active_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreOrganization::mutable_active() {
  
  if (active_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Boolean>(GetArenaNoVirtual());
    active_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.active)
  return active_;
}
inline void UsCoreOrganization::set_allocated_active(::google::fhir::stu3::proto::Boolean* active) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(active_);
  }
  if (active) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      active = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, active, submessage_arena);
    }
    
  } else {
    
  }
  active_ = active;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreOrganization.active)
}

// repeated .google.fhir.stu3.proto.CodeableConcept type = 11;
inline int UsCoreOrganization::type_size() const {
  return type_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreOrganization::mutable_type(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.type)
  return type_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreOrganization::mutable_type() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreOrganization.type)
  return &type_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreOrganization::type(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.type)
  return type_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreOrganization::add_type() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreOrganization.type)
  return type_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreOrganization::type() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreOrganization.type)
  return type_;
}

// .google.fhir.stu3.proto.String name = 12 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreOrganization::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreOrganization::_internal_name() const {
  return *name_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreOrganization::name() const {
  const ::google::fhir::stu3::proto::String* p = name_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.name)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreOrganization::release_name() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreOrganization.name)
  
  ::google::fhir::stu3::proto::String* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreOrganization::mutable_name() {
  
  if (name_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.name)
  return name_;
}
inline void UsCoreOrganization::set_allocated_name(::google::fhir::stu3::proto::String* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreOrganization.name)
}

// repeated .google.fhir.stu3.proto.String alias = 13;
inline int UsCoreOrganization::alias_size() const {
  return alias_.size();
}
inline ::google::fhir::stu3::proto::String* UsCoreOrganization::mutable_alias(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.alias)
  return alias_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String >*
UsCoreOrganization::mutable_alias() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreOrganization.alias)
  return &alias_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreOrganization::alias(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.alias)
  return alias_.Get(index);
}
inline ::google::fhir::stu3::proto::String* UsCoreOrganization::add_alias() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreOrganization.alias)
  return alias_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::String >&
UsCoreOrganization::alias() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreOrganization.alias)
  return alias_;
}

// repeated .google.fhir.stu3.proto.ContactPoint telecom = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline int UsCoreOrganization::telecom_size() const {
  return telecom_.size();
}
inline ::google::fhir::stu3::proto::ContactPoint* UsCoreOrganization::mutable_telecom(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.telecom)
  return telecom_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >*
UsCoreOrganization::mutable_telecom() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreOrganization.telecom)
  return &telecom_;
}
inline const ::google::fhir::stu3::proto::ContactPoint& UsCoreOrganization::telecom(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.telecom)
  return telecom_.Get(index);
}
inline ::google::fhir::stu3::proto::ContactPoint* UsCoreOrganization::add_telecom() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreOrganization.telecom)
  return telecom_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >&
UsCoreOrganization::telecom() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreOrganization.telecom)
  return telecom_;
}

// repeated .google.fhir.stu3.proto.Address address = 15 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline int UsCoreOrganization::address_size() const {
  return address_.size();
}
inline ::google::fhir::stu3::proto::Address* UsCoreOrganization::mutable_address(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.address)
  return address_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Address >*
UsCoreOrganization::mutable_address() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreOrganization.address)
  return &address_;
}
inline const ::google::fhir::stu3::proto::Address& UsCoreOrganization::address(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.address)
  return address_.Get(index);
}
inline ::google::fhir::stu3::proto::Address* UsCoreOrganization::add_address() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreOrganization.address)
  return address_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Address >&
UsCoreOrganization::address() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreOrganization.address)
  return address_;
}

// .google.fhir.stu3.proto.Reference part_of = 16 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
inline bool UsCoreOrganization::has_part_of() const {
  return this != internal_default_instance() && part_of_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreOrganization::_internal_part_of() const {
  return *part_of_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreOrganization::part_of() const {
  const ::google::fhir::stu3::proto::Reference* p = part_of_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.part_of)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreOrganization::release_part_of() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreOrganization.part_of)
  
  ::google::fhir::stu3::proto::Reference* temp = part_of_;
  part_of_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreOrganization::mutable_part_of() {
  
  if (part_of_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    part_of_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.part_of)
  return part_of_;
}
inline void UsCoreOrganization::set_allocated_part_of(::google::fhir::stu3::proto::Reference* part_of) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(part_of_);
  }
  if (part_of) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      part_of = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, part_of, submessage_arena);
    }
    
  } else {
    
  }
  part_of_ = part_of;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreOrganization.part_of)
}

// repeated .google.fhir.stu3.uscore.UsCoreOrganization.Contact contact = 17;
inline int UsCoreOrganization::contact_size() const {
  return contact_.size();
}
inline void UsCoreOrganization::clear_contact() {
  contact_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreOrganization_Contact* UsCoreOrganization::mutable_contact(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.contact)
  return contact_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreOrganization_Contact >*
UsCoreOrganization::mutable_contact() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreOrganization.contact)
  return &contact_;
}
inline const ::google::fhir::stu3::uscore::UsCoreOrganization_Contact& UsCoreOrganization::contact(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.contact)
  return contact_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreOrganization_Contact* UsCoreOrganization::add_contact() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreOrganization.contact)
  return contact_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreOrganization_Contact >&
UsCoreOrganization::contact() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreOrganization.contact)
  return contact_;
}

// repeated .google.fhir.stu3.proto.Reference endpoint = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Endpoint"];
inline int UsCoreOrganization::endpoint_size() const {
  return endpoint_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreOrganization::mutable_endpoint(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreOrganization.endpoint)
  return endpoint_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreOrganization::mutable_endpoint() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreOrganization.endpoint)
  return &endpoint_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreOrganization::endpoint(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreOrganization.endpoint)
  return endpoint_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreOrganization::add_endpoint() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreOrganization.endpoint)
  return endpoint_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreOrganization::endpoint() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreOrganization.endpoint)
  return endpoint_;
}

// -------------------------------------------------------------------

// UsCorePatient_Deceased

// .google.fhir.stu3.proto.Boolean boolean = 1;
inline bool UsCorePatient_Deceased::has_boolean() const {
  return deceased_case() == kBoolean;
}
inline void UsCorePatient_Deceased::set_has_boolean() {
  _oneof_case_[0] = kBoolean;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCorePatient_Deceased::_internal_boolean() const {
  return *deceased_.boolean_;
}
inline ::google::fhir::stu3::proto::Boolean* UsCorePatient_Deceased::release_boolean() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.Deceased.boolean)
  if (has_boolean()) {
    clear_has_deceased();
      ::google::fhir::stu3::proto::Boolean* temp = deceased_.boolean_;
    deceased_.boolean_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Boolean& UsCorePatient_Deceased::boolean() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Deceased.boolean)
  return has_boolean()
      ? *deceased_.boolean_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Boolean*>(&::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* UsCorePatient_Deceased::mutable_boolean() {
  if (!has_boolean()) {
    clear_deceased();
    set_has_boolean();
    deceased_.boolean_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Boolean >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Deceased.boolean)
  return deceased_.boolean_;
}

// .google.fhir.stu3.proto.DateTime date_time = 2;
inline bool UsCorePatient_Deceased::has_date_time() const {
  return deceased_case() == kDateTime;
}
inline void UsCorePatient_Deceased::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCorePatient_Deceased::_internal_date_time() const {
  return *deceased_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* UsCorePatient_Deceased::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.Deceased.date_time)
  if (has_date_time()) {
    clear_has_deceased();
      ::google::fhir::stu3::proto::DateTime* temp = deceased_.date_time_;
    deceased_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& UsCorePatient_Deceased::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Deceased.date_time)
  return has_date_time()
      ? *deceased_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCorePatient_Deceased::mutable_date_time() {
  if (!has_date_time()) {
    clear_deceased();
    set_has_date_time();
    deceased_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Deceased.date_time)
  return deceased_.date_time_;
}

inline bool UsCorePatient_Deceased::has_deceased() const {
  return deceased_case() != DECEASED_NOT_SET;
}
inline void UsCorePatient_Deceased::clear_has_deceased() {
  _oneof_case_[0] = DECEASED_NOT_SET;
}
inline UsCorePatient_Deceased::DeceasedCase UsCorePatient_Deceased::deceased_case() const {
  return UsCorePatient_Deceased::DeceasedCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCorePatient_MultipleBirth

// .google.fhir.stu3.proto.Boolean boolean = 1;
inline bool UsCorePatient_MultipleBirth::has_boolean() const {
  return multiple_birth_case() == kBoolean;
}
inline void UsCorePatient_MultipleBirth::set_has_boolean() {
  _oneof_case_[0] = kBoolean;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCorePatient_MultipleBirth::_internal_boolean() const {
  return *multiple_birth_.boolean_;
}
inline ::google::fhir::stu3::proto::Boolean* UsCorePatient_MultipleBirth::release_boolean() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth.boolean)
  if (has_boolean()) {
    clear_has_multiple_birth();
      ::google::fhir::stu3::proto::Boolean* temp = multiple_birth_.boolean_;
    multiple_birth_.boolean_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Boolean& UsCorePatient_MultipleBirth::boolean() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth.boolean)
  return has_boolean()
      ? *multiple_birth_.boolean_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Boolean*>(&::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* UsCorePatient_MultipleBirth::mutable_boolean() {
  if (!has_boolean()) {
    clear_multiple_birth();
    set_has_boolean();
    multiple_birth_.boolean_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Boolean >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth.boolean)
  return multiple_birth_.boolean_;
}

// .google.fhir.stu3.proto.Integer integer = 2;
inline bool UsCorePatient_MultipleBirth::has_integer() const {
  return multiple_birth_case() == kInteger;
}
inline void UsCorePatient_MultipleBirth::set_has_integer() {
  _oneof_case_[0] = kInteger;
}
inline const ::google::fhir::stu3::proto::Integer& UsCorePatient_MultipleBirth::_internal_integer() const {
  return *multiple_birth_.integer_;
}
inline ::google::fhir::stu3::proto::Integer* UsCorePatient_MultipleBirth::release_integer() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth.integer)
  if (has_integer()) {
    clear_has_multiple_birth();
      ::google::fhir::stu3::proto::Integer* temp = multiple_birth_.integer_;
    multiple_birth_.integer_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Integer& UsCorePatient_MultipleBirth::integer() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth.integer)
  return has_integer()
      ? *multiple_birth_.integer_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Integer*>(&::google::fhir::stu3::proto::_Integer_default_instance_);
}
inline ::google::fhir::stu3::proto::Integer* UsCorePatient_MultipleBirth::mutable_integer() {
  if (!has_integer()) {
    clear_multiple_birth();
    set_has_integer();
    multiple_birth_.integer_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Integer >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.MultipleBirth.integer)
  return multiple_birth_.integer_;
}

inline bool UsCorePatient_MultipleBirth::has_multiple_birth() const {
  return multiple_birth_case() != MULTIPLE_BIRTH_NOT_SET;
}
inline void UsCorePatient_MultipleBirth::clear_has_multiple_birth() {
  _oneof_case_[0] = MULTIPLE_BIRTH_NOT_SET;
}
inline UsCorePatient_MultipleBirth::MultipleBirthCase UsCorePatient_MultipleBirth::multiple_birth_case() const {
  return UsCorePatient_MultipleBirth::MultipleBirthCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCorePatient_Contact

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCorePatient_Contact::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCorePatient_Contact::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCorePatient_Contact::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Contact.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCorePatient_Contact::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.Contact.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCorePatient_Contact::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Contact.id)
  return id_;
}
inline void UsCorePatient_Contact::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.Contact.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCorePatient_Contact::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCorePatient_Contact::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Contact.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCorePatient_Contact::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.Contact.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCorePatient_Contact::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Contact.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCorePatient_Contact::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.Contact.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCorePatient_Contact::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.Contact.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCorePatient_Contact::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCorePatient_Contact::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Contact.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCorePatient_Contact::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.Contact.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCorePatient_Contact::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Contact.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCorePatient_Contact::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.Contact.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCorePatient_Contact::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.Contact.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.CodeableConcept relationship = 4;
inline int UsCorePatient_Contact::relationship_size() const {
  return relationship_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCorePatient_Contact::mutable_relationship(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Contact.relationship)
  return relationship_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCorePatient_Contact::mutable_relationship() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.Contact.relationship)
  return &relationship_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCorePatient_Contact::relationship(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Contact.relationship)
  return relationship_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCorePatient_Contact::add_relationship() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.Contact.relationship)
  return relationship_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCorePatient_Contact::relationship() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.Contact.relationship)
  return relationship_;
}

// .google.fhir.stu3.proto.HumanName name = 5;
inline bool UsCorePatient_Contact::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::google::fhir::stu3::proto::HumanName& UsCorePatient_Contact::_internal_name() const {
  return *name_;
}
inline const ::google::fhir::stu3::proto::HumanName& UsCorePatient_Contact::name() const {
  const ::google::fhir::stu3::proto::HumanName* p = name_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Contact.name)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::HumanName*>(
      &::google::fhir::stu3::proto::_HumanName_default_instance_);
}
inline ::google::fhir::stu3::proto::HumanName* UsCorePatient_Contact::release_name() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.Contact.name)
  
  ::google::fhir::stu3::proto::HumanName* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::HumanName* UsCorePatient_Contact::mutable_name() {
  
  if (name_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::HumanName>(GetArenaNoVirtual());
    name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Contact.name)
  return name_;
}
inline void UsCorePatient_Contact::set_allocated_name(::google::fhir::stu3::proto::HumanName* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.Contact.name)
}

// repeated .google.fhir.stu3.proto.ContactPoint telecom = 6;
inline int UsCorePatient_Contact::telecom_size() const {
  return telecom_.size();
}
inline ::google::fhir::stu3::proto::ContactPoint* UsCorePatient_Contact::mutable_telecom(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Contact.telecom)
  return telecom_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >*
UsCorePatient_Contact::mutable_telecom() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.Contact.telecom)
  return &telecom_;
}
inline const ::google::fhir::stu3::proto::ContactPoint& UsCorePatient_Contact::telecom(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Contact.telecom)
  return telecom_.Get(index);
}
inline ::google::fhir::stu3::proto::ContactPoint* UsCorePatient_Contact::add_telecom() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.Contact.telecom)
  return telecom_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >&
UsCorePatient_Contact::telecom() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.Contact.telecom)
  return telecom_;
}

// .google.fhir.stu3.proto.Address address = 7;
inline bool UsCorePatient_Contact::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::google::fhir::stu3::proto::Address& UsCorePatient_Contact::_internal_address() const {
  return *address_;
}
inline const ::google::fhir::stu3::proto::Address& UsCorePatient_Contact::address() const {
  const ::google::fhir::stu3::proto::Address* p = address_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Contact.address)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Address*>(
      &::google::fhir::stu3::proto::_Address_default_instance_);
}
inline ::google::fhir::stu3::proto::Address* UsCorePatient_Contact::release_address() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.Contact.address)
  
  ::google::fhir::stu3::proto::Address* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Address* UsCorePatient_Contact::mutable_address() {
  
  if (address_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Address>(GetArenaNoVirtual());
    address_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Contact.address)
  return address_;
}
inline void UsCorePatient_Contact::set_allocated_address(::google::fhir::stu3::proto::Address* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.Contact.address)
}

// .google.fhir.stu3.proto.AdministrativeGenderCode gender = 8;
inline bool UsCorePatient_Contact::has_gender() const {
  return this != internal_default_instance() && gender_ != NULL;
}
inline const ::google::fhir::stu3::proto::AdministrativeGenderCode& UsCorePatient_Contact::_internal_gender() const {
  return *gender_;
}
inline const ::google::fhir::stu3::proto::AdministrativeGenderCode& UsCorePatient_Contact::gender() const {
  const ::google::fhir::stu3::proto::AdministrativeGenderCode* p = gender_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Contact.gender)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::AdministrativeGenderCode*>(
      &::google::fhir::stu3::proto::_AdministrativeGenderCode_default_instance_);
}
inline ::google::fhir::stu3::proto::AdministrativeGenderCode* UsCorePatient_Contact::release_gender() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.Contact.gender)
  
  ::google::fhir::stu3::proto::AdministrativeGenderCode* temp = gender_;
  gender_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::AdministrativeGenderCode* UsCorePatient_Contact::mutable_gender() {
  
  if (gender_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::AdministrativeGenderCode>(GetArenaNoVirtual());
    gender_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Contact.gender)
  return gender_;
}
inline void UsCorePatient_Contact::set_allocated_gender(::google::fhir::stu3::proto::AdministrativeGenderCode* gender) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(gender_);
  }
  if (gender) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gender = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gender, submessage_arena);
    }
    
  } else {
    
  }
  gender_ = gender;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.Contact.gender)
}

// .google.fhir.stu3.proto.Reference organization = 9 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
inline bool UsCorePatient_Contact::has_organization() const {
  return this != internal_default_instance() && organization_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCorePatient_Contact::_internal_organization() const {
  return *organization_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCorePatient_Contact::organization() const {
  const ::google::fhir::stu3::proto::Reference* p = organization_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Contact.organization)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCorePatient_Contact::release_organization() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.Contact.organization)
  
  ::google::fhir::stu3::proto::Reference* temp = organization_;
  organization_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCorePatient_Contact::mutable_organization() {
  
  if (organization_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    organization_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Contact.organization)
  return organization_;
}
inline void UsCorePatient_Contact::set_allocated_organization(::google::fhir::stu3::proto::Reference* organization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(organization_);
  }
  if (organization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      organization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, organization, submessage_arena);
    }
    
  } else {
    
  }
  organization_ = organization;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.Contact.organization)
}

// .google.fhir.stu3.proto.Period period = 10;
inline bool UsCorePatient_Contact::has_period() const {
  return this != internal_default_instance() && period_ != NULL;
}
inline const ::google::fhir::stu3::proto::Period& UsCorePatient_Contact::_internal_period() const {
  return *period_;
}
inline const ::google::fhir::stu3::proto::Period& UsCorePatient_Contact::period() const {
  const ::google::fhir::stu3::proto::Period* p = period_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Contact.period)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Period*>(
      &::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* UsCorePatient_Contact::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.Contact.period)
  
  ::google::fhir::stu3::proto::Period* temp = period_;
  period_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Period* UsCorePatient_Contact::mutable_period() {
  
  if (period_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Period>(GetArenaNoVirtual());
    period_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Contact.period)
  return period_;
}
inline void UsCorePatient_Contact::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(period_);
  }
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    
  } else {
    
  }
  period_ = period;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.Contact.period)
}

// -------------------------------------------------------------------

// UsCorePatient_Communication

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCorePatient_Communication::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCorePatient_Communication::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCorePatient_Communication::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Communication.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCorePatient_Communication::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.Communication.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCorePatient_Communication::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Communication.id)
  return id_;
}
inline void UsCorePatient_Communication::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.Communication.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCorePatient_Communication::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCorePatient_Communication::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Communication.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCorePatient_Communication::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.Communication.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCorePatient_Communication::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Communication.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCorePatient_Communication::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.Communication.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCorePatient_Communication::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.Communication.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCorePatient_Communication::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCorePatient_Communication::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Communication.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCorePatient_Communication::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.Communication.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCorePatient_Communication::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Communication.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCorePatient_Communication::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.Communication.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCorePatient_Communication::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.Communication.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.CodeableConcept language = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCorePatient_Communication::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCorePatient_Communication::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCorePatient_Communication::language() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Communication.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCorePatient_Communication::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.Communication.language)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCorePatient_Communication::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Communication.language)
  return language_;
}
inline void UsCorePatient_Communication::set_allocated_language(::google::fhir::stu3::proto::CodeableConcept* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.Communication.language)
}

// .google.fhir.stu3.proto.Boolean preferred = 5;
inline bool UsCorePatient_Communication::has_preferred() const {
  return this != internal_default_instance() && preferred_ != NULL;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCorePatient_Communication::_internal_preferred() const {
  return *preferred_;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCorePatient_Communication::preferred() const {
  const ::google::fhir::stu3::proto::Boolean* p = preferred_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Communication.preferred)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Boolean*>(
      &::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* UsCorePatient_Communication::release_preferred() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.Communication.preferred)
  
  ::google::fhir::stu3::proto::Boolean* temp = preferred_;
  preferred_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Boolean* UsCorePatient_Communication::mutable_preferred() {
  
  if (preferred_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Boolean>(GetArenaNoVirtual());
    preferred_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Communication.preferred)
  return preferred_;
}
inline void UsCorePatient_Communication::set_allocated_preferred(::google::fhir::stu3::proto::Boolean* preferred) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(preferred_);
  }
  if (preferred) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      preferred = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, preferred, submessage_arena);
    }
    
  } else {
    
  }
  preferred_ = preferred;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.Communication.preferred)
}

// -------------------------------------------------------------------

// UsCorePatient_Link

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCorePatient_Link::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCorePatient_Link::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCorePatient_Link::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Link.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCorePatient_Link::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.Link.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCorePatient_Link::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Link.id)
  return id_;
}
inline void UsCorePatient_Link::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.Link.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCorePatient_Link::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCorePatient_Link::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Link.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCorePatient_Link::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.Link.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCorePatient_Link::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Link.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCorePatient_Link::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.Link.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCorePatient_Link::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.Link.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCorePatient_Link::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCorePatient_Link::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Link.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCorePatient_Link::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.Link.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCorePatient_Link::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Link.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCorePatient_Link::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.Link.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCorePatient_Link::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.Link.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.Reference other = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
inline bool UsCorePatient_Link::has_other() const {
  return this != internal_default_instance() && other_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCorePatient_Link::_internal_other() const {
  return *other_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCorePatient_Link::other() const {
  const ::google::fhir::stu3::proto::Reference* p = other_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Link.other)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCorePatient_Link::release_other() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.Link.other)
  
  ::google::fhir::stu3::proto::Reference* temp = other_;
  other_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCorePatient_Link::mutable_other() {
  
  if (other_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    other_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Link.other)
  return other_;
}
inline void UsCorePatient_Link::set_allocated_other(::google::fhir::stu3::proto::Reference* other) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(other_);
  }
  if (other) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      other = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, other, submessage_arena);
    }
    
  } else {
    
  }
  other_ = other;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.Link.other)
}

// .google.fhir.stu3.proto.LinkTypeCode type = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCorePatient_Link::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline const ::google::fhir::stu3::proto::LinkTypeCode& UsCorePatient_Link::_internal_type() const {
  return *type_;
}
inline const ::google::fhir::stu3::proto::LinkTypeCode& UsCorePatient_Link::type() const {
  const ::google::fhir::stu3::proto::LinkTypeCode* p = type_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.Link.type)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LinkTypeCode*>(
      &::google::fhir::stu3::proto::_LinkTypeCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LinkTypeCode* UsCorePatient_Link::release_type() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.Link.type)
  
  ::google::fhir::stu3::proto::LinkTypeCode* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LinkTypeCode* UsCorePatient_Link::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LinkTypeCode>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.Link.type)
  return type_;
}
inline void UsCorePatient_Link::set_allocated_type(::google::fhir::stu3::proto::LinkTypeCode* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(type_);
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.Link.type)
}

// -------------------------------------------------------------------

// UsCorePatient

// .google.fhir.stu3.proto.Id id = 1;
inline bool UsCorePatient::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& UsCorePatient::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& UsCorePatient::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* UsCorePatient::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* UsCorePatient::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.id)
  return id_;
}
inline void UsCorePatient::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool UsCorePatient::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& UsCorePatient::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& UsCorePatient::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* UsCorePatient::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* UsCorePatient::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.meta)
  return meta_;
}
inline void UsCorePatient::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool UsCorePatient::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCorePatient::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCorePatient::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCorePatient::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCorePatient::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.implicit_rules)
  return implicit_rules_;
}
inline void UsCorePatient::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool UsCorePatient::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCorePatient::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCorePatient::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCorePatient::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCorePatient::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.language)
  return language_;
}
inline void UsCorePatient::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.language)
}

// .google.fhir.stu3.proto.Narrative text = 5;
inline bool UsCorePatient::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCorePatient::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCorePatient::text() const {
  const ::google::fhir::stu3::proto::Narrative* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Narrative*>(
      &::google::fhir::stu3::proto::_Narrative_default_instance_);
}
inline ::google::fhir::stu3::proto::Narrative* UsCorePatient::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.text)
  
  ::google::fhir::stu3::proto::Narrative* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Narrative* UsCorePatient::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.text)
  return text_;
}
inline void UsCorePatient::set_allocated_text(::google::fhir::stu3::proto::Narrative* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.text)
}

// repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
inline int UsCorePatient::contained_size() const {
  return contained_.size();
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCorePatient::mutable_contained(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.contained)
  return contained_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
UsCorePatient::mutable_contained() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.contained)
  return &contained_;
}
inline const ::google::fhir::stu3::proto::ContainedResource& UsCorePatient::contained(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.contained)
  return contained_.Get(index);
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCorePatient::add_contained() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.contained)
  return contained_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
UsCorePatient::contained() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.contained)
  return contained_;
}

// repeated .google.fhir.stu3.proto.Extension extension = 7;
inline int UsCorePatient::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCorePatient::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCorePatient::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCorePatient::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCorePatient::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCorePatient::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
inline int UsCorePatient::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCorePatient::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCorePatient::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCorePatient::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCorePatient::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCorePatient::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.Identifier identifier = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline int UsCorePatient::identifier_size() const {
  return identifier_.size();
}
inline ::google::fhir::stu3::proto::Identifier* UsCorePatient::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.identifier)
  return identifier_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
UsCorePatient::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.identifier)
  return &identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCorePatient::identifier(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.identifier)
  return identifier_.Get(index);
}
inline ::google::fhir::stu3::proto::Identifier* UsCorePatient::add_identifier() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.identifier)
  return identifier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
UsCorePatient::identifier() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.identifier)
  return identifier_;
}

// .google.fhir.stu3.proto.Boolean active = 10;
inline bool UsCorePatient::has_active() const {
  return this != internal_default_instance() && active_ != NULL;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCorePatient::_internal_active() const {
  return *active_;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCorePatient::active() const {
  const ::google::fhir::stu3::proto::Boolean* p = active_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.active)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Boolean*>(
      &::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* UsCorePatient::release_active() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.active)
  
  ::google::fhir::stu3::proto::Boolean* temp = active_;
  active_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Boolean* UsCorePatient::mutable_active() {
  
  if (active_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Boolean>(GetArenaNoVirtual());
    active_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.active)
  return active_;
}
inline void UsCorePatient::set_allocated_active(::google::fhir::stu3::proto::Boolean* active) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(active_);
  }
  if (active) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      active = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, active, submessage_arena);
    }
    
  } else {
    
  }
  active_ = active;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.active)
}

// repeated .google.fhir.stu3.proto.HumanName name = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline int UsCorePatient::name_size() const {
  return name_.size();
}
inline ::google::fhir::stu3::proto::HumanName* UsCorePatient::mutable_name(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.name)
  return name_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::HumanName >*
UsCorePatient::mutable_name() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.name)
  return &name_;
}
inline const ::google::fhir::stu3::proto::HumanName& UsCorePatient::name(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.name)
  return name_.Get(index);
}
inline ::google::fhir::stu3::proto::HumanName* UsCorePatient::add_name() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.name)
  return name_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::HumanName >&
UsCorePatient::name() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.name)
  return name_;
}

// repeated .google.fhir.stu3.proto.ContactPoint telecom = 12;
inline int UsCorePatient::telecom_size() const {
  return telecom_.size();
}
inline ::google::fhir::stu3::proto::ContactPoint* UsCorePatient::mutable_telecom(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.telecom)
  return telecom_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >*
UsCorePatient::mutable_telecom() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.telecom)
  return &telecom_;
}
inline const ::google::fhir::stu3::proto::ContactPoint& UsCorePatient::telecom(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.telecom)
  return telecom_.Get(index);
}
inline ::google::fhir::stu3::proto::ContactPoint* UsCorePatient::add_telecom() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.telecom)
  return telecom_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >&
UsCorePatient::telecom() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.telecom)
  return telecom_;
}

// .google.fhir.stu3.proto.AdministrativeGenderCode gender = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCorePatient::has_gender() const {
  return this != internal_default_instance() && gender_ != NULL;
}
inline const ::google::fhir::stu3::proto::AdministrativeGenderCode& UsCorePatient::_internal_gender() const {
  return *gender_;
}
inline const ::google::fhir::stu3::proto::AdministrativeGenderCode& UsCorePatient::gender() const {
  const ::google::fhir::stu3::proto::AdministrativeGenderCode* p = gender_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.gender)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::AdministrativeGenderCode*>(
      &::google::fhir::stu3::proto::_AdministrativeGenderCode_default_instance_);
}
inline ::google::fhir::stu3::proto::AdministrativeGenderCode* UsCorePatient::release_gender() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.gender)
  
  ::google::fhir::stu3::proto::AdministrativeGenderCode* temp = gender_;
  gender_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::AdministrativeGenderCode* UsCorePatient::mutable_gender() {
  
  if (gender_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::AdministrativeGenderCode>(GetArenaNoVirtual());
    gender_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.gender)
  return gender_;
}
inline void UsCorePatient::set_allocated_gender(::google::fhir::stu3::proto::AdministrativeGenderCode* gender) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(gender_);
  }
  if (gender) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gender = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gender, submessage_arena);
    }
    
  } else {
    
  }
  gender_ = gender;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.gender)
}

// .google.fhir.stu3.proto.Date birth_date = 14;
inline bool UsCorePatient::has_birth_date() const {
  return this != internal_default_instance() && birth_date_ != NULL;
}
inline const ::google::fhir::stu3::proto::Date& UsCorePatient::_internal_birth_date() const {
  return *birth_date_;
}
inline const ::google::fhir::stu3::proto::Date& UsCorePatient::birth_date() const {
  const ::google::fhir::stu3::proto::Date* p = birth_date_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.birth_date)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Date*>(
      &::google::fhir::stu3::proto::_Date_default_instance_);
}
inline ::google::fhir::stu3::proto::Date* UsCorePatient::release_birth_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.birth_date)
  
  ::google::fhir::stu3::proto::Date* temp = birth_date_;
  birth_date_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Date* UsCorePatient::mutable_birth_date() {
  
  if (birth_date_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Date>(GetArenaNoVirtual());
    birth_date_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.birth_date)
  return birth_date_;
}
inline void UsCorePatient::set_allocated_birth_date(::google::fhir::stu3::proto::Date* birth_date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(birth_date_);
  }
  if (birth_date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      birth_date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, birth_date, submessage_arena);
    }
    
  } else {
    
  }
  birth_date_ = birth_date;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.birth_date)
}

// .google.fhir.stu3.uscore.UsCorePatient.Deceased deceased = 15 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCorePatient::has_deceased() const {
  return this != internal_default_instance() && deceased_ != NULL;
}
inline void UsCorePatient::clear_deceased() {
  if (GetArenaNoVirtual() == NULL && deceased_ != NULL) {
    delete deceased_;
  }
  deceased_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCorePatient_Deceased& UsCorePatient::_internal_deceased() const {
  return *deceased_;
}
inline const ::google::fhir::stu3::uscore::UsCorePatient_Deceased& UsCorePatient::deceased() const {
  const ::google::fhir::stu3::uscore::UsCorePatient_Deceased* p = deceased_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.deceased)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCorePatient_Deceased*>(
      &::google::fhir::stu3::uscore::_UsCorePatient_Deceased_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCorePatient_Deceased* UsCorePatient::release_deceased() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.deceased)
  
  ::google::fhir::stu3::uscore::UsCorePatient_Deceased* temp = deceased_;
  deceased_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCorePatient_Deceased* UsCorePatient::mutable_deceased() {
  
  if (deceased_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCorePatient_Deceased>(GetArenaNoVirtual());
    deceased_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.deceased)
  return deceased_;
}
inline void UsCorePatient::set_allocated_deceased(::google::fhir::stu3::uscore::UsCorePatient_Deceased* deceased) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deceased_;
  }
  if (deceased) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deceased = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deceased, submessage_arena);
    }
    
  } else {
    
  }
  deceased_ = deceased;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.deceased)
}

// repeated .google.fhir.stu3.proto.Address address = 16;
inline int UsCorePatient::address_size() const {
  return address_.size();
}
inline ::google::fhir::stu3::proto::Address* UsCorePatient::mutable_address(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.address)
  return address_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Address >*
UsCorePatient::mutable_address() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.address)
  return &address_;
}
inline const ::google::fhir::stu3::proto::Address& UsCorePatient::address(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.address)
  return address_.Get(index);
}
inline ::google::fhir::stu3::proto::Address* UsCorePatient::add_address() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.address)
  return address_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Address >&
UsCorePatient::address() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.address)
  return address_;
}

// .google.fhir.stu3.proto.CodeableConcept marital_status = 17;
inline bool UsCorePatient::has_marital_status() const {
  return this != internal_default_instance() && marital_status_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCorePatient::_internal_marital_status() const {
  return *marital_status_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCorePatient::marital_status() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = marital_status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.marital_status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCorePatient::release_marital_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.marital_status)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = marital_status_;
  marital_status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCorePatient::mutable_marital_status() {
  
  if (marital_status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    marital_status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.marital_status)
  return marital_status_;
}
inline void UsCorePatient::set_allocated_marital_status(::google::fhir::stu3::proto::CodeableConcept* marital_status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(marital_status_);
  }
  if (marital_status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      marital_status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, marital_status, submessage_arena);
    }
    
  } else {
    
  }
  marital_status_ = marital_status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.marital_status)
}

// .google.fhir.stu3.uscore.UsCorePatient.MultipleBirth multiple_birth = 18 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCorePatient::has_multiple_birth() const {
  return this != internal_default_instance() && multiple_birth_ != NULL;
}
inline void UsCorePatient::clear_multiple_birth() {
  if (GetArenaNoVirtual() == NULL && multiple_birth_ != NULL) {
    delete multiple_birth_;
  }
  multiple_birth_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth& UsCorePatient::_internal_multiple_birth() const {
  return *multiple_birth_;
}
inline const ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth& UsCorePatient::multiple_birth() const {
  const ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth* p = multiple_birth_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.multiple_birth)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth*>(
      &::google::fhir::stu3::uscore::_UsCorePatient_MultipleBirth_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth* UsCorePatient::release_multiple_birth() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.multiple_birth)
  
  ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth* temp = multiple_birth_;
  multiple_birth_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth* UsCorePatient::mutable_multiple_birth() {
  
  if (multiple_birth_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth>(GetArenaNoVirtual());
    multiple_birth_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.multiple_birth)
  return multiple_birth_;
}
inline void UsCorePatient::set_allocated_multiple_birth(::google::fhir::stu3::uscore::UsCorePatient_MultipleBirth* multiple_birth) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete multiple_birth_;
  }
  if (multiple_birth) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      multiple_birth = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, multiple_birth, submessage_arena);
    }
    
  } else {
    
  }
  multiple_birth_ = multiple_birth;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.multiple_birth)
}

// repeated .google.fhir.stu3.proto.Attachment photo = 19;
inline int UsCorePatient::photo_size() const {
  return photo_.size();
}
inline ::google::fhir::stu3::proto::Attachment* UsCorePatient::mutable_photo(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.photo)
  return photo_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment >*
UsCorePatient::mutable_photo() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.photo)
  return &photo_;
}
inline const ::google::fhir::stu3::proto::Attachment& UsCorePatient::photo(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.photo)
  return photo_.Get(index);
}
inline ::google::fhir::stu3::proto::Attachment* UsCorePatient::add_photo() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.photo)
  return photo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment >&
UsCorePatient::photo() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.photo)
  return photo_;
}

// repeated .google.fhir.stu3.uscore.UsCorePatient.Contact contact = 20;
inline int UsCorePatient::contact_size() const {
  return contact_.size();
}
inline void UsCorePatient::clear_contact() {
  contact_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCorePatient_Contact* UsCorePatient::mutable_contact(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.contact)
  return contact_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePatient_Contact >*
UsCorePatient::mutable_contact() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.contact)
  return &contact_;
}
inline const ::google::fhir::stu3::uscore::UsCorePatient_Contact& UsCorePatient::contact(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.contact)
  return contact_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCorePatient_Contact* UsCorePatient::add_contact() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.contact)
  return contact_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePatient_Contact >&
UsCorePatient::contact() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.contact)
  return contact_;
}

// repeated .google.fhir.stu3.uscore.UsCorePatient.Communication communication = 22;
inline int UsCorePatient::communication_size() const {
  return communication_.size();
}
inline void UsCorePatient::clear_communication() {
  communication_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCorePatient_Communication* UsCorePatient::mutable_communication(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.communication)
  return communication_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePatient_Communication >*
UsCorePatient::mutable_communication() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.communication)
  return &communication_;
}
inline const ::google::fhir::stu3::uscore::UsCorePatient_Communication& UsCorePatient::communication(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.communication)
  return communication_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCorePatient_Communication* UsCorePatient::add_communication() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.communication)
  return communication_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePatient_Communication >&
UsCorePatient::communication() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.communication)
  return communication_;
}

// repeated .google.fhir.stu3.proto.Reference general_practitioner = 23 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner"];
inline int UsCorePatient::general_practitioner_size() const {
  return general_practitioner_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCorePatient::mutable_general_practitioner(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.general_practitioner)
  return general_practitioner_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCorePatient::mutable_general_practitioner() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.general_practitioner)
  return &general_practitioner_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCorePatient::general_practitioner(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.general_practitioner)
  return general_practitioner_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCorePatient::add_general_practitioner() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.general_practitioner)
  return general_practitioner_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCorePatient::general_practitioner() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.general_practitioner)
  return general_practitioner_;
}

// .google.fhir.stu3.proto.Reference managing_organization = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
inline bool UsCorePatient::has_managing_organization() const {
  return this != internal_default_instance() && managing_organization_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCorePatient::_internal_managing_organization() const {
  return *managing_organization_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCorePatient::managing_organization() const {
  const ::google::fhir::stu3::proto::Reference* p = managing_organization_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.managing_organization)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCorePatient::release_managing_organization() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.managing_organization)
  
  ::google::fhir::stu3::proto::Reference* temp = managing_organization_;
  managing_organization_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCorePatient::mutable_managing_organization() {
  
  if (managing_organization_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    managing_organization_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.managing_organization)
  return managing_organization_;
}
inline void UsCorePatient::set_allocated_managing_organization(::google::fhir::stu3::proto::Reference* managing_organization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(managing_organization_);
  }
  if (managing_organization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      managing_organization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, managing_organization, submessage_arena);
    }
    
  } else {
    
  }
  managing_organization_ = managing_organization;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.managing_organization)
}

// repeated .google.fhir.stu3.uscore.UsCorePatient.Link link = 25;
inline int UsCorePatient::link_size() const {
  return link_.size();
}
inline void UsCorePatient::clear_link() {
  link_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCorePatient_Link* UsCorePatient::mutable_link(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.link)
  return link_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePatient_Link >*
UsCorePatient::mutable_link() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePatient.link)
  return &link_;
}
inline const ::google::fhir::stu3::uscore::UsCorePatient_Link& UsCorePatient::link(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.link)
  return link_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCorePatient_Link* UsCorePatient::add_link() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePatient.link)
  return link_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePatient_Link >&
UsCorePatient::link() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePatient.link)
  return link_;
}

// .google.fhir.stu3.uscore.PatientUSCoreRaceExtension race = 26 [(.google.fhir.stu3.proto.fhir_inlined_extension_url) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-race"];
inline bool UsCorePatient::has_race() const {
  return this != internal_default_instance() && race_ != NULL;
}
inline void UsCorePatient::clear_race() {
  if (GetArenaNoVirtual() == NULL && race_ != NULL) {
    delete race_;
  }
  race_ = NULL;
}
inline const ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension& UsCorePatient::_internal_race() const {
  return *race_;
}
inline const ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension& UsCorePatient::race() const {
  const ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension* p = race_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.race)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension*>(
      &::google::fhir::stu3::uscore::_PatientUSCoreRaceExtension_default_instance_);
}
inline ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension* UsCorePatient::release_race() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.race)
  
  ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension* temp = race_;
  race_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::PatientUSCoreRaceExtension* UsCorePatient::mutable_race() {
  
  if (race_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::PatientUSCoreRaceExtension>(GetArenaNoVirtual());
    race_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.race)
  return race_;
}
inline void UsCorePatient::set_allocated_race(::google::fhir::stu3::uscore::PatientUSCoreRaceExtension* race) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete race_;
  }
  if (race) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      race = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, race, submessage_arena);
    }
    
  } else {
    
  }
  race_ = race;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.race)
}

// .google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension ethnicity = 27 [(.google.fhir.stu3.proto.fhir_inlined_extension_url) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity"];
inline bool UsCorePatient::has_ethnicity() const {
  return this != internal_default_instance() && ethnicity_ != NULL;
}
inline void UsCorePatient::clear_ethnicity() {
  if (GetArenaNoVirtual() == NULL && ethnicity_ != NULL) {
    delete ethnicity_;
  }
  ethnicity_ = NULL;
}
inline const ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension& UsCorePatient::_internal_ethnicity() const {
  return *ethnicity_;
}
inline const ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension& UsCorePatient::ethnicity() const {
  const ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension* p = ethnicity_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.ethnicity)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension*>(
      &::google::fhir::stu3::uscore::_PatientUSCoreEthnicityExtension_default_instance_);
}
inline ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension* UsCorePatient::release_ethnicity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.ethnicity)
  
  ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension* temp = ethnicity_;
  ethnicity_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension* UsCorePatient::mutable_ethnicity() {
  
  if (ethnicity_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension>(GetArenaNoVirtual());
    ethnicity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.ethnicity)
  return ethnicity_;
}
inline void UsCorePatient::set_allocated_ethnicity(::google::fhir::stu3::uscore::PatientUSCoreEthnicityExtension* ethnicity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ethnicity_;
  }
  if (ethnicity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ethnicity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ethnicity, submessage_arena);
    }
    
  } else {
    
  }
  ethnicity_ = ethnicity;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.ethnicity)
}

// .google.fhir.stu3.uscore.UsCoreBirthSexCode birthsex = 28 [(.google.fhir.stu3.proto.fhir_inlined_extension_url) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex"];
inline bool UsCorePatient::has_birthsex() const {
  return this != internal_default_instance() && birthsex_ != NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreBirthSexCode& UsCorePatient::_internal_birthsex() const {
  return *birthsex_;
}
inline const ::google::fhir::stu3::uscore::UsCoreBirthSexCode& UsCorePatient::birthsex() const {
  const ::google::fhir::stu3::uscore::UsCoreBirthSexCode* p = birthsex_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePatient.birthsex)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreBirthSexCode*>(
      &::google::fhir::stu3::uscore::_UsCoreBirthSexCode_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreBirthSexCode* UsCorePatient::release_birthsex() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePatient.birthsex)
  
  ::google::fhir::stu3::uscore::UsCoreBirthSexCode* temp = birthsex_;
  birthsex_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreBirthSexCode* UsCorePatient::mutable_birthsex() {
  
  if (birthsex_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreBirthSexCode>(GetArenaNoVirtual());
    birthsex_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePatient.birthsex)
  return birthsex_;
}
inline void UsCorePatient::set_allocated_birthsex(::google::fhir::stu3::uscore::UsCoreBirthSexCode* birthsex) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(birthsex_);
  }
  if (birthsex) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      birthsex = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, birthsex, submessage_arena);
    }
    
  } else {
    
  }
  birthsex_ = birthsex;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePatient.birthsex)
}

// -------------------------------------------------------------------

// UsCorePractitioner_Qualification

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCorePractitioner_Qualification::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCorePractitioner_Qualification::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCorePractitioner_Qualification::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCorePractitioner_Qualification::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCorePractitioner_Qualification::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.id)
  return id_;
}
inline void UsCorePractitioner_Qualification::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCorePractitioner_Qualification::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCorePractitioner_Qualification::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCorePractitioner_Qualification::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCorePractitioner_Qualification::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCorePractitioner_Qualification::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCorePractitioner_Qualification::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCorePractitioner_Qualification::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCorePractitioner_Qualification::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCorePractitioner_Qualification::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCorePractitioner_Qualification::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCorePractitioner_Qualification::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCorePractitioner_Qualification::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.Identifier identifier = 4;
inline int UsCorePractitioner_Qualification::identifier_size() const {
  return identifier_.size();
}
inline ::google::fhir::stu3::proto::Identifier* UsCorePractitioner_Qualification::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.identifier)
  return identifier_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
UsCorePractitioner_Qualification::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.identifier)
  return &identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCorePractitioner_Qualification::identifier(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.identifier)
  return identifier_.Get(index);
}
inline ::google::fhir::stu3::proto::Identifier* UsCorePractitioner_Qualification::add_identifier() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.identifier)
  return identifier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
UsCorePractitioner_Qualification::identifier() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.identifier)
  return identifier_;
}

// .google.fhir.stu3.proto.CodeableConcept code = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCorePractitioner_Qualification::has_code() const {
  return this != internal_default_instance() && code_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCorePractitioner_Qualification::_internal_code() const {
  return *code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCorePractitioner_Qualification::code() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = code_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.code)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCorePractitioner_Qualification::release_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.code)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = code_;
  code_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCorePractitioner_Qualification::mutable_code() {
  
  if (code_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    code_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.code)
  return code_;
}
inline void UsCorePractitioner_Qualification::set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(code_);
  }
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    
  } else {
    
  }
  code_ = code;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.code)
}

// .google.fhir.stu3.proto.Period period = 6;
inline bool UsCorePractitioner_Qualification::has_period() const {
  return this != internal_default_instance() && period_ != NULL;
}
inline const ::google::fhir::stu3::proto::Period& UsCorePractitioner_Qualification::_internal_period() const {
  return *period_;
}
inline const ::google::fhir::stu3::proto::Period& UsCorePractitioner_Qualification::period() const {
  const ::google::fhir::stu3::proto::Period* p = period_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.period)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Period*>(
      &::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* UsCorePractitioner_Qualification::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.period)
  
  ::google::fhir::stu3::proto::Period* temp = period_;
  period_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Period* UsCorePractitioner_Qualification::mutable_period() {
  
  if (period_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Period>(GetArenaNoVirtual());
    period_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.period)
  return period_;
}
inline void UsCorePractitioner_Qualification::set_allocated_period(::google::fhir::stu3::proto::Period* period) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(period_);
  }
  if (period) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      period = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, period, submessage_arena);
    }
    
  } else {
    
  }
  period_ = period;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.period)
}

// .google.fhir.stu3.proto.Reference issuer = 7 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
inline bool UsCorePractitioner_Qualification::has_issuer() const {
  return this != internal_default_instance() && issuer_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCorePractitioner_Qualification::_internal_issuer() const {
  return *issuer_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCorePractitioner_Qualification::issuer() const {
  const ::google::fhir::stu3::proto::Reference* p = issuer_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.issuer)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCorePractitioner_Qualification::release_issuer() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.issuer)
  
  ::google::fhir::stu3::proto::Reference* temp = issuer_;
  issuer_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCorePractitioner_Qualification::mutable_issuer() {
  
  if (issuer_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    issuer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.issuer)
  return issuer_;
}
inline void UsCorePractitioner_Qualification::set_allocated_issuer(::google::fhir::stu3::proto::Reference* issuer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(issuer_);
  }
  if (issuer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      issuer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, issuer, submessage_arena);
    }
    
  } else {
    
  }
  issuer_ = issuer;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePractitioner.Qualification.issuer)
}

// -------------------------------------------------------------------

// UsCorePractitioner

// .google.fhir.stu3.proto.Id id = 1;
inline bool UsCorePractitioner::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& UsCorePractitioner::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& UsCorePractitioner::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* UsCorePractitioner::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePractitioner.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* UsCorePractitioner::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.id)
  return id_;
}
inline void UsCorePractitioner::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePractitioner.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool UsCorePractitioner::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& UsCorePractitioner::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& UsCorePractitioner::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* UsCorePractitioner::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePractitioner.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* UsCorePractitioner::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.meta)
  return meta_;
}
inline void UsCorePractitioner::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePractitioner.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool UsCorePractitioner::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCorePractitioner::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCorePractitioner::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCorePractitioner::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePractitioner.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCorePractitioner::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.implicit_rules)
  return implicit_rules_;
}
inline void UsCorePractitioner::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePractitioner.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool UsCorePractitioner::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCorePractitioner::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCorePractitioner::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCorePractitioner::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePractitioner.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCorePractitioner::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.language)
  return language_;
}
inline void UsCorePractitioner::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePractitioner.language)
}

// .google.fhir.stu3.proto.Narrative text = 5;
inline bool UsCorePractitioner::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCorePractitioner::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCorePractitioner::text() const {
  const ::google::fhir::stu3::proto::Narrative* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Narrative*>(
      &::google::fhir::stu3::proto::_Narrative_default_instance_);
}
inline ::google::fhir::stu3::proto::Narrative* UsCorePractitioner::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePractitioner.text)
  
  ::google::fhir::stu3::proto::Narrative* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Narrative* UsCorePractitioner::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.text)
  return text_;
}
inline void UsCorePractitioner::set_allocated_text(::google::fhir::stu3::proto::Narrative* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePractitioner.text)
}

// repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
inline int UsCorePractitioner::contained_size() const {
  return contained_.size();
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCorePractitioner::mutable_contained(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.contained)
  return contained_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
UsCorePractitioner::mutable_contained() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePractitioner.contained)
  return &contained_;
}
inline const ::google::fhir::stu3::proto::ContainedResource& UsCorePractitioner::contained(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.contained)
  return contained_.Get(index);
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCorePractitioner::add_contained() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePractitioner.contained)
  return contained_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
UsCorePractitioner::contained() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePractitioner.contained)
  return contained_;
}

// repeated .google.fhir.stu3.proto.Extension extension = 7;
inline int UsCorePractitioner::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCorePractitioner::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCorePractitioner::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePractitioner.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCorePractitioner::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCorePractitioner::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePractitioner.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCorePractitioner::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePractitioner.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
inline int UsCorePractitioner::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCorePractitioner::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCorePractitioner::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePractitioner.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCorePractitioner::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCorePractitioner::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePractitioner.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCorePractitioner::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePractitioner.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.Identifier identifier = 9 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline int UsCorePractitioner::identifier_size() const {
  return identifier_.size();
}
inline ::google::fhir::stu3::proto::Identifier* UsCorePractitioner::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.identifier)
  return identifier_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
UsCorePractitioner::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePractitioner.identifier)
  return &identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCorePractitioner::identifier(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.identifier)
  return identifier_.Get(index);
}
inline ::google::fhir::stu3::proto::Identifier* UsCorePractitioner::add_identifier() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePractitioner.identifier)
  return identifier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
UsCorePractitioner::identifier() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePractitioner.identifier)
  return identifier_;
}

// .google.fhir.stu3.proto.Boolean active = 10;
inline bool UsCorePractitioner::has_active() const {
  return this != internal_default_instance() && active_ != NULL;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCorePractitioner::_internal_active() const {
  return *active_;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCorePractitioner::active() const {
  const ::google::fhir::stu3::proto::Boolean* p = active_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.active)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Boolean*>(
      &::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* UsCorePractitioner::release_active() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePractitioner.active)
  
  ::google::fhir::stu3::proto::Boolean* temp = active_;
  active_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Boolean* UsCorePractitioner::mutable_active() {
  
  if (active_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Boolean>(GetArenaNoVirtual());
    active_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.active)
  return active_;
}
inline void UsCorePractitioner::set_allocated_active(::google::fhir::stu3::proto::Boolean* active) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(active_);
  }
  if (active) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      active = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, active, submessage_arena);
    }
    
  } else {
    
  }
  active_ = active;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePractitioner.active)
}

// .google.fhir.stu3.proto.HumanName name = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCorePractitioner::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::google::fhir::stu3::proto::HumanName& UsCorePractitioner::_internal_name() const {
  return *name_;
}
inline const ::google::fhir::stu3::proto::HumanName& UsCorePractitioner::name() const {
  const ::google::fhir::stu3::proto::HumanName* p = name_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.name)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::HumanName*>(
      &::google::fhir::stu3::proto::_HumanName_default_instance_);
}
inline ::google::fhir::stu3::proto::HumanName* UsCorePractitioner::release_name() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePractitioner.name)
  
  ::google::fhir::stu3::proto::HumanName* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::HumanName* UsCorePractitioner::mutable_name() {
  
  if (name_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::HumanName>(GetArenaNoVirtual());
    name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.name)
  return name_;
}
inline void UsCorePractitioner::set_allocated_name(::google::fhir::stu3::proto::HumanName* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePractitioner.name)
}

// repeated .google.fhir.stu3.proto.ContactPoint telecom = 12;
inline int UsCorePractitioner::telecom_size() const {
  return telecom_.size();
}
inline ::google::fhir::stu3::proto::ContactPoint* UsCorePractitioner::mutable_telecom(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.telecom)
  return telecom_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >*
UsCorePractitioner::mutable_telecom() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePractitioner.telecom)
  return &telecom_;
}
inline const ::google::fhir::stu3::proto::ContactPoint& UsCorePractitioner::telecom(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.telecom)
  return telecom_.Get(index);
}
inline ::google::fhir::stu3::proto::ContactPoint* UsCorePractitioner::add_telecom() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePractitioner.telecom)
  return telecom_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContactPoint >&
UsCorePractitioner::telecom() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePractitioner.telecom)
  return telecom_;
}

// repeated .google.fhir.stu3.proto.Address address = 13;
inline int UsCorePractitioner::address_size() const {
  return address_.size();
}
inline ::google::fhir::stu3::proto::Address* UsCorePractitioner::mutable_address(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.address)
  return address_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Address >*
UsCorePractitioner::mutable_address() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePractitioner.address)
  return &address_;
}
inline const ::google::fhir::stu3::proto::Address& UsCorePractitioner::address(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.address)
  return address_.Get(index);
}
inline ::google::fhir::stu3::proto::Address* UsCorePractitioner::add_address() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePractitioner.address)
  return address_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Address >&
UsCorePractitioner::address() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePractitioner.address)
  return address_;
}

// .google.fhir.stu3.proto.AdministrativeGenderCode gender = 14;
inline bool UsCorePractitioner::has_gender() const {
  return this != internal_default_instance() && gender_ != NULL;
}
inline const ::google::fhir::stu3::proto::AdministrativeGenderCode& UsCorePractitioner::_internal_gender() const {
  return *gender_;
}
inline const ::google::fhir::stu3::proto::AdministrativeGenderCode& UsCorePractitioner::gender() const {
  const ::google::fhir::stu3::proto::AdministrativeGenderCode* p = gender_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.gender)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::AdministrativeGenderCode*>(
      &::google::fhir::stu3::proto::_AdministrativeGenderCode_default_instance_);
}
inline ::google::fhir::stu3::proto::AdministrativeGenderCode* UsCorePractitioner::release_gender() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePractitioner.gender)
  
  ::google::fhir::stu3::proto::AdministrativeGenderCode* temp = gender_;
  gender_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::AdministrativeGenderCode* UsCorePractitioner::mutable_gender() {
  
  if (gender_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::AdministrativeGenderCode>(GetArenaNoVirtual());
    gender_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.gender)
  return gender_;
}
inline void UsCorePractitioner::set_allocated_gender(::google::fhir::stu3::proto::AdministrativeGenderCode* gender) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(gender_);
  }
  if (gender) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gender = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gender, submessage_arena);
    }
    
  } else {
    
  }
  gender_ = gender;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePractitioner.gender)
}

// .google.fhir.stu3.proto.Date birth_date = 15;
inline bool UsCorePractitioner::has_birth_date() const {
  return this != internal_default_instance() && birth_date_ != NULL;
}
inline const ::google::fhir::stu3::proto::Date& UsCorePractitioner::_internal_birth_date() const {
  return *birth_date_;
}
inline const ::google::fhir::stu3::proto::Date& UsCorePractitioner::birth_date() const {
  const ::google::fhir::stu3::proto::Date* p = birth_date_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.birth_date)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Date*>(
      &::google::fhir::stu3::proto::_Date_default_instance_);
}
inline ::google::fhir::stu3::proto::Date* UsCorePractitioner::release_birth_date() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCorePractitioner.birth_date)
  
  ::google::fhir::stu3::proto::Date* temp = birth_date_;
  birth_date_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Date* UsCorePractitioner::mutable_birth_date() {
  
  if (birth_date_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Date>(GetArenaNoVirtual());
    birth_date_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.birth_date)
  return birth_date_;
}
inline void UsCorePractitioner::set_allocated_birth_date(::google::fhir::stu3::proto::Date* birth_date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(birth_date_);
  }
  if (birth_date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      birth_date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, birth_date, submessage_arena);
    }
    
  } else {
    
  }
  birth_date_ = birth_date;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCorePractitioner.birth_date)
}

// repeated .google.fhir.stu3.proto.Attachment photo = 16;
inline int UsCorePractitioner::photo_size() const {
  return photo_.size();
}
inline ::google::fhir::stu3::proto::Attachment* UsCorePractitioner::mutable_photo(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.photo)
  return photo_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment >*
UsCorePractitioner::mutable_photo() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePractitioner.photo)
  return &photo_;
}
inline const ::google::fhir::stu3::proto::Attachment& UsCorePractitioner::photo(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.photo)
  return photo_.Get(index);
}
inline ::google::fhir::stu3::proto::Attachment* UsCorePractitioner::add_photo() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePractitioner.photo)
  return photo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Attachment >&
UsCorePractitioner::photo() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePractitioner.photo)
  return photo_;
}

// repeated .google.fhir.stu3.uscore.UsCorePractitioner.Qualification qualification = 17;
inline int UsCorePractitioner::qualification_size() const {
  return qualification_.size();
}
inline void UsCorePractitioner::clear_qualification() {
  qualification_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCorePractitioner_Qualification* UsCorePractitioner::mutable_qualification(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.qualification)
  return qualification_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePractitioner_Qualification >*
UsCorePractitioner::mutable_qualification() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePractitioner.qualification)
  return &qualification_;
}
inline const ::google::fhir::stu3::uscore::UsCorePractitioner_Qualification& UsCorePractitioner::qualification(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.qualification)
  return qualification_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCorePractitioner_Qualification* UsCorePractitioner::add_qualification() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePractitioner.qualification)
  return qualification_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCorePractitioner_Qualification >&
UsCorePractitioner::qualification() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePractitioner.qualification)
  return qualification_;
}

// repeated .google.fhir.stu3.proto.CodeableConcept communication = 18;
inline int UsCorePractitioner::communication_size() const {
  return communication_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCorePractitioner::mutable_communication(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCorePractitioner.communication)
  return communication_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCorePractitioner::mutable_communication() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCorePractitioner.communication)
  return &communication_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCorePractitioner::communication(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCorePractitioner.communication)
  return communication_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCorePractitioner::add_communication() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCorePractitioner.communication)
  return communication_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCorePractitioner::communication() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCorePractitioner.communication)
  return communication_;
}

// -------------------------------------------------------------------

// UsCoreProcedure_Performed

// .google.fhir.stu3.proto.DateTime date_time = 1;
inline bool UsCoreProcedure_Performed::has_date_time() const {
  return performed_case() == kDateTime;
}
inline void UsCoreProcedure_Performed::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreProcedure_Performed::_internal_date_time() const {
  return *performed_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreProcedure_Performed::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.Performed.date_time)
  if (has_date_time()) {
    clear_has_performed();
      ::google::fhir::stu3::proto::DateTime* temp = performed_.date_time_;
    performed_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreProcedure_Performed::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.Performed.date_time)
  return has_date_time()
      ? *performed_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreProcedure_Performed::mutable_date_time() {
  if (!has_date_time()) {
    clear_performed();
    set_has_date_time();
    performed_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.Performed.date_time)
  return performed_.date_time_;
}

// .google.fhir.stu3.proto.Period period = 2;
inline bool UsCoreProcedure_Performed::has_period() const {
  return performed_case() == kPeriod;
}
inline void UsCoreProcedure_Performed::set_has_period() {
  _oneof_case_[0] = kPeriod;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreProcedure_Performed::_internal_period() const {
  return *performed_.period_;
}
inline ::google::fhir::stu3::proto::Period* UsCoreProcedure_Performed::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.Performed.period)
  if (has_period()) {
    clear_has_performed();
      ::google::fhir::stu3::proto::Period* temp = performed_.period_;
    performed_.period_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Period& UsCoreProcedure_Performed::period() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.Performed.period)
  return has_period()
      ? *performed_.period_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Period*>(&::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* UsCoreProcedure_Performed::mutable_period() {
  if (!has_period()) {
    clear_performed();
    set_has_period();
    performed_.period_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Period >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.Performed.period)
  return performed_.period_;
}

inline bool UsCoreProcedure_Performed::has_performed() const {
  return performed_case() != PERFORMED_NOT_SET;
}
inline void UsCoreProcedure_Performed::clear_has_performed() {
  _oneof_case_[0] = PERFORMED_NOT_SET;
}
inline UsCoreProcedure_Performed::PerformedCase UsCoreProcedure_Performed::performed_case() const {
  return UsCoreProcedure_Performed::PerformedCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreProcedure_Performer

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreProcedure_Performer::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreProcedure_Performer::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreProcedure_Performer::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.Performer.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreProcedure_Performer::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.Performer.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreProcedure_Performer::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.Performer.id)
  return id_;
}
inline void UsCoreProcedure_Performer::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.Performer.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreProcedure_Performer::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreProcedure_Performer::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.Performer.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreProcedure_Performer::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.Performer.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreProcedure_Performer::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.Performer.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreProcedure_Performer::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.Performer.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreProcedure_Performer::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.Performer.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreProcedure_Performer::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreProcedure_Performer::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.Performer.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreProcedure_Performer::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.Performer.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreProcedure_Performer::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.Performer.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreProcedure_Performer::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.Performer.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreProcedure_Performer::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.Performer.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.CodeableConcept role = 4;
inline bool UsCoreProcedure_Performer::has_role() const {
  return this != internal_default_instance() && role_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreProcedure_Performer::_internal_role() const {
  return *role_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreProcedure_Performer::role() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = role_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.Performer.role)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure_Performer::release_role() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.Performer.role)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = role_;
  role_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure_Performer::mutable_role() {
  
  if (role_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    role_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.Performer.role)
  return role_;
}
inline void UsCoreProcedure_Performer::set_allocated_role(::google::fhir::stu3::proto::CodeableConcept* role) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(role_);
  }
  if (role) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      role = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, role, submessage_arena);
    }
    
  } else {
    
  }
  role_ = role;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.Performer.role)
}

// .google.fhir.stu3.proto.Reference actor = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device"];
inline bool UsCoreProcedure_Performer::has_actor() const {
  return this != internal_default_instance() && actor_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure_Performer::_internal_actor() const {
  return *actor_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure_Performer::actor() const {
  const ::google::fhir::stu3::proto::Reference* p = actor_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.Performer.actor)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure_Performer::release_actor() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.Performer.actor)
  
  ::google::fhir::stu3::proto::Reference* temp = actor_;
  actor_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure_Performer::mutable_actor() {
  
  if (actor_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    actor_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.Performer.actor)
  return actor_;
}
inline void UsCoreProcedure_Performer::set_allocated_actor(::google::fhir::stu3::proto::Reference* actor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(actor_);
  }
  if (actor) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      actor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, actor, submessage_arena);
    }
    
  } else {
    
  }
  actor_ = actor;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.Performer.actor)
}

// .google.fhir.stu3.proto.Reference on_behalf_of = 6 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization"];
inline bool UsCoreProcedure_Performer::has_on_behalf_of() const {
  return this != internal_default_instance() && on_behalf_of_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure_Performer::_internal_on_behalf_of() const {
  return *on_behalf_of_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure_Performer::on_behalf_of() const {
  const ::google::fhir::stu3::proto::Reference* p = on_behalf_of_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.Performer.on_behalf_of)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure_Performer::release_on_behalf_of() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.Performer.on_behalf_of)
  
  ::google::fhir::stu3::proto::Reference* temp = on_behalf_of_;
  on_behalf_of_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure_Performer::mutable_on_behalf_of() {
  
  if (on_behalf_of_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    on_behalf_of_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.Performer.on_behalf_of)
  return on_behalf_of_;
}
inline void UsCoreProcedure_Performer::set_allocated_on_behalf_of(::google::fhir::stu3::proto::Reference* on_behalf_of) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(on_behalf_of_);
  }
  if (on_behalf_of) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      on_behalf_of = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, on_behalf_of, submessage_arena);
    }
    
  } else {
    
  }
  on_behalf_of_ = on_behalf_of;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.Performer.on_behalf_of)
}

// -------------------------------------------------------------------

// UsCoreProcedure_FocalDevice

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreProcedure_FocalDevice::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreProcedure_FocalDevice::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreProcedure_FocalDevice::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreProcedure_FocalDevice::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreProcedure_FocalDevice::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.id)
  return id_;
}
inline void UsCoreProcedure_FocalDevice::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreProcedure_FocalDevice::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreProcedure_FocalDevice::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreProcedure_FocalDevice::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreProcedure_FocalDevice::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreProcedure_FocalDevice::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreProcedure_FocalDevice::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreProcedure_FocalDevice::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreProcedure_FocalDevice::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreProcedure_FocalDevice::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreProcedure_FocalDevice::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreProcedure_FocalDevice::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreProcedure_FocalDevice::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.CodeableConcept action = 4;
inline bool UsCoreProcedure_FocalDevice::has_action() const {
  return this != internal_default_instance() && action_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreProcedure_FocalDevice::_internal_action() const {
  return *action_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreProcedure_FocalDevice::action() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = action_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.action)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure_FocalDevice::release_action() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.action)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = action_;
  action_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure_FocalDevice::mutable_action() {
  
  if (action_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    action_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.action)
  return action_;
}
inline void UsCoreProcedure_FocalDevice::set_allocated_action(::google::fhir::stu3::proto::CodeableConcept* action) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(action_);
  }
  if (action) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      action = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action, submessage_arena);
    }
    
  } else {
    
  }
  action_ = action;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.action)
}

// .google.fhir.stu3.proto.Reference manipulated = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device"];
inline bool UsCoreProcedure_FocalDevice::has_manipulated() const {
  return this != internal_default_instance() && manipulated_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure_FocalDevice::_internal_manipulated() const {
  return *manipulated_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure_FocalDevice::manipulated() const {
  const ::google::fhir::stu3::proto::Reference* p = manipulated_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.manipulated)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure_FocalDevice::release_manipulated() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.manipulated)
  
  ::google::fhir::stu3::proto::Reference* temp = manipulated_;
  manipulated_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure_FocalDevice::mutable_manipulated() {
  
  if (manipulated_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    manipulated_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.manipulated)
  return manipulated_;
}
inline void UsCoreProcedure_FocalDevice::set_allocated_manipulated(::google::fhir::stu3::proto::Reference* manipulated) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(manipulated_);
  }
  if (manipulated) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      manipulated = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, manipulated, submessage_arena);
    }
    
  } else {
    
  }
  manipulated_ = manipulated;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice.manipulated)
}

// -------------------------------------------------------------------

// UsCoreProcedure

// .google.fhir.stu3.proto.Id id = 1;
inline bool UsCoreProcedure::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreProcedure::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreProcedure::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* UsCoreProcedure::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* UsCoreProcedure::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.id)
  return id_;
}
inline void UsCoreProcedure::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool UsCoreProcedure::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreProcedure::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreProcedure::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* UsCoreProcedure::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* UsCoreProcedure::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.meta)
  return meta_;
}
inline void UsCoreProcedure::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool UsCoreProcedure::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreProcedure::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreProcedure::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreProcedure::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreProcedure::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.implicit_rules)
  return implicit_rules_;
}
inline void UsCoreProcedure::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool UsCoreProcedure::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreProcedure::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreProcedure::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreProcedure::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreProcedure::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.language)
  return language_;
}
inline void UsCoreProcedure::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.language)
}

// .google.fhir.stu3.proto.Narrative text = 5;
inline bool UsCoreProcedure::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreProcedure::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreProcedure::text() const {
  const ::google::fhir::stu3::proto::Narrative* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Narrative*>(
      &::google::fhir::stu3::proto::_Narrative_default_instance_);
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreProcedure::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.text)
  
  ::google::fhir::stu3::proto::Narrative* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreProcedure::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.text)
  return text_;
}
inline void UsCoreProcedure::set_allocated_text(::google::fhir::stu3::proto::Narrative* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.text)
}

// repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
inline int UsCoreProcedure::contained_size() const {
  return contained_.size();
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreProcedure::mutable_contained(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.contained)
  return contained_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
UsCoreProcedure::mutable_contained() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.contained)
  return &contained_;
}
inline const ::google::fhir::stu3::proto::ContainedResource& UsCoreProcedure::contained(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.contained)
  return contained_.Get(index);
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreProcedure::add_contained() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.contained)
  return contained_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
UsCoreProcedure::contained() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.contained)
  return contained_;
}

// repeated .google.fhir.stu3.proto.Extension extension = 7;
inline int UsCoreProcedure::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreProcedure::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreProcedure::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreProcedure::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreProcedure::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreProcedure::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
inline int UsCoreProcedure::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreProcedure::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreProcedure::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreProcedure::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreProcedure::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreProcedure::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.Identifier identifier = 9;
inline int UsCoreProcedure::identifier_size() const {
  return identifier_.size();
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreProcedure::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.identifier)
  return identifier_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
UsCoreProcedure::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.identifier)
  return &identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCoreProcedure::identifier(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.identifier)
  return identifier_.Get(index);
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreProcedure::add_identifier() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.identifier)
  return identifier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
UsCoreProcedure::identifier() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.identifier)
  return identifier_;
}

// repeated .google.fhir.stu3.proto.Reference definition = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/PlanDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ActivityDefinition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/HealthcareService"];
inline int UsCoreProcedure::definition_size() const {
  return definition_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::mutable_definition(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.definition)
  return definition_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreProcedure::mutable_definition() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.definition)
  return &definition_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure::definition(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.definition)
  return definition_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::add_definition() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.definition)
  return definition_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreProcedure::definition() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.definition)
  return definition_;
}

// repeated .google.fhir.stu3.proto.Reference based_on = 11 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
inline int UsCoreProcedure::based_on_size() const {
  return based_on_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::mutable_based_on(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.based_on)
  return based_on_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreProcedure::mutable_based_on() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.based_on)
  return &based_on_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure::based_on(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.based_on)
  return based_on_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::add_based_on() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.based_on)
  return based_on_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreProcedure::based_on() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.based_on)
  return based_on_;
}

// repeated .google.fhir.stu3.proto.Reference part_of = 12 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Procedure", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationAdministration"];
inline int UsCoreProcedure::part_of_size() const {
  return part_of_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::mutable_part_of(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.part_of)
  return part_of_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreProcedure::mutable_part_of() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.part_of)
  return &part_of_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure::part_of(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.part_of)
  return part_of_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::add_part_of() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.part_of)
  return part_of_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreProcedure::part_of() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.part_of)
  return part_of_;
}

// .google.fhir.stu3.proto.EventStatusCode status = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreProcedure::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::fhir::stu3::proto::EventStatusCode& UsCoreProcedure::_internal_status() const {
  return *status_;
}
inline const ::google::fhir::stu3::proto::EventStatusCode& UsCoreProcedure::status() const {
  const ::google::fhir::stu3::proto::EventStatusCode* p = status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::EventStatusCode*>(
      &::google::fhir::stu3::proto::_EventStatusCode_default_instance_);
}
inline ::google::fhir::stu3::proto::EventStatusCode* UsCoreProcedure::release_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.status)
  
  ::google::fhir::stu3::proto::EventStatusCode* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::EventStatusCode* UsCoreProcedure::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::EventStatusCode>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.status)
  return status_;
}
inline void UsCoreProcedure::set_allocated_status(::google::fhir::stu3::proto::EventStatusCode* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.status)
}

// .google.fhir.stu3.proto.Boolean not_done = 14;
inline bool UsCoreProcedure::has_not_done() const {
  return this != internal_default_instance() && not_done_ != NULL;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreProcedure::_internal_not_done() const {
  return *not_done_;
}
inline const ::google::fhir::stu3::proto::Boolean& UsCoreProcedure::not_done() const {
  const ::google::fhir::stu3::proto::Boolean* p = not_done_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.not_done)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Boolean*>(
      &::google::fhir::stu3::proto::_Boolean_default_instance_);
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreProcedure::release_not_done() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.not_done)
  
  ::google::fhir::stu3::proto::Boolean* temp = not_done_;
  not_done_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Boolean* UsCoreProcedure::mutable_not_done() {
  
  if (not_done_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Boolean>(GetArenaNoVirtual());
    not_done_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.not_done)
  return not_done_;
}
inline void UsCoreProcedure::set_allocated_not_done(::google::fhir::stu3::proto::Boolean* not_done) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(not_done_);
  }
  if (not_done) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      not_done = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, not_done, submessage_arena);
    }
    
  } else {
    
  }
  not_done_ = not_done;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.not_done)
}

// .google.fhir.stu3.proto.CodeableConcept not_done_reason = 15;
inline bool UsCoreProcedure::has_not_done_reason() const {
  return this != internal_default_instance() && not_done_reason_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreProcedure::_internal_not_done_reason() const {
  return *not_done_reason_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreProcedure::not_done_reason() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = not_done_reason_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.not_done_reason)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure::release_not_done_reason() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.not_done_reason)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = not_done_reason_;
  not_done_reason_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure::mutable_not_done_reason() {
  
  if (not_done_reason_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    not_done_reason_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.not_done_reason)
  return not_done_reason_;
}
inline void UsCoreProcedure::set_allocated_not_done_reason(::google::fhir::stu3::proto::CodeableConcept* not_done_reason) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(not_done_reason_);
  }
  if (not_done_reason) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      not_done_reason = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, not_done_reason, submessage_arena);
    }
    
  } else {
    
  }
  not_done_reason_ = not_done_reason;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.not_done_reason)
}

// .google.fhir.stu3.proto.CodeableConcept category = 16;
inline bool UsCoreProcedure::has_category() const {
  return this != internal_default_instance() && category_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreProcedure::_internal_category() const {
  return *category_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreProcedure::category() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = category_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.category)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure::release_category() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.category)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = category_;
  category_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure::mutable_category() {
  
  if (category_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    category_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.category)
  return category_;
}
inline void UsCoreProcedure::set_allocated_category(::google::fhir::stu3::proto::CodeableConcept* category) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(category_);
  }
  if (category) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      category = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, category, submessage_arena);
    }
    
  } else {
    
  }
  category_ = category;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.category)
}

// .google.fhir.stu3.proto.CodeableConcept code = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreProcedure::has_code() const {
  return this != internal_default_instance() && code_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreProcedure::_internal_code() const {
  return *code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreProcedure::code() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = code_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.code)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure::release_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.code)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = code_;
  code_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure::mutable_code() {
  
  if (code_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    code_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.code)
  return code_;
}
inline void UsCoreProcedure::set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(code_);
  }
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    
  } else {
    
  }
  code_ = code;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.code)
}

// .google.fhir.stu3.proto.Reference subject = 18 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
inline bool UsCoreProcedure::has_subject() const {
  return this != internal_default_instance() && subject_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure::_internal_subject() const {
  return *subject_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure::subject() const {
  const ::google::fhir::stu3::proto::Reference* p = subject_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.subject)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::release_subject() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.subject)
  
  ::google::fhir::stu3::proto::Reference* temp = subject_;
  subject_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::mutable_subject() {
  
  if (subject_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    subject_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.subject)
  return subject_;
}
inline void UsCoreProcedure::set_allocated_subject(::google::fhir::stu3::proto::Reference* subject) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(subject_);
  }
  if (subject) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      subject = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, subject, submessage_arena);
    }
    
  } else {
    
  }
  subject_ = subject;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.subject)
}

// .google.fhir.stu3.proto.Reference context = 19 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
inline bool UsCoreProcedure::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure::_internal_context() const {
  return *context_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure::context() const {
  const ::google::fhir::stu3::proto::Reference* p = context_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.context)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::release_context() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.context)
  
  ::google::fhir::stu3::proto::Reference* temp = context_;
  context_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::mutable_context() {
  
  if (context_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    context_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.context)
  return context_;
}
inline void UsCoreProcedure::set_allocated_context(::google::fhir::stu3::proto::Reference* context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(context_);
  }
  if (context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.context)
}

// .google.fhir.stu3.uscore.UsCoreProcedure.Performed performed = 20 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreProcedure::has_performed() const {
  return this != internal_default_instance() && performed_ != NULL;
}
inline void UsCoreProcedure::clear_performed() {
  if (GetArenaNoVirtual() == NULL && performed_ != NULL) {
    delete performed_;
  }
  performed_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreProcedure_Performed& UsCoreProcedure::_internal_performed() const {
  return *performed_;
}
inline const ::google::fhir::stu3::uscore::UsCoreProcedure_Performed& UsCoreProcedure::performed() const {
  const ::google::fhir::stu3::uscore::UsCoreProcedure_Performed* p = performed_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.performed)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreProcedure_Performed*>(
      &::google::fhir::stu3::uscore::_UsCoreProcedure_Performed_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreProcedure_Performed* UsCoreProcedure::release_performed() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.performed)
  
  ::google::fhir::stu3::uscore::UsCoreProcedure_Performed* temp = performed_;
  performed_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreProcedure_Performed* UsCoreProcedure::mutable_performed() {
  
  if (performed_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreProcedure_Performed>(GetArenaNoVirtual());
    performed_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.performed)
  return performed_;
}
inline void UsCoreProcedure::set_allocated_performed(::google::fhir::stu3::uscore::UsCoreProcedure_Performed* performed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete performed_;
  }
  if (performed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      performed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, performed, submessage_arena);
    }
    
  } else {
    
  }
  performed_ = performed;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.performed)
}

// repeated .google.fhir.stu3.uscore.UsCoreProcedure.Performer performer = 21;
inline int UsCoreProcedure::performer_size() const {
  return performer_.size();
}
inline void UsCoreProcedure::clear_performer() {
  performer_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreProcedure_Performer* UsCoreProcedure::mutable_performer(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.performer)
  return performer_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreProcedure_Performer >*
UsCoreProcedure::mutable_performer() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.performer)
  return &performer_;
}
inline const ::google::fhir::stu3::uscore::UsCoreProcedure_Performer& UsCoreProcedure::performer(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.performer)
  return performer_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreProcedure_Performer* UsCoreProcedure::add_performer() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.performer)
  return performer_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreProcedure_Performer >&
UsCoreProcedure::performer() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.performer)
  return performer_;
}

// .google.fhir.stu3.proto.Reference location = 22 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Location"];
inline bool UsCoreProcedure::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure::_internal_location() const {
  return *location_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure::location() const {
  const ::google::fhir::stu3::proto::Reference* p = location_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.location)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::release_location() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.location)
  
  ::google::fhir::stu3::proto::Reference* temp = location_;
  location_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::mutable_location() {
  
  if (location_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    location_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.location)
  return location_;
}
inline void UsCoreProcedure::set_allocated_location(::google::fhir::stu3::proto::Reference* location) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(location_);
  }
  if (location) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      location = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    
  } else {
    
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.location)
}

// repeated .google.fhir.stu3.proto.CodeableConcept reason_code = 23;
inline int UsCoreProcedure::reason_code_size() const {
  return reason_code_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure::mutable_reason_code(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.reason_code)
  return reason_code_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreProcedure::mutable_reason_code() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.reason_code)
  return &reason_code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreProcedure::reason_code(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.reason_code)
  return reason_code_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure::add_reason_code() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.reason_code)
  return reason_code_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreProcedure::reason_code() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.reason_code)
  return reason_code_;
}

// repeated .google.fhir.stu3.proto.Reference reason_reference = 24 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation"];
inline int UsCoreProcedure::reason_reference_size() const {
  return reason_reference_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::mutable_reason_reference(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.reason_reference)
  return reason_reference_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreProcedure::mutable_reason_reference() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.reason_reference)
  return &reason_reference_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure::reason_reference(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.reason_reference)
  return reason_reference_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::add_reason_reference() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.reason_reference)
  return reason_reference_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreProcedure::reason_reference() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.reason_reference)
  return reason_reference_;
}

// repeated .google.fhir.stu3.proto.CodeableConcept body_site = 25;
inline int UsCoreProcedure::body_site_size() const {
  return body_site_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure::mutable_body_site(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.body_site)
  return body_site_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreProcedure::mutable_body_site() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.body_site)
  return &body_site_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreProcedure::body_site(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.body_site)
  return body_site_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure::add_body_site() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.body_site)
  return body_site_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreProcedure::body_site() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.body_site)
  return body_site_;
}

// .google.fhir.stu3.proto.CodeableConcept outcome = 26;
inline bool UsCoreProcedure::has_outcome() const {
  return this != internal_default_instance() && outcome_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreProcedure::_internal_outcome() const {
  return *outcome_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreProcedure::outcome() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = outcome_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.outcome)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure::release_outcome() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreProcedure.outcome)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = outcome_;
  outcome_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure::mutable_outcome() {
  
  if (outcome_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    outcome_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.outcome)
  return outcome_;
}
inline void UsCoreProcedure::set_allocated_outcome(::google::fhir::stu3::proto::CodeableConcept* outcome) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(outcome_);
  }
  if (outcome) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      outcome = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, outcome, submessage_arena);
    }
    
  } else {
    
  }
  outcome_ = outcome;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreProcedure.outcome)
}

// repeated .google.fhir.stu3.proto.Reference report = 27 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DiagnosticReport"];
inline int UsCoreProcedure::report_size() const {
  return report_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::mutable_report(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.report)
  return report_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreProcedure::mutable_report() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.report)
  return &report_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure::report(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.report)
  return report_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::add_report() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.report)
  return report_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreProcedure::report() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.report)
  return report_;
}

// repeated .google.fhir.stu3.proto.CodeableConcept complication = 28;
inline int UsCoreProcedure::complication_size() const {
  return complication_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure::mutable_complication(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.complication)
  return complication_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreProcedure::mutable_complication() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.complication)
  return &complication_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreProcedure::complication(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.complication)
  return complication_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure::add_complication() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.complication)
  return complication_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreProcedure::complication() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.complication)
  return complication_;
}

// repeated .google.fhir.stu3.proto.Reference complication_detail = 29 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Condition"];
inline int UsCoreProcedure::complication_detail_size() const {
  return complication_detail_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::mutable_complication_detail(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.complication_detail)
  return complication_detail_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreProcedure::mutable_complication_detail() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.complication_detail)
  return &complication_detail_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure::complication_detail(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.complication_detail)
  return complication_detail_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::add_complication_detail() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.complication_detail)
  return complication_detail_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreProcedure::complication_detail() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.complication_detail)
  return complication_detail_;
}

// repeated .google.fhir.stu3.proto.CodeableConcept follow_up = 30;
inline int UsCoreProcedure::follow_up_size() const {
  return follow_up_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure::mutable_follow_up(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.follow_up)
  return follow_up_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreProcedure::mutable_follow_up() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.follow_up)
  return &follow_up_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreProcedure::follow_up(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.follow_up)
  return follow_up_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure::add_follow_up() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.follow_up)
  return follow_up_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreProcedure::follow_up() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.follow_up)
  return follow_up_;
}

// repeated .google.fhir.stu3.proto.Annotation note = 31;
inline int UsCoreProcedure::note_size() const {
  return note_.size();
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreProcedure::mutable_note(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.note)
  return note_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >*
UsCoreProcedure::mutable_note() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.note)
  return &note_;
}
inline const ::google::fhir::stu3::proto::Annotation& UsCoreProcedure::note(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.note)
  return note_.Get(index);
}
inline ::google::fhir::stu3::proto::Annotation* UsCoreProcedure::add_note() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.note)
  return note_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Annotation >&
UsCoreProcedure::note() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.note)
  return note_;
}

// repeated .google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice focal_device = 32;
inline int UsCoreProcedure::focal_device_size() const {
  return focal_device_.size();
}
inline void UsCoreProcedure::clear_focal_device() {
  focal_device_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice* UsCoreProcedure::mutable_focal_device(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.focal_device)
  return focal_device_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice >*
UsCoreProcedure::mutable_focal_device() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.focal_device)
  return &focal_device_;
}
inline const ::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice& UsCoreProcedure::focal_device(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.focal_device)
  return focal_device_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice* UsCoreProcedure::add_focal_device() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.focal_device)
  return focal_device_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreProcedure_FocalDevice >&
UsCoreProcedure::focal_device() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.focal_device)
  return focal_device_;
}

// repeated .google.fhir.stu3.proto.Reference used_reference = 33 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Medication", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Substance"];
inline int UsCoreProcedure::used_reference_size() const {
  return used_reference_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::mutable_used_reference(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.used_reference)
  return used_reference_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreProcedure::mutable_used_reference() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.used_reference)
  return &used_reference_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreProcedure::used_reference(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.used_reference)
  return used_reference_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreProcedure::add_used_reference() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.used_reference)
  return used_reference_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreProcedure::used_reference() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.used_reference)
  return used_reference_;
}

// repeated .google.fhir.stu3.proto.CodeableConcept used_code = 34;
inline int UsCoreProcedure::used_code_size() const {
  return used_code_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure::mutable_used_code(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreProcedure.used_code)
  return used_code_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreProcedure::mutable_used_code() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreProcedure.used_code)
  return &used_code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreProcedure::used_code(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreProcedure.used_code)
  return used_code_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreProcedure::add_used_code() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreProcedure.used_code)
  return used_code_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreProcedure::used_code() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreProcedure.used_code)
  return used_code_;
}

// -------------------------------------------------------------------

// CapabilityStatementProfileResourceAssociationExtension

// .google.fhir.stu3.proto.String id = 1;
inline bool CapabilityStatementProfileResourceAssociationExtension::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& CapabilityStatementProfileResourceAssociationExtension::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& CapabilityStatementProfileResourceAssociationExtension::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* CapabilityStatementProfileResourceAssociationExtension::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* CapabilityStatementProfileResourceAssociationExtension::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension.id)
  return id_;
}
inline void CapabilityStatementProfileResourceAssociationExtension::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int CapabilityStatementProfileResourceAssociationExtension::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* CapabilityStatementProfileResourceAssociationExtension::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
CapabilityStatementProfileResourceAssociationExtension::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& CapabilityStatementProfileResourceAssociationExtension::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* CapabilityStatementProfileResourceAssociationExtension::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
CapabilityStatementProfileResourceAssociationExtension::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension.extension)
  return extension_;
}

// .google.fhir.stu3.proto.ResourceTypeCode value_code = 3;
inline bool CapabilityStatementProfileResourceAssociationExtension::has_value_code() const {
  return this != internal_default_instance() && value_code_ != NULL;
}
inline const ::google::fhir::stu3::proto::ResourceTypeCode& CapabilityStatementProfileResourceAssociationExtension::_internal_value_code() const {
  return *value_code_;
}
inline const ::google::fhir::stu3::proto::ResourceTypeCode& CapabilityStatementProfileResourceAssociationExtension::value_code() const {
  const ::google::fhir::stu3::proto::ResourceTypeCode* p = value_code_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension.value_code)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ResourceTypeCode*>(
      &::google::fhir::stu3::proto::_ResourceTypeCode_default_instance_);
}
inline ::google::fhir::stu3::proto::ResourceTypeCode* CapabilityStatementProfileResourceAssociationExtension::release_value_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension.value_code)
  
  ::google::fhir::stu3::proto::ResourceTypeCode* temp = value_code_;
  value_code_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ResourceTypeCode* CapabilityStatementProfileResourceAssociationExtension::mutable_value_code() {
  
  if (value_code_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ResourceTypeCode>(GetArenaNoVirtual());
    value_code_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension.value_code)
  return value_code_;
}
inline void CapabilityStatementProfileResourceAssociationExtension::set_allocated_value_code(::google::fhir::stu3::proto::ResourceTypeCode* value_code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(value_code_);
  }
  if (value_code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value_code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value_code, submessage_arena);
    }
    
  } else {
    
  }
  value_code_ = value_code;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension.value_code)
}

// -------------------------------------------------------------------

// PatientUSCoreRaceExtension

// .google.fhir.stu3.proto.String id = 1;
inline bool PatientUSCoreRaceExtension::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& PatientUSCoreRaceExtension::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& PatientUSCoreRaceExtension::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* PatientUSCoreRaceExtension::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* PatientUSCoreRaceExtension::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.id)
  return id_;
}
inline void PatientUSCoreRaceExtension::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int PatientUSCoreRaceExtension::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* PatientUSCoreRaceExtension::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
PatientUSCoreRaceExtension::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& PatientUSCoreRaceExtension::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* PatientUSCoreRaceExtension::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
PatientUSCoreRaceExtension::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Coding omb_category = 4;
inline int PatientUSCoreRaceExtension::omb_category_size() const {
  return omb_category_.size();
}
inline ::google::fhir::stu3::proto::Coding* PatientUSCoreRaceExtension::mutable_omb_category(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.omb_category)
  return omb_category_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >*
PatientUSCoreRaceExtension::mutable_omb_category() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.omb_category)
  return &omb_category_;
}
inline const ::google::fhir::stu3::proto::Coding& PatientUSCoreRaceExtension::omb_category(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.omb_category)
  return omb_category_.Get(index);
}
inline ::google::fhir::stu3::proto::Coding* PatientUSCoreRaceExtension::add_omb_category() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.omb_category)
  return omb_category_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >&
PatientUSCoreRaceExtension::omb_category() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.omb_category)
  return omb_category_;
}

// repeated .google.fhir.stu3.proto.Coding detailed = 5;
inline int PatientUSCoreRaceExtension::detailed_size() const {
  return detailed_.size();
}
inline ::google::fhir::stu3::proto::Coding* PatientUSCoreRaceExtension::mutable_detailed(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.detailed)
  return detailed_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >*
PatientUSCoreRaceExtension::mutable_detailed() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.detailed)
  return &detailed_;
}
inline const ::google::fhir::stu3::proto::Coding& PatientUSCoreRaceExtension::detailed(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.detailed)
  return detailed_.Get(index);
}
inline ::google::fhir::stu3::proto::Coding* PatientUSCoreRaceExtension::add_detailed() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.detailed)
  return detailed_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Coding >&
PatientUSCoreRaceExtension::detailed() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.detailed)
  return detailed_;
}

// .google.fhir.stu3.proto.String text = 6 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool PatientUSCoreRaceExtension::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& PatientUSCoreRaceExtension::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::String& PatientUSCoreRaceExtension::text() const {
  const ::google::fhir::stu3::proto::String* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* PatientUSCoreRaceExtension::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.text)
  
  ::google::fhir::stu3::proto::String* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* PatientUSCoreRaceExtension::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.text)
  return text_;
}
inline void PatientUSCoreRaceExtension::set_allocated_text(::google::fhir::stu3::proto::String* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.PatientUSCoreRaceExtension.text)
}

// -------------------------------------------------------------------

// UsCoreSmokingstatus_Effective

// .google.fhir.stu3.proto.DateTime date_time = 1;
inline bool UsCoreSmokingstatus_Effective::has_date_time() const {
  return effective_case() == kDateTime;
}
inline void UsCoreSmokingstatus_Effective::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreSmokingstatus_Effective::_internal_date_time() const {
  return *effective_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreSmokingstatus_Effective::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective.date_time)
  if (has_date_time()) {
    clear_has_effective();
      ::google::fhir::stu3::proto::DateTime* temp = effective_.date_time_;
    effective_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreSmokingstatus_Effective::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective.date_time)
  return has_date_time()
      ? *effective_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreSmokingstatus_Effective::mutable_date_time() {
  if (!has_date_time()) {
    clear_effective();
    set_has_date_time();
    effective_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective.date_time)
  return effective_.date_time_;
}

// .google.fhir.stu3.proto.Period period = 2;
inline bool UsCoreSmokingstatus_Effective::has_period() const {
  return effective_case() == kPeriod;
}
inline void UsCoreSmokingstatus_Effective::set_has_period() {
  _oneof_case_[0] = kPeriod;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreSmokingstatus_Effective::_internal_period() const {
  return *effective_.period_;
}
inline ::google::fhir::stu3::proto::Period* UsCoreSmokingstatus_Effective::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective.period)
  if (has_period()) {
    clear_has_effective();
      ::google::fhir::stu3::proto::Period* temp = effective_.period_;
    effective_.period_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Period& UsCoreSmokingstatus_Effective::period() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective.period)
  return has_period()
      ? *effective_.period_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Period*>(&::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* UsCoreSmokingstatus_Effective::mutable_period() {
  if (!has_period()) {
    clear_effective();
    set_has_period();
    effective_.period_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Period >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective.period)
  return effective_.period_;
}

inline bool UsCoreSmokingstatus_Effective::has_effective() const {
  return effective_case() != EFFECTIVE_NOT_SET;
}
inline void UsCoreSmokingstatus_Effective::clear_has_effective() {
  _oneof_case_[0] = EFFECTIVE_NOT_SET;
}
inline UsCoreSmokingstatus_Effective::EffectiveCase UsCoreSmokingstatus_Effective::effective_case() const {
  return UsCoreSmokingstatus_Effective::EffectiveCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreSmokingstatus_Value

// .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
inline bool UsCoreSmokingstatus_Value::has_codeable_concept() const {
  return value_case() == kCodeableConcept;
}
inline void UsCoreSmokingstatus_Value::set_has_codeable_concept() {
  _oneof_case_[0] = kCodeableConcept;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus_Value::_internal_codeable_concept() const {
  return *value_.codeable_concept_;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus_Value::release_codeable_concept() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value.codeable_concept)
  if (has_codeable_concept()) {
    clear_has_value();
      ::google::fhir::stu3::proto::CodeableConcept* temp = value_.codeable_concept_;
    value_.codeable_concept_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus_Value::codeable_concept() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value.codeable_concept)
  return has_codeable_concept()
      ? *value_.codeable_concept_
      : *reinterpret_cast< ::google::fhir::stu3::proto::CodeableConcept*>(&::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus_Value::mutable_codeable_concept() {
  if (!has_codeable_concept()) {
    clear_value();
    set_has_codeable_concept();
    value_.codeable_concept_ = CreateMaybeMessage< ::google::fhir::stu3::proto::CodeableConcept >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Value.codeable_concept)
  return value_.codeable_concept_;
}

inline bool UsCoreSmokingstatus_Value::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void UsCoreSmokingstatus_Value::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline UsCoreSmokingstatus_Value::ValueCase UsCoreSmokingstatus_Value::value_case() const {
  return UsCoreSmokingstatus_Value::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreSmokingstatus_ReferenceRange

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreSmokingstatus_ReferenceRange::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreSmokingstatus_ReferenceRange::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreSmokingstatus_ReferenceRange::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreSmokingstatus_ReferenceRange::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreSmokingstatus_ReferenceRange::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.id)
  return id_;
}
inline void UsCoreSmokingstatus_ReferenceRange::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreSmokingstatus_ReferenceRange::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreSmokingstatus_ReferenceRange::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreSmokingstatus_ReferenceRange::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreSmokingstatus_ReferenceRange::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreSmokingstatus_ReferenceRange::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreSmokingstatus_ReferenceRange::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreSmokingstatus_ReferenceRange::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreSmokingstatus_ReferenceRange::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreSmokingstatus_ReferenceRange::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreSmokingstatus_ReferenceRange::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreSmokingstatus_ReferenceRange::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreSmokingstatus_ReferenceRange::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.SimpleQuantity low = 4;
inline bool UsCoreSmokingstatus_ReferenceRange::has_low() const {
  return this != internal_default_instance() && low_ != NULL;
}
inline const ::google::fhir::stu3::proto::SimpleQuantity& UsCoreSmokingstatus_ReferenceRange::_internal_low() const {
  return *low_;
}
inline const ::google::fhir::stu3::proto::SimpleQuantity& UsCoreSmokingstatus_ReferenceRange::low() const {
  const ::google::fhir::stu3::proto::SimpleQuantity* p = low_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.low)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::SimpleQuantity*>(
      &::google::fhir::stu3::proto::_SimpleQuantity_default_instance_);
}
inline ::google::fhir::stu3::proto::SimpleQuantity* UsCoreSmokingstatus_ReferenceRange::release_low() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.low)
  
  ::google::fhir::stu3::proto::SimpleQuantity* temp = low_;
  low_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::SimpleQuantity* UsCoreSmokingstatus_ReferenceRange::mutable_low() {
  
  if (low_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::SimpleQuantity>(GetArenaNoVirtual());
    low_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.low)
  return low_;
}
inline void UsCoreSmokingstatus_ReferenceRange::set_allocated_low(::google::fhir::stu3::proto::SimpleQuantity* low) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(low_);
  }
  if (low) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      low = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, low, submessage_arena);
    }
    
  } else {
    
  }
  low_ = low;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.low)
}

// .google.fhir.stu3.proto.SimpleQuantity high = 5;
inline bool UsCoreSmokingstatus_ReferenceRange::has_high() const {
  return this != internal_default_instance() && high_ != NULL;
}
inline const ::google::fhir::stu3::proto::SimpleQuantity& UsCoreSmokingstatus_ReferenceRange::_internal_high() const {
  return *high_;
}
inline const ::google::fhir::stu3::proto::SimpleQuantity& UsCoreSmokingstatus_ReferenceRange::high() const {
  const ::google::fhir::stu3::proto::SimpleQuantity* p = high_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.high)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::SimpleQuantity*>(
      &::google::fhir::stu3::proto::_SimpleQuantity_default_instance_);
}
inline ::google::fhir::stu3::proto::SimpleQuantity* UsCoreSmokingstatus_ReferenceRange::release_high() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.high)
  
  ::google::fhir::stu3::proto::SimpleQuantity* temp = high_;
  high_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::SimpleQuantity* UsCoreSmokingstatus_ReferenceRange::mutable_high() {
  
  if (high_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::SimpleQuantity>(GetArenaNoVirtual());
    high_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.high)
  return high_;
}
inline void UsCoreSmokingstatus_ReferenceRange::set_allocated_high(::google::fhir::stu3::proto::SimpleQuantity* high) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(high_);
  }
  if (high) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      high = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, high, submessage_arena);
    }
    
  } else {
    
  }
  high_ = high;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.high)
}

// .google.fhir.stu3.proto.CodeableConcept type = 6;
inline bool UsCoreSmokingstatus_ReferenceRange::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus_ReferenceRange::_internal_type() const {
  return *type_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus_ReferenceRange::type() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = type_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.type)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus_ReferenceRange::release_type() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.type)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus_ReferenceRange::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.type)
  return type_;
}
inline void UsCoreSmokingstatus_ReferenceRange::set_allocated_type(::google::fhir::stu3::proto::CodeableConcept* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(type_);
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.type)
}

// repeated .google.fhir.stu3.proto.CodeableConcept applies_to = 7;
inline int UsCoreSmokingstatus_ReferenceRange::applies_to_size() const {
  return applies_to_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus_ReferenceRange::mutable_applies_to(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.applies_to)
  return applies_to_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreSmokingstatus_ReferenceRange::mutable_applies_to() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.applies_to)
  return &applies_to_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus_ReferenceRange::applies_to(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.applies_to)
  return applies_to_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus_ReferenceRange::add_applies_to() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.applies_to)
  return applies_to_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreSmokingstatus_ReferenceRange::applies_to() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.applies_to)
  return applies_to_;
}

// .google.fhir.stu3.proto.Range age = 8;
inline bool UsCoreSmokingstatus_ReferenceRange::has_age() const {
  return this != internal_default_instance() && age_ != NULL;
}
inline const ::google::fhir::stu3::proto::Range& UsCoreSmokingstatus_ReferenceRange::_internal_age() const {
  return *age_;
}
inline const ::google::fhir::stu3::proto::Range& UsCoreSmokingstatus_ReferenceRange::age() const {
  const ::google::fhir::stu3::proto::Range* p = age_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.age)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Range*>(
      &::google::fhir::stu3::proto::_Range_default_instance_);
}
inline ::google::fhir::stu3::proto::Range* UsCoreSmokingstatus_ReferenceRange::release_age() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.age)
  
  ::google::fhir::stu3::proto::Range* temp = age_;
  age_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Range* UsCoreSmokingstatus_ReferenceRange::mutable_age() {
  
  if (age_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Range>(GetArenaNoVirtual());
    age_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.age)
  return age_;
}
inline void UsCoreSmokingstatus_ReferenceRange::set_allocated_age(::google::fhir::stu3::proto::Range* age) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(age_);
  }
  if (age) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      age = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, age, submessage_arena);
    }
    
  } else {
    
  }
  age_ = age;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.age)
}

// .google.fhir.stu3.proto.String text = 9;
inline bool UsCoreSmokingstatus_ReferenceRange::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreSmokingstatus_ReferenceRange::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreSmokingstatus_ReferenceRange::text() const {
  const ::google::fhir::stu3::proto::String* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreSmokingstatus_ReferenceRange::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.text)
  
  ::google::fhir::stu3::proto::String* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreSmokingstatus_ReferenceRange::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.text)
  return text_;
}
inline void UsCoreSmokingstatus_ReferenceRange::set_allocated_text(::google::fhir::stu3::proto::String* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange.text)
}

// -------------------------------------------------------------------

// UsCoreSmokingstatus_Related

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreSmokingstatus_Related::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreSmokingstatus_Related::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreSmokingstatus_Related::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreSmokingstatus_Related::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreSmokingstatus_Related::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.id)
  return id_;
}
inline void UsCoreSmokingstatus_Related::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreSmokingstatus_Related::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreSmokingstatus_Related::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreSmokingstatus_Related::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreSmokingstatus_Related::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreSmokingstatus_Related::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreSmokingstatus_Related::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreSmokingstatus_Related::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreSmokingstatus_Related::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreSmokingstatus_Related::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreSmokingstatus_Related::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreSmokingstatus_Related::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreSmokingstatus_Related::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
inline bool UsCoreSmokingstatus_Related::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline const ::google::fhir::stu3::proto::ObservationRelationshipTypeCode& UsCoreSmokingstatus_Related::_internal_type() const {
  return *type_;
}
inline const ::google::fhir::stu3::proto::ObservationRelationshipTypeCode& UsCoreSmokingstatus_Related::type() const {
  const ::google::fhir::stu3::proto::ObservationRelationshipTypeCode* p = type_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.type)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ObservationRelationshipTypeCode*>(
      &::google::fhir::stu3::proto::_ObservationRelationshipTypeCode_default_instance_);
}
inline ::google::fhir::stu3::proto::ObservationRelationshipTypeCode* UsCoreSmokingstatus_Related::release_type() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.type)
  
  ::google::fhir::stu3::proto::ObservationRelationshipTypeCode* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ObservationRelationshipTypeCode* UsCoreSmokingstatus_Related::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ObservationRelationshipTypeCode>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.type)
  return type_;
}
inline void UsCoreSmokingstatus_Related::set_allocated_type(::google::fhir::stu3::proto::ObservationRelationshipTypeCode* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(type_);
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.type)
}

// .google.fhir.stu3.proto.Reference target = 5 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Observation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Sequence"];
inline bool UsCoreSmokingstatus_Related::has_target() const {
  return this != internal_default_instance() && target_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreSmokingstatus_Related::_internal_target() const {
  return *target_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreSmokingstatus_Related::target() const {
  const ::google::fhir::stu3::proto::Reference* p = target_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.target)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreSmokingstatus_Related::release_target() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.target)
  
  ::google::fhir::stu3::proto::Reference* temp = target_;
  target_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreSmokingstatus_Related::mutable_target() {
  
  if (target_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    target_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.target)
  return target_;
}
inline void UsCoreSmokingstatus_Related::set_allocated_target(::google::fhir::stu3::proto::Reference* target) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_);
  }
  if (target) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target, submessage_arena);
    }
    
  } else {
    
  }
  target_ = target;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Related.target)
}

// -------------------------------------------------------------------

// UsCoreSmokingstatus_Component_Value

// .google.fhir.stu3.proto.Quantity quantity = 1;
inline bool UsCoreSmokingstatus_Component_Value::has_quantity() const {
  return value_case() == kQuantity;
}
inline void UsCoreSmokingstatus_Component_Value::set_has_quantity() {
  _oneof_case_[0] = kQuantity;
}
inline const ::google::fhir::stu3::proto::Quantity& UsCoreSmokingstatus_Component_Value::_internal_quantity() const {
  return *value_.quantity_;
}
inline ::google::fhir::stu3::proto::Quantity* UsCoreSmokingstatus_Component_Value::release_quantity() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.quantity)
  if (has_quantity()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Quantity* temp = value_.quantity_;
    value_.quantity_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Quantity& UsCoreSmokingstatus_Component_Value::quantity() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.quantity)
  return has_quantity()
      ? *value_.quantity_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Quantity*>(&::google::fhir::stu3::proto::_Quantity_default_instance_);
}
inline ::google::fhir::stu3::proto::Quantity* UsCoreSmokingstatus_Component_Value::mutable_quantity() {
  if (!has_quantity()) {
    clear_value();
    set_has_quantity();
    value_.quantity_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Quantity >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.quantity)
  return value_.quantity_;
}

// .google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
inline bool UsCoreSmokingstatus_Component_Value::has_codeable_concept() const {
  return value_case() == kCodeableConcept;
}
inline void UsCoreSmokingstatus_Component_Value::set_has_codeable_concept() {
  _oneof_case_[0] = kCodeableConcept;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus_Component_Value::_internal_codeable_concept() const {
  return *value_.codeable_concept_;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus_Component_Value::release_codeable_concept() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.codeable_concept)
  if (has_codeable_concept()) {
    clear_has_value();
      ::google::fhir::stu3::proto::CodeableConcept* temp = value_.codeable_concept_;
    value_.codeable_concept_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus_Component_Value::codeable_concept() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.codeable_concept)
  return has_codeable_concept()
      ? *value_.codeable_concept_
      : *reinterpret_cast< ::google::fhir::stu3::proto::CodeableConcept*>(&::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus_Component_Value::mutable_codeable_concept() {
  if (!has_codeable_concept()) {
    clear_value();
    set_has_codeable_concept();
    value_.codeable_concept_ = CreateMaybeMessage< ::google::fhir::stu3::proto::CodeableConcept >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.codeable_concept)
  return value_.codeable_concept_;
}

// .google.fhir.stu3.proto.String string_value = 3[json_name = "string"];
inline bool UsCoreSmokingstatus_Component_Value::has_string_value() const {
  return value_case() == kStringValue;
}
inline void UsCoreSmokingstatus_Component_Value::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline const ::google::fhir::stu3::proto::String& UsCoreSmokingstatus_Component_Value::_internal_string_value() const {
  return *value_.string_value_;
}
inline ::google::fhir::stu3::proto::String* UsCoreSmokingstatus_Component_Value::release_string_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.string_value)
  if (has_string_value()) {
    clear_has_value();
      ::google::fhir::stu3::proto::String* temp = value_.string_value_;
    value_.string_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::String& UsCoreSmokingstatus_Component_Value::string_value() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.string_value)
  return has_string_value()
      ? *value_.string_value_
      : *reinterpret_cast< ::google::fhir::stu3::proto::String*>(&::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreSmokingstatus_Component_Value::mutable_string_value() {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_ = CreateMaybeMessage< ::google::fhir::stu3::proto::String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.string_value)
  return value_.string_value_;
}

// .google.fhir.stu3.proto.Range range = 4;
inline bool UsCoreSmokingstatus_Component_Value::has_range() const {
  return value_case() == kRange;
}
inline void UsCoreSmokingstatus_Component_Value::set_has_range() {
  _oneof_case_[0] = kRange;
}
inline const ::google::fhir::stu3::proto::Range& UsCoreSmokingstatus_Component_Value::_internal_range() const {
  return *value_.range_;
}
inline ::google::fhir::stu3::proto::Range* UsCoreSmokingstatus_Component_Value::release_range() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.range)
  if (has_range()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Range* temp = value_.range_;
    value_.range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Range& UsCoreSmokingstatus_Component_Value::range() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.range)
  return has_range()
      ? *value_.range_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Range*>(&::google::fhir::stu3::proto::_Range_default_instance_);
}
inline ::google::fhir::stu3::proto::Range* UsCoreSmokingstatus_Component_Value::mutable_range() {
  if (!has_range()) {
    clear_value();
    set_has_range();
    value_.range_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Range >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.range)
  return value_.range_;
}

// .google.fhir.stu3.proto.Ratio ratio = 5;
inline bool UsCoreSmokingstatus_Component_Value::has_ratio() const {
  return value_case() == kRatio;
}
inline void UsCoreSmokingstatus_Component_Value::set_has_ratio() {
  _oneof_case_[0] = kRatio;
}
inline const ::google::fhir::stu3::proto::Ratio& UsCoreSmokingstatus_Component_Value::_internal_ratio() const {
  return *value_.ratio_;
}
inline ::google::fhir::stu3::proto::Ratio* UsCoreSmokingstatus_Component_Value::release_ratio() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.ratio)
  if (has_ratio()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Ratio* temp = value_.ratio_;
    value_.ratio_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Ratio& UsCoreSmokingstatus_Component_Value::ratio() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.ratio)
  return has_ratio()
      ? *value_.ratio_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Ratio*>(&::google::fhir::stu3::proto::_Ratio_default_instance_);
}
inline ::google::fhir::stu3::proto::Ratio* UsCoreSmokingstatus_Component_Value::mutable_ratio() {
  if (!has_ratio()) {
    clear_value();
    set_has_ratio();
    value_.ratio_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Ratio >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.ratio)
  return value_.ratio_;
}

// .google.fhir.stu3.proto.SampledData sampled_data = 6;
inline bool UsCoreSmokingstatus_Component_Value::has_sampled_data() const {
  return value_case() == kSampledData;
}
inline void UsCoreSmokingstatus_Component_Value::set_has_sampled_data() {
  _oneof_case_[0] = kSampledData;
}
inline const ::google::fhir::stu3::proto::SampledData& UsCoreSmokingstatus_Component_Value::_internal_sampled_data() const {
  return *value_.sampled_data_;
}
inline ::google::fhir::stu3::proto::SampledData* UsCoreSmokingstatus_Component_Value::release_sampled_data() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.sampled_data)
  if (has_sampled_data()) {
    clear_has_value();
      ::google::fhir::stu3::proto::SampledData* temp = value_.sampled_data_;
    value_.sampled_data_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::SampledData& UsCoreSmokingstatus_Component_Value::sampled_data() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.sampled_data)
  return has_sampled_data()
      ? *value_.sampled_data_
      : *reinterpret_cast< ::google::fhir::stu3::proto::SampledData*>(&::google::fhir::stu3::proto::_SampledData_default_instance_);
}
inline ::google::fhir::stu3::proto::SampledData* UsCoreSmokingstatus_Component_Value::mutable_sampled_data() {
  if (!has_sampled_data()) {
    clear_value();
    set_has_sampled_data();
    value_.sampled_data_ = CreateMaybeMessage< ::google::fhir::stu3::proto::SampledData >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.sampled_data)
  return value_.sampled_data_;
}

// .google.fhir.stu3.proto.Attachment attachment = 7;
inline bool UsCoreSmokingstatus_Component_Value::has_attachment() const {
  return value_case() == kAttachment;
}
inline void UsCoreSmokingstatus_Component_Value::set_has_attachment() {
  _oneof_case_[0] = kAttachment;
}
inline const ::google::fhir::stu3::proto::Attachment& UsCoreSmokingstatus_Component_Value::_internal_attachment() const {
  return *value_.attachment_;
}
inline ::google::fhir::stu3::proto::Attachment* UsCoreSmokingstatus_Component_Value::release_attachment() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.attachment)
  if (has_attachment()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Attachment* temp = value_.attachment_;
    value_.attachment_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Attachment& UsCoreSmokingstatus_Component_Value::attachment() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.attachment)
  return has_attachment()
      ? *value_.attachment_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Attachment*>(&::google::fhir::stu3::proto::_Attachment_default_instance_);
}
inline ::google::fhir::stu3::proto::Attachment* UsCoreSmokingstatus_Component_Value::mutable_attachment() {
  if (!has_attachment()) {
    clear_value();
    set_has_attachment();
    value_.attachment_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Attachment >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.attachment)
  return value_.attachment_;
}

// .google.fhir.stu3.proto.Time time = 8;
inline bool UsCoreSmokingstatus_Component_Value::has_time() const {
  return value_case() == kTime;
}
inline void UsCoreSmokingstatus_Component_Value::set_has_time() {
  _oneof_case_[0] = kTime;
}
inline const ::google::fhir::stu3::proto::Time& UsCoreSmokingstatus_Component_Value::_internal_time() const {
  return *value_.time_;
}
inline ::google::fhir::stu3::proto::Time* UsCoreSmokingstatus_Component_Value::release_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.time)
  if (has_time()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Time* temp = value_.time_;
    value_.time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Time& UsCoreSmokingstatus_Component_Value::time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.time)
  return has_time()
      ? *value_.time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Time*>(&::google::fhir::stu3::proto::_Time_default_instance_);
}
inline ::google::fhir::stu3::proto::Time* UsCoreSmokingstatus_Component_Value::mutable_time() {
  if (!has_time()) {
    clear_value();
    set_has_time();
    value_.time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Time >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.time)
  return value_.time_;
}

// .google.fhir.stu3.proto.DateTime date_time = 9;
inline bool UsCoreSmokingstatus_Component_Value::has_date_time() const {
  return value_case() == kDateTime;
}
inline void UsCoreSmokingstatus_Component_Value::set_has_date_time() {
  _oneof_case_[0] = kDateTime;
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreSmokingstatus_Component_Value::_internal_date_time() const {
  return *value_.date_time_;
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreSmokingstatus_Component_Value::release_date_time() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.date_time)
  if (has_date_time()) {
    clear_has_value();
      ::google::fhir::stu3::proto::DateTime* temp = value_.date_time_;
    value_.date_time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::DateTime& UsCoreSmokingstatus_Component_Value::date_time() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.date_time)
  return has_date_time()
      ? *value_.date_time_
      : *reinterpret_cast< ::google::fhir::stu3::proto::DateTime*>(&::google::fhir::stu3::proto::_DateTime_default_instance_);
}
inline ::google::fhir::stu3::proto::DateTime* UsCoreSmokingstatus_Component_Value::mutable_date_time() {
  if (!has_date_time()) {
    clear_value();
    set_has_date_time();
    value_.date_time_ = CreateMaybeMessage< ::google::fhir::stu3::proto::DateTime >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.date_time)
  return value_.date_time_;
}

// .google.fhir.stu3.proto.Period period = 10;
inline bool UsCoreSmokingstatus_Component_Value::has_period() const {
  return value_case() == kPeriod;
}
inline void UsCoreSmokingstatus_Component_Value::set_has_period() {
  _oneof_case_[0] = kPeriod;
}
inline const ::google::fhir::stu3::proto::Period& UsCoreSmokingstatus_Component_Value::_internal_period() const {
  return *value_.period_;
}
inline ::google::fhir::stu3::proto::Period* UsCoreSmokingstatus_Component_Value::release_period() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.period)
  if (has_period()) {
    clear_has_value();
      ::google::fhir::stu3::proto::Period* temp = value_.period_;
    value_.period_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::fhir::stu3::proto::Period& UsCoreSmokingstatus_Component_Value::period() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.period)
  return has_period()
      ? *value_.period_
      : *reinterpret_cast< ::google::fhir::stu3::proto::Period*>(&::google::fhir::stu3::proto::_Period_default_instance_);
}
inline ::google::fhir::stu3::proto::Period* UsCoreSmokingstatus_Component_Value::mutable_period() {
  if (!has_period()) {
    clear_value();
    set_has_period();
    value_.period_ = CreateMaybeMessage< ::google::fhir::stu3::proto::Period >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.period)
  return value_.period_;
}

inline bool UsCoreSmokingstatus_Component_Value::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void UsCoreSmokingstatus_Component_Value::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline UsCoreSmokingstatus_Component_Value::ValueCase UsCoreSmokingstatus_Component_Value::value_case() const {
  return UsCoreSmokingstatus_Component_Value::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UsCoreSmokingstatus_Component

// .google.fhir.stu3.proto.String id = 1;
inline bool UsCoreSmokingstatus_Component::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreSmokingstatus_Component::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreSmokingstatus_Component::id() const {
  const ::google::fhir::stu3::proto::String* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreSmokingstatus_Component::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.id)
  
  ::google::fhir::stu3::proto::String* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreSmokingstatus_Component::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.id)
  return id_;
}
inline void UsCoreSmokingstatus_Component::set_allocated_id(::google::fhir::stu3::proto::String* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.id)
}

// repeated .google.fhir.stu3.proto.Extension extension = 2;
inline int UsCoreSmokingstatus_Component::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreSmokingstatus_Component::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreSmokingstatus_Component::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreSmokingstatus_Component::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreSmokingstatus_Component::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreSmokingstatus_Component::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 3;
inline int UsCoreSmokingstatus_Component::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreSmokingstatus_Component::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreSmokingstatus_Component::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreSmokingstatus_Component::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreSmokingstatus_Component::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreSmokingstatus_Component::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.modifier_extension)
  return modifier_extension_;
}

// .google.fhir.stu3.proto.CodeableConcept code = 4 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreSmokingstatus_Component::has_code() const {
  return this != internal_default_instance() && code_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus_Component::_internal_code() const {
  return *code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus_Component::code() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = code_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.code)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus_Component::release_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.code)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = code_;
  code_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus_Component::mutable_code() {
  
  if (code_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    code_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.code)
  return code_;
}
inline void UsCoreSmokingstatus_Component::set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(code_);
  }
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    
  } else {
    
  }
  code_ = code;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.code)
}

// .google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value value = 5 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreSmokingstatus_Component::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline void UsCoreSmokingstatus_Component::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value& UsCoreSmokingstatus_Component::_internal_value() const {
  return *value_;
}
inline const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value& UsCoreSmokingstatus_Component::value() const {
  const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value* p = value_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value*>(
      &::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Component_Value_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value* UsCoreSmokingstatus_Component::release_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.value)
  
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value* UsCoreSmokingstatus_Component::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.value)
  return value_;
}
inline void UsCoreSmokingstatus_Component::set_allocated_value(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component_Value* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete value_;
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.value)
}

// .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
inline bool UsCoreSmokingstatus_Component::has_data_absent_reason() const {
  return this != internal_default_instance() && data_absent_reason_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus_Component::_internal_data_absent_reason() const {
  return *data_absent_reason_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus_Component::data_absent_reason() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = data_absent_reason_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.data_absent_reason)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus_Component::release_data_absent_reason() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.data_absent_reason)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = data_absent_reason_;
  data_absent_reason_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus_Component::mutable_data_absent_reason() {
  
  if (data_absent_reason_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    data_absent_reason_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.data_absent_reason)
  return data_absent_reason_;
}
inline void UsCoreSmokingstatus_Component::set_allocated_data_absent_reason(::google::fhir::stu3::proto::CodeableConcept* data_absent_reason) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_absent_reason_);
  }
  if (data_absent_reason) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data_absent_reason = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data_absent_reason, submessage_arena);
    }
    
  } else {
    
  }
  data_absent_reason_ = data_absent_reason;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.data_absent_reason)
}

// .google.fhir.stu3.proto.CodeableConcept interpretation = 7;
inline bool UsCoreSmokingstatus_Component::has_interpretation() const {
  return this != internal_default_instance() && interpretation_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus_Component::_internal_interpretation() const {
  return *interpretation_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus_Component::interpretation() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = interpretation_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.interpretation)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus_Component::release_interpretation() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.interpretation)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = interpretation_;
  interpretation_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus_Component::mutable_interpretation() {
  
  if (interpretation_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    interpretation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.interpretation)
  return interpretation_;
}
inline void UsCoreSmokingstatus_Component::set_allocated_interpretation(::google::fhir::stu3::proto::CodeableConcept* interpretation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interpretation_);
  }
  if (interpretation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interpretation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interpretation, submessage_arena);
    }
    
  } else {
    
  }
  interpretation_ = interpretation;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.interpretation)
}

// repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange reference_range = 8;
inline int UsCoreSmokingstatus_Component::reference_range_size() const {
  return reference_range_.size();
}
inline void UsCoreSmokingstatus_Component::clear_reference_range() {
  reference_range_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange* UsCoreSmokingstatus_Component::mutable_reference_range(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.reference_range)
  return reference_range_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange >*
UsCoreSmokingstatus_Component::mutable_reference_range() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.reference_range)
  return &reference_range_;
}
inline const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange& UsCoreSmokingstatus_Component::reference_range(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.reference_range)
  return reference_range_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange* UsCoreSmokingstatus_Component::add_reference_range() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.reference_range)
  return reference_range_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange >&
UsCoreSmokingstatus_Component::reference_range() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.reference_range)
  return reference_range_;
}

// -------------------------------------------------------------------

// UsCoreSmokingstatus

// .google.fhir.stu3.proto.Id id = 1;
inline bool UsCoreSmokingstatus::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreSmokingstatus::_internal_id() const {
  return *id_;
}
inline const ::google::fhir::stu3::proto::Id& UsCoreSmokingstatus::id() const {
  const ::google::fhir::stu3::proto::Id* p = id_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.id)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Id*>(
      &::google::fhir::stu3::proto::_Id_default_instance_);
}
inline ::google::fhir::stu3::proto::Id* UsCoreSmokingstatus::release_id() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.id)
  
  ::google::fhir::stu3::proto::Id* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Id* UsCoreSmokingstatus::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Id>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.id)
  return id_;
}
inline void UsCoreSmokingstatus::set_allocated_id(::google::fhir::stu3::proto::Id* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.id)
}

// .google.fhir.stu3.proto.Meta meta = 2;
inline bool UsCoreSmokingstatus::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreSmokingstatus::_internal_meta() const {
  return *meta_;
}
inline const ::google::fhir::stu3::proto::Meta& UsCoreSmokingstatus::meta() const {
  const ::google::fhir::stu3::proto::Meta* p = meta_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Meta*>(
      &::google::fhir::stu3::proto::_Meta_default_instance_);
}
inline ::google::fhir::stu3::proto::Meta* UsCoreSmokingstatus::release_meta() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.meta)
  
  ::google::fhir::stu3::proto::Meta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Meta* UsCoreSmokingstatus::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Meta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.meta)
  return meta_;
}
inline void UsCoreSmokingstatus::set_allocated_meta(::google::fhir::stu3::proto::Meta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.meta)
}

// .google.fhir.stu3.proto.Uri implicit_rules = 3;
inline bool UsCoreSmokingstatus::has_implicit_rules() const {
  return this != internal_default_instance() && implicit_rules_ != NULL;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreSmokingstatus::_internal_implicit_rules() const {
  return *implicit_rules_;
}
inline const ::google::fhir::stu3::proto::Uri& UsCoreSmokingstatus::implicit_rules() const {
  const ::google::fhir::stu3::proto::Uri* p = implicit_rules_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.implicit_rules)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Uri*>(
      &::google::fhir::stu3::proto::_Uri_default_instance_);
}
inline ::google::fhir::stu3::proto::Uri* UsCoreSmokingstatus::release_implicit_rules() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.implicit_rules)
  
  ::google::fhir::stu3::proto::Uri* temp = implicit_rules_;
  implicit_rules_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Uri* UsCoreSmokingstatus::mutable_implicit_rules() {
  
  if (implicit_rules_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Uri>(GetArenaNoVirtual());
    implicit_rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.implicit_rules)
  return implicit_rules_;
}
inline void UsCoreSmokingstatus::set_allocated_implicit_rules(::google::fhir::stu3::proto::Uri* implicit_rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(implicit_rules_);
  }
  if (implicit_rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      implicit_rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, implicit_rules, submessage_arena);
    }
    
  } else {
    
  }
  implicit_rules_ = implicit_rules;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.implicit_rules)
}

// .google.fhir.stu3.proto.LanguageCode language = 4;
inline bool UsCoreSmokingstatus::has_language() const {
  return this != internal_default_instance() && language_ != NULL;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreSmokingstatus::_internal_language() const {
  return *language_;
}
inline const ::google::fhir::stu3::proto::LanguageCode& UsCoreSmokingstatus::language() const {
  const ::google::fhir::stu3::proto::LanguageCode* p = language_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.language)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::LanguageCode*>(
      &::google::fhir::stu3::proto::_LanguageCode_default_instance_);
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreSmokingstatus::release_language() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.language)
  
  ::google::fhir::stu3::proto::LanguageCode* temp = language_;
  language_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::LanguageCode* UsCoreSmokingstatus::mutable_language() {
  
  if (language_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::LanguageCode>(GetArenaNoVirtual());
    language_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.language)
  return language_;
}
inline void UsCoreSmokingstatus::set_allocated_language(::google::fhir::stu3::proto::LanguageCode* language) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(language_);
  }
  if (language) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      language = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, language, submessage_arena);
    }
    
  } else {
    
  }
  language_ = language;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.language)
}

// .google.fhir.stu3.proto.Narrative text = 5;
inline bool UsCoreSmokingstatus::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreSmokingstatus::_internal_text() const {
  return *text_;
}
inline const ::google::fhir::stu3::proto::Narrative& UsCoreSmokingstatus::text() const {
  const ::google::fhir::stu3::proto::Narrative* p = text_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.text)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Narrative*>(
      &::google::fhir::stu3::proto::_Narrative_default_instance_);
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreSmokingstatus::release_text() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.text)
  
  ::google::fhir::stu3::proto::Narrative* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Narrative* UsCoreSmokingstatus::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Narrative>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.text)
  return text_;
}
inline void UsCoreSmokingstatus::set_allocated_text(::google::fhir::stu3::proto::Narrative* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.text)
}

// repeated .google.fhir.stu3.proto.ContainedResource contained = 6;
inline int UsCoreSmokingstatus::contained_size() const {
  return contained_.size();
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreSmokingstatus::mutable_contained(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.contained)
  return contained_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >*
UsCoreSmokingstatus::mutable_contained() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.contained)
  return &contained_;
}
inline const ::google::fhir::stu3::proto::ContainedResource& UsCoreSmokingstatus::contained(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.contained)
  return contained_.Get(index);
}
inline ::google::fhir::stu3::proto::ContainedResource* UsCoreSmokingstatus::add_contained() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreSmokingstatus.contained)
  return contained_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ContainedResource >&
UsCoreSmokingstatus::contained() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.contained)
  return contained_;
}

// repeated .google.fhir.stu3.proto.Extension extension = 7;
inline int UsCoreSmokingstatus::extension_size() const {
  return extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreSmokingstatus::mutable_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.extension)
  return extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreSmokingstatus::mutable_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.extension)
  return &extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreSmokingstatus::extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.extension)
  return extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreSmokingstatus::add_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreSmokingstatus.extension)
  return extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreSmokingstatus::extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.extension)
  return extension_;
}

// repeated .google.fhir.stu3.proto.Extension modifier_extension = 8;
inline int UsCoreSmokingstatus::modifier_extension_size() const {
  return modifier_extension_.size();
}
inline ::google::fhir::stu3::proto::Extension* UsCoreSmokingstatus::mutable_modifier_extension(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.modifier_extension)
  return modifier_extension_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >*
UsCoreSmokingstatus::mutable_modifier_extension() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.modifier_extension)
  return &modifier_extension_;
}
inline const ::google::fhir::stu3::proto::Extension& UsCoreSmokingstatus::modifier_extension(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.modifier_extension)
  return modifier_extension_.Get(index);
}
inline ::google::fhir::stu3::proto::Extension* UsCoreSmokingstatus::add_modifier_extension() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreSmokingstatus.modifier_extension)
  return modifier_extension_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Extension >&
UsCoreSmokingstatus::modifier_extension() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.modifier_extension)
  return modifier_extension_;
}

// repeated .google.fhir.stu3.proto.Identifier identifier = 9;
inline int UsCoreSmokingstatus::identifier_size() const {
  return identifier_.size();
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreSmokingstatus::mutable_identifier(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.identifier)
  return identifier_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >*
UsCoreSmokingstatus::mutable_identifier() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.identifier)
  return &identifier_;
}
inline const ::google::fhir::stu3::proto::Identifier& UsCoreSmokingstatus::identifier(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.identifier)
  return identifier_.Get(index);
}
inline ::google::fhir::stu3::proto::Identifier* UsCoreSmokingstatus::add_identifier() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreSmokingstatus.identifier)
  return identifier_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Identifier >&
UsCoreSmokingstatus::identifier() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.identifier)
  return identifier_;
}

// repeated .google.fhir.stu3.proto.Reference based_on = 10 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/CarePlan", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/MedicationRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/NutritionOrder", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ProcedureRequest", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/ReferralRequest"];
inline int UsCoreSmokingstatus::based_on_size() const {
  return based_on_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreSmokingstatus::mutable_based_on(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.based_on)
  return based_on_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreSmokingstatus::mutable_based_on() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.based_on)
  return &based_on_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreSmokingstatus::based_on(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.based_on)
  return based_on_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreSmokingstatus::add_based_on() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreSmokingstatus.based_on)
  return based_on_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreSmokingstatus::based_on() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.based_on)
  return based_on_;
}

// .google.fhir.stu3.proto.ObservationStatusCode status = 11 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreSmokingstatus::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::fhir::stu3::proto::ObservationStatusCode& UsCoreSmokingstatus::_internal_status() const {
  return *status_;
}
inline const ::google::fhir::stu3::proto::ObservationStatusCode& UsCoreSmokingstatus::status() const {
  const ::google::fhir::stu3::proto::ObservationStatusCode* p = status_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::ObservationStatusCode*>(
      &::google::fhir::stu3::proto::_ObservationStatusCode_default_instance_);
}
inline ::google::fhir::stu3::proto::ObservationStatusCode* UsCoreSmokingstatus::release_status() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.status)
  
  ::google::fhir::stu3::proto::ObservationStatusCode* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::ObservationStatusCode* UsCoreSmokingstatus::mutable_status() {
  
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::ObservationStatusCode>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.status)
  return status_;
}
inline void UsCoreSmokingstatus::set_allocated_status(::google::fhir::stu3::proto::ObservationStatusCode* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.status)
}

// repeated .google.fhir.stu3.proto.CodeableConcept category = 12;
inline int UsCoreSmokingstatus::category_size() const {
  return category_.size();
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus::mutable_category(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.category)
  return category_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >*
UsCoreSmokingstatus::mutable_category() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.category)
  return &category_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus::category(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.category)
  return category_.Get(index);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus::add_category() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreSmokingstatus.category)
  return category_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::CodeableConcept >&
UsCoreSmokingstatus::category() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.category)
  return category_;
}

// .google.fhir.stu3.proto.CodeableConcept code = 13 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreSmokingstatus::has_code() const {
  return this != internal_default_instance() && code_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus::_internal_code() const {
  return *code_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus::code() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = code_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.code)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus::release_code() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.code)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = code_;
  code_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus::mutable_code() {
  
  if (code_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    code_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.code)
  return code_;
}
inline void UsCoreSmokingstatus::set_allocated_code(::google::fhir::stu3::proto::CodeableConcept* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(code_);
  }
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    
  } else {
    
  }
  code_ = code;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.code)
}

// .google.fhir.stu3.proto.Reference subject = 14 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient"];
inline bool UsCoreSmokingstatus::has_subject() const {
  return this != internal_default_instance() && subject_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreSmokingstatus::_internal_subject() const {
  return *subject_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreSmokingstatus::subject() const {
  const ::google::fhir::stu3::proto::Reference* p = subject_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.subject)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreSmokingstatus::release_subject() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.subject)
  
  ::google::fhir::stu3::proto::Reference* temp = subject_;
  subject_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreSmokingstatus::mutable_subject() {
  
  if (subject_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    subject_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.subject)
  return subject_;
}
inline void UsCoreSmokingstatus::set_allocated_subject(::google::fhir::stu3::proto::Reference* subject) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(subject_);
  }
  if (subject) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      subject = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, subject, submessage_arena);
    }
    
  } else {
    
  }
  subject_ = subject;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.subject)
}

// .google.fhir.stu3.proto.Reference context = 15 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Encounter", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"];
inline bool UsCoreSmokingstatus::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreSmokingstatus::_internal_context() const {
  return *context_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreSmokingstatus::context() const {
  const ::google::fhir::stu3::proto::Reference* p = context_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.context)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreSmokingstatus::release_context() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.context)
  
  ::google::fhir::stu3::proto::Reference* temp = context_;
  context_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreSmokingstatus::mutable_context() {
  
  if (context_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    context_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.context)
  return context_;
}
inline void UsCoreSmokingstatus::set_allocated_context(::google::fhir::stu3::proto::Reference* context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(context_);
  }
  if (context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.context)
}

// .google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective effective = 16 [(.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreSmokingstatus::has_effective() const {
  return this != internal_default_instance() && effective_ != NULL;
}
inline void UsCoreSmokingstatus::clear_effective() {
  if (GetArenaNoVirtual() == NULL && effective_ != NULL) {
    delete effective_;
  }
  effective_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective& UsCoreSmokingstatus::_internal_effective() const {
  return *effective_;
}
inline const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective& UsCoreSmokingstatus::effective() const {
  const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective* p = effective_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.effective)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective*>(
      &::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Effective_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective* UsCoreSmokingstatus::release_effective() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.effective)
  
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective* temp = effective_;
  effective_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective* UsCoreSmokingstatus::mutable_effective() {
  
  if (effective_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective>(GetArenaNoVirtual());
    effective_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.effective)
  return effective_;
}
inline void UsCoreSmokingstatus::set_allocated_effective(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Effective* effective) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete effective_;
  }
  if (effective) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      effective = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, effective, submessage_arena);
    }
    
  } else {
    
  }
  effective_ = effective;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.effective)
}

// .google.fhir.stu3.proto.Instant issued = 17 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR];
inline bool UsCoreSmokingstatus::has_issued() const {
  return this != internal_default_instance() && issued_ != NULL;
}
inline const ::google::fhir::stu3::proto::Instant& UsCoreSmokingstatus::_internal_issued() const {
  return *issued_;
}
inline const ::google::fhir::stu3::proto::Instant& UsCoreSmokingstatus::issued() const {
  const ::google::fhir::stu3::proto::Instant* p = issued_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.issued)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Instant*>(
      &::google::fhir::stu3::proto::_Instant_default_instance_);
}
inline ::google::fhir::stu3::proto::Instant* UsCoreSmokingstatus::release_issued() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.issued)
  
  ::google::fhir::stu3::proto::Instant* temp = issued_;
  issued_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Instant* UsCoreSmokingstatus::mutable_issued() {
  
  if (issued_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Instant>(GetArenaNoVirtual());
    issued_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.issued)
  return issued_;
}
inline void UsCoreSmokingstatus::set_allocated_issued(::google::fhir::stu3::proto::Instant* issued) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(issued_);
  }
  if (issued) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      issued = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, issued, submessage_arena);
    }
    
  } else {
    
  }
  issued_ = issued;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.issued)
}

// repeated .google.fhir.stu3.proto.Reference performer = 18 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Practitioner", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Organization", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Patient", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/RelatedPerson"];
inline int UsCoreSmokingstatus::performer_size() const {
  return performer_.size();
}
inline ::google::fhir::stu3::proto::Reference* UsCoreSmokingstatus::mutable_performer(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.performer)
  return performer_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >*
UsCoreSmokingstatus::mutable_performer() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.performer)
  return &performer_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreSmokingstatus::performer(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.performer)
  return performer_.Get(index);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreSmokingstatus::add_performer() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreSmokingstatus.performer)
  return performer_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::Reference >&
UsCoreSmokingstatus::performer() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.performer)
  return performer_;
}

// .google.fhir.stu3.uscore.UsCoreSmokingstatus.Value value = 19 [(.google.fhir.stu3.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.stu3.proto.is_choice_type) = true];
inline bool UsCoreSmokingstatus::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline void UsCoreSmokingstatus::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
inline const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value& UsCoreSmokingstatus::_internal_value() const {
  return *value_;
}
inline const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value& UsCoreSmokingstatus::value() const {
  const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value* p = value_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value*>(
      &::google::fhir::stu3::uscore::_UsCoreSmokingstatus_Value_default_instance_);
}
inline ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value* UsCoreSmokingstatus::release_value() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.value)
  
  ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value* UsCoreSmokingstatus::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.value)
  return value_;
}
inline void UsCoreSmokingstatus::set_allocated_value(::google::fhir::stu3::uscore::UsCoreSmokingstatus_Value* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete value_;
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.value)
}

// .google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
inline bool UsCoreSmokingstatus::has_data_absent_reason() const {
  return this != internal_default_instance() && data_absent_reason_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus::_internal_data_absent_reason() const {
  return *data_absent_reason_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus::data_absent_reason() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = data_absent_reason_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.data_absent_reason)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus::release_data_absent_reason() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.data_absent_reason)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = data_absent_reason_;
  data_absent_reason_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus::mutable_data_absent_reason() {
  
  if (data_absent_reason_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    data_absent_reason_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.data_absent_reason)
  return data_absent_reason_;
}
inline void UsCoreSmokingstatus::set_allocated_data_absent_reason(::google::fhir::stu3::proto::CodeableConcept* data_absent_reason) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_absent_reason_);
  }
  if (data_absent_reason) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data_absent_reason = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data_absent_reason, submessage_arena);
    }
    
  } else {
    
  }
  data_absent_reason_ = data_absent_reason;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.data_absent_reason)
}

// .google.fhir.stu3.proto.CodeableConcept interpretation = 21;
inline bool UsCoreSmokingstatus::has_interpretation() const {
  return this != internal_default_instance() && interpretation_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus::_internal_interpretation() const {
  return *interpretation_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus::interpretation() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = interpretation_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.interpretation)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus::release_interpretation() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.interpretation)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = interpretation_;
  interpretation_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus::mutable_interpretation() {
  
  if (interpretation_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    interpretation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.interpretation)
  return interpretation_;
}
inline void UsCoreSmokingstatus::set_allocated_interpretation(::google::fhir::stu3::proto::CodeableConcept* interpretation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interpretation_);
  }
  if (interpretation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interpretation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interpretation, submessage_arena);
    }
    
  } else {
    
  }
  interpretation_ = interpretation;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.interpretation)
}

// .google.fhir.stu3.proto.String comment = 22;
inline bool UsCoreSmokingstatus::has_comment() const {
  return this != internal_default_instance() && comment_ != NULL;
}
inline const ::google::fhir::stu3::proto::String& UsCoreSmokingstatus::_internal_comment() const {
  return *comment_;
}
inline const ::google::fhir::stu3::proto::String& UsCoreSmokingstatus::comment() const {
  const ::google::fhir::stu3::proto::String* p = comment_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.comment)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::String*>(
      &::google::fhir::stu3::proto::_String_default_instance_);
}
inline ::google::fhir::stu3::proto::String* UsCoreSmokingstatus::release_comment() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.comment)
  
  ::google::fhir::stu3::proto::String* temp = comment_;
  comment_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::String* UsCoreSmokingstatus::mutable_comment() {
  
  if (comment_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::String>(GetArenaNoVirtual());
    comment_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.comment)
  return comment_;
}
inline void UsCoreSmokingstatus::set_allocated_comment(::google::fhir::stu3::proto::String* comment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(comment_);
  }
  if (comment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comment, submessage_arena);
    }
    
  } else {
    
  }
  comment_ = comment;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.comment)
}

// .google.fhir.stu3.proto.CodeableConcept body_site = 23;
inline bool UsCoreSmokingstatus::has_body_site() const {
  return this != internal_default_instance() && body_site_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus::_internal_body_site() const {
  return *body_site_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus::body_site() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = body_site_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.body_site)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus::release_body_site() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.body_site)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = body_site_;
  body_site_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus::mutable_body_site() {
  
  if (body_site_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    body_site_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.body_site)
  return body_site_;
}
inline void UsCoreSmokingstatus::set_allocated_body_site(::google::fhir::stu3::proto::CodeableConcept* body_site) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(body_site_);
  }
  if (body_site) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      body_site = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, body_site, submessage_arena);
    }
    
  } else {
    
  }
  body_site_ = body_site;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.body_site)
}

// .google.fhir.stu3.proto.CodeableConcept method = 24;
inline bool UsCoreSmokingstatus::has_method() const {
  return this != internal_default_instance() && method_ != NULL;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus::_internal_method() const {
  return *method_;
}
inline const ::google::fhir::stu3::proto::CodeableConcept& UsCoreSmokingstatus::method() const {
  const ::google::fhir::stu3::proto::CodeableConcept* p = method_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.method)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::CodeableConcept*>(
      &::google::fhir::stu3::proto::_CodeableConcept_default_instance_);
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus::release_method() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.method)
  
  ::google::fhir::stu3::proto::CodeableConcept* temp = method_;
  method_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::CodeableConcept* UsCoreSmokingstatus::mutable_method() {
  
  if (method_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::CodeableConcept>(GetArenaNoVirtual());
    method_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.method)
  return method_;
}
inline void UsCoreSmokingstatus::set_allocated_method(::google::fhir::stu3::proto::CodeableConcept* method) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(method_);
  }
  if (method) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      method = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, method, submessage_arena);
    }
    
  } else {
    
  }
  method_ = method;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.method)
}

// .google.fhir.stu3.proto.Reference specimen = 25 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Specimen"];
inline bool UsCoreSmokingstatus::has_specimen() const {
  return this != internal_default_instance() && specimen_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreSmokingstatus::_internal_specimen() const {
  return *specimen_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreSmokingstatus::specimen() const {
  const ::google::fhir::stu3::proto::Reference* p = specimen_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.specimen)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreSmokingstatus::release_specimen() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.specimen)
  
  ::google::fhir::stu3::proto::Reference* temp = specimen_;
  specimen_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreSmokingstatus::mutable_specimen() {
  
  if (specimen_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    specimen_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.specimen)
  return specimen_;
}
inline void UsCoreSmokingstatus::set_allocated_specimen(::google::fhir::stu3::proto::Reference* specimen) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(specimen_);
  }
  if (specimen) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      specimen = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, specimen, submessage_arena);
    }
    
  } else {
    
  }
  specimen_ = specimen;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.specimen)
}

// .google.fhir.stu3.proto.Reference device = 26 [(.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/Device", (.google.fhir.stu3.proto.valid_reference_type) = "http://hl7.org/fhir/StructureDefinition/DeviceMetric"];
inline bool UsCoreSmokingstatus::has_device() const {
  return this != internal_default_instance() && device_ != NULL;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreSmokingstatus::_internal_device() const {
  return *device_;
}
inline const ::google::fhir::stu3::proto::Reference& UsCoreSmokingstatus::device() const {
  const ::google::fhir::stu3::proto::Reference* p = device_;
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.device)
  return p != NULL ? *p : *reinterpret_cast<const ::google::fhir::stu3::proto::Reference*>(
      &::google::fhir::stu3::proto::_Reference_default_instance_);
}
inline ::google::fhir::stu3::proto::Reference* UsCoreSmokingstatus::release_device() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.uscore.UsCoreSmokingstatus.device)
  
  ::google::fhir::stu3::proto::Reference* temp = device_;
  device_ = NULL;
  return temp;
}
inline ::google::fhir::stu3::proto::Reference* UsCoreSmokingstatus::mutable_device() {
  
  if (device_ == NULL) {
    auto* p = CreateMaybeMessage<::google::fhir::stu3::proto::Reference>(GetArenaNoVirtual());
    device_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.device)
  return device_;
}
inline void UsCoreSmokingstatus::set_allocated_device(::google::fhir::stu3::proto::Reference* device) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_);
  }
  if (device) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      device = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device, submessage_arena);
    }
    
  } else {
    
  }
  device_ = device;
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.uscore.UsCoreSmokingstatus.device)
}

// repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange reference_range = 27;
inline int UsCoreSmokingstatus::reference_range_size() const {
  return reference_range_.size();
}
inline void UsCoreSmokingstatus::clear_reference_range() {
  reference_range_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange* UsCoreSmokingstatus::mutable_reference_range(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.reference_range)
  return reference_range_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange >*
UsCoreSmokingstatus::mutable_reference_range() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.reference_range)
  return &reference_range_;
}
inline const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange& UsCoreSmokingstatus::reference_range(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.reference_range)
  return reference_range_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange* UsCoreSmokingstatus::add_reference_range() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreSmokingstatus.reference_range)
  return reference_range_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_ReferenceRange >&
UsCoreSmokingstatus::reference_range() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.reference_range)
  return reference_range_;
}

// repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.Related related = 28;
inline int UsCoreSmokingstatus::related_size() const {
  return related_.size();
}
inline void UsCoreSmokingstatus::clear_related() {
  related_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related* UsCoreSmokingstatus::mutable_related(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.related)
  return related_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related >*
UsCoreSmokingstatus::mutable_related() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.related)
  return &related_;
}
inline const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related& UsCoreSmokingstatus::related(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.related)
  return related_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related* UsCoreSmokingstatus::add_related() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreSmokingstatus.related)
  return related_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Related >&
UsCoreSmokingstatus::related() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.related)
  return related_;
}

// repeated .google.fhir.stu3.uscore.UsCoreSmokingstatus.Component component = 29;
inline int UsCoreSmokingstatus::component_size() const {
  return component_.size();
}
inline void UsCoreSmokingstatus::clear_component() {
  component_.Clear();
}
inline ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component* UsCoreSmokingstatus::mutable_component(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.uscore.UsCoreSmokingstatus.component)
  return component_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component >*
UsCoreSmokingstatus::mutable_component() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.component)
  return &component_;
}
inline const ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component& UsCoreSmokingstatus::component(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.uscore.UsCoreSmokingstatus.component)
  return component_.Get(index);
}
inline ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component* UsCoreSmokingstatus::add_component() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.uscore.UsCoreSmokingstatus.component)
  return component_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::uscore::UsCoreSmokingstatus_Component >&
UsCoreSmokingstatus::component() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.uscore.UsCoreSmokingstatus.component)
  return component_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace uscore
}  // namespace stu3
}  // namespace fhir
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_proto_2fstu3_2fuscore_2eproto
