// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/stu3/version_config.proto

#ifndef PROTOBUF_INCLUDED_proto_2fstu3_2fversion_5fconfig_2eproto
#define PROTOBUF_INCLUDED_proto_2fstu3_2fversion_5fconfig_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstu3_2fversion_5fconfig_2eproto 

namespace protobuf_proto_2fstu3_2fversion_5fconfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_proto_2fstu3_2fversion_5fconfig_2eproto
namespace google {
namespace fhir {
namespace stu3 {
namespace proto {
class ResourceConfig;
class ResourceConfigDefaultTypeInternal;
extern ResourceConfigDefaultTypeInternal _ResourceConfig_default_instance_;
class ResourceConfig_TimestampOverride;
class ResourceConfig_TimestampOverrideDefaultTypeInternal;
extern ResourceConfig_TimestampOverrideDefaultTypeInternal _ResourceConfig_TimestampOverride_default_instance_;
class VersionConfig;
class VersionConfigDefaultTypeInternal;
extern VersionConfigDefaultTypeInternal _VersionConfig_default_instance_;
class VersionConfig_ResourceConfigEntry_DoNotUse;
class VersionConfig_ResourceConfigEntry_DoNotUseDefaultTypeInternal;
extern VersionConfig_ResourceConfigEntry_DoNotUseDefaultTypeInternal _VersionConfig_ResourceConfigEntry_DoNotUse_default_instance_;
}  // namespace proto
}  // namespace stu3
}  // namespace fhir
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::fhir::stu3::proto::ResourceConfig* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ResourceConfig>(Arena*);
template<> ::google::fhir::stu3::proto::ResourceConfig_TimestampOverride* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::ResourceConfig_TimestampOverride>(Arena*);
template<> ::google::fhir::stu3::proto::VersionConfig* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::VersionConfig>(Arena*);
template<> ::google::fhir::stu3::proto::VersionConfig_ResourceConfigEntry_DoNotUse* Arena::CreateMaybeMessage<::google::fhir::stu3::proto::VersionConfig_ResourceConfigEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace fhir {
namespace stu3 {
namespace proto {

// ===================================================================

class ResourceConfig_TimestampOverride : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ResourceConfig.TimestampOverride) */ {
 public:
  ResourceConfig_TimestampOverride();
  virtual ~ResourceConfig_TimestampOverride();

  ResourceConfig_TimestampOverride(const ResourceConfig_TimestampOverride& from);

  inline ResourceConfig_TimestampOverride& operator=(const ResourceConfig_TimestampOverride& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResourceConfig_TimestampOverride(ResourceConfig_TimestampOverride&& from) noexcept
    : ResourceConfig_TimestampOverride() {
    *this = ::std::move(from);
  }

  inline ResourceConfig_TimestampOverride& operator=(ResourceConfig_TimestampOverride&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceConfig_TimestampOverride& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResourceConfig_TimestampOverride* internal_default_instance() {
    return reinterpret_cast<const ResourceConfig_TimestampOverride*>(
               &_ResourceConfig_TimestampOverride_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ResourceConfig_TimestampOverride* other);
  friend void swap(ResourceConfig_TimestampOverride& a, ResourceConfig_TimestampOverride& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResourceConfig_TimestampOverride* New() const final {
    return CreateMaybeMessage<ResourceConfig_TimestampOverride>(NULL);
  }

  ResourceConfig_TimestampOverride* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResourceConfig_TimestampOverride>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResourceConfig_TimestampOverride& from);
  void MergeFrom(const ResourceConfig_TimestampOverride& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResourceConfig_TimestampOverride* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string resource_field = 2;
  int resource_field_size() const;
  void clear_resource_field();
  static const int kResourceFieldFieldNumber = 2;
  const ::std::string& resource_field(int index) const;
  ::std::string* mutable_resource_field(int index);
  void set_resource_field(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_resource_field(int index, ::std::string&& value);
  #endif
  void set_resource_field(int index, const char* value);
  void set_resource_field(int index, const char* value, size_t size);
  ::std::string* add_resource_field();
  void add_resource_field(const ::std::string& value);
  #if LANG_CXX11
  void add_resource_field(::std::string&& value);
  #endif
  void add_resource_field(const char* value);
  void add_resource_field(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& resource_field() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_resource_field();

  // string timestamp_field = 1;
  void clear_timestamp_field();
  static const int kTimestampFieldFieldNumber = 1;
  const ::std::string& timestamp_field() const;
  void set_timestamp_field(const ::std::string& value);
  #if LANG_CXX11
  void set_timestamp_field(::std::string&& value);
  #endif
  void set_timestamp_field(const char* value);
  void set_timestamp_field(const char* value, size_t size);
  ::std::string* mutable_timestamp_field();
  ::std::string* release_timestamp_field();
  void set_allocated_timestamp_field(::std::string* timestamp_field);

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ResourceConfig.TimestampOverride)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> resource_field_;
  ::google::protobuf::internal::ArenaStringPtr timestamp_field_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fversion_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResourceConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.ResourceConfig) */ {
 public:
  ResourceConfig();
  virtual ~ResourceConfig();

  ResourceConfig(const ResourceConfig& from);

  inline ResourceConfig& operator=(const ResourceConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResourceConfig(ResourceConfig&& from) noexcept
    : ResourceConfig() {
    *this = ::std::move(from);
  }

  inline ResourceConfig& operator=(ResourceConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResourceConfig* internal_default_instance() {
    return reinterpret_cast<const ResourceConfig*>(
               &_ResourceConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ResourceConfig* other);
  friend void swap(ResourceConfig& a, ResourceConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResourceConfig* New() const final {
    return CreateMaybeMessage<ResourceConfig>(NULL);
  }

  ResourceConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResourceConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResourceConfig& from);
  void MergeFrom(const ResourceConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResourceConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ResourceConfig_TimestampOverride TimestampOverride;

  // accessors -------------------------------------------------------

  // repeated string default_timestamp_fields = 1;
  int default_timestamp_fields_size() const;
  void clear_default_timestamp_fields();
  static const int kDefaultTimestampFieldsFieldNumber = 1;
  const ::std::string& default_timestamp_fields(int index) const;
  ::std::string* mutable_default_timestamp_fields(int index);
  void set_default_timestamp_fields(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_default_timestamp_fields(int index, ::std::string&& value);
  #endif
  void set_default_timestamp_fields(int index, const char* value);
  void set_default_timestamp_fields(int index, const char* value, size_t size);
  ::std::string* add_default_timestamp_fields();
  void add_default_timestamp_fields(const ::std::string& value);
  #if LANG_CXX11
  void add_default_timestamp_fields(::std::string&& value);
  #endif
  void add_default_timestamp_fields(const char* value);
  void add_default_timestamp_fields(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& default_timestamp_fields() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_default_timestamp_fields();

  // repeated .google.fhir.stu3.proto.ResourceConfig.TimestampOverride timestamp_override = 5;
  int timestamp_override_size() const;
  void clear_timestamp_override();
  static const int kTimestampOverrideFieldNumber = 5;
  ::google::fhir::stu3::proto::ResourceConfig_TimestampOverride* mutable_timestamp_override(int index);
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ResourceConfig_TimestampOverride >*
      mutable_timestamp_override();
  const ::google::fhir::stu3::proto::ResourceConfig_TimestampOverride& timestamp_override(int index) const;
  ::google::fhir::stu3::proto::ResourceConfig_TimestampOverride* add_timestamp_override();
  const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ResourceConfig_TimestampOverride >&
      timestamp_override() const;

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.ResourceConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> default_timestamp_fields_;
  ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ResourceConfig_TimestampOverride > timestamp_override_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fversion_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VersionConfig_ResourceConfigEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<VersionConfig_ResourceConfigEntry_DoNotUse, 
    ::std::string, ::google::fhir::stu3::proto::ResourceConfig,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<VersionConfig_ResourceConfigEntry_DoNotUse, 
    ::std::string, ::google::fhir::stu3::proto::ResourceConfig,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  VersionConfig_ResourceConfigEntry_DoNotUse();
  VersionConfig_ResourceConfigEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const VersionConfig_ResourceConfigEntry_DoNotUse& other);
  static const VersionConfig_ResourceConfigEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const VersionConfig_ResourceConfigEntry_DoNotUse*>(&_VersionConfig_ResourceConfigEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class VersionConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.fhir.stu3.proto.VersionConfig) */ {
 public:
  VersionConfig();
  virtual ~VersionConfig();

  VersionConfig(const VersionConfig& from);

  inline VersionConfig& operator=(const VersionConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VersionConfig(VersionConfig&& from) noexcept
    : VersionConfig() {
    *this = ::std::move(from);
  }

  inline VersionConfig& operator=(VersionConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VersionConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VersionConfig* internal_default_instance() {
    return reinterpret_cast<const VersionConfig*>(
               &_VersionConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(VersionConfig* other);
  friend void swap(VersionConfig& a, VersionConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VersionConfig* New() const final {
    return CreateMaybeMessage<VersionConfig>(NULL);
  }

  VersionConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VersionConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VersionConfig& from);
  void MergeFrom(const VersionConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VersionConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .google.fhir.stu3.proto.ResourceConfig> resource_config = 1;
  int resource_config_size() const;
  void clear_resource_config();
  static const int kResourceConfigFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::google::fhir::stu3::proto::ResourceConfig >&
      resource_config() const;
  ::google::protobuf::Map< ::std::string, ::google::fhir::stu3::proto::ResourceConfig >*
      mutable_resource_config();

  // @@protoc_insertion_point(class_scope:google.fhir.stu3.proto.VersionConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      VersionConfig_ResourceConfigEntry_DoNotUse,
      ::std::string, ::google::fhir::stu3::proto::ResourceConfig,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > resource_config_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2fstu3_2fversion_5fconfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ResourceConfig_TimestampOverride

// string timestamp_field = 1;
inline void ResourceConfig_TimestampOverride::clear_timestamp_field() {
  timestamp_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResourceConfig_TimestampOverride::timestamp_field() const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.timestamp_field)
  return timestamp_field_.GetNoArena();
}
inline void ResourceConfig_TimestampOverride::set_timestamp_field(const ::std::string& value) {
  
  timestamp_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.timestamp_field)
}
#if LANG_CXX11
inline void ResourceConfig_TimestampOverride::set_timestamp_field(::std::string&& value) {
  
  timestamp_field_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.timestamp_field)
}
#endif
inline void ResourceConfig_TimestampOverride::set_timestamp_field(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  timestamp_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.timestamp_field)
}
inline void ResourceConfig_TimestampOverride::set_timestamp_field(const char* value, size_t size) {
  
  timestamp_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.timestamp_field)
}
inline ::std::string* ResourceConfig_TimestampOverride::mutable_timestamp_field() {
  
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.timestamp_field)
  return timestamp_field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResourceConfig_TimestampOverride::release_timestamp_field() {
  // @@protoc_insertion_point(field_release:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.timestamp_field)
  
  return timestamp_field_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceConfig_TimestampOverride::set_allocated_timestamp_field(::std::string* timestamp_field) {
  if (timestamp_field != NULL) {
    
  } else {
    
  }
  timestamp_field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timestamp_field);
  // @@protoc_insertion_point(field_set_allocated:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.timestamp_field)
}

// repeated string resource_field = 2;
inline int ResourceConfig_TimestampOverride::resource_field_size() const {
  return resource_field_.size();
}
inline void ResourceConfig_TimestampOverride::clear_resource_field() {
  resource_field_.Clear();
}
inline const ::std::string& ResourceConfig_TimestampOverride::resource_field(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.resource_field)
  return resource_field_.Get(index);
}
inline ::std::string* ResourceConfig_TimestampOverride::mutable_resource_field(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.resource_field)
  return resource_field_.Mutable(index);
}
inline void ResourceConfig_TimestampOverride::set_resource_field(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.resource_field)
  resource_field_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ResourceConfig_TimestampOverride::set_resource_field(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.resource_field)
  resource_field_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ResourceConfig_TimestampOverride::set_resource_field(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  resource_field_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.resource_field)
}
inline void ResourceConfig_TimestampOverride::set_resource_field(int index, const char* value, size_t size) {
  resource_field_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.resource_field)
}
inline ::std::string* ResourceConfig_TimestampOverride::add_resource_field() {
  // @@protoc_insertion_point(field_add_mutable:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.resource_field)
  return resource_field_.Add();
}
inline void ResourceConfig_TimestampOverride::add_resource_field(const ::std::string& value) {
  resource_field_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.resource_field)
}
#if LANG_CXX11
inline void ResourceConfig_TimestampOverride::add_resource_field(::std::string&& value) {
  resource_field_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.resource_field)
}
#endif
inline void ResourceConfig_TimestampOverride::add_resource_field(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  resource_field_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.resource_field)
}
inline void ResourceConfig_TimestampOverride::add_resource_field(const char* value, size_t size) {
  resource_field_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.resource_field)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ResourceConfig_TimestampOverride::resource_field() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.resource_field)
  return resource_field_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ResourceConfig_TimestampOverride::mutable_resource_field() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ResourceConfig.TimestampOverride.resource_field)
  return &resource_field_;
}

// -------------------------------------------------------------------

// ResourceConfig

// repeated string default_timestamp_fields = 1;
inline int ResourceConfig::default_timestamp_fields_size() const {
  return default_timestamp_fields_.size();
}
inline void ResourceConfig::clear_default_timestamp_fields() {
  default_timestamp_fields_.Clear();
}
inline const ::std::string& ResourceConfig::default_timestamp_fields(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResourceConfig.default_timestamp_fields)
  return default_timestamp_fields_.Get(index);
}
inline ::std::string* ResourceConfig::mutable_default_timestamp_fields(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ResourceConfig.default_timestamp_fields)
  return default_timestamp_fields_.Mutable(index);
}
inline void ResourceConfig::set_default_timestamp_fields(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ResourceConfig.default_timestamp_fields)
  default_timestamp_fields_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ResourceConfig::set_default_timestamp_fields(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.fhir.stu3.proto.ResourceConfig.default_timestamp_fields)
  default_timestamp_fields_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ResourceConfig::set_default_timestamp_fields(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  default_timestamp_fields_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.fhir.stu3.proto.ResourceConfig.default_timestamp_fields)
}
inline void ResourceConfig::set_default_timestamp_fields(int index, const char* value, size_t size) {
  default_timestamp_fields_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.fhir.stu3.proto.ResourceConfig.default_timestamp_fields)
}
inline ::std::string* ResourceConfig::add_default_timestamp_fields() {
  // @@protoc_insertion_point(field_add_mutable:google.fhir.stu3.proto.ResourceConfig.default_timestamp_fields)
  return default_timestamp_fields_.Add();
}
inline void ResourceConfig::add_default_timestamp_fields(const ::std::string& value) {
  default_timestamp_fields_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ResourceConfig.default_timestamp_fields)
}
#if LANG_CXX11
inline void ResourceConfig::add_default_timestamp_fields(::std::string&& value) {
  default_timestamp_fields_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ResourceConfig.default_timestamp_fields)
}
#endif
inline void ResourceConfig::add_default_timestamp_fields(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  default_timestamp_fields_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.fhir.stu3.proto.ResourceConfig.default_timestamp_fields)
}
inline void ResourceConfig::add_default_timestamp_fields(const char* value, size_t size) {
  default_timestamp_fields_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.fhir.stu3.proto.ResourceConfig.default_timestamp_fields)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ResourceConfig::default_timestamp_fields() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ResourceConfig.default_timestamp_fields)
  return default_timestamp_fields_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ResourceConfig::mutable_default_timestamp_fields() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ResourceConfig.default_timestamp_fields)
  return &default_timestamp_fields_;
}

// repeated .google.fhir.stu3.proto.ResourceConfig.TimestampOverride timestamp_override = 5;
inline int ResourceConfig::timestamp_override_size() const {
  return timestamp_override_.size();
}
inline void ResourceConfig::clear_timestamp_override() {
  timestamp_override_.Clear();
}
inline ::google::fhir::stu3::proto::ResourceConfig_TimestampOverride* ResourceConfig::mutable_timestamp_override(int index) {
  // @@protoc_insertion_point(field_mutable:google.fhir.stu3.proto.ResourceConfig.timestamp_override)
  return timestamp_override_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ResourceConfig_TimestampOverride >*
ResourceConfig::mutable_timestamp_override() {
  // @@protoc_insertion_point(field_mutable_list:google.fhir.stu3.proto.ResourceConfig.timestamp_override)
  return &timestamp_override_;
}
inline const ::google::fhir::stu3::proto::ResourceConfig_TimestampOverride& ResourceConfig::timestamp_override(int index) const {
  // @@protoc_insertion_point(field_get:google.fhir.stu3.proto.ResourceConfig.timestamp_override)
  return timestamp_override_.Get(index);
}
inline ::google::fhir::stu3::proto::ResourceConfig_TimestampOverride* ResourceConfig::add_timestamp_override() {
  // @@protoc_insertion_point(field_add:google.fhir.stu3.proto.ResourceConfig.timestamp_override)
  return timestamp_override_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::fhir::stu3::proto::ResourceConfig_TimestampOverride >&
ResourceConfig::timestamp_override() const {
  // @@protoc_insertion_point(field_list:google.fhir.stu3.proto.ResourceConfig.timestamp_override)
  return timestamp_override_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// VersionConfig

// map<string, .google.fhir.stu3.proto.ResourceConfig> resource_config = 1;
inline int VersionConfig::resource_config_size() const {
  return resource_config_.size();
}
inline void VersionConfig::clear_resource_config() {
  resource_config_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::fhir::stu3::proto::ResourceConfig >&
VersionConfig::resource_config() const {
  // @@protoc_insertion_point(field_map:google.fhir.stu3.proto.VersionConfig.resource_config)
  return resource_config_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::fhir::stu3::proto::ResourceConfig >*
VersionConfig::mutable_resource_config() {
  // @@protoc_insertion_point(field_mutable_map:google.fhir.stu3.proto.VersionConfig.resource_config)
  return resource_config_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace stu3
}  // namespace fhir
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_proto_2fstu3_2fversion_5fconfig_2eproto
