{"resourceType":"DataElement","id":"QuestionnaireResponse","meta":{"lastUpdated":"2017-04-19T07:44:43.294+10:00"},"url":"http://hl7.org/fhir/DataElement/QuestionnaireResponse","status":"draft","experimental":true,"stringency":"fully-specified","element":[{"id":"QuestionnaireResponse","path":"QuestionnaireResponse","short":"A structured set of questions and their answers","definition":"A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.","comment":"The QuestionnaireResponse contains enough information about the questions asked and their organization that it can be interpreted somewhat independently from the Questionnaire it is based on.  I.e. You don't need access to the Questionnaire in order to extract basic information from a QuestionnaireResponse.","alias":["Form","QuestionnaireAnswers"],"min":0,"max":"*","constraint":[{"key":"dom-2","severity":"error","human":"If the resource is contained in another resource, it SHALL NOT contain nested Resources","expression":"contained.contained.empty()","xpath":"not(parent::f:contained and f:contained)","source":"DomainResource"},{"key":"dom-1","severity":"error","human":"If the resource is contained in another resource, it SHALL NOT contain any narrative","expression":"contained.text.empty()","xpath":"not(parent::f:contained and f:text)","source":"DomainResource"},{"key":"dom-4","severity":"error","human":"If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated","expression":"contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()","xpath":"not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))","source":"DomainResource"},{"key":"dom-3","severity":"error","human":"If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource","expression":"contained.where(('#'+id in %resource.descendants().reference).not()).empty()","xpath":"not(exists(for $id in f:contained/*/@id return $id[not(ancestor::f:contained/parent::*/descendant::f:reference/@value=concat('#', $id))]))","source":"DomainResource"}],"mapping":[{"identity":"rim","map":"Entity. Role, or Act"},{"identity":"rim","map":"Observation[moodCode=EVN]"},{"identity":"w5","map":"infrastructure.information"}]}]}