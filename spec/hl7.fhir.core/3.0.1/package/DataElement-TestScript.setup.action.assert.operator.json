{"resourceType":"DataElement","id":"TestScript.setup.action.assert.operator","meta":{"lastUpdated":"2017-04-19T07:44:43.294+10:00"},"url":"http://hl7.org/fhir/DataElement/TestScript.setup.action.assert.operator","status":"draft","experimental":true,"stringency":"fully-specified","element":[{"id":"TestScript.setup.action.assert.operator","path":"TestScript.setup.action.assert.operator","short":"equals | notEquals | in | notIn | greaterThan | lessThan | empty | notEmpty | contains | notContains | eval","definition":"The operator type defines the conditional behavior of the assert. If not defined, the default is equals.","comment":"Operators are useful especially for negative testing.  If operator is not specified, then the \"equals\" operator is assumed; e.g. <code>   <assert>  <operator value=\"in\" />  <responseCode value=\"200,201,204\" />    </assert>    <assert>  <operator value=\"notEquals\" />  <response value=\"okay\"/>   </assert>    <assert>  <operator value=\"greaterThan\" />    <responseHeader>     <field value=\"Content-Length\" />     <value value=\"0\" />    <responseHeader/>   </assert> </code>.","min":0,"max":"1","type":[{"code":"code"}],"binding":{"extension":[{"url":"http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName","valueString":"AssertionOperatorType"}],"strength":"required","description":"The type of operator to use for assertion.","valueSetReference":{"reference":"http://hl7.org/fhir/ValueSet/assert-operator-codes"}}}]}