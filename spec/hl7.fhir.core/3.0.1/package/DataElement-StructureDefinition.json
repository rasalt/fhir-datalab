{"resourceType":"DataElement","id":"StructureDefinition","meta":{"lastUpdated":"2017-04-19T07:44:43.294+10:00"},"url":"http://hl7.org/fhir/DataElement/StructureDefinition","status":"draft","experimental":true,"stringency":"fully-specified","element":[{"id":"StructureDefinition","path":"StructureDefinition","short":"Structural Definition","definition":"A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.","alias":["Template","Profile"],"min":0,"max":"*","constraint":[{"key":"dom-2","severity":"error","human":"If the resource is contained in another resource, it SHALL NOT contain nested Resources","expression":"contained.contained.empty()","xpath":"not(parent::f:contained and f:contained)","source":"DomainResource"},{"key":"dom-1","severity":"error","human":"If the resource is contained in another resource, it SHALL NOT contain any narrative","expression":"contained.text.empty()","xpath":"not(parent::f:contained and f:text)","source":"DomainResource"},{"key":"dom-4","severity":"error","human":"If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated","expression":"contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()","xpath":"not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))","source":"DomainResource"},{"key":"dom-3","severity":"error","human":"If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource","expression":"contained.where(('#'+id in %resource.descendants().reference).not()).empty()","xpath":"not(exists(for $id in f:contained/*/@id return $id[not(ancestor::f:contained/parent::*/descendant::f:reference/@value=concat('#', $id))]))","source":"DomainResource"},{"key":"sdf-9","requirements":"Because these 3 fields seem to be have overlapping meaning with the ones in the root of StructureDefinition","severity":"error","human":"In any snapshot or differential, no label, code or requirements on the an element without a \".\" in the path (e.g. the first element)","expression":"children().element.first().label.empty() and children().element.first().code.empty() and children().element.first().requirements.empty()","xpath":"not(exists(f:snapshot/f:element[not(contains(f:path/@value, '.')) and (f:label or f:code or f:requirements)])) and not(exists(f:differential/f:element[not(contains(f:path/@value, '.')) and (f:label or f:code or f:requirements)]))"},{"key":"sdf-19","requirements":"custom types only in logical models","severity":"error","human":"Custom types can only be used in logical models","expression":"kind = 'logical' or (differential.element.type.code.all(hasValue() implies matches('^[a-zA-Z0-9]+$')) and snapshot.element.type.code.all(hasValue() implies matches('^[a-zA-Z0-9]+$')))","xpath":"f:kind/@value = 'logical' or count(f:differential/f:element/f:type/f:code[@value and not(matches(string(@value), '^[a-zA-Z0-9]+$'))]|f:snapshot/f:element/f:type/f:code[@value and not(matches(string(@value), '^[a-zA-Z0-9]+$'))]) =0"},{"key":"sdf-16","requirements":"element ids need to be unique","severity":"error","human":"All element definitions must have unique ids (snapshot)","expression":"snapshot.element.id.trace('ids').isDistinct()","xpath":"count(*/f:element)=count(*/f:element/@id)"},{"key":"sdf-18","requirements":"contextInvariant","severity":"error","human":"Context Invariants can only be used for extensions","expression":"contextInvariant.exists() implies type = 'Extension'","xpath":"not(exists(f:contextInvariant)) or (f:type/@value = 'Extension')"},{"key":"sdf-17","requirements":"element ids need to be unique","severity":"error","human":"All element definitions must have unique ids (diff)","expression":"differential.element.id.trace('ids').isDistinct()","xpath":"count(*/f:element)=count(*/f:element/@id)"},{"key":"sdf-12","requirements":"Ensure that element.base appears with base or not","severity":"error","human":"element.base cannot appear if there is no base on the structure definition","expression":"snapshot.exists() implies (snapshot.element.base.exists() = baseDefinition.exists())","xpath":"f:baseDefinition or not(exists(f:snapshot/f:element/f:base) or exists(f:differential/f:element/f:base))"},{"key":"sdf-11","requirements":"Ensure that the type is not inconsistent with the other information in the structure","severity":"error","human":"If there's a type, its content must match the path name in the first element of a snapshot","expression":"snapshot.empty() or snapshot.element.first().path = type","xpath":"not(exists(f:snapshot)) or (f:type/@value = f:snapshot/f:element[1]/f:path/@value)"},{"key":"sdf-14","requirements":"elements have id","severity":"error","human":"All element definitions must have an id","expression":"snapshot.element.all(id.exists()) and differential.element.all(id.exists())","xpath":"count(*/f:element)=count(*/f:element/@id)"},{"key":"sdf-1","severity":"error","human":"Element paths must be unique unless the structure is a constraint","expression":"derivation = 'constraint' or snapshot.element.select(path).isDistinct()","xpath":"(f:derivation/@value = 'constraint') or (count(f:snapshot/f:element) = count(distinct-values(f:snapshot/f:element/f:path/@value)))"},{"key":"sdf-7","severity":"error","human":"If the structure describes a base Resource or Type, the URL has to start with \"http://hl7.org/fhir/StructureDefinition/\" and the tail must match the id","expression":"(derivation = 'constraint') or (kind = 'logical') or (url = 'http://hl7.org/fhir/StructureDefinition/'+id)","xpath":"(f:derivation/@value = 'constraint') or (f:kind/@value = 'logical') or (f:url/@value=concat('http://hl7.org/fhir/StructureDefinition/', f:id/@value))"},{"key":"sdf-6","severity":"error","human":"A structure must have either a differential, or a snapshot (or both)","expression":"snapshot.exists() or differential.exists()","xpath":"exists(f:snapshot) or exists(f:differential)"},{"key":"sdf-5","severity":"error","human":"If the structure defines an extension then the structure must have context information","expression":"type != 'Extension' or derivation = 'specialization' or (context.exists() and contextType.exists())","xpath":"not(f:type/@value = 'extension') or (f:derivation/@value = 'specialization') or (exists(f:context) and exists(f:contextType))"},{"key":"sdf-4","requirements":"Ensure that the base types are abstract","severity":"error","human":"If the structure is not abstract, then there SHALL be a baseDefinition","expression":"abstract = true or baseDefinition.exists()","xpath":"(f:abstract/@value=true()) or exists(f:baseDefinition)"}],"mapping":[{"identity":"rim","map":"Entity. Role, or Act"},{"identity":"rim","map":"n/a"},{"identity":"w5","map":"conformance.content"}]}]}