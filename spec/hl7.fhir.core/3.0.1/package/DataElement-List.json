{"resourceType":"DataElement","id":"List","meta":{"lastUpdated":"2017-04-19T07:44:43.294+10:00"},"url":"http://hl7.org/fhir/DataElement/List","status":"draft","experimental":true,"stringency":"fully-specified","element":[{"id":"List","path":"List","short":"Information summarized from a list of other resources","definition":"A set of information summarized from a list of other resources.","alias":["Collection","WorkingList","Organizer"],"min":0,"max":"*","constraint":[{"key":"dom-2","severity":"error","human":"If the resource is contained in another resource, it SHALL NOT contain nested Resources","expression":"contained.contained.empty()","xpath":"not(parent::f:contained and f:contained)","source":"DomainResource"},{"key":"dom-1","severity":"error","human":"If the resource is contained in another resource, it SHALL NOT contain any narrative","expression":"contained.text.empty()","xpath":"not(parent::f:contained and f:text)","source":"DomainResource"},{"key":"dom-4","severity":"error","human":"If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated","expression":"contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()","xpath":"not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))","source":"DomainResource"},{"key":"dom-3","severity":"error","human":"If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource","expression":"contained.where(('#'+id in %resource.descendants().reference).not()).empty()","xpath":"not(exists(for $id in f:contained/*/@id return $id[not(ancestor::f:contained/parent::*/descendant::f:reference/@value=concat('#', $id))]))","source":"DomainResource"},{"key":"lst-2","severity":"error","human":"The deleted flag can only be used if the mode of the list is \"changes\"","expression":"mode = 'changes' or entry.deleted.empty()","xpath":"(f:mode/@value = 'changes') or not(exists(f:entry/f:deleted))"},{"key":"lst-1","severity":"error","human":"A list can only have an emptyReason if it is empty","expression":"emptyReason.empty() or entry.empty()","xpath":"not(exists(f:emptyReason) and exists(f:entry))"}],"mapping":[{"identity":"rim","map":"Entity. Role, or Act"},{"identity":"rim","map":"Act[classCode<ORG,moodCode=EVN]"},{"identity":"w5","map":"infrastructure.documents"}]}]}