{"resourceType":"DataElement","id":"Communication","meta":{"lastUpdated":"2017-04-19T07:44:43.294+10:00"},"url":"http://hl7.org/fhir/DataElement/Communication","status":"draft","experimental":true,"stringency":"fully-specified","element":[{"id":"Communication","path":"Communication","short":"A record of information transmitted from a sender to a receiver","definition":"An occurrence of information being transmitted; e.g. an alert that was sent to a responsible provider, a public health agency was notified about a reportable condition.","min":0,"max":"*","constraint":[{"key":"dom-2","severity":"error","human":"If the resource is contained in another resource, it SHALL NOT contain nested Resources","expression":"contained.contained.empty()","xpath":"not(parent::f:contained and f:contained)","source":"DomainResource"},{"key":"dom-1","severity":"error","human":"If the resource is contained in another resource, it SHALL NOT contain any narrative","expression":"contained.text.empty()","xpath":"not(parent::f:contained and f:text)","source":"DomainResource"},{"key":"dom-4","severity":"error","human":"If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated","expression":"contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()","xpath":"not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))","source":"DomainResource"},{"key":"dom-3","severity":"error","human":"If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource","expression":"contained.where(('#'+id in %resource.descendants().reference).not()).empty()","xpath":"not(exists(for $id in f:contained/*/@id return $id[not(ancestor::f:contained/parent::*/descendant::f:reference/@value=concat('#', $id))]))","source":"DomainResource"},{"key":"com-1","severity":"error","human":"Not Done Reason can only be specified if NotDone is \"true\"","expression":"notDone or notDoneReason.exists().not()","xpath":"f:notDone/@value=true() or not(exists(f:notDoneReason))"}],"mapping":[{"identity":"rim","map":"Entity. Role, or Act"},{"identity":"workflow","map":"Event"},{"identity":"w5","map":"workflow.encounter"}]}]}