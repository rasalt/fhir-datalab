{"resourceType":"DataElement","id":"Consent","meta":{"lastUpdated":"2017-04-19T07:44:43.294+10:00"},"url":"http://hl7.org/fhir/DataElement/Consent","status":"draft","experimental":true,"stringency":"fully-specified","element":[{"id":"Consent","path":"Consent","short":"A healthcare consumer's policy choices to permits or denies recipients or roles to perform actions for specific purposes and periods of time","definition":"A record of a healthcare consumerâ€™s policy choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.","comment":"Broadly, there are 3 key areas of consent for patients: Consent around sharing information (aka Privacy Consent Directive - Authorization to Collect, Use, or Disclose information), consent for specific treatment, or kinds of treatment, and general advance care directives.","min":0,"max":"*","constraint":[{"key":"dom-2","severity":"error","human":"If the resource is contained in another resource, it SHALL NOT contain nested Resources","expression":"contained.contained.empty()","xpath":"not(parent::f:contained and f:contained)","source":"DomainResource"},{"key":"dom-1","severity":"error","human":"If the resource is contained in another resource, it SHALL NOT contain any narrative","expression":"contained.text.empty()","xpath":"not(parent::f:contained and f:text)","source":"DomainResource"},{"key":"dom-4","severity":"error","human":"If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated","expression":"contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()","xpath":"not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))","source":"DomainResource"},{"key":"dom-3","severity":"error","human":"If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource","expression":"contained.where(('#'+id in %resource.descendants().reference).not()).empty()","xpath":"not(exists(for $id in f:contained/*/@id return $id[not(ancestor::f:contained/parent::*/descendant::f:reference/@value=concat('#', $id))]))","source":"DomainResource"},{"key":"ppc-1","severity":"error","human":"Either a Policy or PolicyRule","expression":"policy.exists() or policyRule.exists()","xpath":"exists(f:policy) or exists(f:policyRule)"}],"mapping":[{"identity":"rim","map":"Entity. Role, or Act"},{"identity":"rim","map":"FinancialConsent"},{"identity":"w5","map":"infrastructure.information"}]}]}