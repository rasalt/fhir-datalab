id {
  value: "testscript-example-readtest"
}
text {
  status {
    value: GENERATED
  }
  div {
    value: "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: testscript-example-readtest</p><p><b>url</b>: <a>http://hl7.org/fhir/TestScript/testscript-example-readtest</a></p><p><b>identifier</b>: urn:oid:1.3.6.1.4.1.21367.2005.3.7.9879</p><p><b>version</b>: 1.0</p><p><b>name</b>: TestScript Example Read Test</p><p><b>status</b>: draft</p><p><b>experimental</b>: true</p><p><b>date</b>: 18/01/2017</p><p><b>publisher</b>: HL7</p><p><b>contact</b>: </p><p><b>description</b>: TestScript example resource with ported Sprinkler basic read tests R001, R002, R003, R004. The read tests will utilize user defined dynamic variables that will hold the Patient resource id values.</p><p><b>jurisdiction</b>: United States of America (the) <span>(Details : {urn:iso:std:iso:3166 code \'US\' = \'United States\', given as \'United States of America (the)\'})</span></p><p><b>purpose</b>: Patient Read Operation</p><p><b>copyright</b>: \302\251 HL7.org 2011+</p><blockquote><p><b>metadata</b></p><h3>Links</h3><table><tr><td>-</td><td><b>Url</b></td><td><b>Description</b></td></tr><tr><td>*</td><td><a>http://hl7.org/fhir/patient.html</a></td><td>Demographics and other administrative information about an individual or animal receiving care or other health-related services.</td></tr></table><h3>Capabilities</h3><table><tr><td>-</td><td><b>Required</b></td><td><b>Description</b></td><td><b>Link</b></td><td><b>Capabilities</b></td></tr><tr><td>*</td><td>true</td><td>Patient Read Operation</td><td><a>http://hl7.org/fhir/http.html#read</a></td><td><a>CapabilityStatement/example</a></td></tr></table></blockquote><p><b>profile</b>: <a>http://hl7.org/fhir/StructureDefinition/Patient</a></p><blockquote><p><b>variable</b></p><p><b>name</b>: KnownPatientResourceId</p><p><b>defaultValue</b>: example</p></blockquote><blockquote><p><b>variable</b></p><p><b>name</b>: NonExistsPatientResourceId</p><p><b>defaultValue</b>: does-not-exist</p></blockquote><blockquote><p><b>test</b></p><p><b>name</b>: Sprinkler Read Test R001</p><p><b>description</b>: Read a known Patient and validate response.</p><blockquote><p><b>action</b></p><h3>Operations</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote></blockquote><blockquote><p><b>test</b></p><p><b>name</b>: Sprinkler Read Test R002</p><p><b>description</b>: Read an unknown Resource Type and validate response.</p><blockquote><p><b>action</b></p><h3>Operations</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote></blockquote><blockquote><p><b>test</b></p><p><b>name</b>: Sprinkler Read Test R003</p><p><b>description</b>: Read a known, non-existing Patient and validate response.</p><blockquote><p><b>action</b></p><h3>Operations</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote></blockquote><blockquote><p><b>test</b></p><p><b>name</b>: Sprinkler Read Test R004</p><p><b>description</b>: Read a Patient using a known bad formatted resource id and validate response.</p><blockquote><p><b>action</b></p><h3>Operations</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote></blockquote></div>"
  }
}
url {
  value: "http://hl7.org/fhir/TestScript/testscript-example-readtest"
}
identifier {
  system {
    value: "urn:ietf:rfc:3986"
  }
  value {
    value: "urn:oid:1.3.6.1.4.1.21367.2005.3.7.9879"
  }
}
version {
  value: "1.0"
}
name {
  value: "TestScript Example Read Test"
}
status {
  value: DRAFT
}
experimental {
  value: true
}
date {
  value_us: 1484658000000000
  timezone: "Australia/Sydney"
  precision: DAY
}
publisher {
  value: "HL7"
}
contact {
  name {
    value: "Support"
  }
  telecom {
    system {
      value: EMAIL
    }
    value {
      value: "support@HL7.org"
    }
    use {
      value: WORK
    }
  }
}
description {
  value: "TestScript example resource with ported Sprinkler basic read tests R001, R002, R003, R004. The read tests will utilize user defined dynamic variables that will hold the Patient resource id values."
}
jurisdiction {
  coding {
    system {
      value: "urn:iso:std:iso:3166"
    }
    code {
      value: "US"
    }
    display {
      value: "United States of America (the)"
    }
  }
}
purpose {
  value: "Patient Read Operation"
}
copyright {
  value: "\302\251 HL7.org 2011+"
}
metadata {
  link {
    url {
      value: "http://hl7.org/fhir/patient.html"
    }
    description {
      value: "Demographics and other administrative information about an individual or animal receiving care or other health-related services."
    }
  }
  capability {
    required {
      value: true
    }
    description {
      value: "Patient Read Operation"
    }
    link {
      value: "http://hl7.org/fhir/http.html#read"
    }
    capabilities {
      capability_statement_id {
        value: "example"
      }
    }
  }
}
profile {
  id {
    value: "patient-profile"
  }
  uri {
    value: "http://hl7.org/fhir/StructureDefinition/Patient"
  }
}
variable {
  name {
    value: "KnownPatientResourceId"
  }
  default_value {
    value: "example"
  }
}
variable {
  name {
    value: "NonExistsPatientResourceId"
  }
  default_value {
    value: "does-not-exist"
  }
}
test {
  id {
    value: "R001"
  }
  name {
    value: "Sprinkler Read Test R001"
  }
  description {
    value: "Read a known Patient and validate response."
  }
  action {
    operation {
      type {
        system {
          value: "http://hl7.org/fhir/testscript-operation-codes"
        }
        code {
          value: "read"
        }
      }
      resource {
        value: PATIENT
      }
      description {
        value: "Read the known Patient resource on the destination test system using the user defined dynamic variable ${KnownPatientResourceId}."
      }
      accept {
        value: XML
      }
      params {
        value: "/${KnownPatientResourceId}"
      }
    }
  }
  action {
    assert_value {
      description {
        value: "Confirm that the returned HTTP status is 200(OK)."
      }
      response {
        value: OKAY
      }
    }
  }
  action {
    assert_value {
      description {
        value: "Confirm that the returned format is XML."
      }
      content_type {
        value: XML
      }
    }
  }
  action {
    assert_value {
      description {
        value: "Confirm that the returned HTTP Header Last-Modified is present. Warning only as the server may not support versioning."
      }
      header_field {
        value: "Last-Modified"
      }
      operator {
        value: NOTEMPTY
      }
      warning_only {
        value: true
      }
    }
  }
  action {
    assert_value {
      description {
        value: "Confirm that the returned resource type is Patient."
      }
      resource {
        value: PATIENT
      }
    }
  }
  action {
    assert_value {
      description {
        value: "Confirm that the returned Patient conforms to the base FHIR specification."
      }
      validate_profile_id {
        value: "patient-profile"
      }
    }
  }
}
test {
  id {
    value: "R002"
  }
  name {
    value: "Sprinkler Read Test R002"
  }
  description {
    value: "Read an unknown Resource Type and validate response."
  }
  action {
    operation {
      type {
        system {
          value: "http://hl7.org/fhir/testscript-operation-codes"
        }
        code {
          value: "read"
        }
      }
      resource {
        value: PATIENT
      }
      description {
        value: "Attempt to read the Parameters resource type. What we really want here is an illegal type but the build process won\'t allow that. Parameters is a valid resource which doesn\'t have an end-point so, this should fail."
      }
      accept {
        value: XML
      }
      params {
        value: "/1"
      }
    }
  }
  action {
    assert_value {
      description {
        value: "Confirm that the returned HTTP status is 404(Not Found)."
      }
      response {
        value: NOTFOUND
      }
    }
  }
}
test {
  id {
    value: "R003"
  }
  name {
    value: "Sprinkler Read Test R003"
  }
  description {
    value: "Read a known, non-existing Patient and validate response."
  }
  action {
    operation {
      type {
        system {
          value: "http://hl7.org/fhir/testscript-operation-codes"
        }
        code {
          value: "read"
        }
      }
      resource {
        value: PATIENT
      }
      description {
        value: "Attempt to read the non-existing Patient resource on the destination test system using the user defined dynamic variable ${NonExistsPatientResourceId}."
      }
      accept {
        value: XML
      }
      params {
        value: "/${NonExistsPatientResourceId}"
      }
    }
  }
  action {
    assert_value {
      description {
        value: "Confirm that the returned HTTP status is 404(Not Found)."
      }
      response {
        value: NOTFOUND
      }
    }
  }
}
test {
  id {
    value: "R004"
  }
  name {
    value: "Sprinkler Read Test R004"
  }
  description {
    value: "Read a Patient using a known bad formatted resource id and validate response."
  }
  action {
    operation {
      type {
        system {
          value: "http://hl7.org/fhir/testscript-operation-codes"
        }
        code {
          value: "read"
        }
      }
      resource {
        value: PATIENT
      }
      description {
        value: "Attempt to read a Patient resource on the destination test system using known bad formatted resource id."
      }
      accept {
        value: XML
      }
      params {
        value: "/ID-may-not-contain-CAPITALS"
      }
    }
  }
  action {
    assert_value {
      description {
        value: "Confirm that the returned HTTP status is 400(Bad Request)."
      }
      response {
        value: BAD
      }
    }
  }
}
