id {
  value: "testscript-example-history"
}
text {
  status {
    value: GENERATED
  }
  div {
    value: "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: testscript-example-history</p><p><b>url</b>: <a>http://hl7.org/fhir/TestScript/testscript-example-history</a></p><p><b>identifier</b>: urn:oid:1.3.6.1.4.1.21367.2005.3.7.9877</p><p><b>version</b>: 1.0</p><p><b>name</b>: TestScript Example History</p><p><b>status</b>: draft</p><p><b>experimental</b>: true</p><p><b>date</b>: 18/01/2017</p><p><b>publisher</b>: HL7</p><p><b>contact</b>: </p><p><b>description</b>: TestScript example resource with setup to delete if present and create a new instance of a Patient then update that Patient to create a minimum history; and single test definition to get the history of that Patient with various asserts.</p><p><b>jurisdiction</b>: United States of America (the) <span>(Details : {urn:iso:std:iso:3166 code \'US\' = \'United States\', given as \'United States of America (the)\'})</span></p><p><b>purpose</b>: Patient (Conditional) Create, Update, Delete and History (Instance) Operations</p><p><b>copyright</b>: \302\251 HL7.org 2011+</p><blockquote><p><b>metadata</b></p><h3>Links</h3><table><tr><td>-</td><td><b>Url</b></td><td><b>Description</b></td></tr><tr><td>*</td><td><a>http://hl7.org/fhir/patient.html</a></td><td>Demographics and other administrative information about an individual or animal receiving care or other health-related services.</td></tr></table><h3>Capabilities</h3><table><tr><td>-</td><td><b>Required</b></td><td><b>Description</b></td><td><b>Link</b></td><td><b>Capabilities</b></td></tr><tr><td>*</td><td>true</td><td>Patient Update, Delete and History (Instance) Operations</td><td><a>http://hl7.org/fhir/http.html#update</a></td><td><a>CapabilityStatement/example</a></td></tr></table></blockquote><blockquote><p><b>fixture</b></p><p><b>autocreate</b>: false</p><p><b>autodelete</b>: false</p><p><b>resource</b>: <a>Peter Chalmers</a></p></blockquote><blockquote><p><b>fixture</b></p><p><b>autocreate</b>: false</p><p><b>autodelete</b>: false</p><p><b>resource</b>: <a>Donald Duck</a></p></blockquote><p><b>profile</b>: <a>http://hl7.org/fhir/StructureDefinition/Bundle</a></p><h3>Variables</h3><table><tr><td>-</td><td><b>Name</b></td><td><b>Path</b></td><td><b>SourceId</b></td></tr><tr><td>*</td><td>createResourceId</td><td>Patient/id</td><td>fixture-patient-create</td></tr></table><blockquote><p><b>setup</b></p><blockquote><p><b>action</b></p><h3>Operations</h3><table><tr><td>-</td><td><b>Type</b></td><td><b>Resource</b></td><td><b>Label</b></td><td><b>Description</b></td><td><b>Accept</b></td><td><b>Params</b></td></tr><tr><td>*</td><td>Delete (Details: http://hl7.org/fhir/testscript-operation-codes code delete = \'Delete\', stated as \'null\')</td><td>Patient</td><td>SetupDeletePatient</td><td>Execute a delete operation to insure the patient does not exist on the server.</td><td>json</td><td>/${createResourceId}</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>Operator</b></td><td><b>ResponseCode</b></td></tr><tr><td>*</td><td>Confirm that the returned HTTP status is 200(OK) or 204(No Content).</td><td>response</td><td>in</td><td>200,204</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Operations</h3><table><tr><td>-</td><td><b>Type</b></td><td><b>Resource</b></td><td><b>Label</b></td><td><b>Description</b></td><td><b>Accept</b></td><td><b>ContentType</b></td><td><b>Params</b></td><td><b>SourceId</b></td></tr><tr><td>*</td><td>Update (Details: http://hl7.org/fhir/testscript-operation-codes code update = \'Update\', stated as \'null\')</td><td>Patient</td><td>SetupCreatePatient</td><td>Create patient resource on test server using the contents of fixture-patient-create</td><td>json</td><td>json</td><td>/${createResourceId}</td><td>fixture-patient-create</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>ResponseCode</b></td></tr><tr><td>*</td><td>Confirm that the returned HTTP status is 201(Created).</td><td>response</td><td>201</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Operations</h3><table><tr><td>-</td><td><b>Type</b></td><td><b>Resource</b></td><td><b>Label</b></td><td><b>Description</b></td><td><b>Accept</b></td><td><b>ContentType</b></td><td><b>Params</b></td><td><b>SourceId</b></td></tr><tr><td>*</td><td>Update (Details: http://hl7.org/fhir/testscript-operation-codes code update = \'Update\', stated as \'null\')</td><td>Patient</td><td>SetupUpdatePatient</td><td>Update patient resource on test server using the contents of fixture-patient-update</td><td>json</td><td>json</td><td>/${createResourceId}</td><td>fixture-patient-update</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td><td><b>Description</b></td><td><b>Direction</b></td><td><b>ResponseCode</b></td></tr><tr><td>*</td><td>Confirm that the returned HTTP status is 200(OK).</td><td>response</td><td>200</td></tr></table></blockquote></blockquote><blockquote><p><b>test</b></p><p><b>name</b>: History Patient</p><p><b>description</b>: Get the history for a known Patient and validate response.</p><blockquote><p><b>action</b></p><h3>Operations</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote></blockquote></div>"
  }
}
url {
  value: "http://hl7.org/fhir/TestScript/testscript-example-history"
}
identifier {
  system {
    value: "urn:ietf:rfc:3986"
  }
  value {
    value: "urn:oid:1.3.6.1.4.1.21367.2005.3.7.9877"
  }
}
version {
  value: "1.0"
}
name {
  value: "TestScript Example History"
}
status {
  value: DRAFT
}
experimental {
  value: true
}
date {
  value_us: 1484658000000000
  timezone: "Australia/Sydney"
  precision: DAY
}
publisher {
  value: "HL7"
}
contact {
  name {
    value: "Support"
  }
  telecom {
    system {
      value: EMAIL
    }
    value {
      value: "support@HL7.org"
    }
    use {
      value: WORK
    }
  }
}
description {
  value: "TestScript example resource with setup to delete if present and create a new instance of a Patient then update that Patient to create a minimum history; and single test definition to get the history of that Patient with various asserts."
}
jurisdiction {
  coding {
    system {
      value: "urn:iso:std:iso:3166"
    }
    code {
      value: "US"
    }
    display {
      value: "United States of America (the)"
    }
  }
}
purpose {
  value: "Patient (Conditional) Create, Update, Delete and History (Instance) Operations"
}
copyright {
  value: "\302\251 HL7.org 2011+"
}
metadata {
  link {
    url {
      value: "http://hl7.org/fhir/patient.html"
    }
    description {
      value: "Demographics and other administrative information about an individual or animal receiving care or other health-related services."
    }
  }
  capability {
    required {
      value: true
    }
    description {
      value: "Patient Update, Delete and History (Instance) Operations"
    }
    link {
      value: "http://hl7.org/fhir/http.html#update"
    }
    link {
      value: "http://hl7.org/fhir/http.html#delete"
    }
    link {
      value: "http://hl7.org/fhir/http.html#history"
    }
    capabilities {
      capability_statement_id {
        value: "example"
      }
    }
  }
}
fixture {
  id {
    value: "fixture-patient-create"
  }
  autocreate {
  }
  autodelete {
  }
  resource {
    patient_id {
      value: "example"
    }
    display {
      value: "Peter Chalmers"
    }
  }
}
fixture {
  id {
    value: "fixture-patient-update"
  }
  autocreate {
  }
  autodelete {
  }
  resource {
    patient_id {
      value: "pat1"
    }
    display {
      value: "Donald Duck"
    }
  }
}
profile {
  id {
    value: "bundle-profile"
  }
  uri {
    value: "http://hl7.org/fhir/StructureDefinition/Bundle"
  }
}
variable {
  name {
    value: "createResourceId"
  }
  path {
    value: "Patient/id"
  }
  source_id {
    value: "fixture-patient-create"
  }
}
setup {
  action {
    operation {
      type {
        system {
          value: "http://hl7.org/fhir/testscript-operation-codes"
        }
        code {
          value: "delete"
        }
      }
      resource {
        value: PATIENT
      }
      label {
        value: "SetupDeletePatient"
      }
      description {
        value: "Execute a delete operation to insure the patient does not exist on the server."
      }
      accept {
        value: JSON
      }
      params {
        value: "/${createResourceId}"
      }
    }
  }
  action {
    assert_value {
      description {
        value: "Confirm that the returned HTTP status is 200(OK) or 204(No Content)."
      }
      direction {
        value: RESPONSE
      }
      operator {
        value: IN
      }
      response_code {
        value: "200,204"
      }
    }
  }
  action {
    operation {
      type {
        system {
          value: "http://hl7.org/fhir/testscript-operation-codes"
        }
        code {
          value: "update"
        }
      }
      resource {
        value: PATIENT
      }
      label {
        value: "SetupCreatePatient"
      }
      description {
        value: "Create patient resource on test server using the contents of fixture-patient-create"
      }
      accept {
        value: JSON
      }
      content_type {
        value: JSON
      }
      params {
        value: "/${createResourceId}"
      }
      source_id {
        value: "fixture-patient-create"
      }
    }
  }
  action {
    assert_value {
      description {
        value: "Confirm that the returned HTTP status is 201(Created)."
      }
      direction {
        value: RESPONSE
      }
      response_code {
        value: "201"
      }
    }
  }
  action {
    operation {
      type {
        system {
          value: "http://hl7.org/fhir/testscript-operation-codes"
        }
        code {
          value: "update"
        }
      }
      resource {
        value: PATIENT
      }
      label {
        value: "SetupUpdatePatient"
      }
      description {
        value: "Update patient resource on test server using the contents of fixture-patient-update"
      }
      accept {
        value: JSON
      }
      content_type {
        value: JSON
      }
      params {
        value: "/${createResourceId}"
      }
      source_id {
        value: "fixture-patient-update"
      }
    }
  }
  action {
    assert_value {
      description {
        value: "Confirm that the returned HTTP status is 200(OK)."
      }
      direction {
        value: RESPONSE
      }
      response_code {
        value: "200"
      }
    }
  }
}
test {
  id {
    value: "01-HistoryPatient"
  }
  name {
    value: "History Patient"
  }
  description {
    value: "Get the history for a known Patient and validate response."
  }
  action {
    operation {
      type {
        system {
          value: "http://hl7.org/fhir/testscript-operation-codes"
        }
        code {
          value: "history"
        }
      }
      resource {
        value: PATIENT
      }
      description {
        value: "Get the Patient history on the test server using the id from fixture-patient-create."
      }
      accept {
        value: JSON
      }
      content_type {
        value: JSON
      }
      target_id {
        value: "fixture-patient-create"
      }
    }
  }
  action {
    assert_value {
      description {
        value: "Confirm that the returned HTTP status is 200(OK)."
      }
      direction {
        value: RESPONSE
      }
      response {
        value: OKAY
      }
    }
  }
  action {
    assert_value {
      description {
        value: "Confirm that the returned resource type is Bundle."
      }
      resource {
        value: BUNDLE
      }
    }
  }
  action {
    assert_value {
      description {
        value: "Confirm that the returned Bundle conforms to the base FHIR specification."
      }
      validate_profile_id {
        value: "bundle-profile"
      }
    }
  }
  action {
    assert_value {
      description {
        value: "Confirm that the returned Bundle type equals \'history\'."
      }
      operator {
        value: EQUALS
      }
      path {
        value: "fhir:Bundle/fhir:type/@value"
      }
      value {
        value: "history"
      }
    }
  }
}
