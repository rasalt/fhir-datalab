id {
  value: "example6"
}
text {
  status {
    value: GENERATED
  }
  div {
    value: "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: example6</p><p><b>identifier</b>: 20170201-001 (OFFICIAL)</p><p><b>basedOn</b>: General Wellness Careplan</p><p><b>groupIdentifier</b>: G20170201-001 (OFFICIAL)</p><p><b>status</b>: completed</p><p><b>businessStatus</b>: test completed and posted <span>(Details )</span></p><p><b>intent</b>: order</p><p><b>priority</b>: routine</p><p><b>code</b>: Lipid Panel <span>(Details )</span></p><p><b>description</b>: Create order for getting specimen, Set up inhouse testing,  generate order for any sendouts and submit with specimen</p><p><b>focus</b>: <a>Lipid Panel Request</a></p><p><b>for</b>: <a>Peter James Chalmers</a></p><p><b>context</b>: <a>Example In-Patient Encounter</a></p><p><b>executionPeriod</b>: 31/10/2016 8:25:05 AM --&gt; 31/10/2016 6:45:05 PM</p><p><b>authoredOn</b>: 31/10/2016 8:25:05 AM</p><p><b>lastModified</b>: 31/10/2016 6:45:05 PM</p><h3>Requesters</h3><table><tr><td>-</td><td><b>Agent</b></td><td><b>OnBehalfOf</b></td></tr><tr><td>*</td><td><a>Dr Adam Careful</a></td><td><a>Good Health Clinic</a></td></tr></table><p><b>performerType</b>: Performer <span>(Details : {http://hl7.org/fhir/task-performer-type code \'performer\' = \'Performer\', given as \'Performer\'})</span></p><p><b>owner</b>: <a>Clinical Laboratory @ Acme Hospital</a></p><p><b>reason</b>: The Task.reason should only be included if there is no Task.focus or if it differs from the reason indicated on the focus <span>(Details )</span></p><p><b>note</b>: This is an example to demonstrate using task for actioning a procedurerequest and to illustrate how to populate many of the task elements - this is the parent task that will be broken into subtask to grab the specimen and a sendout lab test </p><h3>Restrictions</h3><table><tr><td>-</td><td><b>Repetitions</b></td><td><b>Period</b></td></tr><tr><td>*</td><td>1</td><td>?? --&gt; 02/11/2016 9:45:05 AM</td></tr></table><blockquote><p><b>output</b></p><p><b>type</b>: DiagnosticReport generated <span>(Details )</span></p><p><b>value</b>: <a>DiagnosticReport/lipids</a></p></blockquote><blockquote><p><b>output</b></p><p><b>type</b>: collected specimen <span>(Details )</span></p><p><b>value</b>: <a>Specimen/101</a></p></blockquote></div>"
  }
}
identifier {
  use {
    value: OFFICIAL
  }
  system {
    value: "http:/goodhealth.org/identifiers"
  }
  value {
    value: "20170201-001"
  }
}
based_on {
  display {
    value: "General Wellness Careplan"
  }
}
group_identifier {
  use {
    value: OFFICIAL
  }
  system {
    value: "http:/goodhealth.org/accession/identifiers"
  }
  value {
    value: "G20170201-001"
  }
}
status {
  value: COMPLETED
}
business_status {
  text {
    value: "test completed and posted"
  }
}
intent {
  value: ORDER
}
priority {
  value: ROUTINE
}
code {
  text {
    value: "Lipid Panel"
  }
}
description {
  value: "Create order for getting specimen, Set up inhouse testing,  generate order for any sendouts and submit with specimen"
}
focus {
  procedure_request_id {
    value: "lipid"
  }
  display {
    value: "Lipid Panel Request"
  }
}
for_value {
  patient_id {
    value: "example"
  }
  display {
    value: "Peter James Chalmers"
  }
}
context {
  encounter_id {
    value: "example"
  }
  display {
    value: "Example In-Patient Encounter"
  }
}
execution_period {
  start {
    value_us: 1477866305000000
    timezone: "+10:00"
    precision: SECOND
  }
  end {
    value_us: 1477903505000000
    timezone: "+10:00"
    precision: SECOND
  }
}
authored_on {
  value_us: 1477866305000000
  timezone: "+10:00"
  precision: SECOND
}
last_modified {
  value_us: 1477903505000000
  timezone: "+10:00"
  precision: SECOND
}
requester {
  agent {
    practitioner_id {
      value: "example"
    }
    display {
      value: "Dr Adam Careful"
    }
  }
  on_behalf_of {
    organization_id {
      value: "2.16.840.1.113883.19.5"
    }
    display {
      value: "Good Health Clinic"
    }
  }
}
performer_type {
  coding {
    system {
      value: "http://hl7.org/fhir/task-performer-type"
    }
    code {
      value: "performer"
    }
    display {
      value: "Performer"
    }
  }
  text {
    value: "Performer"
  }
}
owner {
  organization_id {
    value: "1832473e-2fe0-452d-abe9-3cdb9879522f"
  }
  display {
    value: "Clinical Laboratory @ Acme Hospital"
  }
}
reason {
  text {
    value: "The Task.reason should only be included if there is no Task.focus or if it differs from the reason indicated on the focus"
  }
}
note {
  text {
    value: "This is an example to demonstrate using task for actioning a procedurerequest and to illustrate how to populate many of the task elements - this is the parent task that will be broken into subtask to grab the specimen and a sendout lab test "
  }
}
restriction {
  repetitions {
    value: 1
  }
  period {
    end {
      value_us: 1478043905000000
      timezone: "+10:00"
      precision: SECOND
    }
  }
}
output {
  type {
    text {
      value: "DiagnosticReport generated"
    }
  }
  value {
    reference {
      diagnostic_report_id {
        value: "lipids"
      }
    }
  }
}
output {
  type {
    text {
      value: "collected specimen"
    }
  }
  value {
    reference {
      specimen_id {
        value: "101"
      }
    }
  }
}
